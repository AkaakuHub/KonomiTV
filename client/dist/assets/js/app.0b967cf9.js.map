{"version":3,"file":"assets/js/app.0b967cf9.js","mappings":"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","sources":["webpack://KonomiTV/./src/App.vue","webpack://KonomiTV/./src/App.vue?74c6","webpack://KonomiTV/./src/components/VTabItem.ts","webpack://KonomiTV/./src/components/VTabsBar.ts","webpack://KonomiTV/./src/components/VTabs.ts","webpack://KonomiTV/./src/components/VTabsItems.ts","webpack://KonomiTV/./src/utils/Utils.ts","webpack://KonomiTV/./src/utils/ChannelUtils.ts","webpack://KonomiTV/./src/utils/CommentUtils.ts","webpack://KonomiTV/./src/utils/PlayerCaptureHandler.ts","webpack://KonomiTV/./src/utils/PlayerUtils.ts","webpack://KonomiTV/./src/utils/ProgramUtils.ts","webpack://KonomiTV/./src/utils/index.ts","webpack://KonomiTV/./src/plugins/axios.ts","webpack://KonomiTV/./src/plugins/vuetify.ts","webpack://KonomiTV/./src/views/TV/Home.vue","webpack://KonomiTV/./src/components/Header.vue","webpack://KonomiTV/./src/components/Header.vue?5d06","webpack://KonomiTV/./src/components/Navigation.vue","webpack://KonomiTV/./src/components/BottomNavigation.vue","webpack://KonomiTV/./src/components/BottomNavigation.vue?ff7d","webpack://KonomiTV/./src/components/Navigation.vue?e993","webpack://KonomiTV/./src/components/Navigation.vue?c328","webpack://KonomiTV/./src/components/Navigation.vue?bd43","webpack://KonomiTV/./src/views/TV/Home.vue?bdd6","webpack://KonomiTV/./src/views/TV/Home.vue?8980","webpack://KonomiTV/./src/views/TV/Home.vue?6763","webpack://KonomiTV/./src/views/TV/Watch.vue","webpack://KonomiTV/./src/interface.ts","webpack://KonomiTV/./src/components/Panel/Channel.vue","webpack://KonomiTV/./src/components/Panel/Channel.vue?0e9d","webpack://KonomiTV/./src/components/Panel/Channel.vue?34fb","webpack://KonomiTV/./src/components/Panel/Channel.vue?d5d3","webpack://KonomiTV/./src/components/Panel/Comment.vue","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue?c072","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue?2b63","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue?5678","webpack://KonomiTV/./src/components/Panel/Comment.vue?94d2","webpack://KonomiTV/./src/components/Panel/Comment.vue?31bb","webpack://KonomiTV/./src/components/Panel/Comment.vue?ffda","webpack://KonomiTV/./src/components/Panel/Program.vue","webpack://KonomiTV/./src/components/Panel/Program.vue?d838","webpack://KonomiTV/./src/components/Panel/Program.vue?f967","webpack://KonomiTV/./src/components/Panel/Program.vue?393d","webpack://KonomiTV/./src/components/Panel/Twitter.vue","webpack://KonomiTV/./src/components/Panel/Twitter.vue?d4d0","webpack://KonomiTV/./src/components/Panel/Twitter.vue?710e","webpack://KonomiTV/./src/components/Panel/Twitter.vue?82e1","webpack://KonomiTV/./src/views/TV/Watch.vue?a1ad","webpack://KonomiTV/./src/views/TV/Watch.vue?78bf","webpack://KonomiTV/./src/views/TV/Watch.vue?f307","webpack://KonomiTV/./src/views/Settings/Index.vue","webpack://KonomiTV/./src/views/Settings/Index.vue?6033","webpack://KonomiTV/./src/views/Settings/Index.vue?c35a","webpack://KonomiTV/./src/views/Settings/Index.vue?ea37","webpack://KonomiTV/./src/views/Settings/General.vue","webpack://KonomiTV/./src/views/Settings/Base.vue","webpack://KonomiTV/./src/views/Settings/Base.vue?8f0e","webpack://KonomiTV/./src/views/Settings/Base.vue?b75f","webpack://KonomiTV/./src/views/Settings/Base.vue?13e1","webpack://KonomiTV/./src/views/Settings/General.vue?5f9b","webpack://KonomiTV/./src/views/Settings/General.vue?6383","webpack://KonomiTV/./src/views/Settings/General.vue?1430","webpack://KonomiTV/./src/views/Settings/Account.vue","webpack://KonomiTV/./src/views/Settings/Account.vue?a46e","webpack://KonomiTV/./src/views/Settings/Account.vue?c440","webpack://KonomiTV/./src/views/Settings/Account.vue?d79e","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?43de","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?dae2","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?e1ab","webpack://KonomiTV/./src/views/Settings/Twitter.vue","webpack://KonomiTV/./src/views/Settings/Twitter.vue?a501","webpack://KonomiTV/./src/views/Settings/Twitter.vue?c5a2","webpack://KonomiTV/./src/views/Settings/Twitter.vue?8f70","webpack://KonomiTV/./src/views/Settings/Environment.vue","webpack://KonomiTV/./src/views/Settings/Environment.vue?c875","webpack://KonomiTV/./src/views/Settings/Environment.vue?8e72","webpack://KonomiTV/./src/views/Settings/Environment.vue?4a7e","webpack://KonomiTV/./src/views/Login.vue","webpack://KonomiTV/./src/views/Login.vue?21ac","webpack://KonomiTV/./src/views/Login.vue?ce3e","webpack://KonomiTV/./src/views/Login.vue?f5d0","webpack://KonomiTV/./src/views/Register.vue","webpack://KonomiTV/./src/views/Register.vue?4c26","webpack://KonomiTV/./src/views/Register.vue?e763","webpack://KonomiTV/./src/views/Register.vue?709e","webpack://KonomiTV/./src/views/NotFound.vue","webpack://KonomiTV/./src/views/NotFound.vue?5999","webpack://KonomiTV/./src/views/NotFound.vue?4637","webpack://KonomiTV/./src/views/NotFound.vue?dbe0","webpack://KonomiTV/./src/router/index.ts","webpack://KonomiTV/./src/service-worker.ts","webpack://KonomiTV/./src/main.ts","webpack://KonomiTV/webpack/bootstrap","webpack://KonomiTV/webpack/runtime/amd options","webpack://KonomiTV/webpack/runtime/chunk loaded","webpack://KonomiTV/webpack/runtime/compat get default export","webpack://KonomiTV/webpack/runtime/define property getters","webpack://KonomiTV/webpack/runtime/global","webpack://KonomiTV/webpack/runtime/harmony module decorator","webpack://KonomiTV/webpack/runtime/hasOwnProperty shorthand","webpack://KonomiTV/webpack/runtime/make namespace object","webpack://KonomiTV/webpack/runtime/jsonp chunk loading","webpack://KonomiTV/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-app',{attrs:{\"id\":\"app\"}},[_c('transition',[_c('router-view')],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=813eaa70&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&id=813eaa70&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\nimport { VueConstructor, VNode } from 'vue';\n\nimport VTabItem from 'vuetify/lib/components/VTabs/VTabItem';\n\n// VTabItem は VWindowItem を extend() して実装されている\nexport default (VTabItem as VueConstructor).extend({\n    render (h): VNode {\n        return h('transition', {\n            props: {\n                name: (this as any).computedTransition,\n            },\n            on: {\n                // Handlers for enter windows.\n                beforeEnter: (this as any).onBeforeTransition,\n                afterEnter: (this as any).onAfterTransition,\n                enterCancelled: (this as any).onTransitionCancelled,\n\n                // Handlers for leave windows.\n                beforeLeave: (this as any).onBeforeTransition,\n                afterLeave: (this as any).onAfterTransition,\n                leaveCancelled: (this as any).onTransitionCancelled,\n\n                // Enter handler for height transition.\n                enter: (this as any).onEnter,\n            }\n        // this.showLazyContent() を通さずに常にレンダリングされるようにする\n        // 本来は実際に表示されている時だけレンダリングし、負荷を減らすための処理\n        // ただチャンネルリストのレンダリングは重いので、最初からレンダリングされていた方がタブの初回切り替えが早くなる\n        }, [(this as any).genWindowItem()]);\n    }\n});\n","\nimport { VueConstructor } from 'vue';\n\nimport { GroupableInstance } from 'vuetify/lib/components/VItemGroup/VItemGroup';\nimport VTabsBar from 'vuetify/lib/components/VTabs/VTabsBar';\n\n// VTabsBar は VItemGroup を extend() して実装されている\nexport default (VTabsBar as VueConstructor).extend({\n    data() {\n        return {\n            // 一応型定義をしておく\n            items: [] as GroupableInstance[],\n        }\n    },\n    methods: {\n\n        // タブのデータ配列の先頭に新しい要素が追加されるとそのタブのアニメーションの向きが逆になるバグがあるので、VItemGroup 側の挙動をオーバーライドする\n        // DOM 上も VNode 上も正しい順序で並んでいるが、this.items に関しては追加された順になっていてしまっていて齟齬が発生するのが原因\n        // ref: https://github.com/vuetifyjs/vuetify/issues/13862\n        register(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 要素を items に追加\n            this.items.push(item);\n\n            // this.$slots.default に VNode が、items には単に VueComponent が入っているので、事前に VNode の順番に合わせて並べ替える\n            // こうすることで、追加された順ではなく元のデータ配列通りの順番になる\n            this.items.sort((a, b) => {\n\n                // VueComponent の key が一致する this.$slots.default 内の VNode を探す\n                const index_a = this.$slots.default.findIndex((element) => {\n                    return a.$vnode.key === element.key;\n                });\n                const index_b = this.$slots.default.findIndex((element) => {\n                    return b.$vnode.key === element.key;\n                });\n\n                // index 順で並び替え\n                return index_a - index_b;\n            });\n\n            item.$on('change', () => (this as any).onClick(item));\n            if ((this as any).mandatory && !(this as any).selectedValues.length) {\n                (this as any).updateMandatory();\n            }\n\n            // 追加された要素のソート後のインデックスを取得して更新する\n            (this as any).updateItem(item, this.items.indexOf(item));\n\n            // ソート後の現在アクティブなタブのインデックスを取得し直し、設定する\n            // 配列の末尾以外に追加された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\n            }\n        },\n\n        unregister(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 継承元の unregister() の処理を呼び出す（いわゆる super() ）\n            // ref: https://github.com/vuejs/vue/issues/2977\n            (this.constructor as any).super.options.methods.unregister.call(this, item);\n\n            // 配列の末尾以外から削除された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\n            }\n        }\n    }\n});\n","\nimport { VueConstructor, VNode } from 'vue';\n\nimport { convertToUnit } from 'vuetify/lib/util/helpers'\nimport VTabs from 'vuetify/lib/components/VTabs/VTabs';\nimport VTabsBar from '@/components/VTabsBar';\n\nexport default (VTabs as VueConstructor).extend({\n    methods: {\n\n        // VTabsBar は VTabs から暗黙的に生成されるコンポーネントのため、直接上書きすることができない\n        // そこで VTabs 自体も上書きし、VTabs で $createElement() される時の VTabsBar を自前でオーバーライドしたものに差し替える\n        // ビルド済みのファイルには型定義が入っていないので any を多用せざるを得ない…\n        genBar(items: VNode[], slider: VNode | null) {\n            const data = {\n                style: {\n                    height: convertToUnit((this as any).height),\n                },\n                props: {\n                    activeClass: (this as any).activeClass,\n                    centerActive: (this as any).centerActive,\n                    dark: (this as any).dark,\n                    light: (this as any).light,\n                    mandatory: !(this as any).optional,\n                    mobileBreakpoint: (this as any).mobileBreakpoint,\n                    nextIcon: (this as any).nextIcon,\n                    prevIcon: (this as any).prevIcon,\n                    showArrows: (this as any).showArrows,\n                    value: (this as any).internalValue,\n                },\n                on: {\n                    'call:slider': (this as any).callSlider,\n                    change: (val: any) => {\n                        (this as any).internalValue = val;\n                    },\n                },\n                ref: 'items',\n            };\n\n            (this as any).setTextColor((this as any).computedColor, data);\n            (this as any).setBackgroundColor((this as any).backgroundColor, data);\n\n            // ここでオーバーライドした VTabsBar を使うのが最重要\n            // これをやるためだけにわざわざ VTabs に関してもオーバーライドする羽目になってる…\n            return (this as any).$createElement(VTabsBar, data, [\n                (this as any).genSlider(slider),\n                items,\n            ]);\n        }\n    }\n});\n","\nimport { VueConstructor } from 'vue';\n\nimport { GroupableInstance } from 'vuetify/lib/components/VItemGroup/VItemGroup';\nimport VTabsItems from 'vuetify/lib/components/VTabs/VTabsItems';\n\n// VTabsItems は VItemGroup と VWindow を extend() して実装されている\nexport default (VTabsItems as VueConstructor).extend({\n    data() {\n        return {\n            // 一応型定義をしておく\n            items: [] as GroupableInstance[],\n        }\n    },\n    methods: {\n\n        // タブのデータ配列の先頭に新しい要素が追加されるとそのタブのアニメーションの向きが逆になるバグがあるので、VItemGroup 側の挙動をオーバーライドする\n        // DOM 上も VNode 上も正しい順序で並んでいるが、this.items に関しては追加された順になっていてしまっていて齟齬が発生するのが原因\n        // ref: https://github.com/vuetifyjs/vuetify/issues/13862\n        register(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 要素を items に追加\n            this.items.push(item);\n\n            // this.$slots.default に VNode が、items には単に VueComponent が入っているので、事前に VNode の順番に合わせて並べ替える\n            // こうすることで、追加された順ではなく元のデータ配列通りの順番になる\n            this.items.sort((a, b) => {\n\n                // VueComponent の key が一致する this.$slots.default 内の VNode を探す\n                const index_a = this.$slots.default.findIndex((element) => {\n                    return a.$vnode.key === element.key;\n                });\n                const index_b = this.$slots.default.findIndex((element) => {\n                    return b.$vnode.key === element.key;\n                });\n\n                // index 順で並び替え\n                return index_a - index_b;\n            });\n\n            item.$on('change', () => (this as any).onClick(item));\n            if ((this as any).mandatory && !(this as any).selectedValues.length) {\n                (this as any).updateMandatory();\n            }\n\n            // 追加された要素のソート後のインデックスを取得して更新する\n            (this as any).updateItem(item, this.items.indexOf(item));\n\n            // ソート後の現在アクティブなタブのインデックスを取得し直し、設定する\n            // 配列の末尾以外に追加された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                // 値が異なるときだけ更新する\n                // こうしないと、Safari で変なアニメーションがついてしまう\n                if (this.items.indexOf(activeItem) !== (this as any).internalValue) {\n                    (this as any).updateInternalValue(this.items.indexOf(activeItem));\n                }\n            }\n        },\n\n        unregister(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 継承元の unregister() の処理を呼び出す（いわゆる super() ）\n            // ref: https://github.com/vuejs/vue/issues/2977\n            (this.constructor as any).super.options.methods.unregister.call(this, item);\n\n            // 配列の末尾以外から削除された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\n            }\n        },\n\n        // 最初のタブから最後のタブに遷移するとアニメーションの向きが逆になるバグがあるので、VWindow 側の挙動をオーバーライドする\n        // 本来は VCarousel 用の動作だが、VTabsItems も VWindow を継承しているので、それが適用されてしまっているらしい\n        // ref: https://github.com/yuwu9145/vuetify/blob/master/packages/vuetify/src/components/VWindow/VWindow.ts#L239-L252\n        updateReverse(val: number, oldVal: number) {\n\n            const itemsLength = this.items.length;\n            const lastIndex = itemsLength - 1;\n\n            if (itemsLength <= 2) return val < oldVal;\n\n            // continuous が false の時、常に val < oldVal の結果を返す\n            if (!(this as any).continuous) return val < oldVal;\n\n            if (val === lastIndex && oldVal === 0) {\n                return true;\n            } else if (val === 0 && oldVal === lastIndex) {\n                return false;\n            } else {\n                return val < oldVal;\n            }\n        }\n    }\n});\n","\nimport Vue from 'vue';\n\nimport { IMutedCommentKeywords } from '@/interface';\n\n/**\n * 共通ユーティリティ\n */\nexport default class Utils {\n\n    // バージョン情報\n    // ビルド時の環境変数 (vue.config.js に記載) から取得\n    static readonly version: string = process.env.VUE_APP_VERSION;\n\n    // バックエンドの API のベース URL\n    static readonly api_base_url = (() => {\n        if (process.env.NODE_ENV === 'development') {\n            // デバッグ時はポートを 7000 に強制する\n            return `${window.location.protocol}//${window.location.hostname}:7000/api`;\n        } else {\n            // ビルド後は同じポートを使う\n            return `${window.location.protocol}//${window.location.host}/api`;\n        }\n    })();\n\n    // デフォルトの設定値\n    // (同期無効) とある項目は、デバイス間で同期するとかえって面倒なことになりそうなため同期されない設定\n    // ここを変えたときはサーバー側の app.schemas.ClientSettings も変更すること\n    static readonly default_settings = {\n\n        // ***** 設定画面から直接変更できない設定値 *****\n\n        // ピン留めしているチャンネルの ID (ex: gr011) が入るリスト\n        pinned_channel_ids: [] as string[],\n\n        // 前回視聴画面を開いた際にパネルが表示されていたかどうか (同期無効)\n        showed_panel_last_time: true as boolean,\n\n        // 現在ツイート対象として選択されている Twitter アカウントの ID (同期無効)\n        selected_twitter_account_id: null as number | null,\n\n        // 保存している Twitter のハッシュタグが入るリスト\n        saved_twitter_hashtags: [] as string[],\n\n        // ***** 設定 → 全般 *****\n\n        // テレビのストリーミング画質 (Default: 1080p) (同期無効)\n        tv_streaming_quality: '1080p' as ('1080p-60fps' | '1080p' | '810p' | '720p' | '540p' | '480p' | '360p' | '240p'),\n\n        // テレビを通信節約モードで視聴する (Default: オフ) (同期無効)\n        tv_data_saver_mode: false as boolean,\n\n        // テレビを低遅延で視聴する (Default: 低遅延で視聴する) (同期無効)\n        tv_low_latency_mode: true as boolean,\n\n        // テレビをみるときに文字スーパーを表示する (Default: 表示する)\n        tv_show_superimpose: true as boolean,\n\n        // 既定のパネルの表示状態 (Default: 前回の状態を復元する)\n        panel_display_state: 'RestorePreviousState' as ('RestorePreviousState' | 'AlwaysDisplay' | 'AlwaysFold'),\n\n        // テレビをみるときに既定で表示されるパネルのタブ (Default: 番組情報タブ)\n        tv_panel_active_tab: 'Program' as ('Program' | 'Channel' | 'Comment' | 'Twitter'),\n\n        // 字幕のフォント (Default: Windows TV 丸ゴシック)\n        caption_font: 'Windows TV MaruGothic' as string,\n\n        // 字幕の文字を常に縁取って描画する (Default: 常に縁取る)\n        always_border_caption_text: true as boolean,\n\n        // 字幕の背景色を指定する (Default: 指定しない)\n        specify_caption_background_color: false as boolean,\n\n        // 字幕の背景色 (Default: 不透明度が 50% の黒)\n        caption_background_color: '#00000080' as string,\n\n        // キャプチャをクリップボードにコピーする (Default: 無効) (同期無効)\n        capture_copy_to_clipboard: false as boolean,\n\n        // キャプチャの保存先 (Default: ブラウザでダウンロード)\n        capture_save_mode: 'Browser' as ('Browser' | 'UploadServer' | 'Both'),\n\n        // 字幕が表示されているときのキャプチャの保存モード (Default: 映像のみのキャプチャと、字幕を合成したキャプチャを両方保存する)\n        capture_caption_mode: 'Both' as ('VideoOnly' | 'CompositingCaption' | 'Both'),\n\n        // ***** 設定 → アカウント *****\n\n        // 設定を同期する (Default: 同期しない) (同期無効)\n        sync_settings: false as boolean,\n\n        // ***** 設定 → ニコニコ実況 *****\n\n        // コメントの速さ (Default: 1倍)\n        comment_speed_rate: 1 as number,\n\n        // コメントのフォントサイズ (Default: 34px)\n        comment_font_size: 34 as number,\n\n        // コメントの遅延時間 (Default: 1.75秒) (同期無効)\n        comment_delay_time: 1.75 as number,\n\n        // コメント送信後にコメント入力フォームを閉じる (Default: オン)\n        close_comment_form_after_sending: true as boolean,\n\n        // ***** 設定 → ニコニコ実況 (ミュート設定) *****\n\n        // ミュート済みのコメントのキーワードが入るリスト\n        muted_comment_keywords: [] as IMutedCommentKeywords[],\n\n        // ミュート済みのニコニコユーザー ID が入るリスト\n        muted_niconico_user_ids: [] as string[],\n\n        // 露骨な表現を含むコメントをミュートする (Default: ミュートする)\n        mute_vulgar_comments: true as boolean,\n\n        // 罵倒や誹謗中傷、差別的な表現、政治的に偏った表現を含むコメントをミュートする (Default: ミュートする)\n        mute_abusive_discriminatory_prejudiced_comments: true as boolean,\n\n        // 文字サイズが大きいコメントをミュートする (Default: ミュートする)\n        mute_big_size_comments: true as boolean,\n\n        // 映像の上下に固定表示されるコメントをミュートする (Default: ミュートしない)\n        mute_fixed_comments: false as boolean,\n\n        // 色付きのコメントをミュートする (Default: ミュートしない)\n        mute_colored_comments: false as boolean,\n\n        // 8文字以上同じ文字が連続しているコメントをミュートする (Default: ミュートしない)\n        mute_consecutive_same_characters_comments: false as boolean,\n\n        // ***** 設定 → Twitter *****\n\n        // ツイート送信後にパネルを閉じる (Default: オフ)\n        fold_panel_after_sending_tweet: false as boolean,\n\n        // 番組が切り替わったときにハッシュタグフォームをリセットする (Default: オン)\n        reset_hashtag_when_program_switches: true as boolean,\n\n        // 視聴中のチャンネルに対応する局タグを自動的に追加する (Default: オン)\n        auto_add_watching_channel_hashtag: true as boolean,\n\n        // 既定で表示される Twitter タブ内のタブ (Default: キャプチャタブ)\n        twitter_active_tab: 'Capture' as ('Search' | 'Timeline' | 'Capture'),\n\n        // ツイートにつけるハッシュタグの位置 (Default: ツイート本文の後に追加する)\n        tweet_hashtag_position: 'Append' as ('Prepend' | 'Append' | 'PrependWithLineBreak' | 'AppendWithLineBreak'),\n\n        // ツイートするキャプチャに番組名の透かしを描画する (Default: 透かしを描画しない)\n        tweet_capture_watermark_position: 'None' as ('None' | 'TopLeft' | 'TopRight' | 'BottomLeft' | 'BottomRight'),\n    };\n\n    // 同期対象の設定キー\n    // サーバー側の app.schemas.ClientSettings に定義されているものと同じ\n    static readonly sync_settings_keys = [\n        'pinned_channel_ids',\n        'saved_twitter_hashtags',\n        'tv_show_superimpose',\n        'panel_display_state',\n        'tv_panel_active_tab',\n        'caption_font',\n        'always_border_caption_text',\n        'specify_caption_background_color',\n        'caption_background_color',\n        'capture_save_mode',\n        'capture_caption_mode',\n        'comment_speed_rate',\n        'comment_font_size',\n        'close_comment_form_after_sending',\n        'muted_comment_keywords',\n        'muted_niconico_user_ids',\n        'mute_vulgar_comments',\n        'mute_abusive_discriminatory_prejudiced_comments',\n        'mute_big_size_comments',\n        'mute_fixed_comments',\n        'mute_colored_comments',\n        'mute_consecutive_same_characters_comments',\n        'fold_panel_after_sending_tweet',\n        'reset_hashtag_when_program_switches',\n        'auto_add_watching_channel_hashtag',\n        'twitter_active_tab',\n        'tweet_hashtag_position',\n        'tweet_capture_watermark_position',\n    ];\n\n    // 設定をサーバーにアップロード中かどうか\n    // これが true のときは、定期的なサーバーからの設定ダウンロードを行わない\n    static uploading_settings: boolean = false;\n\n\n    /**\n     * 設定を LocalStorage から取得する\n     * @param key 設定のキー名\n     * @returns 設定されている値\n     */\n    static getSettingsItem(key: string): any | null {\n\n        // もし KonomiTV-Settings キーがまだない場合、あらかじめデフォルトの設定値を保存しておく\n        if (localStorage.getItem('KonomiTV-Settings') === null) {\n            localStorage.setItem('KonomiTV-Settings', JSON.stringify(Utils.default_settings));\n        }\n\n        // LocalStorage から KonomiTV-Settings を取得\n        // データは JSON で管理し、LocalStorage 上の一つのキーにまとめる\n        const settings: {[key: string]: any} = JSON.parse(localStorage.getItem('KonomiTV-Settings'));\n\n        // そのキーが保存されているときだけ、設定値を返す\n        if (key in settings) {\n            return settings[key];\n        } else {\n            // デフォルトの設定値にあればそれを使う\n            if (key in Utils.default_settings) {\n                return Utils.default_settings[key];\n            } else {\n                return null;\n            }\n        }\n    }\n\n\n    /**\n     * 設定を LocalStorage に保存する\n     * @param key 設定のキー名\n     * @param value 設定する値\n     */\n    static setSettingsItem(key: string, value: any): void {\n\n        // もし KonomiTV-Settings キーがまだない場合、あらかじめデフォルトの設定値を保存しておく\n        if (localStorage.getItem('KonomiTV-Settings') === null) {\n            localStorage.setItem('KonomiTV-Settings', JSON.stringify(Utils.default_settings));\n        }\n\n        // LocalStorage から KonomiTV-Settings を取得\n        const settings: {[key: string]: any} = JSON.parse(localStorage.getItem('KonomiTV-Settings'));\n\n        // 設定値を新しい値で置き換え\n        settings[key] = value;\n\n        // (名前が変わった、廃止されたなどの理由で) 現在の default_settings に存在しない設定キーを排除した上で並び替え\n        // 並び替えられていないと設定データの比較がうまくいかない\n        const new_settings: {[key: string]: any} = {};\n        for (const default_settings_key of Object.keys(Utils.default_settings)) {\n            if (default_settings_key in settings) {\n                new_settings[default_settings_key] = settings[default_settings_key];\n            } else {\n                // 後から追加された設定キーなどの理由で設定キーが現状の KonomiTV-Settings に存在しない場合\n                // その設定キーのデフォルト値を取得する\n                new_settings[default_settings_key] = Utils.default_settings[default_settings_key];\n            }\n        }\n\n        // LocalStorage に保存\n        localStorage.setItem('KonomiTV-Settings', JSON.stringify(new_settings));\n\n        // 更新された設定をサーバーに同期 (同期有効時のみ)\n        Utils.syncClientSettingsToServer();\n    }\n\n\n    /**\n     * ログイン時かつ同期が有効な場合、サーバーに保存されている設定データをこのクライアントに同期する\n     * @param force ログイン中なら同期が有効かに関わらず実行する (デフォルト: false)\n     */\n    static async syncServerSettingsToClient(force = false): Promise<void> {\n\n        // LocalStorage から KonomiTV-Settings を取得\n        const settings: {[key: string]: any} = JSON.parse(localStorage.getItem('KonomiTV-Settings'));\n\n        // ログインしていない時、同期が無効なときは実行しない\n        if (Utils.getAccessToken() === null || (settings.sync_settings === false && force === false)) {\n            return;\n        }\n\n        // 設定データをアップロード中のときは、動作が競合しないように終わるまで待つ\n        while (Utils.uploading_settings === true) {\n            await Utils.sleep(0.1);\n        }\n\n        try {\n\n            // サーバーから設定データをダウンロード\n            const server_settings: {[key: string]: any} = (await Vue.axios.get('/settings/client')).data;\n\n            // クライアントの設定値をサーバーからの設定値で上書き\n            for (const [server_settings_key, server_settings_value] of Object.entries(server_settings)) {\n                settings[server_settings_key] = server_settings_value;\n            }\n\n            // LocalStorage に保存\n            localStorage.setItem('KonomiTV-Settings', JSON.stringify(settings));\n\n        } catch (error) {\n            // 何らかの理由でエラーになったときは何もしない\n        }\n    }\n\n\n    /**\n     * ログイン時かつ同期が有効な場合、このクライアントの設定をサーバーに同期する\n     * @param force ログイン中なら同期が有効かに関わらず実行する (デフォルト: false)\n     */\n    static async syncClientSettingsToServer(force = false): Promise<void> {\n\n        // LocalStorage から KonomiTV-Settings を取得\n        const settings: {[key: string]: any} = JSON.parse(localStorage.getItem('KonomiTV-Settings'));\n\n        // ログインしていない時、同期が無効なときは実行しない\n        if (Utils.getAccessToken() === null || (settings.sync_settings === false && force === false)) {\n            return;\n        }\n\n        // 設定データのアップロード開始\n        Utils.uploading_settings = true;\n\n        // 同期対象の設定キーのみで設定データをまとめ直す\n        // sync_settings には同期対象外の設定は含まれない\n        const sync_settings: {[key: string]: any} = {};\n        for (const sync_settings_key of Utils.sync_settings_keys) {\n            if (sync_settings_key in settings) {\n                sync_settings[sync_settings_key] = settings[sync_settings_key];\n            } else {\n                // 後から追加された設定キーなどの理由で設定キーが現状の KonomiTV-Settings に存在しない場合\n                // その設定キーのデフォルト値を取得する\n                sync_settings[sync_settings_key] = Utils.default_settings[sync_settings_key];\n            }\n        }\n\n        // サーバーに設定データをアップロード\n        try {\n            await Vue.axios.put('/settings/client', sync_settings);\n        } catch (error) {\n            // 何もしない\n        }\n\n        // 設定データのアップロード終了\n        Utils.uploading_settings = false;\n    }\n\n\n    /**\n     * アクセストークンを LocalStorage から取得する\n     * @returns JWT アクセストークン（ログインしていない場合は null が返る）\n     */\n    static getAccessToken(): string | null {\n\n        // LocalStorage の取得結果をそのまま返す\n        // LocalStorage.getItem() はキーが存在しなければ（=ログインしていなければ）null を返す\n        return localStorage.getItem('KonomiTV-AccessToken');\n    }\n\n\n    /**\n     * アクセストークンを LocalStorage に保存する\n     * @param access_token 発行された JWT アクセストークン\n     */\n    static saveAccessToken(access_token: string): void {\n\n        // そのまま LocalStorage に保存\n        localStorage.setItem('KonomiTV-AccessToken', access_token);\n    }\n\n\n    /**\n     * アクセストークンを LocalStorage から削除する\n     * アクセストークンを削除することで、ログアウト相当になる\n     */\n    static deleteAccessToken(): void {\n\n        // LocalStorage に KonomiTV-AccessToken キーが存在しない\n        if (localStorage.getItem('KonomiTV-AccessToken') === null) return;\n\n        // KonomiTV-AccessToken キーを削除\n        localStorage.removeItem('KonomiTV-AccessToken');\n    }\n\n\n    /**\n     * ブラウザが実行されている OS に応じて、\"Ctrl\" または \"Cmd\" を返す\n     * キーボードショートカットのコンビネーションキーの説明を OS によって分けるために使う\n     * @returns ブラウザが実行されている OS が Mac なら Cmd を、それ以外なら Ctrl を返す\n     */\n    static CtrlOrCmd(): 'Ctrl' | 'Cmd' {\n        // iPhone・iPad で純正キーボードを接続した場合も一応想定して、iPhone・iPad も含める（動くかは未検証）\n        return /iPhone|iPad|Macintosh/i.test(navigator.userAgent) ? 'Cmd' : 'Ctrl';\n    }\n\n\n    /**\n     * Blob に格納されているデータをブラウザにダウンロードさせる\n     * @param blob Blob オブジェクト\n     * @param filename 保存するファイル名\n     */\n    static downloadBlobData(blob: Blob, filename: string): void {\n\n        // Blob URL を発行\n        const blob_url = URL.createObjectURL(blob);\n\n        // 画像をダウンロード\n        const link = document.createElement('a');\n        link.download = filename;\n        link.href = blob_url;\n        link.click();\n\n        // Blob URL を破棄\n        URL.revokeObjectURL(blob_url);\n    }\n\n\n    /**\n     * innerHTML しても問題ないように HTML の特殊文字をエスケープする\n     * PHP の htmlspecialchars() と似たようなもの\n     * @param content HTML エスケープされてないテキスト\n     * @returns HTML エスケープされたテキスト\n     */\n    static escapeHTML(content: string): string {\n\n        // HTML エスケープが必要な文字\n        // ref: https://www.php.net/manual/ja/function.htmlspecialchars.php\n        const html_escape_table = {\n            '&': '&amp;',\n            '\"': '&quot;',\n            '\\'': '&apos;',\n            '<': '&lt;',\n            '>': '&gt;',\n        };\n\n        // ref: https://qiita.com/noriaki/items/4bfef8d7cf85dc1035b3\n        return content.replace(/[&\"'<>]/g, (match) => {\n            return html_escape_table[match];\n        });\n    }\n\n\n    /**\n     * OAuth 連携時のポップアップを画面中央に表示するための windowFeatures 文字列を取得する\n     * ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1\n     * @returns window.open() で使う windowFeatures 文字列\n     */\n    static getWindowFeatures(): string {\n\n        // ポップアップウインドウのサイズ\n        const popupSizeWidth = 650;\n        const popupSizeHeight = window.screen.height >= 800 ? 800 : window.screen.height - 100;\n\n        // ポップアップウインドウの位置\n        const posTop = (window.screen.height - popupSizeHeight) / 2;\n        const posLeft = (window.screen.width - popupSizeWidth) / 2;\n\n        return `toolbar=0,status=0,top=${posTop},left=${posLeft},width=${popupSizeWidth},height=${popupSizeHeight},modal=yes,alwaysRaised=yes`;\n    }\n\n\n    /**\n     * 現在フォーカスを持っている要素に指定された CSS クラスが付与されているか\n     * @param class_name 存在を確認する CSS クラス名\n     * @returns document.activeElement が class_name で指定したクラスを持っているかどうか\n     */\n    static hasActiveElementClass(class_name: string): boolean {\n        if (document.activeElement === null) return false;\n        return document.activeElement.classList.contains(class_name);\n    }\n\n\n    /**\n     * モバイルデバイス（スマホ・タブレット）かどうか\n     * @returns モバイルデバイス (スマホ・タブレット) なら true を返す\n     */\n    static isMobileDevice(): boolean {\n        // Macintosh が入っているのは、iPadOS は既定でデスクトップ表示モードが有効になっていて、UA だけでは Mac と判別できないため\n        // Mac にタッチパネル付きの機種は存在しないので、'ontouchend' in document で判定できる\n        return /iPhone|iPad|iPod|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\n    }\n\n\n    /**\n     * 表示画面がスマホ横画面かどうか\n     * @returns スマホ横画面なら true を返す\n     */\n    static isSmartphoneHorizontal(): boolean {\n        return window.matchMedia('(max-width: 1000px) and (max-height: 450px)').matches;\n    }\n\n\n    /**\n     * 表示画面がスマホ縦画面かどうか\n     * @returns スマホ縦画面なら true を返す\n     */\n    static isSmartphoneVertical(): boolean {\n        return window.matchMedia('(max-width: 600px) and (min-height: 450.01px)').matches;\n    }\n\n\n    /**\n     * 表示画面がタブレット横画面かどうか\n     * @returns タブレット横画面なら true を返す\n     */\n    static isTabletHorizontal(): boolean {\n        return window.matchMedia('(max-width: 1264px) and (max-height: 850px)').matches;\n    }\n\n\n    /**\n     * 表示画面がタブレット縦画面かどうか\n     * @returns タブレット縦画面なら true を返す\n     */\n    static isTabletVertical(): boolean {\n        return window.matchMedia('(max-width: 850px) and (min-height: 850.01px)').matches;\n    }\n\n\n    /**\n     * 表示端末がタッチデバイスかどうか\n     * @returns タッチデバイスなら true を返す\n     */\n    static isTouchDevice(): boolean {\n        return window.matchMedia('(hover: none)').matches;\n    }\n\n\n    /**\n     * 任意の桁で切り捨てする\n     * ref: https://qiita.com/nagito25/items/0293bc317067d9e6c560#comment-87f0855f388953843037\n     * @param value 切り捨てする数値\n     * @param base どの桁で切り捨てするか (-1 → 10の位 / 3 → 小数第3位）\n     * @return 切り捨てした値\n     */\n    static mathFloor(value: number, base: number = 0): number {\n        return Math.floor(value * (10**base)) / (10**base);\n      }\n\n\n    /**\n     * async/await でスリープ的なもの\n     * @param seconds 待機する秒数\n     * @returns Promise を返すので、await sleep(1); のように使う\n     */\n    static async sleep(seconds: number): Promise<number> {\n        return await new Promise(resolve => setTimeout(resolve, seconds * 1000));\n    }\n\n\n    /**\n     * 現在時刻の UNIX タイムスタンプを取得する (デバッグ用)\n     * @returns 現在時刻の UNIX タイムスタンプ\n     */\n    static time(): number {\n        return Date.now() / 1000;\n    }\n\n\n    /**\n     * 指定された値の型の名前を取得する\n     * ref: https://qiita.com/amamamaou/items/ef0b797156b324bb4ef3\n     * @returns 指定された値の型の名前\n     */\n    static typeof(value: any): string {\n        return Object.prototype.toString.call(value).slice(8, -1).toLowerCase();\n    }\n\n\n    /**\n     * 文字列中に含まれる URL をリンクの HTML に置き換える\n     * @param text 置換対象の文字列\n     * @returns URL をリンクに置換した文字列\n     */\n    static URLtoLink(text: string): string {\n\n        // HTML の特殊文字で表示がバグらないように、事前に HTML エスケープしておく\n        text = Utils.escapeHTML(text);\n\n        // ref: https://www.softel.co.jp/blogs/tech/archives/6099\n        const pattern = /(https?:\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/ig;\n        return text.replace(pattern, '<a href=\"$1\" target=\"_blank\">$1</a>');\n    }\n}\n","\nimport { ChannelType, ChannelTypePretty, IChannel } from '@/interface';\n\n/**\n * チャンネル周りのユーティリティ\n */\nexport class ChannelUtils {\n\n    /**\n     * チャンネル ID からチャンネルタイプを取得する\n     * @param channel_id チャンネル ID\n     * @param is_pretty ChannelTypePretty 型で返すかどうか\n     * @returns チャンネルタイプ\n     */\n    static getChannelType(channel_id: string, is_pretty: boolean = false): ChannelType | ChannelTypePretty {\n        const result = channel_id.match('(?<channel_type>[a-z]+)[0-9]+').groups.channel_type.toUpperCase();\n        if (is_pretty === true) {\n            switch (result) {\n                case 'GR':\n                    return '地デジ';\n                case 'STARDIGIO':\n                    return 'StarDigio';\n                default:\n                    return result as ChannelTypePretty;\n            }\n        } else {\n            return result as ChannelType;\n        }\n    }\n\n\n    /**\n     * チャンネルの実況勢いから「多」「激多」「祭」を取得する\n     * ref: https://ja.wikipedia.org/wiki/%E3%83%8B%E3%82%B3%E3%83%8B%E3%82%B3%E5%AE%9F%E6%B3%81\n     * @param channel_force チャンネルの実況勢い\n     * @returns normal（普通）or many（多）or so-many（激多）or festival（祭）\n     */\n    static getChannelForceType(channel_force: number | null): 'normal' | 'many' | 'so-many' | 'festival' {\n\n        // 実況勢いが null（=対応する実況チャンネルがない）\n        if (channel_force === null) return 'normal';\n\n        // 実況勢いが 500 コメント以上（祭）\n        if (channel_force >= 500) return 'festival';\n        // 実況勢いが 200 コメント以上（激多）\n        if (channel_force >= 200) return 'so-many';\n        // 実況勢いが 100 コメント以上（多）\n        if (channel_force >= 100) return 'many';\n\n        // それ以外\n        return 'normal';\n    }\n\n\n    /**\n     * チャンネルタイプとリモコン番号からチャンネル情報を取得する\n     * @param channels_list チャンネルリスト\n     * @param channel_type チャンネルタイプ\n     * @param remocon_id リモコン番号\n     * @returns チャンネル情報\n     */\n    static getChannelFromRemoconID(channels_list: Map<ChannelTypePretty, IChannel[]>, channel_type: ChannelType, remocon_id: number): IChannel | null {\n\n        // ChannelTypePretty 型に変換する\n        const channel_type_pretty = channel_type.replace('GR', '地デジ').replace('STARDIGIO', 'StarDigio') as ChannelTypePretty;\n\n        // 指定されたチャンネルタイプのチャンネルを取得\n        const channels = channels_list.get(channel_type_pretty);  //「GR」は「地デジ」に置換してから取得\n\n        // リモコン番号が一致するチャンネルを見つけ、一番最初に見つかったものを返す\n        for (let index = 0; index < channels.length; index++) {\n            const channel = channels[index];\n            if (channel.remocon_id === remocon_id) {\n                return channel;\n            }\n        }\n\n        // リモコン番号が一致するチャンネルを見つけられなかった\n        return null;\n    }\n\n\n    /**\n     * 前・現在・次のチャンネル情報を取得する\n     * @param channels_list チャンネルリスト\n     * @param channel_id 起点にする現在のチャンネル ID\n     * @returns 前・現在・次のチャンネル情報\n     */\n    static getPreviousAndCurrentAndNextChannel(channels_list: Map<ChannelTypePretty, IChannel[]>, channel_id: string): IChannel[] {\n\n        // 前後のチャンネルを取得\n        const channels = channels_list.get(this.getChannelType(channel_id, true) as ChannelTypePretty);\n        for (let index = 0; index < channels.length; index++) {\n            const element = channels[index];\n\n            // チャンネル ID が一致したときだけ\n            if (element.channel_id === channel_id) {\n\n                // インデックスが最初か最後の時はそれぞれ最後と最初にインデックスを一周させる\n                let previous_index = index - 1;\n                if (previous_index === -1) previous_index = channels.length - 1;\n                let next_index = index + 1;\n                if (next_index === channels.length) next_index = 0;\n\n                // 前・現在・次のチャンネル情報を返す\n                return [channels[previous_index], channels[index], channels[next_index]];\n            }\n        }\n    }\n}\n","\nimport { Buffer } from 'buffer';\n\nimport { IMutedCommentKeywords } from '@/interface';\nimport Utils from './Utils';\n\n/**\n * コメント周りのユーティリティ\n */\nexport class CommentUtils {\n\n    // 「露骨な表現を含むコメントをミュートする」のフィルタ正規表現\n    static readonly mute_vulgar_comments_pattern = new RegExp(Buffer.from('cHJwcnzvvZDvvZLvvZDvvZJ8U0VYfFPjgIdYfFPil69YfFPil4tYfFPil49YfO+8s++8pe+8uHzvvLPjgIfvvLh877yz4pev77y4fO+8s+KXi++8uHzvvLPil4/vvLh844Ki44OA44Or44OIfOOCouODiuOCpXzjgqLjg4rjg6t844Kk44Kr6IetfOOCpOOBj3zjgYbjgpPjgZN844Km44Oz44KzfOOBhuOCk+OBoXzjgqbjg7Pjg4F844Ko44Kt44ObfOOBiOOBoeOBiOOBoXzjgYjjgaPjgaF844Ko44OD44OBfOOBiOOBo+OCjXzjgqjjg4Pjg61844GI44KNfOOCqOODrXzlt6Xlj6N844GK44GV44KP44KK44G+44KTfOOBiuOBl+OBo+OBk3zjgqrjgrfjg4PjgrN844Kq44OD44K144OzfOOBiuOBo+OBseOBhHzjgqrjg4Pjg5HjgqR844Kq44OK44OL44O8fOOBiuOBquOBu3zjgqrjg4rjg5t844GK44Gx44GEfOOCquODkeOCpHzjgYpwfOOBiu+9kHzjgqrjg5Xjg5HjgrN844Ks44Kk44K444OzfOOCreODs+OCv+ODnnzjgY/jgbHjgYJ844GP44Gx44GBfOOCr+ODquODiOODquOCuXzjgq/jg7Pjg4t844GU44GP44GU44GP44GU44GP44GU44GPfOOCs+ODs+ODieODvOODoHzjgrbjg7zjg6Hjg7N844K344KzfOOBl+OBk+OBl+OBk3zjgrfjgrPjgrfjgrN844GZ44GR44GZ44GRfOOBm+OBhOOBiOOBjXzjgZnjgYXjgYXjgYXjgYXjgYV844GZ44GG44GG44GG44GG44GGfOOCu+OCr+ODreOCuXzjgrvjg4Pjgq/jgrl844K744OV44OsfOOBoeOBo+OBseOBhHzjgaHjgaPjg5HjgqR844OB44OD44OR44KkfOOBoeOCk+OBk3zjgaHjgIfjgZN844Gh4pev44GTfOOBoeKXi+OBk3zjgaHil4/jgZN844OB44Oz44KzfOODgeOAh+OCs3zjg4Hil6/jgrN844OB4peL44KzfOODgeKXj+OCs3zjgaHjgpPjgb1844Gh44CH44G9fOOBoeKXr+OBvXzjgaHil4vjgb1844Gh4peP44G9fOODgeODs+ODnXzjg4HjgIfjg51844OB4pev44OdfOODgeKXi+ODnXzjg4Hil4/jg51844Gh44KT44Gh44KTfOODgeODs+ODgeODs3zjgabjgYPjgpPjgabjgYPjgpN844OG44Kj44Oz44OG44Kj44OzfOODhuOCo+ODs+ODnXzjg4fjgqvjgYR844OH44Oq44OY44OrfOiEseOBknzjgbHjgYTjgoLjgb9844OR44OR5rS7fOOBteOBhuODu3zjgbXjgYbigKZ844G144GFfO++jO+9qXzjgbXjgY/jgonjgb/jgYvjgZF844G144GP44KJ44KT44GnfOOBuuOBo+OBn3zjgbrjgo3jgbrjgo1844Oa44Ot44Oa44OtfO++je++n+++m+++je++n+++m3zjg5Xjgqfjg6l844G844Gj44GNfOODneODq+ODjnzjgbzjgo3jgpN844Oc44Ot44OzfO++ju++nu++m+++nXzjgb3jgo3jgop844Od44Ot44OqfO++ju++n+++m+++mHzjg57jg7PjgY3jgaR844Oe44Oz44Kt44OEfOOBvuOCk+OBk3zjgb7jgIfjgZN844G+4pev44GTfOOBvuKXi+OBk3zjgb7il4/jgZN844Oe44Oz44KzfOODnuOAh+OCs3zjg57il6/jgrN844Oe4peL44KzfOODnuKXj+OCs3zjgb7jgpPjgZXjgpN844KC44Gj44GT44KKfOODouODg+OCs+ODqnzjgoLjgb/jgoLjgb9844Oi44Of44Oi44OffOODpOOBo+OBn3zjg6TjgaPjgaZ844Ok44KJfOOChOOCieOBm+OCjXzjg6Tjgop844Ok44KLfOODpOOCjHzjg6Tjgo1844Op44OW44ObfOODr+ODrOODoXzllph86Zmw5qC4fOmZsOiMjnzpmbDllId85rer5aSifOmZsOavm3znlKPjgoHjgot85aWz44Gu5a2Q44Gu5pelfOaxmuOBo+OBleOCk3zlp6Z86aiO5LmX5L2NfOmHkeeOiXzmnIjntYx85b6M6IOM5L2NfOWtkOS9nOOCinzlsITnsr585L+h6ICFfOeyvua2snzpgI/jgZF85oCn5LqkfOeyvuWtkHzmraPluLjkvY185oCn5b60fOaAp+eahHznlJ/nkIZ85a+45q2i44KBfOe0oOadkHzmirHjgYR85oqx44GLfOaKseOBjXzmirHjgY985oqx44GRfOaKseOBk3zkubPpppZ85oGl5Z6ifOS4reOBoOOBl3zkuK3lh7rjgZd85bC/fOaKnOOBhHzmipzjgZHjgarjgYR85oqc44GR44KLfOaKnOOBkeOCjHzohqjjgol85YuD6LW3fOaPieOBvnzmj4njgb985o+J44KAfOaPieOCgXzmvKvmuZZ844CH772efOKXr++9nnzil4vvvZ584peP772efOOAh+ODg+OCr+OCuXzil6/jg4Pjgq/jgrl84peL44OD44Kv44K5fOKXj+ODg+OCr+OCuQ==', 'base64').toString());\n\n    // 「罵倒や差別的な表現を含むコメントをミュートする」のフィルタ正規表現\n    static readonly mute_abusive_discriminatory_prejudiced_comments_pattern = new RegExp(Buffer.from('44CCfOOCouOCueODmnzjgqTjgqvjgox844Kk44Op44Gk44GPfOOCpuOCuHzjgqbjg7zjg6h844Km44OofOOCpuODqOOCr3zjgqbjg7J844GN44KC44GEfOOCreODouOCpHzjgq3jg6LjgYR844KtL+ODoC/jg4F844Ks44Kk44K4fO+9tu++nu+9su+9vO++nnzjgqzjgq1844Kr44K5fOOCreODg+OCunzjgY3jgaHjgYzjgYR844Kt44OB44Ks44KkfOOCreODoOODgXzjg4Hjg6fjg7N85Y2D44On44OzfOOBpOOCk+OBvHzjg4Tjg7Pjg5x844ON44OI44Km44OofOOBq+OBoOOBguOBgnzjg4vjg4B8776G776A776efOODkeODvOODqHzjg5Hjg6h844OR44Oo44KvfOOBtuOBo+OBlXzjg5bjg4PjgrV844G244GV44GEfOODluOCteOCpHzjgb7jgazjgZF844Oh44Kv44OpfOODkOOCq3zjg6DjgqvjgaTjgY986bq755Sf44K744Oh44Oz44OIfOaFsOWuieWppnzlrrPlhZB85aSW5a2XfOWnpuWbvXzpn5Plm7186Z+T5LitfOmfk+aXpXzln7rlnLDlpJZ85rCX5oyB44Gh5oKqfOWbveS6pOaWree1tnzmrrp86aCD44GZfOWcqOaXpXzlj4LmlL/mqKl85q2744GtfOawj+OBrXzvvoDvvot85q255YyVfOatueODknzpmpzlrrN85pat5LqkfOS4remfk3zmnJ3prq585b6055So5belfOWjunzml6Xpn5N85pel5bidfOeymOedgHzlj43ml6V86aas6bm/fOeZuumBlHzmnLR85aOy5Zu9fOS4jeW/q3zplpPmipzjgZF86Z2W5Zu9', 'base64').toString());\n\n    /**\n     * ニコニコの色指定を 16 進数カラーコードに置換する\n     * @param color ニコニコの色指定\n     * @return 16 進数カラーコード\n     */\n    static getCommentColor(color: string): string {\n        const color_table = {\n            'white': '#FFEAEA',\n            'red': '#F02840',\n            'pink': '#FD7E80',\n            'orange': '#FDA708',\n            'yellow': '#FFE133',\n            'green': '#64DD17',\n            'cyan': '#00D4F5',\n            'blue': '#4763FF',\n            'purple': '#D500F9',\n            'black': '#1E1310',\n            'white2': '#CCCC99',\n            'niconicowhite': '#CCCC99',\n            'red2': '#CC0033',\n            'truered': '#CC0033',\n            'pink2': '#FF33CC',\n            'orange2': '#FF6600',\n            'passionorange': '#FF6600',\n            'yellow2': '#999900',\n            'madyellow': '#999900',\n            'green2': '#00CC66',\n            'elementalgreen': '#00CC66',\n            'cyan2': '#00CCCC',\n            'blue2': '#3399FF',\n            'marineblue': '#3399FF',\n            'purple2': '#6633CC',\n            'nobleviolet': '#6633CC',\n            'black2': '#666666',\n        };\n        if (color_table[color] !== undefined) {\n            return color_table[color];\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * ニコニコの位置指定を DPlayer の位置指定に置換する\n     * @param position ニコニコの位置指定\n     * @return DPlayer の位置指定\n     */\n    static getCommentPosition(position: string): 'top' | 'right' | 'bottom' {\n        switch (position) {\n            case 'ue':\n                return 'top';\n            case 'naka':\n                return 'right';\n            case 'shita':\n                return 'bottom';\n            default:\n                return null;\n        }\n    }\n\n    /**\n     * ミュート対象のコメントかどうかを判断する\n     * @param comment コメント\n     * @param user_id コメントを投稿したユーザーの ID\n     * @return ミュート対象のコメントなら true を返す\n     */\n    static isMutedComment(comment: string, user_id: string): boolean {\n\n        // キーワードミュート処理\n        const muted_comment_keywords = Utils.getSettingsItem('muted_comment_keywords') as IMutedCommentKeywords[];\n        for (const muted_comment_keyword of muted_comment_keywords) {\n            if (muted_comment_keyword.pattern === '') continue;  // キーワードが空文字のときは無視\n            switch (muted_comment_keyword.match) {\n                // 部分一致\n                case 'partial':\n                    if (comment.includes(muted_comment_keyword.pattern)) return true;\n                    break;\n                // 前方一致\n                case 'forward':\n                    if (comment.startsWith(muted_comment_keyword.pattern)) return true;\n                    break;\n                // 後方一致\n                case 'backward':\n                    if (comment.endsWith(muted_comment_keyword.pattern)) return true;\n                    break;\n                // 完全一致\n                case 'exact':\n                    if (comment === muted_comment_keyword.pattern) return true;\n                    break;\n                // 正規表現\n                case 'regex':\n                    if (new RegExp(muted_comment_keyword.pattern).test(comment)) return true;\n                    break;\n            }\n        }\n\n        // 「露骨な表現を含むコメントをミュートする」がオンの場合\n        if (Utils.getSettingsItem('mute_vulgar_comments') === true) {\n            if (CommentUtils.mute_vulgar_comments_pattern.test(comment)) return true;\n        }\n\n        // 「罵倒や差別的な表現を含むコメントをミュートする」がオンの場合\n        if (Utils.getSettingsItem('mute_abusive_discriminatory_prejudiced_comments') === true) {\n            if (CommentUtils.mute_abusive_discriminatory_prejudiced_comments_pattern.test(comment)) return true;\n        }\n\n        // 「8文字以上同じ文字が連続しているコメントをミュートする」がオンの場合\n        if (Utils.getSettingsItem('mute_consecutive_same_characters_comments') === true) {\n            if (/(.)\\1{7,}/.test(comment)) return true;\n        }\n\n        // 「ＮHK→計1447ＩＤ／内プレ425ＩＤ／総33372米 ◆ Ｅﾃﾚ → 計73ＩＤ／内プレ19ＩＤ／総941米」のような\n        // 迷惑コメントを一括で弾く (あえてミュートしたくないユースケースが思い浮かばないのでデフォルトで弾く)\n        if (/最高\\d+米\\/|計\\d+ＩＤ|総\\d+米/.test(comment)) return true;\n\n        // ユーザー ID ミュート処理\n        const muted_niconico_user_ids = Utils.getSettingsItem('muted_niconico_user_ids') as string[];\n        for (const muted_niconico_user_id of muted_niconico_user_ids) {\n            if (user_id === muted_niconico_user_id) return true;\n        }\n\n        // いずれのミュート処理にも引っかからなかった (ミュート対象ではない)\n        return false;\n    }\n\n    // ミュート済みキーワードリストに追加する (完全一致)\n    static addMutedKeywords(comment: string): void {\n        const muted_comment_keywords = Utils.getSettingsItem('muted_comment_keywords') as IMutedCommentKeywords[];\n        muted_comment_keywords.push({\n            match: 'exact',\n            pattern: comment,\n        });\n        Utils.setSettingsItem('muted_comment_keywords', muted_comment_keywords);\n    }\n\n    // ミュート済みニコニコユーザー ID リストに追加する\n    static addMutedNiconicoUserIDs(user_id: string): void {\n        const muted_niconico_user_ids = Utils.getSettingsItem('muted_niconico_user_ids') as string[];\n        muted_niconico_user_ids.push(user_id);\n        Utils.setSettingsItem('muted_niconico_user_ids', muted_niconico_user_ids);\n    }\n}\n","\nimport { Buffer } from 'buffer';\nimport { convertBlobToPng, copyBlobToClipboard } from 'copy-image-clipboard';\nimport DPlayer from 'dplayer';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ja';\nimport * as piexif from 'piexifjs';\nimport Vue from 'vue';\n\nimport { IChannel, ICaptureExifData, IProgram } from '@/interface';\nimport Utils from './Utils';\n\nexport class PlayerCaptureHandler {\n\n    private player: DPlayer;\n    private player_container: HTMLElement;\n    private captured_callback: (blob: Blob, filename: string) => void;\n    private capture_button: HTMLDivElement;\n    private comment_capture_button: HTMLDivElement;\n    private canvas: OffscreenCanvas | HTMLCanvasElement;\n    private canvas_context: OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\n\n    constructor(player: DPlayer, captured_callback: (blob: Blob, filename: string) => void) {\n\n        this.player = player;\n        this.player_container = this.player.container;\n        this.captured_callback = captured_callback;\n\n        // コメント付きキャプチャボタンの HTML を追加\n        // insertAdjacentHTML で .dplayer-icons-right の一番左側に配置する\n        // この後に通常のキャプチャボタンが insert されるので、実際は左から2番目\n        // TODO: ボタンのデザインをコメント付きだと分かるようなものに変更する\n        this.player_container.querySelector('.dplayer-icons.dplayer-icons-right').insertAdjacentHTML('afterbegin', `\n            <div class=\"dplayer-icon dplayer-comment-capture-icon\" aria-label=\"コメントを付けてキャプチャ\"\n                data-balloon-nofocus=\"\" data-balloon-pos=\"up\">\n                <span class=\"dplayer-icon-content\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\"><path d=\"M16 23c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zM16 13c-2.206 0-4 1.794-4 4s1.794 4 4 4c2.206 0 4-1.794 4-4s-1.794-4-4-4zM27 28h-22c-1.654 0-3-1.346-3-3v-16c0-1.654 1.346-3 3-3h3c0.552 0 1 0.448 1 1s-0.448 1-1 1h-3c-0.551 0-1 0.449-1 1v16c0 0.552 0.449 1 1 1h22c0.552 0 1-0.448 1-1v-16c0-0.551-0.448-1-1-1h-11c-0.552 0-1-0.448-1-1s0.448-1 1-1h11c1.654 0 3 1.346 3 3v16c0 1.654-1.346 3-3 3zM24 10.5c0 0.828 0.672 1.5 1.5 1.5s1.5-0.672 1.5-1.5c0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5zM15 4c0 0.552-0.448 1-1 1h-4c-0.552 0-1-0.448-1-1v0c0-0.552 0.448-1 1-1h4c0.552 0 1 0.448 1 1v0z\"></path></svg>\n                </span>\n            </div>\n        `);\n\n        // キャプチャボタンの HTML を追加\n        // 標準のスクリーンショット機能は貧弱なので、あえて独自に実装している（そのほうが自由度も高くてやりやすい）\n        // insertAdjacentHTML で .dplayer-icons-right の一番左側に配置する\n        this.player_container.querySelector('.dplayer-icons.dplayer-icons-right').insertAdjacentHTML('afterbegin', `\n            <div class=\"dplayer-icon dplayer-capture-icon\" aria-label=\"キャプチャ\"\n                data-balloon-nofocus=\"\" data-balloon-pos=\"up\">\n                <span class=\"dplayer-icon-content\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\"><path d=\"M16 23c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zM16 13c-2.206 0-4 1.794-4 4s1.794 4 4 4c2.206 0 4-1.794 4-4s-1.794-4-4-4zM27 28h-22c-1.654 0-3-1.346-3-3v-16c0-1.654 1.346-3 3-3h3c0.552 0 1 0.448 1 1s-0.448 1-1 1h-3c-0.551 0-1 0.449-1 1v16c0 0.552 0.449 1 1 1h22c0.552 0 1-0.448 1-1v-16c0-0.551-0.448-1-1-1h-11c-0.552 0-1-0.448-1-1s0.448-1 1-1h11c1.654 0 3 1.346 3 3v16c0 1.654-1.346 3-3 3zM24 10.5c0 0.828 0.672 1.5 1.5 1.5s1.5-0.672 1.5-1.5c0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5zM15 4c0 0.552-0.448 1-1 1h-4c-0.552 0-1-0.448-1-1v0c0-0.552 0.448-1 1-1h4c0.552 0 1 0.448 1 1v0z\"></path></svg>\n                </span>\n            </div>\n        `);\n\n        this.comment_capture_button = this.player_container.querySelector('.dplayer-comment-capture-icon');\n        this.capture_button = this.player_container.querySelector('.dplayer-capture-icon');\n\n        // キャプチャ用の Canvas を初期化\n        // パフォーマンス向上のため、一度作成した Canvas は使い回す\n        // OffscreenCanvas が使えるなら使う (OffscreenCanvas の方がパフォーマンスが良い)\n        this.canvas = ('OffscreenCanvas' in window) ? new OffscreenCanvas(0, 0) : document.createElement('canvas');\n        this.canvas_context = this.canvas.getContext('2d', {\n            alpha: false,\n            desynchronized: true,\n            willReadFrequently: false,\n        }) as OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\n\n        // 映像の解像度を Canvas サイズとして設定\n        // 映像が読み込まれた / 画質が変わった際に Canvas のサイズを映像のサイズに合わせる\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        player.on('loadedmetadata', async () => {\n            this.canvas.width = player.video.videoWidth;\n            this.canvas.height = player.video.videoHeight;\n            // 映像サイズがちゃんと設定されるまで繰り返す (Safari 対策)\n            while (this.canvas.width === 0 && this.canvas.height === 0) {\n                await Utils.sleep(0.1);\n                this.canvas.width = player.video.videoWidth;\n                this.canvas.height = player.video.videoHeight;\n            }\n        });\n    }\n\n\n    /**\n     * 映像をキャプチャして保存する\n     * 映像のみと字幕付き (字幕表示時のみ) の両方のキャプチャを生成できる\n     * @param channel チャンネル情報 (キャプチャの EXIF メタデータに番組情報を書き込むのに必要)\n     * @param with_comments キャプチャにコメントを合成するかどうか\n     */\n    public async captureAndSave(channel: IChannel, with_comments: boolean): Promise<void> {\n\n        const total_time = Utils.time();\n\n        // ***** バリデーション *****\n\n        // ラジオチャンネルを視聴している場合 (当然映像がないのでキャプチャできない)\n        if (channel.is_radiochannel === true) {\n            this.player.notice('ラジオチャンネルはキャプチャできません。');\n            return;\n        }\n\n        // まだ映像の表示準備が終わっていない (Canvas の幅/高さが 0 のまま)\n        if (this.canvas.width === 0 && this.canvas.height === 0) {\n            this.player.notice('読み込み中はキャプチャできません。');\n            return;\n        }\n\n        // コメントが表示されていないのにコメント付きキャプチャしようとした\n        if (with_comments === true && this.player.danmaku.showing === false) {\n            this.player.notice('コメントを付けてキャプチャするには、コメント表示をオンにしてください。');\n            return;\n        }\n\n        // ***** キャプチャの下準備 *****\n\n        // キャプチャ中はキャプチャボタンをハイライトする\n        this.addHighlight(with_comments);\n\n        // ファイル名（拡張子なし）\n        // TODO: ファイル名パターンを変更できるようにする\n        const filename_base = `Capture_${dayjs().format('YYYYMMDD-HHmmss')}`;\n        const filename = `${filename_base}.jpg`;  // 字幕なしキャプチャ\n        const filename_caption = `${filename_base}_caption.jpg`;  // 字幕ありキャプチャ\n\n        // 字幕・文字スーパーの Canvas を取得\n        // getRawCanvas() で映像と同じ解像度の Canvas が取得できる\n        const caption_canvas: HTMLCanvasElement = this.player.plugins.aribb24Caption.getRawCanvas();\n        const superimpose_canvas: HTMLCanvasElement = this.player.plugins.aribb24Superimpose.getRawCanvas();\n\n        // 字幕が表示されているか\n        // @ts-ignore\n        const is_caption_showing = (this.player.plugins.aribb24Caption.isShowing === true &&\n                                    this.player.plugins.aribb24Caption.isPresent());\n\n        // 文字スーパーが表示されているか\n        // @ts-ignore\n        const is_superimpose_showing = (this.player.plugins.aribb24Superimpose.isShowing === true &&\n                                        this.player.plugins.aribb24Superimpose.isPresent());\n\n        // 字幕が表示されている場合、表示中の字幕のテキストを取得\n        // 取得した字幕のテキストは、キャプチャに字幕が合成されているかに関わらず、常に EXIF メタデータに書き込まれる\n        // 字幕が表示されていない場合は null を入れ、キャプチャしたシーンで字幕が表示されていなかったことを明示する\n        const caption_text = is_caption_showing ? this.player.plugins.aribb24Caption.getTextContent() : null;\n\n        // エクスポートして保存する共通処理\n        const export_and_save = async (\n            canvas: OffscreenCanvas | HTMLCanvasElement,\n            filename: string,\n            program: IProgram,\n            caption_text: string | null,\n            is_caption_composited: boolean,\n            is_comment_composited: boolean,\n        ): Promise<Blob | false> => {\n\n            // Canvas を Blob にエクスポート\n            const time = Utils.time();\n            let blob: Blob;\n            try {\n                blob = await this.exportToBlob(canvas);\n            } catch (error) {\n                console.log(error);\n                this.player.notice('キャプチャの保存に失敗しました…');\n                return false;\n            }\n            console.log('[PlayerCaptureHandler] Export to Blob:', Utils.mathFloor(Utils.time() - time, 3), 'sec');\n\n            // キャプチャに番組情報などのメタデータ (EXIF) をセット\n            blob = await this.setEXIFDataToCapture(blob, program, caption_text, is_caption_composited, is_comment_composited);\n\n            // キャプチャの保存先: ブラウザでダウンロード or 両方\n            if (['Browser', 'Both'].includes(Utils.getSettingsItem('capture_save_mode'))) {\n                Utils.downloadBlobData(blob, filename);\n            }\n\n            // キャプチャの保存先: KonomiTV サーバーにアップロード or 両方\n            // 時間がかかるし完了を待つ必要がないので非同期\n            if (['UploadServer', 'Both'].includes(Utils.getSettingsItem('capture_save_mode'))) {\n                this.uploadCaptureToServer(blob, filename);\n            }\n\n            return blob;\n        }\n\n        // ***** 映像のキャプチャ *****\n\n        // null はまだキャプチャしていないことを、false はキャプチャに失敗したことを表す\n        let capture_normal: {blob: Blob, filename: string} | null | false = null;\n        let capture_caption: {blob: Blob, filename: string} | null | false = null;\n\n        // 映像の ImageBitmap を取得\n        const image_bitmap = await createImageBitmap(this.player.video);\n\n        // もし映像以外に追加で合成するものがないなら、処理の高速化のために ImageBitmap をそのまま Canvas に転送して Blob 化する\n        // コメントキャプチャではない & 文字スーパーが表示されていない (=合成処理を行う必要がない) &\n        // (字幕が表示されていない or 字幕が表示されているが合成しないように設定されている) 場合\n        // コメント付きキャプチャではなく、かつ字幕のない番組では大半がここの処理を通ることになる\n        if (with_comments === false && is_superimpose_showing === false &&\n            (is_caption_showing === false || Utils.getSettingsItem('capture_caption_mode') === 'VideoOnly')) {\n\n            // OffscreenCanvas が使えるなら使う (OffscreenCanvas の方がパフォーマンスが良い)\n            const bitmap_canvas = ('OffscreenCanvas' in window) ?\n                new OffscreenCanvas(image_bitmap.width, image_bitmap.height) : document.createElement('canvas');\n            bitmap_canvas.width = image_bitmap.width;\n            bitmap_canvas.height = image_bitmap.height;\n            const canvas_context = bitmap_canvas.getContext('bitmaprenderer', {alpha: false}) as ImageBitmapRenderingContext;\n\n            // Canvas に映像がキャプチャされた ImageBitmap を転送\n            // 描画ではなくゼロコピーで転送しているらしい…？\n            canvas_context.transferFromImageBitmap(image_bitmap);\n            image_bitmap.close();  // 今後使うことはないので明示的に閉じる\n\n            // ファイル名\n            // 保存モードが「字幕キャプチャのみ」のとき (=字幕キャプチャのみをキャプチャする設定にしていたが、字幕がそもそもないとき) は、\n            // 便宜上字幕ありキャプチャと同じファイル名で保存する\n            const filename_real =\n                (Utils.getSettingsItem('capture_caption_mode') === 'CompositingCaption') ? filename_caption : filename;\n\n            // Blob にエクスポートして保存\n            // false が返ってきた場合は失敗を意味する\n            const blob = await export_and_save(\n                bitmap_canvas, filename_real, channel.program_present, caption_text, false, with_comments);\n            if (blob !== false) {\n                capture_normal = {blob: blob, filename: filename_real};\n            } else {\n                capture_normal = false;  // キャプチャのエクスポートに失敗\n            }\n\n            // キャプチャの Blob をコールバック関数に渡す\n            // ここでコールバック関数に渡した Blob が Twitter タブのキャプチャリストに送られる\n            if (capture_normal !== false) {\n                this.captured_callback(capture_normal.blob, capture_normal.filename);\n            }\n\n        // ***** 通常実行 (Canvas にキャプチャ以外のデータを重ねて描画する必要があるケース) *****\n\n        } else {\n\n            const promises: Promise<void>[] = [];\n\n            // Canvas に映像がキャプチャされた ImageBitmap を描画\n            this.canvas_context.drawImage(image_bitmap, 0, 0, this.canvas.width, this.canvas.height);\n\n            // 文字スーパーを描画 (表示されている場合)\n            // 文字スーパー自体が稀だし、文字スーパーなしでキャプチャ撮りたいユースケースはない…はず\n            if (is_superimpose_showing === true) {\n                this.canvas_context.drawImage(superimpose_canvas, 0, 0, this.canvas.width, this.canvas.height);\n            }\n\n            // コメント付きキャプチャ: 追加でニコニコ実況のコメントを描画\n            let comments_image: HTMLImageElement | null = null;\n            if (with_comments === true) {\n                comments_image = await this.createCommentsImage();\n                await this.drawComments(comments_image);\n            }\n\n            // ***** 映像のみのキャプチャを保存 *****\n\n            // 字幕表示時のキャプチャの保存モード: 映像のみ or 両方\n            // 保存モードが「字幕キャプチャのみ」になっているが字幕が表示されていない場合も実行する\n            if (['VideoOnly', 'Both'].includes(Utils.getSettingsItem('capture_caption_mode')) || is_caption_showing === false) {\n\n                promises.push((async () => {\n\n                    // ファイル名\n                    // 保存モードが「字幕キャプチャのみ」のとき (=字幕キャプチャのみをキャプチャする設定にしていたが、字幕がそもそもないとき) は、\n                    // 便宜上字幕ありキャプチャと同じファイル名で保存する\n                    const filename_real =\n                        (Utils.getSettingsItem('capture_caption_mode') === 'CompositingCaption') ? filename_caption : filename;\n\n                    // Blob にエクスポートして保存\n                    const blob = await export_and_save(\n                        this.canvas, filename_real, channel.program_present, caption_text, false, with_comments);\n                    if (blob !== false) {\n                        capture_normal = {blob: blob, filename: filename_real};\n                    } else {\n                        capture_normal = false;  // キャプチャのエクスポートに失敗\n                    }\n\n                    // キャプチャの Blob をコールバック関数に渡す\n                    // ここでコールバック関数に渡した Blob が Twitter タブのキャプチャリストに送られる\n                    if (capture_normal !== false) {\n                        this.captured_callback(capture_normal.blob, capture_normal.filename);\n                    }\n\n                })());\n            }\n\n            // ***** 字幕付きのキャプチャを保存 *****\n\n            // 字幕表示時のキャプチャの保存モード: 字幕キャプチャのみ or 両方\n            // 字幕が表示されているときのみ実行（字幕が表示されていないのにやっても意味がない）\n            if (['CompositingCaption', 'Both'].includes(Utils.getSettingsItem('capture_caption_mode')) && is_caption_showing === true) {\n\n                promises.push((async () => {\n\n                    // コメント付きキャプチャ: 映像と文字スーパーの描画をやり直す\n                    // すでに字幕なしキャプチャを生成する過程でコメントを描画してしまっているため、映像描画からやり直す必要がある\n                    if (with_comments === true) {\n                        this.canvas_context.drawImage(image_bitmap, 0, 0, this.canvas.width, this.canvas.height);\n                        if (is_superimpose_showing === true) {\n                            this.canvas_context.drawImage(superimpose_canvas, 0, 0, this.canvas.width, this.canvas.height);\n                        }\n                    }\n                    image_bitmap.close();  // 今後使うことはないので明示的に閉じる\n\n                    // 字幕を重ねて描画\n                    this.canvas_context.drawImage(caption_canvas, 0, 0, this.canvas.width, this.canvas.height);\n\n                    // コメント付きキャプチャ: 追加でニコニコ実況のコメントを描画\n                    if (with_comments === true) {\n                        await this.drawComments(comments_image);\n                    }\n\n                    // Blob にエクスポートして保存\n                    const blob = await export_and_save(\n                        this.canvas, filename_caption, channel.program_present, caption_text, true, with_comments,\n                    );\n                    if (blob !== false) {\n                        capture_caption = {blob: blob, filename: filename_caption};\n                    } else {\n                        capture_caption = false;  // キャプチャのエクスポートに失敗\n                    }\n\n                    // キャプチャの Blob をコールバック関数に渡す\n                    // ここでコールバック関数に渡した Blob が Twitter タブのキャプチャリストに送られる\n                    if (capture_caption !== false) {\n                        // 字幕表示時のキャプチャの保存モードが「両方 (Both)」のときのみ、映像のみのキャプチャの生成が終わるまで待ってから実行\n                        // 必ずキャプチャリストへの追加が [映像のみ] → [字幕付き] の順序で行われるようにする\n                        if (Utils.getSettingsItem('capture_caption_mode') === 'Both') {\n                            while (capture_normal === null) {\n                                // Blob (成功) か false (失敗) が capture_normal に入るまでループ\n                                await Utils.sleep(0.01);\n                            }\n                        }\n                        this.captured_callback(capture_caption.blob, capture_caption.filename);\n                    }\n\n                })());\n            }\n\n            // すべてのキャプチャ処理が終わるまで待つ\n            await Promise.all(promises);\n        }\n\n        console.log('[PlayerCaptureHandler] Total:', Utils.mathFloor(Utils.time() - total_time, 3), 'sec');\n\n        // キャプチャボタンのハイライトを削除する\n        this.removeHighlight(with_comments);\n\n        // Twitter タブのキャプチャリストに送る処理が最優先なので、コールバックを実行しきった後に時間のかかるクリップボードへのコピーを行う\n        for (const capture of [capture_normal, capture_caption]) {\n\n            // クリップボードへのコピーが有効なら、キャプチャの Blob をクリップボードにコピー\n            // PNG 以外は受け付けないそうなので、JPEG を PNG に変換してからコピーしている\n            if (Utils.getSettingsItem('capture_copy_to_clipboard') && capture !== null && capture !== false) {\n                try {\n                    await copyBlobToClipboard(await convertBlobToPng(capture.blob));\n                } catch (error) {\n                    this.player.notice('クリップボードへのキャプチャのコピーに失敗しました…');\n                    console.error(error);\n                }\n            }\n        }\n    }\n\n\n    /**\n     * キャプチャボタンをハイライトする\n     * @param with_comments コメント付きキャプチャボタンをハイライトするか\n     */\n    private addHighlight(with_comments: boolean = false): void {\n        if (with_comments) {\n            this.comment_capture_button.classList.add('dplayer-capturing');\n        } else {\n            this.capture_button.classList.add('dplayer-capturing');\n        }\n    }\n\n\n    /**\n     * キャプチャボタンのハイライトを外す\n     * @param with_comments コメント付きキャプチャボタンのハイライトを外すか\n     */\n    private removeHighlight(with_comments: boolean = false): void {\n        if (with_comments) {\n            this.comment_capture_button.classList.remove('dplayer-capturing');\n        } else {\n            this.capture_button.classList.remove('dplayer-capturing');\n        }\n    }\n\n\n    /**\n     * DPlayer から取得したコメント HTML を SVG 画像の HTMLImageElement に変換する\n     * ZenzaWatch のコードを参考にしている\n     * ref: https://github.com/segabito/ZenzaWatch/blob/master/packages/lib/src/dom/VideoCaptureUtil.js\n     * ref: https://web.archive.org/web/2/https://developer.mozilla.org/ja/docs/Web/HTML/Canvas/Drawing_DOM_objects_into_a_canvas\n     * @param html DPlayer から取得したコメント HTML\n     * @param width SVG 画像の幅\n     * @param height SVG 画像の高さ\n     * @returns SVG 画像の HTMLImageElement\n     */\n    private async commentsHTMLtoSVGImage(html: string, width: number, height: number): Promise<HTMLImageElement> {\n\n        // SVG の foreignObject を使い、HTML をそのまま SVG に埋め込む\n        // SVG なので、CSS はインラインでないと適用されない…\n        // DPlayer の danmaku.scss の内容のうち、描画に必要なプロパティのみを列挙 (追加変更したものもある)\n        // ref: https://github.com/tsukumijima/DPlayer/blob/master/src/css/danmaku.scss\n        const svg = (`\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\">\n                <foreignObject width=\"100%\" height=\"100%\">\n                    <div xmlns=\"http://www.w3.org/1999/xhtml\">\n                        <style>\n                        .dplayer-danmaku {\n                            position: absolute;\n                            top: 0;\n                            left: 0;\n                            right: 0;\n                            bottom: 0;\n                            color: #fff;\n                            font-size: 29px;\n                            font-family: 'YakuHanJPs', 'Open Sans', 'Hiragino Sans', 'Noto Sans JP', sans-serif;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item {\n                            display: inline-block;\n                            line-height: 1;\n                            font-weight: bold;\n                            font-size: var(--dplayer-danmaku-font-size);\n                            opacity: var(--dplayer-danmaku-opacity);\n                            text-shadow: 1.2px 1.2px 4px rgba(0, 0, 0, 0.9);\n                            white-space: nowrap;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item--demo {\n                            position: absolute;\n                            visibility: hidden;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item span {\n                            box-decoration-break: clone;\n                            -webkit-box-decoration-break: clone;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item.dplayer-danmaku-size-big {\n                            font-size: calc(var(--dplayer-danmaku-font-size) * 1.25);\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item.dplayer-danmaku-size-small {\n                            font-size: calc(var(--dplayer-danmaku-font-size) * 0.8);\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-right {\n                            position: absolute;\n                            right: 0;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-top, .dplayer-danmaku .dplayer-danmaku-bottom {\n                            position: absolute;\n                            left: 50%;\n                            transform: translateX(-50%);\n                        }\n                        </style>\n                        ${html}\n                    </div>\n                </foreignObject>\n            </svg>\n        `).trim();\n\n        // Data URL 化して Image オブジェクトにする\n        // わざわざ Blob にするよりこっちのほうが楽\n        const image = new Image();\n        image.src = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(svg)}`;\n\n        // Image は onload を使わなくても await Image.decode() でロードできる\n        await image.decode();\n        return image;\n    }\n\n\n    /**\n     * DPlayer から表示中のコメントを取得し、SVG 画像の HTMLImageElement を作成する\n     * @returns 表示されているコメントが描画された HTMLImageElement\n     */\n    private async createCommentsImage(): Promise<HTMLImageElement> {\n\n        // コメントが表示されている要素の HTML を取得する\n        let comments_html = this.player.template.danmaku.outerHTML;\n\n        // HTML を取得するだけではスクロール中コメントの表示位置が特定できないため、HTML を修正する\n        for (const comment of this.player_container.querySelectorAll('.dplayer-danmaku-move')) { // コメントの数だけ置換\n            // スクロール中のコメントの表示座標を計算\n            const position = comment.getBoundingClientRect().left - this.player.video.getBoundingClientRect().left;\n            comments_html = comments_html.replace(/transform: translateX\\(.*?\\);/, `left: ${position}px;`)\n                                            .replaceAll('border: 2px solid #E64F97;', '');\n        }\n\n        // HTML を画像として取得\n        // SVG のサイズはコメントが表示されている要素に合わせる (そうしないとプレイヤー側と一致しない)\n        // SVG はベクター画像なので、リサイズしても画質が変わらないはず\n        return await this.commentsHTMLtoSVGImage(\n            comments_html,\n            this.player.template.danmaku.offsetWidth,\n            this.player.template.danmaku.offsetHeight,\n        );\n    }\n\n\n    /**\n     * 現在表示されているニコニコ実況のコメントを Canvas に描画する\n     */\n    private async drawComments(comments_image: HTMLImageElement): Promise<void> {\n\n        // コメント描画領域がコントロールの表示によりリサイズされている (=16:9でない) 場合も考慮して、コメント要素の offsetWidth から高さを求める\n        // 映像の横解像度 (ex: 1920) がコメント描画領域の幅 (ex: 1280) の何倍かの割合 (ex: 1.5 (150%))\n        const draw_scale_ratio = this.canvas.width / this.player.template.danmaku.offsetWidth;\n\n        // コメント描画領域の高さを映像の横解像度に合わせて（コメント描画領域のアスペクト比を維持したまま）拡大した値\n        // 映像の縦解像度が 1080 のとき、コントロールがコメント領域と被っていない or 表示されていないなら、この値は 1080 に近くなる\n        const draw_height = this.player.template.danmaku.offsetHeight * draw_scale_ratio;\n\n        this.canvas_context.drawImage(comments_image, 0, 0, this.canvas.width, draw_height);\n    }\n\n\n    /**\n     * Canvas もしくは OffscreenCanvas に描画されている画像を Blob に変換する\n     * JPEG 画像の品質は 99% にした方が若干 Blob 変換までの速度が速い (？)\n     * @param canvas Canvas もしくは OffscreenCanvas\n     * @returns Blob 化した画像\n     */\n    private async exportToBlob(canvas: HTMLCanvasElement | OffscreenCanvas): Promise<Blob> {\n        if ('OffscreenCanvas' in window && canvas instanceof OffscreenCanvas) {\n            return await canvas.convertToBlob({type: 'image/jpeg', quality: 0.99});\n        } else if (canvas instanceof HTMLCanvasElement) {\n            return new Promise((resolve, reject) => {\n                canvas.toBlob((blob) => {\n                    if (blob !== null) {\n                        resolve(blob);\n                    } else {\n                        reject(new Error('Failed to convert canvas to blob'));\n                    }\n                }, 'image/jpeg', 0.99);\n            });\n        }\n    }\n\n\n    /**\n     * キャプチャ画像に番組情報と撮影時刻、字幕やコメントが合成されているかどうかのメタデータ (EXIF) をセットする\n     * @param blob キャプチャ画像の Blob オブジェクト\n     * @param program EXIF にセットする番組情報オブジェクト\n     * @param caption_text 字幕のテキスト (キャプチャしたときに字幕が表示されていなければ null)\n     * @param is_caption_composited 字幕が合成されているか\n     * @param is_comment_composited コメントが合成されているか\n     * @returns EXIF が追加されたキャプチャ画像の Blob オブジェクト\n     */\n    private async setEXIFDataToCapture(\n        blob: Blob,\n        program: IProgram,\n        caption_text: string | null,\n        is_caption_composited: boolean,\n        is_comment_composited: boolean,\n    ): Promise<Blob> {\n\n        // 番組開始時刻換算のキャプチャ時刻 (秒)\n        const captured_playback_position = dayjs().diff(dayjs(program.start_time), 'second', true);\n\n        // EXIF の XPComment 領域に入れるメタデータの JSON オブジェクト\n        // 撮影時刻とチャンネル・番組を一意に特定できる情報を入れる\n        const json: ICaptureExifData = {\n            captured_at: dayjs().format('YYYY-MM-DDTHH:mm:ss+09:00'),  // ISO8601 フォーマットのキャプチャ時刻\n            captured_playback_position: captured_playback_position,  // 番組開始時刻換算のキャプチャ時刻 (秒)\n            network_id: program.network_id,    // 番組が放送されたチャンネルのネットワーク ID\n            service_id: program.service_id,    // 番組が放送されたチャンネルのサービス ID\n            event_id: program.event_id,        // 番組のイベント ID\n            title: program.title,              // 番組タイトル\n            description: program.description,  // 番組概要\n            start_time: program.start_time,    // 番組開始時刻 (ISO8601 フォーマット)\n            end_time: program.end_time,        // 番組終了時刻 (ISO8601 フォーマット)\n            duration: program.duration,        // 番組長 (秒)\n            caption_text: caption_text,        // 字幕のテキスト (キャプチャした瞬間に字幕が表示されていなかったときは null)\n            is_caption_composited: is_caption_composited,  // 字幕が合成されているか\n            is_comment_composited: is_comment_composited,  // コメントが合成されているか\n        }\n\n        // 保存する EXIF メタデータを構築\n        // ref: 「カメラアプリで体感するWeb App」4.2\n        const datetime = dayjs().format('YYYY:MM:DD HH:mm:ss');  // すべてコロンで区切るのがポイント\n        const exif: piexif.IExif = {\n            '0th': {\n                // 必須らしいプロパティ\n                // とりあえずデフォルト値 (?) を設定しておく\n                [piexif.TagValues.ImageIFD.XResolution]: [72, 1],\n                [piexif.TagValues.ImageIFD.YResolution]: [72, 1],\n                [piexif.TagValues.ImageIFD.ResolutionUnit]: 2,\n                [piexif.TagValues.ImageIFD.YCbCrPositioning]: 1,\n                // 撮影時刻\n                [piexif.TagValues.ImageIFD.DateTime]: datetime,\n                // ソフトウェア名\n                [piexif.TagValues.ImageIFD.Software]: `KonomiTV version ${Utils.version}`,\n                // Microsoft 拡張のコメント領域（エクスプローラーで出てくるコメント欄と同じもの）\n                // ref: https://stackoverflow.com/a/66186660/17124142\n                [piexif.TagValues.ImageIFD.XPComment]: [...Buffer.from(JSON.stringify(json), 'ucs2')],\n            },\n            'Exif': {\n                // 必須らしいプロパティ\n                // とりあえずデフォルト値 (?) を設定しておく\n                [piexif.TagValues.ExifIFD.ExifVersion]: '0230',\n                [piexif.TagValues.ExifIFD.ComponentsConfiguration]: '\\x01\\x02\\x03\\x00',\n                [piexif.TagValues.ExifIFD.FlashpixVersion]: '0100',\n                [piexif.TagValues.ExifIFD.ColorSpace]: 1,\n                // 撮影時刻\n                [piexif.TagValues.ExifIFD.DateTimeOriginal]: datetime,\n                [piexif.TagValues.ExifIFD.DateTimeDigitized]: datetime,\n            },\n        };\n        const exif_string = piexif.dump(exif);  // バイナリ文字列に変換した EXIF データ\n\n        // piexifjs はバイナリ文字列か DataURL しか受け付けないので、Blob をバイナリ文字列に変換\n        const blob_string: string = await new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result as string);\n            reader.onerror = reject;\n            reader.readAsBinaryString(blob);  // バイナリ文字列で読み込む\n        });\n\n        // 画像に EXIF を挿入\n        // 戻り値は EXIF が追加された画像のバイナリ文字列 (なぜ未だにバイナリ文字列で実装してるんだ…)\n        const blob_string_new = piexif.insert(exif_string, blob_string);\n\n        // 画像のバイナリ文字列を ArrayBuffer に変換\n        // ref: 「カメラアプリで体感するWeb App」4.2\n        const buffer = new Uint8Array(blob_string_new.length);\n        for (let index = 0; index < buffer.length; index++) {\n            buffer[index] = blob_string_new.charCodeAt(index) & 0xff;\n        }\n\n        // 新しい Blob を返す\n        return new Blob([buffer], {type: blob.type});\n    }\n\n\n    /**\n     * KonomiTV サーバーにキャプチャ画像をアップロードする関数\n     * @param blob キャプチャ画像の Blob\n     * @param filename サーバーに保存するときのファイル名\n     */\n    private async uploadCaptureToServer(blob: Blob, filename: string): Promise<void> {\n\n        // キャプチャ画像の File オブジェクト (= Blob) を FormData に入れる\n        // multipart/form-data で送るために必要\n        // ref: https://r17n.page/2020/02/04/nodejs-axios-file-upload-api/\n        const form_data = new FormData();\n        form_data.append('image', blob, filename);\n\n        // キャプチャ画像アップロード API にリクエスト\n        try {\n            await Vue.axios.post('/captures', form_data, {headers: {'Content-Type': 'multipart/form-data'}});\n        } catch (error) {\n            console.error(error);\n            this.player.notice('キャプチャのアップロードに失敗しました。');\n        }\n    }\n}\n","\n/**\n * プレイヤー周りのユーティリティ\n */\nexport class PlayerUtils {\n\n    /**\n     * プレイヤーの背景画像をランダムで取得し、その URL を返す\n     * @returns ランダムで設定されたプレイヤーの背景画像の URL\n     */\n    static generatePlayerBackgroundURL(): string {\n        const background_count = 12;  // 12種類から選択\n        const random = (Math.floor(Math.random() * background_count) + 1);\n        return `/assets/images/player-backgrounds/${random.toString().padStart(2, '0')}.jpg`;\n    }\n\n\n    /**\n     * 現在のブラウザで H.265 / HEVC 映像が再生できるかどうかを取得する\n     * ref: https://github.com/StaZhu/enable-chromium-hevc-hardware-decoding#mediacapabilities\n     * @returns 再生できるなら true、できないなら false\n     */\n    static isHEVCVideoSupported(): boolean {\n        // hvc1.1.6.L123.B0 の部分は呪文 (HEVC であることと、そのプロファイルを示す値らしい)\n        return document.createElement('video').canPlayType('video/mp4; codecs=\"hvc1.1.6.L123.B0\"') === 'probably';\n    }\n}\n","\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ja';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore'\n\nimport { IProgram } from '@/interface';\nimport Utils from './Utils';\n\n/**\n * 番組情報周りのユーティリティ\n */\nexport class ProgramUtils {\n\n    /**\n     * 番組情報中の[字]や[解]などの記号をいい感じに装飾する\n     * @param program 番組情報のオブジェクト\n     * @param key 番組情報のオブジェクトから取り出すプロパティのキー\n     * @returns 装飾した文字列\n     */\n    static decorateProgramInfo(program: IProgram | null, key: string): string {\n\n        // program が空でないかつ、program[key] が存在する\n        if (program !== null && program[key] !== null) {\n\n            // 番組情報に含まれる HTML の特殊文字で表示がバグらないように、事前に HTML エスケープしておく\n            const text = Utils.escapeHTML(program[key]);\n\n            // 本来 ARIB 外字である記号の一覧\n            // ref: https://ja.wikipedia.org/wiki/%E7%95%AA%E7%B5%84%E8%A1%A8\n            // ref: https://github.com/xtne6f/EDCB/blob/work-plus-s/EpgDataCap3/EpgDataCap3/ARIB8CharDecode.cpp#L1319\n            const mark = '新|終|再|交|映|手|声|多|副|字|文|CC|OP|二|S|B|SS|無|無料' +\n                'C|S1|S2|S3|MV|双|デ|D|N|W|P|H|HV|SD|天|解|料|前|後初|生|販|吹|PPV|' +\n                '演|移|他|収|・|英|韓|中|字/日|字/日英|3D|2K|4K|8K|5.1|7.1|22.2|60P|120P|d|HC|HDR|SHV|UHD|VOD|配|初';\n\n            // 正規表現を作成\n            const pattern1 = new RegExp(`\\\\((二|字|再)\\\\)`, 'g');  // 通常の括弧で囲まれている記号\n            const pattern2 = new RegExp(`\\\\[(${mark})\\\\]`, 'g');\n\n            // 正規表現で置換した結果を返す\n            return text.replace(pattern1, '<span class=\"decorate-symbol\">$1</span>')\n                       .replace(pattern2, '<span class=\"decorate-symbol\">$1</span>');\n\n        // 番組情報がない時間帯\n        } else {\n\n            dayjs.extend(isSameOrAfter);\n            dayjs.extend(isSameOrBefore);\n            dayjs.extend(isBetween);\n\n            // 23時～翌7時 (0:00 ~ 06:59 or 23:00 ~ 23:59) の間なら放送を休止している可能性が高いので、放送休止と表示する\n            const now = dayjs();\n            const pause_time_start = dayjs().hour(0).minute(0).second(0);\n            const pause_time_end = dayjs().hour(6).minute(59).second(59);\n            const pause_time_start_23 = dayjs().hour(23).minute(0).second(0);\n            const pause_time_end_23 = dayjs().hour(23).minute(59).second(59);\n            if ((now.isSameOrAfter(pause_time_start) && now.isSameOrBefore(pause_time_end)) ||\n                (now.isSameOrAfter(pause_time_start_23) && now.isSameOrBefore(pause_time_end_23))) {\n                if (key === 'title') {\n                    return '放送休止';  // タイトル\n                } else {\n                    return 'この時間は放送を休止しています。';  // 番組概要\n                }\n\n            // それ以外の時間帯では、「番組情報がありません」と表示する\n            // 急な番組変更の影響で、一時的にその時間帯に対応する番組情報が消えることがある\n            // 特に Mirakurun バックエンドでは高頻度で収集した EIT[p/f] が比較的すぐ反映されるため、この現象が起こりやすい\n            // 日中に放送休止（停波）になることはまずあり得ないので、番組情報が取得できてないだけで視聴できるかも？というニュアンスを与える\n            } else {\n                if (key === 'title') {\n                    return '番組情報がありません';  // タイトル\n                } else {\n                    return 'この時間の番組情報を取得できませんでした。';  // 番組概要\n                }\n            }\n        }\n    }\n\n\n    /**\n     * オブジェクトからプロパティを取得し、もしプロパティが存在しなければ代替値を返す\n     * @param items 対象のオブジェクト\n     * @param key オブジェクトから取り出すプロパティのキー\n     * @param default_value 取得できなかった際の代替値\n     * @returns オブジェクト取得した値 or 代替値\n     */\n    static getAttribute(items: {[key: string]: any}, key: string, default_value: any): any {\n\n        // items が空でないかつ、items[key] が存在する\n        if (items !== null && items[key] !== undefined && items[key] !== null) {\n\n            // items[key] の内容を返す\n            return items[key];\n\n        // 指定された代替値を返す\n        } else {\n            return default_value;\n        }\n    }\n\n\n    /**\n     * 番組の進捗状況を取得する\n     * @param program 番組情報\n     * @returns 番組の進捗状況（%単位）\n     */\n    static getProgramProgress(program: IProgram): number {\n\n        // program が空でない\n        if (program !== null) {\n\n            // 番組開始時刻から何秒進んだか\n            const progress = dayjs(dayjs()).diff(program.start_time, 'second');\n\n            // %単位の割合を算出して返す\n            return progress / program.duration * 100;\n\n        // 放送休止中\n        } else {\n            return 0;\n        }\n    }\n\n\n    /**\n     * 番組の放送時刻を取得する\n     * @param program 番組情報\n     * @param is_short 時刻のみ返すかどうか\n     * @returns 番組の放送時刻\n     */\n    static getProgramTime(program: IProgram, is_short: boolean = false): string {\n\n        // program が空でなく、かつ番組時刻が初期値でない\n        if (program !== null && program.start_time !== '2000-01-01T00:00:00+09:00') {\n\n            // dayjs で日付を扱いやすく\n            dayjs.locale('ja');  // ロケールを日本に設定\n            const start_time = dayjs(program.start_time);\n            const end_time = dayjs(program.end_time);\n            const duration = program.duration / 60;  // 分換算\n\n            // 時刻のみ返す\n            if (is_short === true) {  // 時刻のみ\n                return `${start_time.format('HH:mm')} ～ ${end_time.format('HH:mm')}`;\n            // 通常\n            } else {\n                return `${start_time.format('YYYY/MM/DD (dd) HH:mm')} ～ ${end_time.format('HH:mm')} (${duration}分)`;\n            }\n\n        // 放送休止中\n        } else {\n\n            // 時刻のみ返す\n            if (is_short === true) {\n                return '--:-- ～ --:--';\n            // 通常\n            } else {\n                return '----/--/-- (-) --:-- ～ --:-- (--分)';\n            }\n        }\n    }\n}\n","\n// 共通ユーティリティをデフォルトとしてインポート\nimport Utils from '@/utils/Utils';\nexport default Utils;\n\n// Utils フォルダ配下のユーティリティを一括でインポートできるように\nexport * from '@/utils/ChannelUtils';\nexport * from '@/utils/CommentUtils';\nexport * from '@/utils/PlayerCaptureHandler';\nexport * from '@/utils/PlayerUtils';\nexport * from '@/utils/ProgramUtils';\n","\nimport axios from 'axios';\n\nimport Utils from '@/utils';\n\n// ref: https://note.com/quoizunda/n/nb62e13e73499\n\n// Axios のインスタンスを作成\nconst axios_instance = axios.create();\n\n// HTTP リクエスト前に割り込んで行われる処理\naxios_instance.interceptors.request.use((config) => {\n\n    // API のベース URL を設定\n    // BaseURL が明示的に指定されているときは設定しない\n    if (config.baseURL === undefined) {\n        config.baseURL = Utils.api_base_url;\n    }\n\n    // アクセストークンが取得できたら（=ログインされていれば）\n    // 取得したアクセストークンを Authorization ヘッダーに Bearer トークンとしてセット\n    // これを忘れると（当然ながら）ログインしていない扱いになる\n    const access_token = Utils.getAccessToken();\n    if (access_token !== null) {\n        config.headers['Authorization'] = `Bearer ${access_token}`;\n    }\n\n    // KonomiTV クライアントのバージョンを設定\n    // 今のところ使わないが、将来的にクライアントとサーバーを分離することを見据えて念のため\n    config.headers['X-KonomiTV-Version'] = Utils.version;\n\n    return config;\n});\n\n// HTTP リクエスト後に割り込んで行われる処理\naxios_instance.interceptors.response.use(\n    (response) => response,\n    (error) => {\n\n        // 401 Unauthorized が返ってきたら、アクセストークンを削除してログアウト状態にする\n        // JWT の有効期限が切れたときに発生する\n        // アクセストークンが削除されていないと、余計なリクエストが発生してしまう\n        if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n            Utils.deleteAccessToken();\n        }\n    }\n);\n\n// ここで返したインスタンスを VueAxios (Vue.axios) に設定する\nexport default axios_instance;\n","\nimport Vue from 'vue';\nimport Vuetify from 'vuetify/lib/framework';\nimport { VSnackbar, VBtn, VIcon } from 'vuetify/lib';\n\nVue.use(Vuetify);\n\n// vuetify-message-snackbar を使うのに必要\nVue.component('v-snackbar', VSnackbar);\nVue.component('v-btn', VBtn);\nVue.component('v-icon', VIcon);\n\nexport default new Vuetify({\n    theme: {\n        dark: true,\n        themes: {\n            dark: {\n                primary: '#E64F97',\n                secondary: '#E33157',\n                twitter: {\n                    base: '#4F82E6',\n                    lighten1: '#799FEC',\n                    lighten2: '#41A5F1',\n                },\n                gray: '#66514C',\n                black: '#110A09',\n                background: {\n                    base: '#1E1310',\n                    lighten1: '#2F221F',\n                    lighten2: '#433532',\n                    lighten3: '#4c3c38',\n                },\n                text: {\n                    base: '#FFEAEA',\n                    darken1: '#D9C7C7',\n                    darken2: '#8E7F7E',\n                    darken3: '#786968',\n                }\n            }\n        },\n        options: {\n          customProperties: true,\n        },\n    },\n});\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"channels-container channels-container--home\",class:{'channels-container--loading': _vm.is_loading}},[_c('v-tabs-fix',{staticClass:\"channels-tab\",attrs:{\"centered\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channels_list)),function([channels_type,]){return _c('v-tab',{key:channels_type,staticClass:\"channels-tab__item\"},[_vm._v(_vm._s(channels_type))])}),1),_c('v-tabs-items-fix',{staticClass:\"channels-list\",model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channels_list)),function([channels_type, channels]){return _c('v-tab-item-fix',{key:channels_type,staticClass:\"channels-tabitem\"},[_c('div',{staticClass:\"channels\",class:`channels--tab-${channels_type} channels--length-${channels.length}`},[_vm._l((channels),function(channel){return _c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:channel.id,staticClass:\"channel\",attrs:{\"to\":`/tv/watch/${channel.channel_id}`}},[_c('div',{staticClass:\"channel__broadcaster\"},[_c('img',{staticClass:\"channel__broadcaster-icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${channel.channel_id}/logo`}}),_c('div',{staticClass:\"channel__broadcaster-content\"},[_c('span',{staticClass:\"channel__broadcaster-name\"},[_vm._v(\"Ch: \"+_vm._s(channel.channel_number)+\" \"+_vm._s(channel.channel_name))]),_c('div',{staticClass:\"channel__broadcaster-status\"},[_c('div',{staticClass:\"channel__broadcaster-status-force\",class:`channel__broadcaster-status-force--${_vm.ChannelUtils.getChannelForceType(channel.channel_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"12px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"勢い:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(_vm.ProgramUtils.getAttribute(channel, 'channel_force', '--')))]),_c('span',{staticStyle:{\"margin-left\":\"3px\"}},[_vm._v(\" コメ/分\")])],1),_c('div',{staticClass:\"channel__broadcaster-status-viewers ml-4\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:eye\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"視聴数:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(channel.viewers))])],1)])]),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip\",value:(_vm.isPinnedChannel(channel.channel_id) ? 'ピン留めを外す' : 'ピン留めする'),expression:\"isPinnedChannel(channel.channel_id) ? 'ピン留めを外す' : 'ピン留めする'\"}],staticClass:\"channel__broadcaster-pin\",class:{'channel__broadcaster-pin--pinned': _vm.isPinnedChannel(channel.channel_id)},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.isPinnedChannel(channel.channel_id) ? _vm.removePinnedChannel(channel.channel_id) : _vm.addPinnedChannel(channel.channel_id)},\"mousedown\":function($event){$event.preventDefault();$event.stopPropagation();/* 親要素の波紋が広がらないように */}}},[_c('Icon',{attrs:{\"icon\":\"fluent:pin-20-filled\",\"width\":\"24px\"}})],1)]),_c('div',{staticClass:\"channel__program-present\"},[_c('div',{staticClass:\"channel__program-present-title-wrapper\"},[_c('span',{staticClass:\"channel__program-present-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_present, 'title'))}}),_c('span',{staticClass:\"channel__program-present-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_present)))])]),_c('span',{staticClass:\"channel__program-present-description\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_present, 'description'))}})]),_c('v-spacer'),_c('div',{staticClass:\"channel__program-following\"},[_c('div',{staticClass:\"channel__program-following-title\"},[_c('span',{staticClass:\"channel__program-following-title-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"channel__program-following-title-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}}),_c('span',{staticClass:\"channel__program-following-title-text\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_following, 'title'))}})],1),_c('span',{staticClass:\"channel__program-following-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_following)))])]),_c('div',{staticClass:\"channel__progressbar\"},[_c('div',{staticClass:\"channel__progressbar-progress\",style:(`width:${_vm.ProgramUtils.getProgramProgress(channel.program_present)}%;`)})])],1)}),(channels_type === 'ピン留め' && channels.length === 0)?_c('div',{staticClass:\"pinned-container d-flex justify-center align-center w-100\"},[_c('div',{staticClass:\"d-flex justify-center align-center flex-column\"},[_c('h2',[_vm._v(\"ピン留めされているチャンネルが\"),_c('br'),_vm._v(\"ありません。\")]),_c('div',{staticClass:\"mt-4 text--text text--darken-1\"},[_vm._v(\"各チャンネルの \"),_c('Icon',{staticStyle:{\"position\":\"relative\",\"bottom\":\"-5px\"},attrs:{\"icon\":\"fluent:pin-20-filled\",\"width\":\"22px\"}}),_vm._v(\" アイコンから、よくみる\"),_c('br'),_vm._v(\"チャンネルをこのタブにピン留めできます。\")],1),_c('div',{staticClass:\"mt-2 text--text text--darken-1\"},[_vm._v(\"チャンネルをピン留めすると、\"),_c('br'),_vm._v(\"このタブが最初に表示されます。\")])])]):_vm._e()],2)])}),1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('header',{staticClass:\"header\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"konomitv-logo ml-3 ml-md-6\",attrs:{\"to\":\"/tv/\"}},[_c('img',{staticClass:\"konomitv-logo__image\",attrs:{\"src\":\"/assets/images/logo.svg\",\"height\":\"21\"}})]),_c('v-spacer')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./Header.vue?vue&type=template&id=84897154&scoped=true&\"\nvar script = {}\nimport style0 from \"./Header.vue?vue&type=style&index=0&id=84897154&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"84897154\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_c('div',{staticClass:\"navigation-container elevation-8\"},[_c('nav',{staticClass:\"navigation\"},[_c('div',{staticClass:\"navigation-scroll\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/tv/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"テレビをみる\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/videos/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"ビデオをみる\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/timetable/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:calendar-ltr-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"番組表\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/captures/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:image-multiple-24-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"キャプチャ\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/watchlists/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"ic:round-playlist-play\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"ウォッチリスト\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/histories/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:history-16-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"視聴履歴\")])],1),_c('v-spacer'),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/settings/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"設定\")])],1),_c('a',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.top\",value:(_vm.is_update_available ? `アップデートがあります (version ${_vm.latest_version})` : ''),expression:\"is_update_available ? `アップデートがあります (version ${latest_version})` : ''\",modifiers:{\"top\":true}}],staticClass:\"navigation__link\",class:{\n                        'navigation__link--version': _vm.Utils.version.includes('-dev'),\n                        'navigation__link--highlight': _vm.is_update_available,\n                    },attrs:{\"active-class\":\"navigation__link--active\",\"href\":\"https://github.com/tsukumijima/KonomiTV\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:info-16-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"version \"+_vm._s(_vm.Utils.version))])],1)],1)])]),_c('BottomNavigation')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-bottom-navigation',{staticClass:\"bottom-navigation-container elevation-12\",attrs:{\"color\":\"primary\",\"grow\":\"\"}},[_c('v-btn',{staticClass:\"bottom-navigation-button\",attrs:{\"to\":\"/tv/\"}},[_c('span',{staticClass:\"mt-1\"},[_vm._v(\"テレビをみる\")]),_c('Icon',{attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"30px\"}})],1),_c('v-btn',{staticClass:\"bottom-navigation-button\",attrs:{\"to\":\"/videos/\"}},[_c('span',{staticClass:\"mt-1\"},[_vm._v(\"ビデオをみる\")]),_c('Icon',{attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"30px\"}})],1),_c('v-btn',{staticClass:\"bottom-navigation-button\",attrs:{\"to\":\"/settings/\"}},[_c('span',{staticClass:\"mt-1\"},[_vm._v(\"設定\")]),_c('Icon',{attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"30px\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./BottomNavigation.vue?vue&type=template&id=589d9d22&scoped=true&\"\nvar script = {}\nimport style0 from \"./BottomNavigation.vue?vue&type=style&index=0&id=589d9d22&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"589d9d22\",\n  null\n  \n)\n\nexport default component.exports","\n\nimport Vue from 'vue';\n\nimport { IVersionInformation } from '@/interface';\nimport BottomNavigation from '@/components/BottomNavigation.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Navigation',\n    components: {\n        BottomNavigation,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n\n            // 最新のバージョン\n            latest_version: null as string | null,\n\n            // アップデートが利用可能か\n            is_update_available: false as boolean,\n        }\n    },\n    async created() {\n        try {\n\n            // バージョン情報を取得\n            const version_info: IVersionInformation = (await Vue.axios.get(`/version`)).data;\n            this.latest_version = version_info.latest_version;\n\n            // 最新のサーバーバージョンが取得できなかった場合は中断\n            if (this.latest_version === null) {\n                return;\n            }\n\n            // もし現在のサーバーバージョン (-dev を除く) と最新のサーバーバージョンが異なるなら、アップデートが利用できる旨を表示する\n            // 現在のサーバーバージョンが -dev 付きで、かつ最新のサーバーバージョンが -dev なし の場合 (リリース版がリリースされたとき) も同様に表示する\n            // つまり開発版だと同じバージョンのリリース版がリリースされたときにしかアップデート通知が表示されない事になるが、ひとまずこれで…\n            if ((version_info.version.includes('-dev') === false && version_info.version !== version_info.latest_version) ||\n                (version_info.version.includes('-dev') === true && version_info.version.replace('-dev', '') === version_info.latest_version)) {\n                this.is_update_available = true;\n            }\n\n        } catch (error) {\n            throw new Error(error);  // エラー内容をコンソールに表示して終了\n        }\n    }\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Navigation.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Navigation.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Navigation.vue?vue&type=template&id=3ae08cea&scoped=true&\"\nimport script from \"./Navigation.vue?vue&type=script&lang=ts&\"\nexport * from \"./Navigation.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Navigation.vue?vue&type=style&index=0&id=3ae08cea&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3ae08cea\",\n  null\n  \n)\n\nexport default component.exports","\n\nimport Vue from 'vue';\n\nimport { ChannelTypePretty, IChannel } from '@/interface';\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport Utils, { ChannelUtils, ProgramUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'TV-Home',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            ChannelUtils: ChannelUtils,\n            ProgramUtils: ProgramUtils,\n\n            // タブの状態管理\n            tab: null as number | null,\n\n            // ローディング中かどうか\n            is_loading: true,\n\n            // インターバル ID\n            // ページ遷移時に setInterval(), setTimeout() の実行を止めるのに使う\n            // setInterval(), setTimeout() の返り値を登録する\n            interval_ids: [] as number[],\n\n            // チャンネル情報リスト\n            channels_list: new Map() as Map<ChannelTypePretty, IChannel[]>,\n\n            // ピン留めしているチャンネルの ID (ex: gr011) が入るリスト\n            pinned_channel_ids: [] as string[],\n        }\n    },\n    // 開始時に実行\n    created() {\n\n        // チャンネル情報を取得\n        this.update();\n\n        // 00秒までの残り秒数\n        // 現在 16:01:34 なら 26 (秒) になる\n        const residue_second = 60 - (Math.floor(new Date().getTime() / 1000) % 60);\n\n        // 00秒になるまで待ってから\n        // 番組は基本1分単位で組まれているため、20秒や45秒など中途半端な秒数で更新してしまうと反映が遅れてしまう\n        this.interval_ids.push(window.setTimeout(() => {\n\n            // チャンネル情報を更新\n            this.update();\n\n            // チャンネル情報を定期的に更新\n            this.interval_ids.push(window.setInterval(() => {\n                this.update();\n            }, 30 * 1000));  // 30秒おき\n\n        }, residue_second * 1000));\n    },\n    // 終了前に実行\n    beforeDestroy() {\n\n        // clearInterval() ですべての setInterval(), setTimeout() の実行を止める\n        // clearInterval() と clearTimeout() は中身共通なので問題ない\n        for (const interval_id of this.interval_ids) {\n            window.clearInterval(interval_id);\n        }\n    },\n    methods: {\n\n        // チャンネル情報一覧を取得し、画面を更新する\n        async update() {\n\n            // チャンネル情報一覧 API にアクセス\n            let channels_response;\n            try {\n                channels_response = await Vue.axios.get('/channels');\n            } catch (error) {\n                console.error(error);   // エラー内容を表示\n                return;\n            }\n\n            // is_display が true のチャンネルのみに絞り込むフィルタ関数\n            // 放送していないサブチャンネルを表示から除外する\n            const filter = (channel: IChannel) => {\n                return channel.is_display;\n            }\n\n            // チャンネルリストを再構築\n            // 1つでもチャンネルが存在するチャンネルタイプのみ表示するように\n            // たとえば SKY (スカパー！プレミアムサービス) のタブは SKY に属すチャンネルが1つもない（=受信できない）なら表示されない\n            this.channels_list = new Map();\n            if (channels_response.data.GR.length > 0) this.channels_list.set('地デジ', channels_response.data.GR.filter(filter));\n            if (channels_response.data.BS.length > 0) this.channels_list.set('BS', channels_response.data.BS.filter(filter));\n            if (channels_response.data.CS.length > 0) this.channels_list.set('CS', channels_response.data.CS.filter(filter));\n            if (channels_response.data.CATV.length > 0) this.channels_list.set('CATV', channels_response.data.CATV.filter(filter));\n            if (channels_response.data.SKY.length > 0) this.channels_list.set('SKY', channels_response.data.SKY.filter(filter));\n            if (channels_response.data.STARDIGIO.length > 0) this.channels_list.set('StarDigio', channels_response.data.STARDIGIO.filter(filter));\n\n            // ピン留めされているチャンネルのリストを更新\n            this.updatePinnedChannelList(this.is_loading ? true : false);\n\n            // ローディング状態を解除\n            this.is_loading = false;\n        },\n\n        // チャンネルをピン留めする\n        addPinnedChannel(channel_id: string) {\n\n            // 現在ピン留めされているチャンネルを取得\n            this.pinned_channel_ids = Utils.getSettingsItem('pinned_channel_ids');\n\n            // ピン留めするチャンネルの ID を追加\n            this.pinned_channel_ids.push(channel_id);\n\n            // 設定を保存\n            Utils.setSettingsItem('pinned_channel_ids', this.pinned_channel_ids);\n\n            // ピン留めされているチャンネルのリストを更新\n            this.updatePinnedChannelList();\n        },\n\n        // チャンネルをピン留めから外す\n        removePinnedChannel(channel_id: string) {\n\n            // 現在ピン留めされているチャンネルを取得\n            this.pinned_channel_ids = Utils.getSettingsItem('pinned_channel_ids');\n\n            // ピン留めを外すチャンネルの ID を削除\n            this.pinned_channel_ids.splice(this.pinned_channel_ids.indexOf(channel_id), 1);\n\n            // 設定を保存\n            Utils.setSettingsItem('pinned_channel_ids', this.pinned_channel_ids);\n\n            // ピン留めされているチャンネルのリストを更新\n            this.updatePinnedChannelList();\n        },\n\n        // ピン留めされているチャンネルのリストを更新する\n        updatePinnedChannelList(is_update_tab: boolean = true) {\n\n            // ピン留めされているチャンネルの ID を取得\n            this.pinned_channel_ids = Utils.getSettingsItem('pinned_channel_ids');\n\n            // ピン留めされているチャンネル情報のリスト\n            const pinned_channels = [] as IChannel[];\n\n            // チャンネル ID が一致したチャンネルの情報を保存する\n            for (const pinned_channel_id of this.pinned_channel_ids) {\n                const pinned_channel_type = ChannelUtils.getChannelType(pinned_channel_id, true) as ChannelTypePretty;\n                const pinned_channel = this.channels_list.get(pinned_channel_type).find((channel) => {\n                    return channel.channel_id === pinned_channel_id;  // チャンネル ID がピン留めされているチャンネルのものと同じ\n                });\n                // チャンネル情報を取得できているときだけ\n                // サブチャンネルをピン留めしたが、マルチ編成が終了して現在は放送していない場合などに備える (BS142 など)\n                // 現在放送していないチャンネルは this.channels_list に入れた段階で弾いているため、チャンネル情報を取得できない\n                if (pinned_channel !== undefined) {\n                    pinned_channels.push(pinned_channel);\n                }\n            }\n\n            if (!this.channels_list.has('ピン留め')) {\n                // タブの一番左にピン留めタブを表示する\n                this.channels_list = new Map([['ピン留め', pinned_channels], ...this.channels_list]);\n            } else {\n                // 既に存在するピン留めタブにチャンネル情報を設定する\n                this.channels_list.set('ピン留め', pinned_channels);\n            }\n\n            // pinned_channels が空の場合は、タブを地デジタブに変更\n            // ピン留めができる事を示唆するためにピン留めタブ自体は残す\n            if (pinned_channels.length === 0 && is_update_tab === true) {\n                this.tab = 1;\n            }\n        },\n\n        // チャンネルがピン留めされているか\n        isPinnedChannel(channel_id: string): boolean {\n\n            // 引数のチャンネルがピン留めリストに存在するかを返す\n            return this.pinned_channel_ids.includes(channel_id);\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=fb5650b8&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=ts&\"\nexport * from \"./Home.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=fb5650b8&prod&lang=scss&\"\nimport style1 from \"./Home.vue?vue&type=style&index=1&id=fb5650b8&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fb5650b8\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('main',{staticClass:\"watch-container\",class:{\n            'watch-container--control-display': _vm.is_control_display,\n            'watch-container--panel-display': _vm.Utils.isSmartphoneVertical() ? true : _vm.is_panel_display,\n            'watch-container--fullscreen': _vm.is_fullscreen,\n        }},[_c('nav',{staticClass:\"watch-navigation\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event)},\"click\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"watch-navigation__icon\",attrs:{\"to\":\"/tv/\"}},[_c('img',{staticClass:\"watch-navigation__icon-image\",attrs:{\"src\":\"/assets/images/icon.svg\",\"width\":\"23px\"}})]),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('テレビをみる'),expression:\"'テレビをみる'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/tv/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('ビデオをみる'),expression:\"'ビデオをみる'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/videos/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('番組表'),expression:\"'番組表'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/timetable/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:calendar-ltr-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('キャプチャ'),expression:\"'キャプチャ'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/captures/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:image-multiple-24-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('ウォッチリスト'),expression:\"'ウォッチリスト'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/watchlists/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"ic:round-playlist-play\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('視聴履歴'),expression:\"'視聴履歴'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/histories/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:history-16-regular\",\"width\":\"26px\"}})],1),_c('v-spacer'),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('設定'),expression:\"'設定'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/settings/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"26px\"}})],1),_c('a',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:(`version ${_vm.Utils.version}`),expression:\"`version ${Utils.version}`\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"href\":\"https://github.com/tsukumijima/KonomiTV\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:info-16-regular\",\"width\":\"26px\"}})],1)],1),_c('div',{staticClass:\"watch-content\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event, true)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event, true)},\"click\":function($event){return _vm.controlDisplayTimer($event, true)}}},[_c('header',{staticClass:\"watch-header\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"watch-header__back-icon\",attrs:{\"to\":\"/tv/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('img',{staticClass:\"watch-header__broadcaster\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.$route.params.channel_id)}/logo`}}),_c('span',{staticClass:\"watch-header__program-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channel.program_present, 'title'))}}),_c('span',{staticClass:\"watch-header__program-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(_vm.channel.program_present, true)))]),_c('v-spacer'),_c('span',{staticClass:\"watch-header__now\"},[_vm._v(_vm._s(_vm.time))])],1),_c('div',{staticClass:\"watch-player\",class:{\n                'watch-player--loading': _vm.is_loading,\n                'watch-player--virtual-keyboard-display': _vm.is_virtual_keyboard_display && _vm.Utils.hasActiveElementClass('dplayer-comment-input'),\n            }},[_c('div',{staticClass:\"watch-player__background\",class:{'watch-player__background--display': _vm.is_background_display},style:({backgroundImage: `url(${_vm.background_url})`})},[_c('img',{staticClass:\"watch-player__background-logo\",attrs:{\"src\":\"/assets/images/logo.svg\"}})]),_c('v-progress-circular',{staticClass:\"watch-player__buffering\",class:{'watch-player__buffering--display': _vm.is_video_buffering && (_vm.is_loading || (_vm.player !== null && !_vm.player.video.paused))},attrs:{\"indeterminate\":\"\",\"size\":\"60\",\"width\":\"6\"}}),_c('div',{staticClass:\"watch-player__dplayer\"}),_c('div',{staticClass:\"watch-player__button\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event)},\"click\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.top\",value:('前のチャンネル'),expression:\"'前のチャンネル'\",modifiers:{\"top\":true}}],staticClass:\"switch-button switch-button-up\",on:{\"click\":function($event){_vm.is_zapping = true; _vm.$router.push({path: `/tv/watch/${_vm.channel_previous.channel_id}`})}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:ios-arrow-left-24-filled\",\"width\":\"32px\",\"rotate\":\"1\"}})],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"switch-button switch-button-panel switch-button-panel--open\",on:{\"click\":function($event){_vm.is_panel_display = !_vm.is_panel_display}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:navigation-16-filled\",\"width\":\"32px\"}})],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.bottom\",value:('次のチャンネル'),expression:\"'次のチャンネル'\",modifiers:{\"bottom\":true}}],staticClass:\"switch-button switch-button-down\",on:{\"click\":function($event){_vm.is_zapping = true; _vm.$router.push({path: `/tv/watch/${_vm.channel_next.channel_id}`})}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:ios-arrow-right-24-filled\",\"width\":\"33px\",\"rotate\":\"1\"}})],1)])],1)]),_c('div',{staticClass:\"watch-panel\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('div',{staticClass:\"watch-panel__header\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-close-button\",on:{\"click\":function($event){_vm.is_panel_display = false}}},[_c('Icon',{staticClass:\"panel-close-button__icon\",attrs:{\"icon\":\"akar-icons:chevron-right\",\"width\":\"25px\"}}),_c('span',{staticClass:\"panel-close-button__text\"},[_vm._v(\"閉じる\")])],1),_c('v-spacer'),_c('div',{staticClass:\"panel-broadcaster\"},[_c('img',{staticClass:\"panel-broadcaster__icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.$route.params.channel_id)}/logo`}}),_c('div',{staticClass:\"panel-broadcaster__number\"},[_vm._v(_vm._s(_vm.channel.channel_number))]),_c('div',{staticClass:\"panel-broadcaster__name\"},[_vm._v(_vm._s(_vm.channel.channel_name))])])],1),_c('div',{staticClass:\"watch-panel__content-container\"},[_c('Program',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Program'},attrs:{\"channel\":_vm.channel}}),_c('Channel',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Channel'},attrs:{\"channels_list\":_vm.channels_list}}),_c('Comment',{ref:\"Comment\",staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Comment'},attrs:{\"channel\":_vm.channel,\"player\":_vm.player}}),_c('Twitter',{ref:\"Twitter\",staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Twitter'},attrs:{\"channel\":_vm.channel,\"player\":_vm.player,\"is_virtual_keyboard_display\":_vm.is_virtual_keyboard_display},on:{\"panel_folding_requested\":function($event){_vm.is_panel_display = false}}})],1),_c('div',{staticClass:\"watch-panel__navigation\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Program'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Program'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-solid:info-circle\",\"width\":\"33px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"番組情報\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Channel'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Channel'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-solid:broadcast-tower\",\"width\":\"34px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"チャンネル\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Comment'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Comment'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"29px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"コメント\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Twitter'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Twitter'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"34px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"Twitter\")])],1)])])]),_c('v-dialog',{attrs:{\"max-width\":\"1000\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.shortcut_key_modal),callback:function ($$v) {_vm.shortcut_key_modal=$$v},expression:\"shortcut_key_modal\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"px-5 pt-4 pb-3 d-flex align-center font-weight-bold\"},[_c('Icon',{attrs:{\"icon\":\"fluent:keyboard-20-filled\",\"height\":\"28px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"キーボードショートカット\")]),_c('v-spacer'),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"d-flex align-center rounded-circle cursor-pointer px-2 py-2\",on:{\"click\":function($event){_vm.shortcut_key_modal = false}}},[_c('Icon',{attrs:{\"icon\":\"fluent:dismiss-12-filled\",\"width\":\"23px\",\"height\":\"23px\"}})],1)],1),_c('div',{staticClass:\"px-5 pb-4\"},[_c('v-row',_vm._l((_vm.shortcut_key_list),function(shortcut_key_column,shortcut_key_column_name){return _c('v-col',{key:shortcut_key_column_name,attrs:{\"cols\":\"6\"}},_vm._l((shortcut_key_column),function(shortcut_keys){return _c('div',{key:shortcut_keys.name,staticClass:\"mt-3\"},[_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold\"},[_c('Icon',{attrs:{\"icon\":shortcut_keys.icon,\"height\":shortcut_keys.icon_height}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(_vm._s(shortcut_keys.name))])],1),_vm._l((shortcut_keys.shortcuts),function(shortcut){return _c('div',{key:shortcut.name,staticClass:\"mt-3\"},[_c('div',{staticClass:\"text-subtitle-2 mt-2 d-flex align-center font-weight-medium\"},[_c('span',{staticClass:\"mr-2\",domProps:{\"innerHTML\":_vm._s(shortcut.name)}}),_c('div',{staticClass:\"ml-auto d-flex align-center flex-shrink-0\"},_vm._l((shortcut.keys),function(key,index){return _c('div',{key:key.name,staticClass:\"ml-auto d-flex align-center\"},[_c('span',{staticClass:\"shortcut-key\"},[_vm._l((key.name.split(';')),function(key_name){return _c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(key.icon === true),expression:\"key.icon === true\"}],key:key_name,attrs:{\"icon\":key_name,\"height\":\"18px\"}})}),(key.icon === false)?_c('span',{domProps:{\"innerHTML\":_vm._s(key.name)}}):_vm._e()],2),(index < (shortcut.keys.length - 1))?_c('span',{staticClass:\"shortcut-key-plus\"},[_vm._v(\"+\")]):_vm._e()])}),0)])])})],2)}),0)}),1)],1)],1)],1),_c('BottomNavigation')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n// 番組情報を表すインターフェイス\nexport interface IProgram {\n    id: string;\n    network_id: number;\n    service_id: number;\n    event_id: number;\n    channel_id: string;\n    title: string;\n    description: string;\n    detail: {[key: string]: string};\n    start_time: string;\n    end_time: string;\n    duration: number;\n    is_free: boolean;\n    genre: {major: string; middle: string}[];\n    video_type: string;\n    video_codec: string;\n    video_resolution: string;\n    primary_audio_type: string;\n    primary_audio_language: string;\n    primary_audio_sampling_rate: string;\n    secondary_audio_type: string | null;\n    secondary_audio_language: string | null;\n    secondary_audio_sampling_rate: string | null;\n}\n\n// 番組情報を表すインターフェイスのデフォルト値\nexport const IProgramDefault: IProgram = {\n    id: 'NID0-SID0',\n    network_id: 0,\n    service_id: 0,\n    event_id: 0,\n    channel_id: 'gr000',\n    title: '取得中…',\n    description: '取得中…',\n    detail: {},\n    start_time: '2000-01-01T00:00:00+09:00',\n    end_time: '2000-01-01T00:00:00+09:00',\n    duration: 0,\n    is_free: true,\n    genre: [],\n    video_type: '映像1080i(1125i)、アスペクト比16:9 パンベクトルなし',\n    video_codec: 'mpeg2',\n    video_resolution: '1080i',\n    primary_audio_type: '2/0モード(ステレオ)',\n    primary_audio_language: '日本語',\n    primary_audio_sampling_rate: '48kHz',\n    secondary_audio_type: null,\n    secondary_audio_language: null,\n    secondary_audio_sampling_rate: null,\n}\n\n// チャンネルタイプの型\nexport type ChannelType = 'GR' | 'BS' | 'CS' | 'CATV' | 'SKY' | 'STARDIGIO';\n\n// チャンネルタイプの型 (実際のチャンネルリストに表示される表現)\nexport type ChannelTypePretty = 'ピン留め' | '地デジ' | 'BS' | 'CS' | 'CATV' | 'SKY' | 'StarDigio';\n\n// チャンネル情報を表すインターフェイス\nexport interface IChannel {\n    id: string;\n    network_id: number;\n    service_id: number;\n    transport_stream_id: number | null;\n    remocon_id: number | null;\n    channel_id: string;\n    channel_number: string;\n    channel_name: string;\n    channel_type: ChannelType;\n    channel_force: number | null;\n    channel_comment: number | null;\n    is_subchannel: boolean;\n    is_radiochannel: boolean;\n    is_display: boolean;\n    viewers: number;\n    program_present: IProgram;\n    program_following: IProgram;\n}\n\n// チャンネル情報を表すインターフェイスのデフォルト値\nexport const IChannelDefault: IChannel = {\n    id: 'NID0-SID0',\n    network_id: 0,\n    service_id: 0,\n    transport_stream_id: null,\n    remocon_id: null,\n    channel_id: 'gr000',\n    channel_number: '---',\n    channel_name: '取得中…',\n    channel_type: 'GR',\n    channel_force: null,\n    channel_comment: null,\n    is_subchannel: false,\n    is_radiochannel: false,\n    is_display: true,\n    viewers: 0,\n    program_present: IProgramDefault,\n    program_following: IProgramDefault,\n}\n\n// ユーザーアカウントに紐づく Twitter アカウントの情報を表すインターフェイス\nexport interface ITwitterAccount {\n    id: number;\n    name: string;\n    screen_name: string;\n    icon_url: string;\n    created_at: string;\n    updated_at: string;\n}\n\n// ユーザーアカウントの情報を表すインターフェイス\nexport interface IUser {\n    id: number;\n    name: string;\n    is_admin: boolean;\n    niconico_user_id: number | null;\n    niconico_user_name: string | null;\n    niconico_user_premium: boolean | null;\n    twitter_accounts: ITwitterAccount[];\n    created_at: string;\n    updated_at: string;\n}\n\n// バージョン情報を表すインターフェイス\nexport interface IVersionInformation {\n    version: string;\n    latest_version: string;\n    environment: 'Windows' | 'Linux' | 'Linux-Docker';\n    backend: 'EDCB' | 'Mirakurun';\n    encoder: 'FFmpeg' | 'QSVEncC' | 'NVEncC' | 'VCEEncC';\n}\n\n// キャプチャに書き込む EXIF メタデータのインターフェイス\nexport interface ICaptureExifData {\n    captured_at: string;\n    captured_playback_position: number;\n    network_id: number;\n    service_id: number;\n    event_id: number;\n    title: string;\n    description: string;\n    start_time: string;\n    end_time: string;\n    duration: number;\n    caption_text: string | null;\n    is_caption_composited: boolean;\n    is_comment_composited: boolean;\n}\n\n// ミュート対象のコメントのキーワードのインターフェイス\nexport interface IMutedCommentKeywords {\n    match: 'partial' | 'forward' | 'backward' | 'exact' | 'regex';\n    pattern: string;\n}\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"channels-container channels-container--watch\"},[_c('v-tabs-fix',{staticClass:\"channels-tab\",attrs:{\"centered\":\"\",\"show-arrows\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channels_list)),function([channels_type,]){return _c('v-tab',{key:channels_type,staticClass:\"channels-tab__item\"},[_vm._v(\" \"+_vm._s(channels_type)+\" \")])}),1),_c('div',{staticClass:\"channels-list-container\"},[_c('v-tabs-items-fix',{staticClass:\"channels-list\",model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channels_list)),function([channels_type, channels]){return _c('v-tab-item-fix',{key:channels_type,staticClass:\"channels\"},_vm._l((channels),function(channel){return _c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:channel.id,staticClass:\"channel\",attrs:{\"to\":`/tv/watch/${channel.channel_id}`}},[_c('div',{staticClass:\"channel__broadcaster\"},[_c('img',{staticClass:\"channel__broadcaster-icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${channel.channel_id}/logo`}}),_c('div',{staticClass:\"channel__broadcaster-content\"},[_c('span',{staticClass:\"channel__broadcaster-name\"},[_vm._v(\"Ch: \"+_vm._s(channel.channel_number)+\" \"+_vm._s(channel.channel_name))]),_c('div',{staticClass:\"channel__broadcaster-force\",class:`channel__broadcaster-force--${_vm.ChannelUtils.getChannelForceType(channel.channel_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"11px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(_vm.ProgramUtils.getAttribute(channel, 'channel_force', '-')))])],1)])]),_c('div',{staticClass:\"channel__program-present\"},[_c('span',{staticClass:\"channel__program-present-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_present, 'title'))}}),_c('span',{staticClass:\"channel__program-present-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_present)))])]),_c('div',{staticClass:\"channel__program-following\"},[_c('div',{staticClass:\"channel__program-following-title\"},[_c('span',{staticClass:\"channel__program-following-title-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"channel__program-following-title-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}}),_c('span',{staticClass:\"channel__program-following-title-text\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_following, 'title'))}})],1),_c('span',{staticClass:\"channel__program-following-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_following)))])]),_c('div',{staticClass:\"channel__progressbar\"},[_c('div',{staticClass:\"channel__progressbar-progress\",style:(`width:${_vm.ProgramUtils.getProgramProgress(channel.program_present)}%;`)})])])}),1)}),1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue, { PropType } from 'vue';\n\nimport { ChannelTypePretty, IChannel } from '@/interface';\nimport Utils, { ChannelUtils, ProgramUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'Panel-ChannelTab',\n    props: {\n        // チャンネル情報リスト\n        channels_list: {\n            type: Map as PropType<Map<ChannelTypePretty, IChannel[]>>,\n            required: true,\n        }\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            ChannelUtils: ChannelUtils,\n            ProgramUtils: ProgramUtils,\n\n            // タブの状態管理\n            tab: null,\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Channel.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Channel.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Channel.vue?vue&type=template&id=27eb338c&scoped=true&\"\nimport script from \"./Channel.vue?vue&type=script&lang=ts&\"\nexport * from \"./Channel.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Channel.vue?vue&type=style&index=0&id=27eb338c&prod&lang=scss&\"\nimport style1 from \"./Channel.vue?vue&type=style&index=1&id=27eb338c&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"27eb338c\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"comment-container\"},[_c('section',{staticClass:\"comment-header\"},[_c('h2',{staticClass:\"comment-header__title\"},[_c('Icon',{staticClass:\"comment-header__title-icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"height\":\"18.5px\"}}),_c('span',{staticClass:\"comment-header__title-text\"},[_vm._v(\"コメント\")])],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"comment-header__button ml-auto\",on:{\"click\":function($event){_vm.comment_mute_settings_modal = !_vm.comment_mute_settings_modal}}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"11px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ミュート設定\")])],1)]),_c('section',{ref:\"comment_list_wrapper\",staticClass:\"comment-list-wrapper\"},[_c('div',{staticClass:\"comment-list-dropdown\",class:{'comment-list-dropdown--display': _vm.is_comment_list_dropdown_display},style:({'--comment-list-dropdown-top': `${_vm.comment_list_dropdown_top}px`})},[_c('v-list',{staticStyle:{\"background\":\"var(--v-background-lighten1)\"}},[_c('v-list-item',{staticStyle:{\"min-height\":\"30px\"},attrs:{\"dense\":\"\"},on:{\"click\":function($event){_vm.CommentUtils.addMutedKeywords(_vm.comment_list_dropdown_comment.text); _vm.is_comment_list_dropdown_display = false}}},[_c('v-list-item-title',{staticClass:\"d-flex align-center\"},[_c('Icon',{attrs:{\"icon\":\"fluent:comment-dismiss-20-filled\",\"width\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"このコメントをミュート\")])],1)],1),_c('v-list-item',{staticStyle:{\"min-height\":\"30px\"},attrs:{\"dense\":\"\"},on:{\"click\":function($event){_vm.CommentUtils.addMutedNiconicoUserIDs(_vm.comment_list_dropdown_comment.user_id); _vm.is_comment_list_dropdown_display = false}}},[_c('v-list-item-title',{staticClass:\"d-flex align-center\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-prohibited-20-filled\",\"width\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"このコメントの投稿者をミュート\")])],1)],1)],1)],1),_c('div',{staticClass:\"comment-list-cover\",class:{'comment-list-cover--display': _vm.is_comment_list_dropdown_display},on:{\"click\":function($event){_vm.is_comment_list_dropdown_display = false}}}),_c('DynamicScroller',{staticClass:\"comment-list\",attrs:{\"direction\":'vertical',\"items\":_vm.comment_list,\"min-item-size\":34},scopedSlots:_vm._u([{key:\"default\",fn:function({item, active}){return [_c('DynamicScrollerItem',{attrs:{\"item\":item,\"active\":active,\"size-dependencies\":[item.text]}},[_c('div',{staticClass:\"comment\",class:{'comment--my-post': item.my_post}},[_c('span',{staticClass:\"comment__text\"},[_vm._v(_vm._s(item.text))]),_c('span',{staticClass:\"comment__time\"},[_vm._v(_vm._s(item.time))]),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\",value:(!_vm.Utils.isTouchDevice()),expression:\"!Utils.isTouchDevice()\"}],staticClass:\"comment__icon\",on:{\"mouseup\":function($event){return _vm.displayCommentListDropdown($event, item)},\"touchend\":function($event){return _vm.displayCommentListDropdown($event, item)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:more-vertical-20-filled\",\"width\":\"20px\"}})],1)])])]}}])}),(_vm.initialize_failed_message === null && _vm.comment_list.length === 0)?_c('div',{staticClass:\"comment-announce\"},[_c('div',{staticClass:\"comment-announce__heading\"},[_vm._v(\"まだコメントがありません。\")]),_vm._m(0)]):_vm._e(),(_vm.initialize_failed_message !== null && _vm.comment_list.length === 0)?_c('div',{staticClass:\"comment-announce\"},[_c('div',{staticClass:\"comment-announce__heading\"},[_vm._v(\"コメントがありません。\")]),_c('div',{staticClass:\"comment-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(_vm._s(_vm.initialize_failed_message))])])]):_vm._e()],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"comment-scroll-button elevation-5\",class:{'comment-scroll-button--display': _vm.is_manual_scroll},on:{\"click\":function($event){_vm.is_manual_scroll = false; _vm.scrollCommentList(true);}}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-down-12-filled\",\"height\":\"29px\"}})],1),_c('CommentMuteSettings',{model:{value:(_vm.comment_mute_settings_modal),callback:function ($$v) {_vm.comment_mute_settings_modal=$$v},expression:\"comment_mute_settings_modal\"}})],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"comment-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(\"このチャンネルに対応するニコニコ実況のコメントが、リアルタイムで表示されます。\")])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('v-dialog',{attrs:{\"max-width\":\"740\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.comment_mute_settings_modal),callback:function ($$v) {_vm.comment_mute_settings_modal=$$v},expression:\"comment_mute_settings_modal\"}},[_c('v-card',{staticClass:\"comment-mute-settings\"},[_c('v-card-title',{staticClass:\"px-5 pt-5 pb-3 d-flex align-center font-weight-bold\",staticStyle:{\"height\":\"60px\"}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"26px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"コメントのミュート設定\")]),_c('v-spacer'),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"d-flex align-center rounded-circle cursor-pointer px-2 py-2\",on:{\"click\":function($event){_vm.comment_mute_settings_modal = false}}},[_c('Icon',{attrs:{\"icon\":\"fluent:dismiss-12-filled\",\"width\":\"23px\",\"height\":\"23px\"}})],1)],1),_c('div',{staticClass:\"px-5 pb-5\"},[_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:comment-dismiss-20-filled\",\"width\":\"24px\"}}),_c('span',{staticClass:\"ml-2 mr-2\"},[_vm._v(\"ミュート済みのキーワード\")]),_c('v-btn',{staticClass:\"ml-auto\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){_vm.muted_comment_keywords.push({id: Date.now(), match: 'partial', pattern: ''})}}},[_c('Icon',{attrs:{\"icon\":\"fluent:add-12-filled\",\"height\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"追加\")])],1)],1),_c('div',{staticClass:\"muted-comment-items\"},_vm._l((_vm.muted_comment_keywords),function(muted_comment_keyword){return _c('div',{key:muted_comment_keyword.id,staticClass:\"muted-comment-item\"},[_c('v-text-field',{staticClass:\"muted-comment-item__input\",attrs:{\"type\":\"search\",\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"ミュートするキーワードを入力\"},model:{value:(muted_comment_keyword.pattern),callback:function ($$v) {_vm.$set(muted_comment_keyword, \"pattern\", $$v)},expression:\"muted_comment_keyword.pattern\"}}),_c('v-select',{staticClass:\"muted-comment-item__match-type\",attrs:{\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"items\":_vm.muted_comment_keyword_match_type},model:{value:(muted_comment_keyword.match),callback:function ($$v) {_vm.$set(muted_comment_keyword, \"match\", $$v)},expression:\"muted_comment_keyword.match\"}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"muted-comment-item__delete-button\",on:{\"click\":function($event){_vm.muted_comment_keywords.splice(_vm.muted_comment_keywords.indexOf(muted_comment_keyword), 1)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:delete-16-filled\",\"width\":\"20px\"}})],1)],1)}),0),_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-prohibited-20-filled\",\"width\":\"24px\"}}),_c('span',{staticClass:\"ml-2 mr-2\"},[_vm._v(\"ミュート済みのニコニコユーザー ID\")]),_c('v-btn',{staticClass:\"ml-auto\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){_vm.muted_niconico_user_ids.push({id: Date.now(), user_id: ''})}}},[_c('Icon',{attrs:{\"icon\":\"fluent:add-12-filled\",\"height\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"追加\")])],1)],1),_c('div',{staticClass:\"muted-comment-items\"},_vm._l((_vm.muted_niconico_user_ids),function(muted_niconico_user_id){return _c('div',{key:muted_niconico_user_id.id,staticClass:\"muted-comment-item\"},[_c('v-text-field',{staticClass:\"muted-comment-item__input\",attrs:{\"type\":\"search\",\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"ミュートするニコニコユーザー ID を入力\"},model:{value:(muted_niconico_user_id.user_id),callback:function ($$v) {_vm.$set(muted_niconico_user_id, \"user_id\", $$v)},expression:\"muted_niconico_user_id.user_id\"}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"muted-comment-item__delete-button\",on:{\"click\":function($event){_vm.muted_niconico_user_ids.splice(_vm.muted_niconico_user_ids.indexOf(muted_niconico_user_id), 1)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:delete-16-filled\",\"width\":\"20px\"}})],1)],1)}),0),_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"24px\",\"height\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"クイック設定\")])],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_vulgar_comments\"}},[_vm._v(\" 露骨な表現を含むコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_vulgar_comments\"}},[_vm._v(\" 性的な単語などの露骨・下品な表現を含むコメントを、一括でミュートするかを設定します。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_vulgar_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.mute_vulgar_comments),callback:function ($$v) {_vm.$set(_vm.settings, \"mute_vulgar_comments\", $$v)},expression:\"settings.mute_vulgar_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_abusive_discriminatory_prejudiced_comments\"}},[_vm._v(\" 罵倒や誹謗中傷、差別的な表現、政治的に偏った表現を含むコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_abusive_discriminatory_prejudiced_comments\"}},[_vm._v(\" 『死ね』『殺す』などの罵倒や誹謗中傷、特定の国や人々への差別的な表現、政治的に偏った表現を含むコメントを、一括でミュートするかを設定します。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_abusive_discriminatory_prejudiced_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.mute_abusive_discriminatory_prejudiced_comments),callback:function ($$v) {_vm.$set(_vm.settings, \"mute_abusive_discriminatory_prejudiced_comments\", $$v)},expression:\"settings.mute_abusive_discriminatory_prejudiced_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_big_size_comments\"}},[_vm._v(\" 文字サイズが大きいコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_big_size_comments\"}},[_vm._v(\" 通常より大きい文字サイズで表示されるコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" 文字サイズが大きいコメントには迷惑なコメントが多いです。基本的にはオンにしておくことをおすすめします。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_big_size_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.mute_big_size_comments),callback:function ($$v) {_vm.$set(_vm.settings, \"mute_big_size_comments\", $$v)},expression:\"settings.mute_big_size_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_fixed_comments\"}},[_vm._v(\" 映像の上下に固定表示されるコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_fixed_comments\"}},[_vm._v(\" 映像の上下に固定された状態で表示されるコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" 固定表示されるコメントが煩わしいと感じる方は、オンにしておくことをおすすめします。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_fixed_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.mute_fixed_comments),callback:function ($$v) {_vm.$set(_vm.settings, \"mute_fixed_comments\", $$v)},expression:\"settings.mute_fixed_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_colored_comments\"}},[_vm._v(\" 色付きのコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_colored_comments\"}},[_vm._v(\" 白以外の色で表示される色付きのコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" この設定をオンにしておくと、目立つ色のコメントを一掃できます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_colored_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.mute_colored_comments),callback:function ($$v) {_vm.$set(_vm.settings, \"mute_colored_comments\", $$v)},expression:\"settings.mute_colored_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_consecutive_same_characters_comments\"}},[_vm._v(\" 8文字以上同じ文字が連続しているコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_consecutive_same_characters_comments\"}},[_vm._v(\" 『wwwwwwwwwww』『あばばばばばばばばば』など、8文字以上同じ文字が連続しているコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" しばしばあるテンプレコメントが煩わしいと感じる方は、オンにしておくことをおすすめします。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_consecutive_same_characters_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.mute_consecutive_same_characters_comments),callback:function ($$v) {_vm.$set(_vm.settings, \"mute_consecutive_same_characters_comments\", $$v)},expression:\"settings.mute_consecutive_same_characters_comments\"}})],1)])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue, { PropType } from 'vue';\n\nimport { IMutedCommentKeywords } from '@/interface';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'CommentMuteSettings',\n    // カスタム v-model を実装する\n    // ref: https://jp.vuejs.org/v2/guide/components-custom-events.html\n    model: {\n        prop: 'showing',  // v-model で渡された値が \"showing\" props に入る\n        event: 'change'  // \"change\" イベントで親コンポーネントに反映\n    },\n    props: {\n        // コメントのミュート設定のモーダルを表示するか\n        showing: {\n            type: Boolean as PropType<Boolean>,\n            required: true,\n        }\n    },\n    data() {\n        return {\n\n            // インターバルのタイマー ID\n            interval_timer_id: 0,\n\n            // コメントのミュート設定のモーダルを表示するか\n            comment_mute_settings_modal: false,\n\n            // ミュート済みのキーワードが入るリスト\n            muted_comment_keywords: (Utils.getSettingsItem('muted_comment_keywords') as IMutedCommentKeywords[]).map((keyword, index) => {\n                // id プロパティは :key=\"\" に指定するためにつける ID (ミリ秒単位のタイムスタンプ + index で適当に一意になるように)\n                return {\n                    id: Date.now() + index,\n                    match: keyword.match as ('partial' | 'forward' | 'backward' | 'exact' | 'regex'),\n                    pattern: keyword.pattern as string,\n                };\n            }),\n\n            // ミュート済みのキーワードのマッチタイプ\n            muted_comment_keyword_match_type: [\n                {text: '部分一致', value: 'partial'},\n                {text: '前方一致', value: 'forward'},\n                {text: '後方一致', value: 'backward'},\n                {text: '完全一致', value: 'exact'},\n                {text: '正規表現', value: 'regex'},\n            ],\n\n            // ミュート済みのニコニコユーザー ID が入るリスト\n            muted_niconico_user_ids: (Utils.getSettingsItem('muted_niconico_user_ids') as string[]).map((user_id, index) => {\n                // id プロパティは :key=\"\" に指定するためにつける ID (ミリ秒単位のタイムスタンプ + index で適当に一意になるように)\n                return {\n                    id: Date.now() + index,\n                    user_id: user_id,\n                };\n            }),\n\n            // 設定値が保存されるオブジェクト\n            // ここの値とフォームを v-model で binding する\n            settings: (() => {\n                // 現在の設定値を取得する\n                const settings = {}\n                const setting_keys = [\n                    'mute_vulgar_comments',\n                    'mute_abusive_discriminatory_prejudiced_comments',\n                    'mute_big_size_comments',\n                    'mute_fixed_comments',\n                    'mute_colored_comments',\n                    'mute_consecutive_same_characters_comments',\n                ];\n                for (const setting_key of setting_keys) {\n                    settings[setting_key] = Utils.getSettingsItem(setting_key);\n                }\n                return settings;\n            })(),\n        }\n    },\n    created() {\n        // 1秒に1回、muted_comment_keywords と muted_niconico_user_ids の変更内容を同期する\n        // コメントリストからのミュート設定の変更を反映するために必要\n        this.interval_timer_id = window.setInterval(() => {\n            const new_muted_comment_keywords = Utils.getSettingsItem('muted_comment_keywords') as IMutedCommentKeywords[];\n            if (JSON.stringify(this.muted_comment_keywords) !== JSON.stringify(new_muted_comment_keywords)) {\n                this.muted_comment_keywords = (new_muted_comment_keywords).map((keyword, index) => {\n                    return {\n                        id: Date.now() + index,\n                        match: keyword.match as ('partial' | 'forward' | 'backward' | 'exact' | 'regex'),\n                        pattern: keyword.pattern as string,\n                    };\n                });\n            }\n            const new_muted_niconico_user_ids = Utils.getSettingsItem('muted_niconico_user_ids') as string[];\n            if (JSON.stringify(this.muted_niconico_user_ids.map((muted_niconico_user_id) => muted_niconico_user_id.user_id)) !==\n                JSON.stringify(new_muted_niconico_user_ids)) {\n                this.muted_niconico_user_ids = (new_muted_niconico_user_ids).map((user_id, index) => {\n                    return {\n                        id: Date.now() + index,\n                        user_id: user_id,\n                    };\n                });\n            }\n        }, 1000);\n    },\n    beforeDestroy() {\n        // インスタンスの破棄前にタイマーを解除する\n        window.clearInterval(this.interval_timer_id);\n    },\n    watch: {\n\n        // settings 内の値の変更を監視する\n        settings: {\n            deep: true,\n            handler() {\n                // settings 内の値を順に LocalStorage に保存する\n                for (const [setting_key, setting_value] of Object.entries(this.settings)) {\n                    Utils.setSettingsItem(setting_key, setting_value);\n                }\n            }\n        },\n\n        // ミュート済みのキーワードが変更されたら随時 LocalStorage に保存する\n        muted_comment_keywords: {\n            deep: true,\n            handler() {\n                Utils.setSettingsItem('muted_comment_keywords', this.muted_comment_keywords.map((muted_comment_keyword) => {\n                    delete muted_comment_keyword.id;\n                    return muted_comment_keyword;\n                }));\n            }\n        },\n\n        // ミュート済みのニコニコユーザー ID が変更されたら随時 LocalStorage に保存する\n        muted_niconico_user_ids: {\n            deep: true,\n            handler() {\n                Utils.setSettingsItem('muted_niconico_user_ids', this.muted_niconico_user_ids.map((muted_niconico_user_id) => {\n                    return muted_niconico_user_id.user_id;\n                }));\n            }\n        },\n\n        // showing (親コンポーネント側) の変更を監視し、変更されたら comment_mute_settings_modal に反映する\n        showing() {\n            this.comment_mute_settings_modal = this.showing as boolean;\n        },\n\n        // comment_mute_settings_modal (子コンポーネント側) の変更を監視し、変更されたら this.$emit() で親コンポーネントに伝える\n        comment_mute_settings_modal() {\n            this.$emit('change', this.comment_mute_settings_modal);\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommentMuteSettings.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommentMuteSettings.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CommentMuteSettings.vue?vue&type=template&id=00e207c6&scoped=true&\"\nimport script from \"./CommentMuteSettings.vue?vue&type=script&lang=ts&\"\nexport * from \"./CommentMuteSettings.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CommentMuteSettings.vue?vue&type=style&index=0&id=00e207c6&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"00e207c6\",\n  null\n  \n)\n\nexport default component.exports","\n\nimport { AxiosResponse } from 'axios';\nimport dayjs from 'dayjs';\nimport DPlayer from 'dplayer';\nimport * as DPlayerType from 'dplayer/dist/d.ts/types/DPlayer';\nimport Vue, { PropType } from 'vue';\n\nimport { IChannel, IUser } from '@/interface';\nimport CommentMuteSettings from '@/components/Settings/CommentMuteSettings.vue';\nimport Utils, { CommentUtils } from '@/utils';\n\n// このコンポーネント内でのコメントのインターフェイス\ninterface IComment {\n    id: number;\n    text: string;\n    time: string;\n    user_id: string;\n    my_post: boolean;\n}\n\nexport default Vue.extend({\n    name: 'Panel-CommentTab',\n    components: {\n        CommentMuteSettings,\n    },\n    props: {\n        // チャンネル情報\n        channel: {\n            type: Object as PropType<IChannel>,\n            required: true,\n        },\n        // プレイヤーのインスタンス\n        player: {\n            type: null as PropType<DPlayer>,  // 代入当初は null になるため苦肉の策\n            required: true,\n        }\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            CommentUtils: CommentUtils,\n\n            // 手動スクロール状態かどうか\n            is_manual_scroll: false,\n\n            // 自動スクロール中かどうか\n            // 自動スクロール中の場合、scroll イベントが発火しても無視する\n            is_auto_scrolling: false,\n\n            // ユーザーアカウントの情報\n            // ログインしていない場合は null になる\n            user: null as IUser | null,\n\n            // コメントリストの配列\n            comment_list: [] as IComment[],\n\n            // コメントリストの要素\n            comment_list_element: null as HTMLElement | null,\n\n            // コメントリストのドロップダウン関連\n            is_comment_list_dropdown_display: false as boolean,\n            comment_list_dropdown_top: 0 as number,\n            comment_list_dropdown_comment: null as IComment | null,\n\n            // 視聴セッションの WebSocket のインスタンス\n            watch_session: null as WebSocket | null,\n\n            // コメントセッションの WebSocket のインスタンス\n            comment_session: null as WebSocket | null,\n\n            // 視聴セッション・コメントセッションの初期化に失敗した際のエラーメッセージ\n            // 視聴中チャンネルのニコニコ実況がないときなどに発生する\n            initialize_failed_message: null as string | null,\n\n            // vpos を計算する基準となる時刻のタイムスタンプ\n            vpos_base_timestamp: 0,\n\n            // 座席維持用のタイマーのインターバル ID\n            keep_seat_interval_id: 0,\n\n            // ResizeObserver のインスタンス\n            resize_observer: null as ResizeObserver | null,\n\n            // ResizeObserver の監視対象の要素\n            resize_observer_element: null as HTMLElement | null,\n\n            // コメントのミュート設定のモーダルを表示するか\n            comment_mute_settings_modal: false,\n        }\n    },\n    async mounted() {\n\n        // コメントリストの要素を取得\n        if (this.comment_list_element === null) {\n            this.comment_list_element = this.$el.querySelector('.comment-list');\n        }\n\n        // 現在コメントリストがユーザーイベントでスクロールされているかどうか\n        let is_user_scrolling = false;\n\n        // mousedown → mouseup 中: スクロールバーをマウスでドラッグ\n        // 残念ながらスクロールバーのドラッグ中は mousemove のイベントが発火しないため、直接 is_user_scrolling を設定する\n        this.comment_list_element.onmousedown = (event: MouseEvent) => {\n            // コメントリストの要素の左上を起点としたカーソルのX座標を求める\n            const x = event.clientX - this.comment_list_element.getBoundingClientRect().left;\n            // 座標が clientWidth 以上であれば、スクロールバー上で mousedown されたものとする\n            if (x > this.comment_list_element.clientWidth) is_user_scrolling = true;\n        }\n        this.comment_list_element.onmouseup = (event: MouseEvent) => {\n            // コメントリストの要素の左上を起点としたカーソルのX座標を求める\n            const x = event.clientX - this.comment_list_element.getBoundingClientRect().left;\n            // 座標が clientWidth 以上であれば、スクロールバー上で mouseup されたものとする\n            if (x > this.comment_list_element.clientWidth) is_user_scrolling = false;\n        }\n\n        // ユーザーによるスクロールイベントで is_user_scrolling を true にする\n        // 0.1 秒後に false にする（継続してイベントが発火すれば再び true になる）\n        const on_user_scrolling = () => {\n            is_user_scrolling = true;\n            window.setTimeout(() => is_user_scrolling = false, 100);\n        }\n\n        // 現在コメントリストがドラッグされているかどうか\n        let is_dragging = false;\n        // touchstart → touchend 中: スクロールバーをタップでドラッグ\n        this.comment_list_element.ontouchstart = () => is_dragging = true;\n        this.comment_list_element.ontouchend = () => is_dragging = false;\n        // touchmove + is_dragging 中: コメントリストをタップでドラッグしてスクロール\n        this.comment_list_element.ontouchmove = () => is_dragging === true ? on_user_scrolling(): '';\n\n        // wheel 中: マウスホイールの回転\n        this.comment_list_element.onwheel = on_user_scrolling;\n\n        // コメントリストがスクロールされた際、自動スクロール中でない&ユーザーイベントで操作されていれば、手動スクロールモードに設定\n        // 手動スクロールモードでは自動スクロールを行わず、ユーザーがコメントリストをスクロールできるようにする\n        this.comment_list_element.onscroll = async () => {\n\n            // scroll イベントは自動スクロールでも発火してしまうので、ユーザーイベントによるスクロールかを確認しないといけない\n            // 自動スクロール中かどうかは is_auto_scrolling が true のときで判定できるはずだが、\n            // コメントが多くなると is_auto_scrolling が false なのに scroll イベントが遅れて発火してしまうことがある\n            if (this.is_auto_scrolling === false && is_user_scrolling === true) {\n\n                // 手動スクロールを有効化\n                this.is_manual_scroll = true;\n\n                // イベント発火時点では scrollTop の値が完全に下にスクロールされていない場合があるため、0.1秒だけ待つ\n                await Utils.sleep(0.1);\n\n                // 一番下までスクロールされていたら自動スクロールに戻す\n                if ((this.comment_list_element.scrollTop + this.comment_list_element.offsetHeight) >\n                    (this.comment_list_element.scrollHeight - 10)) {  // 一番下から 10px 以内\n                    this.is_manual_scroll = false;  // 手動スクロールを無効化\n                }\n            }\n        }\n\n        // ユーザーアカウントの情報を取得\n        try {\n            this.user = (await Vue.axios.get('/users/me')).data;\n        } catch (error) {\n            this.user = null;\n        }\n    },\n    // 終了前に実行\n    beforeDestroy() {\n\n        // 視聴セッション・コメントセッションを破棄\n        this.destroy();\n\n        // ResizeObserver を終了\n        if (this.resize_observer !== null) {\n            this.resize_observer.unobserve(this.resize_observer_element);\n        }\n    },\n    watch: {\n\n        // チャンネル情報が変更されたとき\n        // created() だとチャンネル情報の取得前に実行してしまう\n        // this が変わってしまうのでアロー関数は使えない\n        async channel(new_channel: IChannel, old_channel: IChannel) {\n\n            // 前のチャンネル情報と次のチャンネル情報で channel_id が変わってたら\n            if (new_channel.channel_id !== old_channel.channel_id) {\n\n                // 0.5秒だけ待ってから\n                // 連続してチャンネルを切り替えた時などに毎回コメントサーバーに接続しないように猶予を設ける\n                // ただし、最初 (channel_id が gr000 の初期値になっている) だけは待たずに実行する\n                if (old_channel.channel_id !== 'gr000') {\n                    await Utils.sleep(0.5);\n                    // 0.5 秒待った結果、channel_id が既に変更されているので終了\n                    if (this.channel.channel_id !== new_channel.channel_id) {\n                        return;\n                    }\n                }\n\n                // 前の視聴セッション・コメントセッションを破棄\n                this.destroy();\n\n                // リサイズ時のイベントを初期化\n                // イベントはプレイヤーの DOM に紐づいているため、プレイヤーが破棄→再初期化される毎に実行する必要がある\n                await this.initReserveObserver();\n\n                // 現在のチャンネル情報で視聴セッション・コメントセッションを初期化\n                await this.init();\n            }\n        }\n    },\n    methods: {\n\n        // 視聴セッション・コメントセッションを初期化する\n        async init() {\n\n            try {\n\n                // 視聴セッションを初期化\n                const comment_session_info = await this.initWatchSession();\n\n                // vpos の基準時刻のタイムスタンプを取得\n                // vpos は番組開始時間からの累計秒（10ミリ秒単位）\n                this.vpos_base_timestamp = dayjs(comment_session_info['vpos_base_time']).unix() * 100;\n\n                // コメントセッションを初期化\n                await this.initCommentSession(comment_session_info);\n\n            } catch (error) {\n\n                // 初期化に失敗した場合のエラーメッセージを保存しておく\n                // 初期化に失敗したのにコメントを送信しようとした際に表示するもの\n                this.initialize_failed_message = error.message;\n                console.error(error.toString());\n            }\n        },\n\n        // 視聴セッションを初期化\n        async initWatchSession(): Promise<{[key: string]: string | null}> {\n\n            // セッション情報を取得\n            let watch_session_info: AxiosResponse;\n            try {\n                watch_session_info = await Vue.axios.get(`/channels/${this.channel.channel_id}/jikkyo`);\n            } catch (error) {\n                throw new Error(error);  // エラー内容をコンソールに表示して終了\n            }\n\n            // セッション情報を取得できなかった\n            if (watch_session_info.data.is_success === false) {\n\n                // 一部を除くエラーメッセージはプレイヤーにも通知する\n                if ((watch_session_info.data.detail !== 'このチャンネルはニコニコ実況に対応していません。') &&\n                    (watch_session_info.data.detail !== '現在放送中のニコニコ実況がありません。')) {\n                    this.player.notice(watch_session_info.data.detail);\n                }\n\n                throw new Error(watch_session_info.data.detail);  // エラー内容をコンソールに表示して終了\n            }\n\n            // イベント内で値を返すため、Promise で包む\n            return new Promise((resolve) => {\n\n                // 視聴セッション WebSocket を開く\n                this.watch_session = new WebSocket(watch_session_info.data.audience_token);\n\n                // 視聴セッション WebSocket を開いたとき\n                this.watch_session.addEventListener('open', () => {\n\n                    // 視聴セッションをリクエスト\n                    // 公式ドキュメントいわく、stream フィールドは Optional らしい\n                    // サーバー負荷軽減のため、映像が不要な場合は必ず省略してくださいとのこと\n                    this.watch_session.send(JSON.stringify({\n                        'type': 'startWatching',\n                        'data': {\n                            'reconnect': false,\n                        },\n                    }));\n                });\n\n                // 視聴セッション WebSocket からメッセージを受信したとき\n                this.watch_session.addEventListener('message', async (event) => {\n\n                    // 受信したメッセージ\n                    const message = JSON.parse(event.data);\n\n                    switch (message.type) {\n\n                        // 部屋情報（実際には統合されていて、全てアリーナ扱いになっている）\n                        case 'room': {\n\n                            // コメントサーバーへの接続情報の入ったオブジェクトを返す\n                            return resolve({\n                                // コメントサーバーへの接続情報\n                                'message_server': message.data.messageServer.uri,\n                                // コメントサーバー上のスレッド ID\n                                'thread_id': message.data.threadId,\n                                // vpos を計算する基準となる時刻 (ISO8601形式)\n                                'vpos_base_time': message.data.vposBaseTime,\n                                // メッセージサーバーから受信するコメント (chat メッセージ) に yourpost フラグを付けるためのキー\n                                'your_post_key': (message.data.yourPostKey ? message.data.yourPostKey : null),\n                            });\n                        }\n\n                        // 座席情報\n                        case 'seat': {\n\n                            // keepIntervalSec の秒数ごとに keepSeat を送信して座席を維持する\n                            this.keep_seat_interval_id = window.setInterval(() => {\n                                // セッションがまだ開いていれば\n                                if (this.watch_session.readyState === 1) {\n                                    // 座席を維持\n                                    this.watch_session.send(JSON.stringify({\n                                        'type': 'keepSeat',\n                                    }));\n                                // setInterval を解除\n                                } else {\n                                    window.clearInterval(this.keep_seat_interval_id);\n                                }\n                            }, message.data.keepIntervalSec * 1000);\n                            break;\n                        }\n\n                        // ping-pong\n                        case 'ping': {\n\n                            // pong を返してセッションを維持する\n                            // 送り返さなかった場合、勝手にセッションが閉じられてしまう\n                            this.watch_session.send(JSON.stringify({\n                                'type': 'pong',\n                            }));\n                            break;\n                        }\n\n                        // エラー情報\n                        case 'error': {\n\n                            // エラー情報\n                            let error: string;\n                            switch (message.data.code) {\n\n                                case 'CONNECT_ERROR':\n                                    error = 'コメントサーバーに接続できません。';\n                                break;\n                                case 'CONTENT_NOT_READY':\n                                    error = 'ニコニコ実況が配信できない状態です。';\n                                break;\n                                case 'NO_THREAD_AVAILABLE':\n                                    error = 'コメントスレッドを取得できません。';\n                                break;\n                                case 'NO_ROOM_AVAILABLE':\n                                    error = 'コメント部屋を取得できません。';\n                                break;\n                                case 'NO_PERMISSION':\n                                    error = 'API にアクセスする権限がありません。';\n                                break;\n                                case 'NOT_ON_AIR':\n                                    error = 'ニコニコ実況が放送中ではありません。';\n                                break;\n                                case 'BROADCAST_NOT_FOUND':\n                                    error = 'ニコニコ実況の配信情報を取得できません。';\n                                break;\n                                case 'INTERNAL_SERVERERROR':\n                                    error = 'ニコニコ実況でサーバーエラーが発生しています。';\n                                break;\n                                default:\n                                    error = `ニコニコ実況でエラーが発生しています。(${message.data.code})`;\n                                break;\n                            }\n\n                            // エラー情報を表示\n                            console.log(`error occurred. code: ${message.data.code}`);\n                            if (this.player.danmaku.showing) {\n                                this.player.notice(error);\n                            }\n\n                            break;\n                        }\n\n                        // 再接続を求められた\n                        case 'reconnect': {\n\n                            // waitTimeSec に記載の秒数だけ待ってから再接続する\n                            await Utils.sleep(message.data.waitTimeSec);\n                            if (this.player.danmaku.showing) {\n                                this.player.notice('ニコニコ実況に再接続しています…');\n                            }\n\n                            // 前の視聴セッション・コメントセッションを破棄\n                            this.destroy();\n\n                            // 視聴セッションを再初期化\n                            // 公式ドキュメントには reconnect で送られてくる audienceToken で再接続しろと書いてあるんだけど、\n                            // 確実性的な面で実装が面倒なので当面このままにしておく\n                            const comment_session_info = await this.initWatchSession();\n\n                            // コメントセッションを再初期化\n                            await this.initCommentSession(comment_session_info);\n\n                            break;\n                        }\n\n                        // 視聴セッションが閉じられた（4時のリセットなど）\n                        case 'disconnect': {\n\n                            // 実際に接続が閉じられる前に disconnect イベントが送られてきたので、onclose イベントを削除する\n                            // onclose イベントが発火するのは不意に切断されたときなど最終手段\n                            if (this.watch_session) this.watch_session.onclose = null;\n\n                            // 接続切断の理由\n                            let disconnect_reason;\n                            switch (message.data.reason) {\n\n                                case 'TAKEOVER':\n                                    disconnect_reason = 'ニコニコ実況の番組から追い出されました。';\n                                break;\n                                case 'NO_PERMISSION':\n                                    disconnect_reason = 'ニコニコ実況の番組の座席を取得できませんでした。';\n                                break;\n                                case 'END_PROGRAM':\n                                    disconnect_reason = 'ニコニコ実況がリセットされたか、コミュニティの番組が終了しました。';\n                                break;\n                                case 'PING_TIMEOUT':\n                                    disconnect_reason = 'コメントサーバーとの接続生存確認に失敗しました。';\n                                break;\n                                case 'TOO_MANY_CONNECTIONS':\n                                    disconnect_reason = 'ニコニコ実況の同一ユーザからの接続数上限を越えています。';\n                                break;\n                                case 'TOO_MANY_WATCHINGS':\n                                    disconnect_reason = 'ニコニコ実況の同一ユーザからの視聴番組数上限を越えています。';\n                                break;\n                                case 'CROWDED':\n                                    disconnect_reason = 'ニコニコ実況の番組が満席です。';\n                                break;\n                                case 'MAINTENANCE_IN':\n                                    disconnect_reason = 'ニコニコ実況はメンテナンス中です。';\n                                break;\n                                case 'SERVICE_TEMPORARILY_UNAVAILABLE':\n                                    disconnect_reason = 'ニコニコ実況で一時的にサーバーエラーが発生しています。';\n                                break;\n                                default:\n                                    disconnect_reason = `ニコニコ実況との接続が切断されました。(${message.data.reason})`;\n                                break;\n                            }\n\n                            // 接続切断の理由を表示\n                            console.log(`disconnected. reason: ${message.data.reason}`);\n                            if (this.player.danmaku.showing) {\n                                this.player.notice(disconnect_reason);\n                            }\n\n                            // 5 秒ほど待ってから再接続する\n                            await Utils.sleep(5);\n                            if (this.player.danmaku.showing) {\n                                this.player.notice('ニコニコ実況に再接続しています…');\n                            }\n\n                            // 前の視聴セッション・コメントセッションを破棄\n                            this.destroy();\n\n                            // 視聴セッションを再初期化\n                            const comment_session_info = await this.initWatchSession();\n\n                            // コメントセッションを再初期化\n                            await this.initCommentSession(comment_session_info);\n\n                            break;\n                        }\n                    }\n                });\n\n\n                // 視聴セッションの接続が閉じられたとき（ネットワークが切断された場合など）\n                // イベントを無効化しやすいように敢えて onclose で実装する\n                this.watch_session.onclose = async (event) => {\n\n                    // 接続切断の理由を表示\n                    console.log(`disconnected. code: ${event.code}`);\n                    if (this.player.danmaku.showing) {\n                        this.player.notice(`ニコニコ実況との接続が切断されました。(code: ${event.code})`);\n                    }\n\n                    // 10 秒ほど待ってから再接続する\n                    // ニコ生側から切断された場合と異なりネットワークが切断された可能性が高いので、間を多めに取る\n                    await Utils.sleep(10);\n                    if (this.player.danmaku.showing) {\n                        this.player.notice('ニコニコ実況に再接続しています…');\n                    }\n\n                    // 前の視聴セッション・コメントセッションを破棄\n                    this.destroy();\n\n                    // 視聴セッションを再初期化\n                    const comment_session_info = await this.initWatchSession();\n\n                    // コメントセッションを再初期化\n                    await this.initCommentSession(comment_session_info);\n                };\n            });\n        },\n\n        // コメントセッションを初期化\n        async initCommentSession(comment_session_info: {[key: string]: string | null}) {\n\n            // タブが非表示状態のときにコメントを格納する配列\n            // タブが表示状態になったらコメントリストにのみ表示する（遅れているのでプレイヤーには表示しない）\n            let comment_list_buffer: IComment[] = [];\n\n            // 最初に送信されてくるコメントを受信し終えたかどうかのフラグ\n            let is_received_initial_comment = false;\n\n            // コメントセッション WebSocket を開く\n            this.comment_session = new WebSocket(comment_session_info.message_server);\n\n            // コメントセッション WebSocket を開いたとき\n            this.comment_session.addEventListener('open', () => {\n\n                // コメント送信をリクエスト\n                // このコマンドを送らないとコメントが送信されてこない\n                this.comment_session.send(JSON.stringify([\n                    { 'ping': {'content': 'rs:0'} },\n                    { 'ping': {'content': 'ps:0'} },\n                    {\n                        'thread': {\n                            'version': '20061206',  // 設定必須\n                            'thread': comment_session_info.thread_id,  // スレッド ID\n                            'threadkey': comment_session_info.your_post_key,  // スレッドキー\n                            'user_id': '',  // ユーザー ID（設定不要らしい）\n                            'res_from': -50,  // 最初にコメントを 50 個送信する\n                        }\n                    },\n                    { 'ping': {'content': 'pf:0'} },\n                    { 'ping': {'content': 'rf:0'} },\n                ]));\n            });\n\n            // コメントセッション WebSocket からメッセージを受信したとき\n            this.comment_session.addEventListener('message', async (event_raw) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n\n                // thread メッセージのみ\n                if (event.thread !== undefined) {\n\n                    // 接続成功のコールバックを DPlayer に通知\n                    if (event.thread.resultcode === 0) {\n\n                    // 接続失敗のコールバックを DPlayer に通知\n                    } else {\n                        const message = 'コメントサーバーに接続できませんでした。';\n                        console.error('Error: ' + message);\n                    }\n                }\n\n                // ping メッセージのみ\n                // rf:0 が送られてきたら初回コメントの受信は完了\n                if (event.ping !== undefined && event.ping.content === 'rf:0') {\n\n                    // 最初に送信されてくるコメントを受信し終えたフラグを立てる\n                    is_received_initial_comment = true;\n\n                    // コメントリストを一番下にスクロール\n                    // 初回コメントは量が多いので、一括でスクロールする\n                    this.scrollCommentList();\n                }\n\n                // コメントデータを取得\n                const comment = event.chat;\n\n                // コメントがない or 広告用など特殊な場合は弾く\n                if (comment === undefined ||\n                    comment.content === undefined ||\n                    comment.content.match(/\\/[a-z]+ /)) {\n                    return;\n                }\n\n                // 自分のコメントも表示しない\n                if (comment.yourpost && comment.yourpost === 1) {\n                    return;\n                }\n\n                // ミュート対象のコメントかどうかを判定し、もしそうならここで弾く\n                if (CommentUtils.isMutedComment(comment.content as string, comment.user_id as string)) {\n                    console.log('Muted comment: ' + comment.content);\n                    return;\n                }\n\n                // 色・位置・サイズ\n                let color = '#FFEAEA';  // コメント色のデフォルト\n                let position: 'top' | 'right' | 'bottom' = 'right'; // コメント位置のデフォルト\n                let size: 'big' | 'medium' | 'small' = 'medium';    // コメントサイズのデフォルト\n                if (comment.mail !== undefined && comment.mail !== null) {\n\n                    // コマンドをスペースで区切って配列にしたもの (184 は事前に除外)\n                    const commands = comment.mail.replace('184', '').split(' ');\n\n                    for (const command of commands) {  // コマンドごとに\n                        // コメント色指定コマンドがあれば取得\n                        if (CommentUtils.getCommentColor(command) !== null) {\n                            color = CommentUtils.getCommentColor(command);\n                        }\n                        // コメント位置指定コマンドがあれば取得\n                        if (CommentUtils.getCommentPosition(command) !== null) {\n                            position = CommentUtils.getCommentPosition(command);\n                        }\n                        // コメントサイズ指定コマンドがあれば取得\n                        // コメントサイズのコマンドは DPlayer とニコニコで共通なので、変換の必要はない\n                        if (command === 'big' || command === 'medium' || command === 'small') {\n                            size = command;\n                        }\n                    }\n                }\n\n                // 「映像の上下に固定表示されるコメントをミュートする」がオンの場合\n                // コメントの位置が top (上固定) もしくは bottom (下固定) のときは弾く\n                if (Utils.getSettingsItem('mute_fixed_comments') === true && (position === 'top' || position === 'bottom')) {\n                    console.log('Muted comment (Fixed): ' + comment.content);\n                    return;\n                }\n\n                // 「色付きのコメントをミュートする」がオンの場合\n                // コメントの色が #FFEAEA (デフォルト) 以外のときは弾く\n                if (Utils.getSettingsItem('mute_colored_comments') === true && color !== '#FFEAEA') {\n                    console.log('Muted comment (Colored): ' + comment.content);\n                    return;\n                }\n\n                // 「文字サイズが大きいコメントをミュートする」がオンの場合\n                // コメントのサイズが big のときは弾く\n                if (Utils.getSettingsItem('mute_big_size_comments') === true && size === 'big') {\n                    console.log('Muted comment (Big): ' + comment.content);\n                    return;\n                }\n\n                // 配信に発生する遅延分待ってから\n                // 最初にドカッと送信されてくる初回コメントは少し前に投稿されたコメント群なので、遅らせずに表示させる\n                if (is_received_initial_comment) {\n                    const comment_delay_time = Utils.getSettingsItem('comment_delay_time');\n                    await Utils.sleep(comment_delay_time);\n                }\n\n                // コメントリストのコメントが 500 件を超えたら古いものから順に削除する\n                // 仮想スクロールとはいえ、さすがに 500 件を超えると重くなりそう\n                // 手動スクロール時は実行しない\n                if (this.comment_list.length >= 500 && this.is_manual_scroll === false) {\n                    while (this.comment_list.length >= 500) {\n                        this.comment_list.shift();\n                    }\n                }\n\n                // コメントリストへ追加するオブジェクト\n                // コメント投稿時刻はフォーマットしてから\n                const comment_dict: IComment = {\n                    id: comment.no,\n                    text: comment.content,\n                    time: dayjs(comment.date * 1000).format('HH:mm:ss'),\n                    user_id: comment.user_id,\n                    my_post: false,\n                };\n\n                // タブが非表示状態のときは、バッファにコメントを追加するだけで終了する\n                // ここで追加すると、タブが表示状態になったときに一斉に描画されて大変なことになる\n                if (document.visibilityState === 'hidden') {\n                    comment_list_buffer.push(comment_dict);\n                    return;\n                }\n\n                // コメントリストに追加\n                this.comment_list.push(comment_dict);\n\n                // // コメントリストを一番下にスクロール\n                // 最初に受信したコメントは上の処理で一括でスクロールさせる\n                if (is_received_initial_comment) {\n                    this.scrollCommentList();\n                }\n\n                // コメント描画 (再生時のみ)\n                // 最初に受信したコメントはリアルタイムなコメントではないため、描画しないように\n                if (is_received_initial_comment) {\n                    if (!this.player.video.paused){\n                        this.player.danmaku.draw({\n                            text: comment.content,\n                            color: color,\n                            type: position,\n                            size: size,\n                        });\n                    }\n                }\n            });\n\n            // タブの表示/非表示の状態が切り替わったときのイベント\n            // 表示状態になったときにバッファにあるコメントをコメントリストに表示する\n            document.onvisibilitychange = () => {\n                if (document.visibilityState === 'visible') {\n                    this.comment_list.push(...comment_list_buffer);  // コメントリストに一括で追加\n                    comment_list_buffer = [];  // バッファをクリア\n                    this.scrollCommentList();  // コメントリストをスクロール\n                }\n            };\n        },\n\n        // コメントを送信する\n        async sendComment(options: DPlayerType.APIBackendSendOptions) {\n\n            // 初期化に失敗しているときは実行せず、保存しておいたエラーメッセージを表示する\n            if (this.initialize_failed_message !== null) {\n                options.error(this.initialize_failed_message);\n                return;\n            }\n\n            // 未ログイン時\n            if (this.user === null) {\n                options.error('コメントするには、KonomiTV アカウントにログインしてください。');\n                return;\n            }\n\n            // ニコニコアカウント未連携時\n            if (this.user.niconico_user_id === null) {\n                options.error('コメントするには、ニコニコアカウントと連携してください。');\n                return;\n            }\n\n            // 一般会員ではコメント位置の指定 (ue, shita) が無視されるので、事前にエラーにしておく\n            if (this.user.niconico_user_premium === false && (options.data.type === 'top' || options.data.type === 'bottom')) {\n                options.error('コメントを上下に固定するには、ニコニコアカウントのプレミアム会員登録が必要です。');\n                return;\n            }\n\n            // 一般会員ではコメントサイズ大きめの指定 (big) が無視されるので、事前にエラーにしておく\n            if (this.user.niconico_user_premium === false && options.data.size === 'big') {\n                options.error('コメントサイズを大きめに設定するには、ニコニコアカウントのプレミアム会員登録が必要です。');\n                return;\n            }\n\n            // DPlayer 上のコメント色（カラーコード）とニコニコの色コマンド定義のマッピング\n            const color_table = {\n                '#FFEAEA': 'white',\n                '#F02840': 'red',\n                '#FD7E80': 'pink',\n                '#FDA708': 'orange',\n                '#FFE133': 'yellow',\n                '#64DD17': 'green',\n                '#00D4F5': 'cyan',\n                '#4763FF': 'blue',\n            };\n\n            // DPlayer 上のコメント位置を表す数値とニコニコの位置コマンド定義のマッピング\n            const position_table = {\n                'top': 'ue',\n                'right': 'naka',\n                'bottom': 'shita',\n            };\n\n            // vpos を計算 (10ミリ秒単位)\n            // 番組開始時間からの累計秒らしいけど、なぜ指定しないといけないのかは不明\n            const vpos = Math.floor(new Date().getTime() / 10) - this.vpos_base_timestamp;\n\n            // コメントを送信\n            this.watch_session.send(JSON.stringify({\n                'type': 'postComment',\n                'data': {\n                    'text': options.data.text,  // コメント本文\n                    'color': color_table[options.data.color.toUpperCase()],  // コメントの色\n                    'position': position_table[options.data.type],  // コメント位置\n                    'size': options.data.size,  // コメントサイズ (DPlayer とニコニコで表現が共通)\n                    'vpos': vpos,  // 番組開始時間からの累計秒（10ミリ秒単位）\n                    'isAnonymous': true,  // 匿名コメント (184)\n                }\n            }));\n\n            // 自分のコメントをコメントリストに追加\n            this.comment_list.push({\n                id: new Date().getTime(),\n                text: options.data.text,\n                time: dayjs().format('HH:mm:ss'),\n                user_id: `${this.user.niconico_user_id}`,\n                my_post: true,  // コメントリスト上でハイライトする\n            });\n\n            // コメント送信のレスポンスを取得\n            // 簡単にイベントリスナーを削除できるため、あえて onmessage で実装している\n            this.watch_session.onmessage = (event) => {\n\n                // 受信したメッセージ\n                const message = JSON.parse(event.data);\n\n                switch (message.type) {\n\n                    // postCommentResult\n                    // これが送られてくる → コメント送信に成功している\n                    case 'postCommentResult': {\n\n                        // コメント成功のコールバックを DPlayer に通知\n                        options.success();\n\n                        // イベントリスナーを削除\n                        this.watch_session.onmessage = null;\n                        break;\n                    }\n\n                    // error\n                    // コメント送信直後に error が送られてきた → コメント送信に失敗している\n                    case 'error': {\n\n                        // エラーメッセージ\n                        let error = `コメントの送信に失敗しました。(${message.data.code})`;\n                        switch (message.data.code) {\n                            case 'COMMENT_POST_NOT_ALLOWED': {\n                                error = 'コメントが許可されていません。';\n                                break;\n                            }\n                            case 'INVALID_MESSAGE': {\n                                error = 'コメント内容が無効です。';\n                                break;\n                            }\n                        }\n\n                        // コメント失敗のコールバックを DPlayer に通知\n                        options.error(error);\n\n                        // イベントリスナーを解除\n                        this.watch_session.onmessage = null;\n                        break;\n                    }\n                }\n            };\n        },\n\n        // リサイズ時のイベントを初期化\n        // プレイヤーが初期化される毎に実行する必要がある\n        async initReserveObserver() {\n\n            // 監視対象の要素\n            this.resize_observer_element = document.querySelector('.watch-player');\n\n            // タイムアウト ID\n            // 一時的に無効にした transition を有効化する際に利用する\n            let animation_timeout_id = null;\n\n            // プレイヤーの要素がリサイズされた際に発火するイベント\n            const on_resize = () => {\n\n                // 映像の要素\n                const video_element = document.querySelector('.dplayer-video-wrap-aspect');\n\n                // コメント描画領域の要素\n                const comment_area_element = document.querySelector<HTMLElement>('.dplayer-danmaku');\n\n                // プレイヤー全体と映像の高さの差（レターボックス）から、コメント描画領域の高さを狭める必要があるかを判定する\n                // 2で割っているのは単体の差を測るため\n                if (this.resize_observer_element === null || this.resize_observer_element.clientHeight === null) return;\n                if (video_element === null || video_element.clientHeight === null) return;\n                const letter_box_height = (this.resize_observer_element.clientHeight - video_element.clientHeight) / 2;\n\n                const threshold = Utils.isSmartphoneVertical() ? 0 : window.matchMedia('(max-height: 450px)').matches ? 50 : 66;\n                if (letter_box_height < threshold) {\n\n                    // コメント描画領域に必要な上下マージン\n                    const comment_area_vertical_margin = (threshold - letter_box_height) * 2;\n\n                    // 狭めるコメント描画領域の幅\n                    // 映像の要素の幅をそのまま利用する\n                    const comment_area_width = video_element.clientWidth;\n\n                    // 狭めるコメント描画領域の高さ\n                    const comment_area_height = video_element.clientHeight - comment_area_vertical_margin;\n\n                    // 狭めるコメント描画領域のアスペクト比を求める\n                    // https://tech.arc-one.jp/asepct-ratio/\n                    const gcd = (x: number, y: number) => {  // 最大公約数を求める関数\n                        if (y === 0) return x;\n                        return gcd(y, x % y);\n                    }\n                    // 幅と高さの最大公約数を求める\n                    const gcd_result = gcd(comment_area_width, comment_area_height);\n                    // 幅と高さをそれぞれ最大公約数で割ってアスペクト比を算出\n                    const comment_area_height_aspect = `${comment_area_width / gcd_result} / ${comment_area_height / gcd_result}`;\n\n                    // 一時的に transition を無効化する\n                    // アスペクト比の設定は連続して行われるが、その際に transition が適用されるとワンテンポ遅れたアニメーションになってしまう\n                    comment_area_element.style.transition = 'none';\n\n                    // コメント描画領域に算出したアスペクト比を設定する\n                    comment_area_element.style.setProperty('--comment-area-aspect-ratio', comment_area_height_aspect);\n\n                    // コメント描画領域に必要な上下マージンを設定する\n                    comment_area_element.style.setProperty('--comment-area-vertical-margin', `${comment_area_vertical_margin}px`);\n\n                    // 以前セットされた setTimeout() を止める\n                    window.clearTimeout(animation_timeout_id);\n\n                    // 0.2秒後に実行する\n                    // 0.2秒より前にもう一度リサイズイベントが来た場合はタイマーがクリアされるため実行されない\n                    window.setTimeout(() => {\n\n                        // 再び transition を有効化する\n                        comment_area_element.style.transition = '';\n\n                    }, 0.2 * 1000);\n\n                } else {\n\n                    // コメント描画領域に設定したアスペクト比・上下マージンを削除する\n                    comment_area_element.style.removeProperty('--comment-area-aspect-ratio');\n                    comment_area_element.style.removeProperty('--comment-area-vertical-margin');\n                }\n            }\n\n            // 以前に初期化された ResizeObserver を終了\n            if (this.resize_observer !== null) {\n                this.resize_observer.unobserve(this.resize_observer_element);\n            }\n\n            // 要素の監視を開始\n            this.resize_observer = new ResizeObserver(on_resize);\n            this.resize_observer.observe(this.resize_observer_element);\n\n            // 0.6 秒待ってから初回実行\n            // チャンネル切り替え後、再初期化されたプレイヤーに適用するため（早いと再初期化前のプレイヤーに適用されてしまう）\n            window.setTimeout(on_resize, 0.6 * 1000);\n        },\n\n        // コメントリストを一番下までスクロールする\n        async scrollCommentList(smooth: boolean = false) {\n\n            // 手動スクロールモードの時は実行しない\n            if (this.is_manual_scroll === true) return;\n\n            // 自動スクロール中のフラグを立てる\n            this.is_auto_scrolling = true;\n\n            // 0.01 秒待って実行し、念押しで2回実行しないと完全に最下部までスクロールされない…（ブラウザの描画バグ？）\n            // this.$nextTick() は効かなかった\n            for (let index = 0; index < 3; index++) {\n                await Utils.sleep(0.01);\n                if (smooth === true) {  // スムーズスクロール\n                    this.comment_list_element.scrollTo({top: this.comment_list_element.scrollHeight, left: 0, behavior: 'smooth'});\n                } else {\n                    this.comment_list_element.scrollTo(0, this.comment_list_element.scrollHeight);\n                }\n            }\n\n            // 0.1 秒待つ（重要）\n            await Utils.sleep(0.1);\n\n            // 自動スクロール中のフラグを降ろす\n            this.is_auto_scrolling = false;\n        },\n\n        // ドロップダウンメニューを表示する\n        displayCommentListDropdown(event: Event, comment: IComment) {\n            const comment_list_wrapper_rect = (this.$refs.comment_list_wrapper as HTMLDivElement).getBoundingClientRect();\n            const comment_list_dropdown_height = 76;  // 76px はドロップダウンメニューの高さ\n            const comment_button_rect = (event.currentTarget as HTMLElement).getBoundingClientRect()\n            // メニューの表示位置をクリックされたコメントに合わせる\n            this.comment_list_dropdown_top = comment_button_rect.top - comment_list_wrapper_rect.top;\n            // メニューがコメントリストからはみ出るときだけ、表示位置を上側に調整\n            if ((this.comment_list_dropdown_top + comment_list_dropdown_height) > comment_list_wrapper_rect.height) {\n                this.comment_list_dropdown_top = this.comment_list_dropdown_top - comment_list_dropdown_height + comment_button_rect.height;\n            }\n            // 表示位置を調整できたので、メニューを表示\n            this.comment_list_dropdown_comment = comment;\n            this.is_comment_list_dropdown_display = true;\n        },\n\n        // 破棄する\n        destroy() {\n\n            // 初期化失敗時のメッセージをクリア\n            this.initialize_failed_message = null;\n\n            // コメントリストをクリア\n            this.comment_list = [];\n\n            // タブの表示/非表示の状態が切り替わったときのイベントを削除\n            document.onvisibilitychange = null;\n\n            // 視聴セッションを閉じる\n            if (this.watch_session !== null) {\n                this.watch_session.onclose = null;  // WebSocket が閉じられた際のイベントを削除\n                this.watch_session.close();  // WebSocket を閉じる\n                this.watch_session = null;  // null に戻す\n            }\n\n            // コメントセッションを閉じる\n            if (this.comment_session !== null) {\n                this.comment_session.onclose = null;  // WebSocket が閉じられた際のイベントを削除\n                this.comment_session.close();  // WebSocket を閉じる\n                this.comment_session = null;  // null に戻す\n            }\n\n            // 座席保持用のタイマーをクリア\n            window.clearInterval(this.keep_seat_interval_id);\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Comment.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Comment.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Comment.vue?vue&type=template&id=301a624b&scoped=true&\"\nimport script from \"./Comment.vue?vue&type=script&lang=ts&\"\nexport * from \"./Comment.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Comment.vue?vue&type=style&index=0&id=301a624b&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"301a624b\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"program-container\"},[_c('section',{staticClass:\"program-broadcaster\"},[_c('img',{staticClass:\"program-broadcaster__icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.$route.params.channel_id)}/logo`}}),_c('div',{staticClass:\"program-broadcaster__number\"},[_vm._v(\"Ch: \"+_vm._s(_vm.channel.channel_number))]),_c('div',{staticClass:\"program-broadcaster__name\"},[_vm._v(_vm._s(_vm.channel.channel_name))])]),_c('section',{staticClass:\"program-info\"},[_c('h1',{staticClass:\"program-info__title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channel.program_present, 'title'))}}),_c('div',{staticClass:\"program-info__time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(_vm.channel.program_present)))]),_c('div',{staticClass:\"program-info__description\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channel.program_present, 'description'))}}),_c('div',{staticClass:\"program-info__genre-container\"},_vm._l((_vm.ProgramUtils.getAttribute(_vm.channel.program_present, 'genre', [])),function(genre,genre_index){return _c('div',{key:genre_index,staticClass:\"program-info__genre\"},[_vm._v(\" \"+_vm._s(genre.major)+\" / \"+_vm._s(genre.middle)+\" \")])}),0),_c('div',{staticClass:\"program-info__next\"},[_c('span',{staticClass:\"program-info__next-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"program-info__next-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}})],1),_c('span',{staticClass:\"program-info__next-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channel.program_following, 'title'))}}),_c('div',{staticClass:\"program-info__next-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(_vm.channel.program_following)))]),_c('div',{staticClass:\"program-info__status\"},[_c('div',{staticClass:\"program-info__status-force\",class:`program-info__status-force--${_vm.ChannelUtils.getChannelForceType(_vm.channel.channel_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"勢い:\")]),_c('span',{staticClass:\"ml-2\"},[_vm._v(_vm._s(_vm.ProgramUtils.getAttribute(_vm.channel, 'channel_force', '--'))+\" コメ/分\")])],1),_c('div',{staticClass:\"program-info__status-viewers ml-5\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:eye\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"視聴数:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(_vm.channel.viewers))])],1)])]),_c('section',{staticClass:\"program-detail-container\"},_vm._l((_vm.ProgramUtils.getAttribute(_vm.channel.program_present, 'detail', {})),function(detail_text,detail_heading){return _c('div',{key:detail_heading,staticClass:\"program-detail\"},[_c('h2',{staticClass:\"program-detail__heading\"},[_vm._v(_vm._s(detail_heading))]),_c('div',{staticClass:\"program-detail__text\",domProps:{\"innerHTML\":_vm._s(_vm.Utils.URLtoLink(detail_text))}})])}),0)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue, { PropType } from 'vue';\n\nimport { IChannel } from '@/interface';\nimport Utils, { ChannelUtils, ProgramUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'Panel-ProgramTab',\n    props: {\n        // チャンネル情報\n        channel: {\n            type: Object as PropType<IChannel>,\n            required: true,\n        }\n    },\n    data() {\n        return {\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            ChannelUtils: ChannelUtils,\n            ProgramUtils: ProgramUtils,\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Program.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Program.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Program.vue?vue&type=template&id=d9974e64&scoped=true&\"\nimport script from \"./Program.vue?vue&type=script&lang=ts&\"\nexport * from \"./Program.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Program.vue?vue&type=style&index=0&id=d9974e64&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d9974e64\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"twitter-container\"},[_c('v-dialog',{attrs:{\"content-class\":\"zoom-capture-modal-container\",\"max-width\":\"980\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.zoom_capture_modal),callback:function ($$v) {_vm.zoom_capture_modal=$$v},expression:\"zoom_capture_modal\"}},[_c('div',{staticClass:\"zoom-capture-modal\"},[_c('img',{staticClass:\"zoom-capture-modal__image\",attrs:{\"src\":_vm.zoom_capture ? _vm.zoom_capture.image_url: ''}}),_c('a',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"zoom-capture-modal__download\",attrs:{\"href\":_vm.zoom_capture ? _vm.zoom_capture.image_url : '',\"download\":_vm.zoom_capture ? _vm.zoom_capture.filename : ''}},[_c('Icon',{attrs:{\"icon\":\"fa6-solid:download\",\"width\":\"45px\"}})],1)])]),_c('div',{staticClass:\"tab-container\"},[_c('div',{staticClass:\"tab-content\",class:{'tab-content--active': _vm.twitter_active_tab === 'Capture'}},[_c('div',{staticClass:\"captures\"},_vm._l((_vm.captures),function(capture){return _c('div',{key:capture.image_url,staticClass:\"capture\",class:{\n                        'capture--selected': capture.selected,\n                        'capture--focused': capture.focused,\n                        'capture--disabled': !capture.selected && _vm.tweet_captures.length >= 4,\n                    },on:{\"click\":function($event){return _vm.clickCapture(capture)}}},[_c('img',{staticClass:\"capture__image\",attrs:{\"src\":capture.image_url}}),_c('div',{staticClass:\"capture__disabled-cover\"}),_c('div',{staticClass:\"capture__selected-number\"},[_vm._v(_vm._s(_vm.tweet_captures.findIndex(blob => blob === capture.blob) + 1))]),_c('Icon',{staticClass:\"capture__selected-checkmark\",attrs:{\"icon\":\"fluent:checkmark-circle-16-filled\"}}),_c('div',{staticClass:\"capture__selected-border\"}),_c('div',{staticClass:\"capture__focused-border\"}),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"capture__zoom\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.zoom_capture_modal = true; _vm.zoom_capture = capture},\"mousedown\":function($event){$event.preventDefault();$event.stopPropagation();/* 親要素の波紋が広がらないように */}}},[_c('Icon',{attrs:{\"icon\":\"fluent:zoom-in-16-regular\",\"width\":\"32px\"}})],1)],1)}),0),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.captures.length === 0),expression:\"captures.length === 0\"}],staticClass:\"capture-announce\"},[_c('div',{staticClass:\"capture-announce__heading\"},[_vm._v(\"まだキャプチャがありません。\")]),_vm._m(0)])])]),_c('div',{staticClass:\"tab-button-container\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Search'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Search'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:search-16-filled\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"ツイート検索\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Timeline'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Timeline'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:home-16-regular\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"タイムライン\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Capture'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Capture'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:image-copy-20-regular\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"キャプチャ\")])],1)]),_c('div',{staticClass:\"tweet-form\",class:{\n        'tweet-form--focused': _vm.is_tweet_hashtag_form_focused || _vm.is_tweet_text_form_focused,\n        'tweet-form--virtual-keyboard-display': _vm.is_virtual_keyboard_display &&\n            (_vm.Utils.hasActiveElementClass('tweet-form__hashtag-form') || _vm.Utils.hasActiveElementClass('tweet-form__textarea')) &&\n            (() => {_vm.is_hashtag_list_display = false; return true;})(),\n    }},[_c('div',{staticClass:\"tweet-form__hashtag\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.tweet_hashtag),expression:\"tweet_hashtag\"}],staticClass:\"tweet-form__hashtag-form\",attrs:{\"type\":\"search\",\"placeholder\":\"#ハッシュタグ\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.tweet_hashtag)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.tweet_hashtag=$event.target.value},function($event){return _vm.updateTweetLetterCount()}],\"focus\":function($event){_vm.is_tweet_hashtag_form_focused = true},\"blur\":function($event){_vm.is_tweet_hashtag_form_focused = false},\"change\":function($event){_vm.tweet_hashtag = _vm.formatHashtag(_vm.tweet_hashtag)}}}),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tweet-form__hashtag-list-button\",on:{\"click\":function($event){return _vm.clickHashtagListButton()}}},[_c('Icon',{attrs:{\"icon\":\"fluent:clipboard-text-ltr-32-regular\",\"height\":\"22px\"}})],1)]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.tweet_text),expression:\"tweet_text\"}],ref:\"tweet_text\",staticClass:\"tweet-form__textarea\",attrs:{\"placeholder\":\"ツイート\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.tweet_text)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.tweet_text=$event.target.value},function($event){return _vm.updateTweetLetterCount()}],\"paste\":function($event){return _vm.pasteClipboardData($event)},\"focus\":function($event){_vm.is_tweet_text_form_focused = true},\"blur\":function($event){_vm.is_tweet_text_form_focused = false}}}),_c('div',{staticClass:\"tweet-form__control\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"account-button\",class:{'account-button--no-login': !_vm.is_logged_in_twitter},on:{\"click\":function($event){return _vm.clickAccountButton()}}},[_c('img',{staticClass:\"account-button__icon\",attrs:{\"src\":_vm.is_logged_in_twitter ? _vm.selected_twitter_account.icon_url : '/assets/images/account-icon-default.png'}}),_c('span',{staticClass:\"account-button__screen-name\"},[_vm._v(\" \"+_vm._s(_vm.is_logged_in_twitter ? `@${_vm.selected_twitter_account.screen_name}` : '連携されていません')+\" \")]),_c('Icon',{staticClass:\"account-button__menu\",attrs:{\"icon\":\"fluent:more-circle-20-regular\",\"width\":\"22px\"}})],1),_c('div',{staticClass:\"limit-meter\"},[_c('div',{staticClass:\"limit-meter__content\",class:{\n                    'limit-meter__content--yellow': _vm.tweet_letter_count <= 20,\n                    'limit-meter__content--red': _vm.tweet_letter_count <= 0,\n                }},[_c('Icon',{staticStyle:{\"margin-right\":\"-2px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"12px\"}}),_c('span',[_vm._v(_vm._s(_vm.tweet_letter_count))])],1),_c('div',{staticClass:\"limit-meter__content\"},[_c('Icon',{attrs:{\"icon\":\"fluent:image-16-filled\",\"width\":\"14px\"}}),_c('span',[_vm._v(_vm._s(_vm.tweet_captures.length)+\"/4\")])],1)]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tweet-button\",attrs:{\"disabled\":!_vm.is_logged_in_twitter || _vm.tweet_letter_count < 0 ||\n                    (_vm.tweet_letter_count === 140 && _vm.tweet_captures.length === 0)},on:{\"click\":function($event){return _vm.sendTweet()}}},[_c('Icon',{attrs:{\"icon\":\"fa-brands:twitter\",\"height\":\"16px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ツイート\")])],1)])]),_c('div',{staticClass:\"hashtag-list\",class:{\n        'hashtag-list--display': _vm.is_hashtag_list_display,\n        'hashtag-list--virtual-keyboard-display': _vm.is_virtual_keyboard_display && _vm.Utils.hasActiveElementClass('hashtag__input'),\n    }},[_c('div',{staticClass:\"hashtag-heading\"},[_c('div',{staticClass:\"hashtag-heading__text\"},[_c('Icon',{attrs:{\"icon\":\"charm:hash\",\"width\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ハッシュタグリスト\")])],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag-heading__add-button\",on:{\"click\":function($event){_vm.saved_twitter_hashtags.push({id: Date.now(), text: '#ここにハッシュタグを入力', editing: false})}}},[_c('Icon',{attrs:{\"icon\":\"fluent:add-12-filled\",\"width\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"追加\")])],1)]),_c('draggable',{staticClass:\"hashtag-container\",attrs:{\"handle\":\".hashtag__sort-handle\"},model:{value:(_vm.saved_twitter_hashtags),callback:function ($$v) {_vm.saved_twitter_hashtags=$$v},expression:\"saved_twitter_hashtags\"}},_vm._l((_vm.saved_twitter_hashtags),function(hashtag){return _c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\",value:(!hashtag.editing),expression:\"!hashtag.editing\"}],key:hashtag.id,staticClass:\"hashtag\",class:{'hashtag--editing': hashtag.editing},on:{\"click\":function($event){return _vm.clickHashtag(hashtag)}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(hashtag.text),expression:\"hashtag.text\"}],staticClass:\"hashtag__input\",attrs:{\"type\":\"search\",\"spellcheck\":\"false\",\"disabled\":!hashtag.editing},domProps:{\"value\":(hashtag.text)},on:{\"click\":function($event){$event.stopPropagation();},\"input\":function($event){if($event.target.composing)return;_vm.$set(hashtag, \"text\", $event.target.value)}}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag__edit-button\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();hashtag.editing = !hashtag.editing; hashtag.text = _vm.formatHashtag(hashtag.text, true)}}},[_c('Icon',{attrs:{\"icon\":hashtag.editing ? 'fluent:checkmark-16-filled': 'fluent:edit-16-filled',\"width\":\"17px\"}})],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag__delete-button\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.saved_twitter_hashtags.splice(_vm.saved_twitter_hashtags.indexOf(hashtag), 1)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:delete-16-filled\",\"width\":\"17px\"}})],1),_c('div',{staticClass:\"hashtag__sort-handle\"},[_c('Icon',{attrs:{\"icon\":\"material-symbols:drag-handle-rounded\",\"width\":\"17px\"}})],1)])}),0)],1),_c('div',{staticClass:\"twitter-account-list\",class:{'twitter-account-list--display': _vm.is_twitter_account_list_display}},_vm._l((_vm.user.twitter_accounts),function(twitter_account){return _c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:twitter_account.id,staticClass:\"twitter-account\",on:{\"click\":function($event){return _vm.updateSelectedTwitterAccount(twitter_account)}}},[_c('img',{staticClass:\"twitter-account__icon\",attrs:{\"src\":twitter_account.icon_url}}),_c('div',{staticClass:\"twitter-account__info\"},[_c('div',{staticClass:\"twitter-account__name\"},[_vm._v(_vm._s(twitter_account.name))]),_c('div',{staticClass:\"twitter-account__screen-name\"},[_vm._v(\"@\"+_vm._s(twitter_account.screen_name))])]),_c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(twitter_account.id === _vm.selected_twitter_account_id),expression:\"twitter_account.id === selected_twitter_account_id\"}],staticClass:\"twitter-account__check\",attrs:{\"icon\":\"fluent:checkmark-16-filled\",\"width\":\"24px\"}})],1)}),0)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"capture-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(\"プレイヤーのキャプチャボタンやショートカットキーでキャプチャを撮ると、ここに表示されます。\")]),_c('p',{staticClass:\"mt-2 mb-0\"},[_vm._v(\"表示されたキャプチャを選択してからツイートすると、キャプチャを付けてツイートできます。\")])])\n}]\n\nexport { render, staticRenderFns }","\n\nimport axios from 'axios';\nimport DPlayer from 'dplayer';\nimport Vue, { PropType } from 'vue';\nimport draggable from 'vuedraggable'\n\nimport { IChannel, ITwitterAccount, IUser } from '@/interface';\nimport Utils from '@/utils';\n\n// このコンポーネント内でのキャプチャのインターフェイス\ninterface ITweetCapture {\n    blob: Blob;\n    filename: string;\n    image_url: string;\n    selected: boolean;\n    focused: boolean;\n}\n\n// このコンポーネント内でのハッシュタグのインターフェイス\ninterface IHashtag {\n    id: number;\n    text: string;\n    editing: boolean;\n}\n\nexport default Vue.extend({\n    name: 'Panel-TwitterTab',\n    components: {\n        draggable,\n    },\n    props: {\n        // チャンネル情報\n        channel: {\n            type: Object as PropType<IChannel>,\n            required: true,\n        },\n        // プレイヤーのインスタンス\n        player: {\n            type: null as PropType<DPlayer>,  // 代入当初は null になるため苦肉の策\n            required: true,\n        },\n        // 仮想キーボードが表示されているかどうか\n        is_virtual_keyboard_display: {\n            type: Boolean as PropType<boolean>,\n            required: true,\n        },\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n\n            // ログイン中かどうか\n            is_logged_in: Utils.getAccessToken() !== null,\n\n            // Twitter アカウントを1つでも連携しているかどうか\n            is_logged_in_twitter: false,\n\n            // ユーザーアカウントの情報\n            // ログインしていない場合は null になる\n            user: null as IUser | null,\n\n            // 現在ツイート対象として選択されている Twitter アカウント\n            selected_twitter_account: null as ITwitterAccount | null,\n\n            // 現在ツイート対象として選択されている Twitter アカウントの ID\n            selected_twitter_account_id: Utils.getSettingsItem('selected_twitter_account_id') as number | null,\n\n            // 連携している Twitter アカウントリストを表示しているか\n            is_twitter_account_list_display: false,\n\n            // 保存している Twitter のハッシュタグが入るリスト\n            saved_twitter_hashtags: (Utils.getSettingsItem('saved_twitter_hashtags') as string[]).map((hashtag, index) => {\n                // id プロパティは :key=\"\" に指定するためにつける ID (ミリ秒単位のタイムスタンプ + index で適当に一意になるように)\n                return {id: Date.now() + index, text: hashtag, editing: false} as IHashtag;\n            }),\n\n            // ハッシュタグリストを表示しているか\n            is_hashtag_list_display: false,\n\n            // 既定で表示される Twitter タブ内のタブ\n            twitter_active_tab: Utils.getSettingsItem('twitter_active_tab') as ('Search' | 'Timeline' | 'Capture'),\n\n            // キャプチャを拡大表示するモーダルの表示状態\n            zoom_capture_modal: false,\n\n            // 現在モーダルで拡大表示中のキャプチャのオブジェクト\n            zoom_capture: null as ITweetCapture | null,\n\n            // キャプチャリスト\n            captures: [] as ITweetCapture[],\n\n            // キャプチャリストの要素\n            captures_element: null as HTMLDivElement | null,\n\n            // ツイートハッシュタグフォームにフォーカスしているか\n            is_tweet_hashtag_form_focused: false,\n\n            // ツイート本文フォームにフォーカスしているか\n            is_tweet_text_form_focused: false,\n\n            // ツイートのハッシュタグ\n            tweet_hashtag: '',\n\n            // ツイート本文\n            tweet_text: '',\n\n            // ツイートに添付するキャプチャの Blob のリスト\n            tweet_captures: [] as Blob[],\n\n            // 文字数カウント\n            tweet_letter_count: 140,\n        }\n    },\n    async created() {\n\n        // ユーザーモデルの初期値\n        this.user = {\n            id: 0,\n            name: '',\n            is_admin: true,\n            niconico_user_id: null,\n            niconico_user_name: null,\n            niconico_user_premium: null,\n            twitter_accounts: [],\n            created_at: '',\n            updated_at: '',\n        }\n\n        // 表示されているアカウント情報を更新 (ログイン時のみ)\n        if (this.is_logged_in === true) {\n            await this.syncAccountInfo();\n\n            // 連携している Twitter アカウントがあれば true に設定\n            if (this.user.twitter_accounts.length > 0) {\n                this.is_logged_in_twitter = true;\n\n                // 現在ツイート対象として選択されている Twitter アカウントの ID が設定されていない or ID に紐づく Twitter アカウントがない\n                // 連携している Twitter アカウントのうち、一番最初のものを自動選択する\n                // ここで言う Twitter アカウントの ID は DB 上で連番で振られるもので、Twitter アカウントそのものの固有 ID ではない\n                if (this.selected_twitter_account_id === null ||\n                    !this.user.twitter_accounts.some((twitter_account) => twitter_account.id === this.selected_twitter_account_id)) {\n                    this.selected_twitter_account_id = this.user.twitter_accounts[0].id;\n                    Utils.setSettingsItem('selected_twitter_account_id', this.selected_twitter_account_id);\n                }\n\n                // 現在ツイート対象として選択されている Twitter アカウントを取得・設定\n                const twitter_account_index = this.user.twitter_accounts.findIndex((twitter_account) => {\n                    return twitter_account.id === this.selected_twitter_account_id;  // Twitter アカウントの ID が選択されているものと一致する\n                });\n                this.selected_twitter_account = this.user.twitter_accounts[twitter_account_index];\n            }\n        }\n\n        // 局タグ追加処理を走らせる (ハッシュタグフォームのフォーマット処理も同時に行われるが、元々空なので無意味)\n        this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag);\n    },\n    beforeDestroy() {\n        // 終了前にすべてのキャプチャの Blob URL を revoke してリソースを解放する\n        for (const capture of this.captures) {\n            URL.revokeObjectURL(capture.image_url);\n        }\n    },\n    watch: {\n\n        // チャンネル情報が変更されたとき\n        // 前のチャンネル情報と次のチャンネル情報で channel_id が変わってたら局タグ追加処理を走らせる\n        async channel(new_channel: IChannel, old_channel: IChannel) {\n            if (new_channel.channel_id !== old_channel.channel_id) {\n                const old_channel_hashtag = this.getChannelHashtag(old_channel.channel_name) ?? '';\n                this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag.replaceAll(old_channel_hashtag, ''));\n            }\n        },\n\n        // 保存しているハッシュタグが変更されたら随時 LocalStorage に保存する\n        saved_twitter_hashtags: {\n            deep: true,\n            handler() {\n                Utils.setSettingsItem('saved_twitter_hashtags', this.saved_twitter_hashtags.map(hashtag => hashtag.text));\n            }\n        }\n    },\n    methods: {\n\n        // ユーザーアカウントの情報を取得する\n        async syncAccountInfo() {\n            try {\n                this.user = (await Vue.axios.get('/users/me')).data;\n            } catch (error) {\n                // ログインされていないので未ログイン状態に設定\n                if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n                    this.is_logged_in = false;\n                }\n            }\n        },\n\n        // 文字数カウントを変更するイベント\n        updateTweetLetterCount() {\n\n            // サロゲートペアを考慮し、スプレッド演算子で一度配列化してから数えている\n            // ref: https://qiita.com/suin/items/3da4fb016728c024eaca\n            this.tweet_letter_count = 140 - [...this.tweet_hashtag].length - [...this.tweet_text].length;\n        },\n\n        // クリップボード内のデータがペーストされたときのイベント\n        pasteClipboardData(event: ClipboardEvent) {\n\n            // 一応配列になっているので回しているが、基本1回のペーストにつき DataTransferItem は1個しか入らない\n            for (const clipboard_item of event.clipboardData.items) {\n\n                // 画像のみを対象にする (DataTransferItem.type には MIME タイプが入る)\n                if (clipboard_item.type.startsWith('image/')) {\n\n                    // クリップボード内の画像データを File オブジェクトとして取得し、キャプチャリストに追加\n                    const file = clipboard_item.getAsFile();\n                    this.addCaptureList(file, file.name);\n                }\n            }\n        },\n\n        // ハッシュタグリストボタンが押されたときのイベント\n        clickHashtagListButton() {\n            this.is_hashtag_list_display = !this.is_hashtag_list_display;\n            // すべてのハッシュタグの編集状態を解除する\n            for (const hashtag of this.saved_twitter_hashtags) {\n                hashtag.editing = false;\n            }\n        },\n\n        // ハッシュタグがクリックされたときのイベント\n        clickHashtag(hashtag: IHashtag) {\n            this.tweet_hashtag = hashtag.text;\n            this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag);\n            this.updateTweetLetterCount();\n            window.setTimeout(() => this.is_hashtag_list_display = false, 150);\n        },\n\n        // アカウントボタンが押されたときのイベント\n        clickAccountButton() {\n\n            // Twitter アカウントが連携されていない場合は Twitter 設定画面に飛ばす\n            if (!this.is_logged_in_twitter) {\n\n                // 視聴ページ以外に遷移するため、フルスクリーンを解除しないと画面が崩れる\n                if (document.fullscreenElement) {\n                    document.exitFullscreen();\n                }\n\n                this.$router.push({path: '/settings/twitter'});\n                return;\n            }\n\n            // アカウントリストの表示/非表示を切り替え\n            this.is_twitter_account_list_display = !this.is_twitter_account_list_display;\n\n            // アカウントリストが表示されているなら、ハッシュタグリストを非表示にする\n            if (this.is_twitter_account_list_display === true) {\n                this.is_hashtag_list_display = false;\n            }\n        },\n\n        // 選択されている Twitter アカウントを更新する\n        updateSelectedTwitterAccount(twitter_account: ITwitterAccount) {\n            this.selected_twitter_account_id = twitter_account.id;\n            Utils.setSettingsItem('selected_twitter_account_id', this.selected_twitter_account_id);\n            this.selected_twitter_account = twitter_account;\n\n            // Twitter アカウントリストのオーバーレイを閉じる (少し待ってから閉じたほうが体感が良い)\n            window.setTimeout(() => this.is_twitter_account_list_display = false, 150);\n        },\n\n        // キャプチャリスト内のキャプチャがクリックされたときのイベント\n        clickCapture(capture: ITweetCapture) {\n\n            // 選択されたキャプチャが3枚まで & まだ選択されていないならキャプチャをツイート対象に追加する\n            if (this.tweet_captures.length < 4 && capture.selected === false) {\n                capture.selected = true;\n                this.tweet_captures.push(capture.blob);\n            } else {\n                // ツイート対象のキャプチャになっていたら取り除く\n                const index = this.tweet_captures.findIndex(blob => blob === capture.blob);\n                if (index > -1) {\n                    this.tweet_captures.splice(index, 1);\n                }\n                // キャプチャの選択を解除\n                capture.selected = false;\n            }\n        },\n\n        // 撮ったキャプチャを親コンポーネントから受け取り、キャプチャリストに追加する\n        async addCaptureList(blob: Blob, filename: string) {\n\n            if (this.captures_element === null) {\n                this.captures_element = this.$el.querySelector('.tab-content');\n            }\n\n            // 撮ったキャプチャが50件を超えていたら、重くなるので古いものから削除する\n            // 削除する前に Blob URL を revoke してリソースを解放するのがポイント\n            if (this.captures.length > 50) {\n                URL.revokeObjectURL(this.captures[0].image_url);\n                this.captures.shift();\n            }\n\n            // キャプチャリストにキャプチャを追加\n            const blob_url = URL.createObjectURL(blob);\n            this.captures.push({\n                blob: blob,\n                filename: filename,\n                image_url: blob_url,\n                selected: false,\n                focused: false,\n            });\n\n            // キャプチャリストを下にスクロール\n            // this.$nextTick() のコールバックで DOM の更新を待つ\n            this.$nextTick(() => {\n                this.captures_element.scrollTo({\n                    top: this.captures_element.scrollHeight,\n                    behavior: 'smooth',\n                });\n            });\n        },\n\n        // 撮ったキャプチャに番組タイトルの透かしを描画する\n        async drawProgramTitleOnCapture(capture: Blob): Promise<Blob> {\n\n            // キャプチャの Blob を createImageBitmap() で Canvas に描ける ImageBitmap に変換\n            const image_bitmap = await createImageBitmap(capture);\n\n            // OffscreenCanvas が使えるなら使う (OffscreenCanvas の方がパフォーマンスが良い)\n            const canvas = ('OffscreenCanvas' in window) ?\n                new OffscreenCanvas(image_bitmap.width, image_bitmap.height) : document.createElement('canvas');\n\n            // Canvas にキャプチャを描画\n            const context = canvas.getContext('2d', {\n                alpha: false,\n                desynchronized: true,\n                willReadFrequently: false,\n            }) as OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\n            context.drawImage(image_bitmap, 0, 0);\n            image_bitmap.close();\n\n            // 描画設定\n            context.font = `bold 22px 'YakuHanJPs', 'Open Sans', 'Hiragino Sans', 'Noto Sans JP', sans-serif`; // フォント\n            context.fillStyle = 'rgba(255, 255, 255, 70%)';  // 半透明の白\n            context.shadowColor = 'rgba(0, 0, 0, 100%)'  // 影の色\n            context.shadowBlur = 4;  // 影をぼかすしきい値\n            context.shadowOffsetX = 0;  // 影のX座標\n            context.shadowOffsetY = 0;  // 影のY座標\n\n            // 番組タイトルの透かしを描画\n            switch (Utils.getSettingsItem('tweet_capture_watermark_position')) {\n                case 'TopLeft': {\n                    context.textAlign = 'left'; // 左寄せ\n                    context.textBaseline = 'top'; // ベースラインを上寄せ\n                    context.fillText(this.channel.program_present.title, 16, 12);\n                    break;\n                }\n                case 'TopRight': {\n                    context.textAlign = 'right'; // 右寄せ\n                    context.textBaseline = 'top'; // ベースラインを上寄せ\n                    context.fillText(this.channel.program_present.title, canvas.width - 16, 12);\n                    break;\n                }\n                case 'BottomLeft': {\n                    context.textAlign = 'left'; // 左寄せ\n                    context.textBaseline = 'bottom'; // ベースラインを下寄せ\n                    context.fillText(this.channel.program_present.title, 16, canvas.height - 12);\n                    break;\n                }\n                case 'BottomRight': {\n                    context.textAlign = 'right'; // 右寄せ\n                    context.textBaseline = 'bottom'; // ベースラインを下寄せ\n                    context.fillText(this.channel.program_present.title, canvas.width - 16, canvas.height - 12);\n                    break;\n                }\n            }\n\n            // Blob にして返す\n            if ('OffscreenCanvas' in window) {\n                return await (canvas as OffscreenCanvas).convertToBlob({type: 'image/jpeg', quality: 1});\n            } else {\n                return new Promise(resolve => (canvas as HTMLCanvasElement).toBlob(blob => resolve(blob), 'image/jpeg', 1));\n            }\n        },\n\n        // チャンネル名から対応する局タグを取得する\n        // とりあえず三大首都圏 + BS のみ対応\n        getChannelHashtag(channel_name: string): string | null {\n            // NHK\n            if (channel_name.startsWith('NHK総合')) {\n                return '#nhk';\n            } else if (channel_name.startsWith('NHKEテレ')) {\n                return '#etv';\n            // 民放\n            } else if (channel_name.startsWith('日テレ')) {\n                return '#ntv';\n            } else if (channel_name.startsWith('読売テレビ')) {\n                return '#ytv';\n            } else if (channel_name.startsWith('中京テレビ')) {\n                return '#chukyotv';\n            } else if (channel_name.startsWith('テレビ朝日')) {\n                return '#tvasahi';\n            } else if (channel_name.startsWith('ABCテレビ')) {\n                return '#abc';\n            } else if (channel_name.startsWith('メ~テレ')) {\n                return '#nagoyatv';\n            } else if (channel_name.startsWith('TBS') && !channel_name.includes('TBSチャンネル')) {\n                return '#tbs';\n            } else if (channel_name.startsWith('MBS')) {\n                return '#mbs';\n            } else if (channel_name.startsWith('CBC')) {\n                return '#cbc';\n            } else if (channel_name.startsWith('テレビ東京')) {\n                return '#tvtokyo';\n            } else if (channel_name.startsWith('テレビ大阪')) {\n                return '#tvo';\n            } else if (channel_name.startsWith('テレビ愛知')) {\n                return '#tva';\n            } else if (channel_name.startsWith('フジテレビ')) {\n                return '#fujitv';\n            } else if (channel_name.startsWith('関西テレビ')) {\n                return '#kantele';\n            } else if (channel_name.startsWith('東海テレビ')) {\n                return '#tokaitv';\n            // 独立局\n            } else if (channel_name.startsWith('TOKYO MX')) {\n                return '#tokyomx';\n            } else if (channel_name.startsWith('tvk')) {\n                return '#tvk';\n            } else if (channel_name.startsWith('チバテレ')) {\n                return '#chibatv';\n            } else if (channel_name.startsWith('テレ玉')) {\n                return '#teletama';\n            } else if (channel_name.startsWith('サンテレビ')) {\n                return '#suntv';\n            } else if (channel_name.startsWith('KBS京都')) {\n                return '#kbs';\n            // BS・CS\n            } else if (channel_name.startsWith('NHKBS1')) {\n                return '#nhkbs1';\n            } else if (channel_name.startsWith('NHKBSプレミアム')) {\n                return '#nhkbsp';\n            } else if (channel_name.startsWith('BS日テレ')) {\n                return '#bsntv';\n            } else if (channel_name.startsWith('BS朝日')) {\n                return '#bsasahi';\n            } else if (channel_name.startsWith('BS-TBS')) {\n                return '#bstbs';\n            } else if (channel_name.startsWith('BSテレ東')) {\n                return '#bstvtokyo';\n            } else if (channel_name.startsWith('BSフジ')) {\n                return '#bsfuji';\n            } else if (channel_name.startsWith('BS11イレブン')) {\n                return '#bs11';\n            } else if (channel_name.startsWith('BS12トゥエルビ')) {\n                return '#bs12';\n            } else if (channel_name.startsWith('AT-X')) {\n                return '#at_x';\n            }\n\n            return null;\n        },\n\n        // ハッシュタグを整形（余計なスペースなどを削り、全角ハッシュを半角ハッシュへ、全角スペースを半角スペースに置換）\n        formatHashtag(tweet_hashtag: string, from_hashtag_list: boolean = false): string {\n\n            // ハッシュとスペースの表記ゆれを統一し、連続するハッシュやスペースを1つにする\n            const tweet_hashtag_array = tweet_hashtag.trim()\n                .replaceAll('♯', '#').replaceAll('＃', '#').replace(/#{2,}/g, '#').replaceAll('　', ' ').replaceAll(/ +/g,' ').split(' ')\n                .filter(hashtag => hashtag !== '');\n\n            // ハッシュタグがついてない場合にハッシュタグを付与\n            for (let index in tweet_hashtag_array) {\n                if (!tweet_hashtag_array[index].startsWith('#')) {\n                    tweet_hashtag_array[index] = `#${tweet_hashtag_array[index]}`;\n                }\n            }\n\n            // 設定でオンになっている場合のみ、視聴中チャンネルの局タグを自動的に追加する (ハッシュタグリスト内のハッシュタグは除外)\n            if (Utils.getSettingsItem('auto_add_watching_channel_hashtag') === true && from_hashtag_list === false) {\n                const channel_hashtag = this.getChannelHashtag(this.channel.channel_name);\n                if (channel_hashtag !== null) {\n                    if (tweet_hashtag_array.includes(channel_hashtag) === false) {\n                        tweet_hashtag_array.push(channel_hashtag);\n                    }\n                }\n            }\n\n            return tweet_hashtag_array.join(' ');\n        },\n\n        // ツイートを送信する\n        async sendTweet() {\n\n            // ハッシュタグを整形\n            this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag);\n            const tweet_hashtag = this.tweet_hashtag;\n\n            // 実際に送るツイート本文を作成\n            let tweet_text = this.tweet_text;\n            if (tweet_hashtag !== '') {  // ハッシュタグが入力されているときのみ\n                switch (Utils.getSettingsItem('tweet_hashtag_position')) {\n                    // ツイート本文の前に追加する\n                    case 'Prepend': {\n                        tweet_text = `${tweet_hashtag} ${this.tweet_text}`;\n                        break;\n                    }\n                    // ツイート本文の後に追加する\n                    case 'Append': {\n                        tweet_text = `${this.tweet_text} ${tweet_hashtag}`;\n                        break;\n                    }\n                    // ツイート本文の前に追加してから改行する\n                    case 'PrependWithLineBreak': {\n                        tweet_text = `${tweet_hashtag}\\n${this.tweet_text}`;\n                        break;\n                    }\n                    // ツイート本文の後に改行してから追加する\n                    case 'AppendWithLineBreak': {\n                        tweet_text = `${this.tweet_text}\\n${tweet_hashtag}`;\n                        break;\n                    }\n                }\n            }\n\n            // multipart/form-data でツイート本文と画像（選択されている場合）を送る\n            const form_data = new FormData();\n            form_data.append('tweet', tweet_text);\n            for (let tweet_capture of this.tweet_captures) {\n                // キャプチャへの透かしの描画がオンの場合、キャプチャの Blob を透かし付きのものに差し替える\n                if (Utils.getSettingsItem('tweet_capture_watermark_position') !== 'None') {\n                    tweet_capture = await this.drawProgramTitleOnCapture(tweet_capture);\n                }\n                form_data.append('images', tweet_capture);\n            }\n\n            // 連投防止のため、フォーム上のツイート本文・キャプチャの選択・キャプチャのフォーカスを消去\n            // 送信した感を出す意味合いもある\n            for (const capture of this.captures) {\n                capture.selected = false;\n                capture.focused = false;\n            }\n            this.tweet_captures = [];\n            this.tweet_text = '';\n\n            // パネルを閉じるように親コンポーネントに伝える\n            if (Utils.getSettingsItem('fold_panel_after_sending_tweet') === true) {\n                this.$emit('panel_folding_requested');\n                (this.$refs.tweet_text as HTMLTextAreaElement).blur();  // フォーカスを外す\n            }\n\n            try {\n\n                // ツイート送信 API にリクエスト\n                const result = await Vue.axios.post(`/twitter/accounts/${this.selected_twitter_account.screen_name}/tweets`, form_data, {\n                    headers: {'Content-Type': 'multipart/form-data'},\n                });\n\n                // 成功 or 失敗に関わらず detail の内容をそのまま通知する\n                if (result.data.is_success === true) {\n                    this.player.notice(result.data.detail);\n                } else {\n                    this.player.notice('エラー: ' + result.data.detail);\n                }\n\n            } catch (error) {\n                console.error(error);\n                this.player.notice('エラー: ツイートの送信に失敗しました。');\n            }\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Twitter.vue?vue&type=template&id=adc0442c&scoped=true&\"\nimport script from \"./Twitter.vue?vue&type=script&lang=ts&\"\nexport * from \"./Twitter.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Twitter.vue?vue&type=style&index=0&id=adc0442c&prod&lang=scss&\"\nimport style1 from \"./Twitter.vue?vue&type=style&index=1&id=adc0442c&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"adc0442c\",\n  null\n  \n)\n\nexport default component.exports","\n\nimport { AxiosResponse } from 'axios';\nimport dayjs from 'dayjs';\nimport DPlayer from 'dplayer';\nimport * as DPlayerType from 'dplayer/dist/d.ts/types/DPlayer';\nimport mpegts from 'mpegts.js';\nimport Vue from 'vue';\n\nimport { ChannelTypePretty, IChannel, IChannelDefault } from '@/interface';\nimport BottomNavigation from '@/components/BottomNavigation.vue';\nimport Channel from '@/components/Panel/Channel.vue';\nimport Comment from '@/components/Panel/Comment.vue';\nimport Program from '@/components/Panel/Program.vue';\nimport Twitter from '@/components/Panel/Twitter.vue';\nimport Utils, { ChannelUtils, PlayerCaptureHandler, PlayerUtils, ProgramUtils } from '@/utils';\n\n// 低遅延モードオン時の再生バッファ (秒単位)\n// 0.4 秒程度余裕を持たせる\nconst PLAYBACK_BUFFER_SEC_LOW_LATENCY = 0.4;\n\n// 低遅延モードオフ時の再生バッファ (秒単位)\n// 5秒程度の遅延を許容する\nconst PLAYBACK_BUFFER_SEC = 5.0;\n\nexport default Vue.extend({\n    name: 'TV-Watch',\n    components: {\n        BottomNavigation,\n        Channel,\n        Comment,\n        Program,\n        Twitter,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            ProgramUtils: ProgramUtils,\n\n            // 現在時刻\n            time: dayjs().format('YYYY/MM/DD HH:mm:ss'),\n\n            // 表示されるパネルのタブ\n            tv_panel_active_tab: Utils.getSettingsItem('tv_panel_active_tab'),\n\n            // 背景の URL\n            background_url: '',\n\n            // プレイヤーのローディング状態\n            // 既定でローディングとする\n            is_loading: true,\n\n            // プレイヤーが映像の再生をバッファリングしているか\n            // 視聴開始時以外にも、ネットワークが遅くて再生が一時的に途切れたときなどで表示される\n            // 既定でバッファリング中とする\n            is_video_buffering: true,\n\n            // プレイヤーの背景を表示するか\n            // 既定で表示しない\n            is_background_display: false,\n\n            // コントロールを表示するか\n            // 既定で表示する\n            is_control_display: true,\n\n            // パネルを表示するか\n            // panel_display_state が 'AlwaysDisplay' なら常に表示し、'AlwaysFold' なら常に折りたたむ\n            // 'RestorePreviousState' なら showed_panel_last_time の値を使い､前回の状態を復元する\n            is_panel_display: (() => {\n                switch (Utils.getSettingsItem('panel_display_state')) {\n                    case 'AlwaysDisplay':\n                        return true;\n                    case 'AlwaysFold':\n                        return false;\n                    case 'RestorePreviousState':\n                        return Utils.getSettingsItem('showed_panel_last_time');\n                }\n            })() as boolean,\n\n            // フルスクリーン状態かどうか\n            is_fullscreen: false,\n\n            // IME 変換中かどうか\n            is_ime_composing: false,\n\n            // 仮想キーボードが表示されているか\n            is_virtual_keyboard_display: false,\n\n            // プレイヤーからのコメント送信から間もないかどうか\n            is_comment_send_just_did: false,\n\n            // インターバル ID\n            // ページ遷移時に setInterval(), setTimeout() の実行を止めるのに使う\n            // setInterval(), setTimeout() の返り値を登録する\n            interval_ids: [] as number[],\n\n            // コントロール表示切り替え用のインターバル ID\n            // 混ぜるとダメなので独立させる\n            control_interval_id: 0,\n\n            // ***** チャンネル *****\n\n            // チャンネル ID\n            channel_id: this.$route.params.channel_id,\n\n            // チャンネル情報\n            // IChannelDefault に情報取得が完了するまでの間表示される初期値が定義されている\n            channel: IChannelDefault,\n\n            // 前のチャンネルのチャンネル情報\n            channel_previous: IChannelDefault,\n\n            // 次のチャンネルのチャンネル情報\n            channel_next: IChannelDefault,\n\n            // チャンネル情報リスト\n            channels_list: new Map() as Map<ChannelTypePretty, IChannel[]>,\n\n            // ザッピング（「前/次のチャンネル」ボタン or 上下キーショートカット）によるチャンネル移動かどうか\n            is_zapping: false,\n\n            // ザッピングで連続してチャンネルを切り替えている最中かどうか\n            // 「連続して」とは、切り替える間隔が 0.5 秒以下で、再生セッションが初期化される前に次のチャンネルに切り替えたときのこと\n            is_zapping_continuously: false,\n\n            // ***** プレイヤー *****\n\n            // プレイヤー (DPlayer) のインスタンス\n            player: null as DPlayer | null,\n\n            // プレイヤーの破棄を許可するかどうか\n            player_can_be_destroyed: false,\n\n            // mpegts.js がサポートされているかどうか\n            // mpegts.js がサポートされていない場合は LL-HLS にフォールバックする (基本 iPhone Safari 向け)\n            is_mpegts_supported: mpegts.isSupported() === true,\n\n            // RomSound の AudioContext\n            romsounds_context: null as AudioContext | null,\n\n            // RomSound の AudioBuffer（音声データ）が入るリスト\n            romsounds_buffers: [] as AudioBuffer[] | null,\n\n            // イベントソースのインスタンス\n            eventsource: null as EventSource | null,\n\n            // フルスクリーン状態が切り替わったときのハンドラー\n            fullscreen_handler: null as () => void | null,\n\n            // キャプチャハンドラーのインスタンス\n            capture_handler: null as PlayerCaptureHandler | null,\n\n            // ***** キーボードショートカット *****\n\n            // ショートカットキーのハンドラー\n            shortcut_key_handler: null as (event: KeyboardEvent) => void | null,\n\n            // ショートカットキーの最終押下時刻のタイムスタンプ\n            shortcut_key_pressed_at: Date.now(),\n\n            // キーボードショートカットの一覧のモーダルを表示するか\n            shortcut_key_modal: false,\n\n            // キーボードショートカットの一覧に表示するショートカットキーのリスト\n            shortcut_key_list: {\n                left_column: [\n                    {\n                        name: '全般',\n                        icon: 'fluent:home-20-filled',\n                        icon_height: '22px',\n                        shortcuts: [\n                            { name: '数字キー・テンキーに対応するリモコン番号 (1~12) の地デジチャンネルに切り替える', keys: [{name: '1~9, 0, -(=), ^(~)', icon: false}] },\n                            { name: '数字キー・テンキーに対応するリモコン番号 (1~12) の BS チャンネルに切り替える', keys: [{name: 'Shift', icon: false}, {name: '1~9, 0, -(=), ^(~)', icon: false}] },\n                            { name: '前のチャンネルに切り替える', keys: [{name: 'fluent:arrow-up-12-filled', icon: true}] },\n                            { name: '次のチャンネルに切り替える', keys: [{name: 'fluent:arrow-down-12-filled', icon: true}] },\n                            { name: 'キーボードショートカットの一覧を表示する', keys: [{name: '／(？)', icon: false}] },\n                        ]\n                    },\n                    {\n                        name: 'プレイヤー',\n                        icon: 'fluent:play-20-filled',\n                        icon_height: '20px',\n                        shortcuts: [\n                            { name: '再生 / 一時停止の切り替え', keys: [{name: 'Space', icon: false}] },\n                            { name: '再生 / 一時停止の切り替え (キャプチャタブ表示時)', keys: [{name: 'Shift', icon: false}, {name: 'Space', icon: false}] },\n                            { name: 'プレイヤーの音量を上げる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-up-12-filled', icon: true}] },\n                            { name: 'プレイヤーの音量を下げる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-down-12-filled', icon: true}] },\n                            { name: '停止して0.5秒早戻し', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-left-12-filled', icon: true}] },\n                            { name: '停止して0.5秒早送り', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-right-12-filled', icon: true}] },\n                            { name: 'フルスクリーンの切り替え', keys: [{name: 'F', icon: false}] },\n                            { name: 'ライブストリームの同期', keys: [{name: 'W', icon: false}] },\n                            { name: 'Picture-in-Picture の表示切り替え', keys: [{name: 'E', icon: false}] },\n                            { name: '字幕の表示切り替え', keys: [{name: 'S', icon: false}] },\n                            { name: 'コメントの表示切り替え', keys: [{name: 'D', icon: false}] },\n                            { name: '映像をキャプチャする', keys: [{name: 'C', icon: false}] },\n                            { name: '映像をコメントを付けてキャプチャする', keys: [{name: 'V', icon: false}] },\n                            { name: 'コメント入力フォームにフォーカスする', keys: [{name: 'M', icon: false}] },\n                            { name: 'コメント入力フォームを閉じる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'M', icon: false}] },\n                        ]\n                    },\n                ],\n                right_column: [\n                    {\n                        name: 'パネル',\n                        icon: 'fluent:panel-right-20-filled',\n                        icon_height: '24px',\n                        shortcuts: [\n                            { name: 'パネルの表示切り替え', keys: [{name: 'P', icon: false}] },\n                            { name: '番組情報タブを表示する', keys: [{name: 'K', icon: false}] },\n                            { name: 'チャンネルタブを表示する', keys: [{name: 'L', icon: false}] },\n                            { name: 'コメントタブを表示する', keys: [{name: '；(＋)', icon: false}] },\n                            { name: 'Twitter タブを表示する', keys: [{name: '：(＊)', icon: false}] },\n                        ]\n                    },\n                    {\n                        name: 'Twitter',\n                        icon: 'fa-brands:twitter',\n                        icon_height: '22px',\n                        shortcuts: [\n                            { name: 'ツイート検索タブを表示する', keys: [{name: '［ (「)', icon: false}] },\n                            { name: 'タイムラインタブを表示する', keys: [{name: '］ (」)', icon: false}] },\n                            { name: 'キャプチャタブを表示する', keys: [{name: '＼(￥)', icon: false}] },\n                            { name: 'ツイート入力フォームにフォーカスを当てる/フォーカスを外す', keys: [{name: 'Tab', icon: false}] },\n                            { name: 'キャプチャにフォーカスする', keys: [{name: 'キャプチャタブを表示', icon: false}, {name: 'fluent:arrow-up-12-filled;fluent:arrow-down-12-filled;fluent:arrow-left-12-filled;fluent:arrow-right-12-filled', icon: true}] },\n                            { name: 'キャプチャを拡大表示する/<br>キャプチャの拡大表示を閉じる', keys: [{name: 'キャプチャにフォーカス', icon: false}, {name: 'Enter', icon: false}] },\n                            { name: 'キャプチャを選択する/<br>キャプチャの選択を解除する', keys: [{name: 'キャプチャにフォーカス', icon: false}, {name: 'Space', icon: false}] },\n                            { name: 'クリップボード内の画像を<br>キャプチャとして取り込む', keys: [{name: 'ツイート入力<br>フォームにフォーカス', icon: false}, {name: Utils.CtrlOrCmd(), icon: false}, {name: 'V', icon: false}] },\n                            { name: 'ツイートを送信する', keys: [{name: 'Twitter タブを表示', icon: false}, {name: Utils.CtrlOrCmd(), icon: false}, {name: 'Enter', icon: false}] },\n                        ]\n                    },\n                ]\n            }\n        }\n    },\n    // 開始時に実行\n    async created() {\n\n        // Virtual Keyboard API に対応している場合は、仮想キーボード周りの操作を自力で行うことをブラウザに伝える\n        // この視聴画面のみ\n        if ('virtualKeyboard' in navigator) {\n            navigator.virtualKeyboard.overlaysContent = true;\n            // 仮想キーボードが表示されたり閉じられたときのイベント\n            navigator.virtualKeyboard.ongeometrychange = (event) => {\n                if (event.target.boundingRect.width === 0 && event.target.boundingRect.height === 0) {\n                    this.is_virtual_keyboard_display = false;\n                } else {\n                    this.is_virtual_keyboard_display = true;\n                }\n            }\n        }\n\n        // 再生セッションを初期化\n        this.init();\n\n        // RomSound を鳴らすための AudioContext を生成\n        this.romsounds_context = new AudioContext();\n\n        // 01 ~ 14 まですべての RomSound を読み込む\n        for (let index = 1; index <= 14; index++) {\n\n            // ArrayBuffer として RomSound を取得\n            const url = `/assets/romsounds/${index.toString().padStart(2, '0')}.wav`;\n            const audio_data = await Vue.axios.get(url, {\n                baseURL: '',  // BaseURL を明示的にクライアントのルートに設定\n                responseType: 'arraybuffer',\n            });\n\n            // ArrayBuffer をデコードして AudioBuffer にし、すぐ呼び出せるように貯めておく\n            // ref: https://ics.media/entry/200427/\n            this.romsounds_buffers.push(await this.romsounds_context.decodeAudioData(audio_data.data));\n        }\n    },\n    // 終了前に実行\n    beforeDestroy() {\n\n        // 仮想キーボード周りの操作をブラウザに戻す\n        if ('virtualKeyboard' in navigator) {\n            navigator.virtualKeyboard.overlaysContent = false;\n        }\n\n        // destroy() を実行\n        // 別のページへ遷移するため、DPlayer のインスタンスを確実に破棄する\n        // さもなければ、ブラウザがリロードされるまでバックグラウンドで永遠に再生され続けてしまう\n        this.destroy(true);\n\n        // AudioContext のリソースを解放\n        this.romsounds_context.close();\n    },\n    // チャンネル切り替え時に実行\n    // コンポーネント（インスタンス）は再利用される\n    // ref: https://v3.router.vuejs.org/ja/guide/advanced/navigation-guards.html#%E3%83%AB%E3%83%BC%E3%83%88%E5%8D%98%E4%BD%8D%E3%82%AB%E3%82%99%E3%83%BC%E3%83%88%E3%82%99\n    beforeRouteUpdate(to, from, next) {\n\n        // 前の再生セッションを破棄して終了する\n        const destroy_promise = this.destroy(false, this.is_zapping_continuously);\n\n        // 連続してチャンネルを切り替えていることを示すフラグを立てる\n        // このフラグは再生セッションが初期化されるタイミングで必ず降ろされる\n        this.is_zapping_continuously = true;\n\n        // チャンネル ID を次のチャンネルのものに切り替える\n        this.channel_id = to.params.channel_id;\n\n        // 既に取得済みのチャンネル情報で、前・現在・次のチャンネル情報を更新する\n        [this.channel_previous, this.channel, this.channel_next]\n            = ChannelUtils.getPreviousAndCurrentAndNextChannel(this.channels_list, this.channel_id);\n\n        // ハッシュタグフォームのリセットがオンなら、ハッシュタグフォームを空にする\n        if (Utils.getSettingsItem('reset_hashtag_when_program_switches') === true) {\n            (this.$refs.Twitter as InstanceType<typeof Twitter>).tweet_hashtag = '';\n        }\n\n        (async () => {\n\n            // ザッピング（「前/次のチャンネル」ボタン or 上下キーショートカット）によるチャンネル移動時のみ、\n            // 0.5秒だけ待ってから新しい再生セッションを初期化する\n            // 連続してチャンネルを切り替えた際に毎回再生処理を開始しないように猶予を設ける\n            if (this.is_zapping === true) {\n                this.is_zapping = false;\n                this.interval_ids.push(window.setTimeout(() => {\n                    this.is_zapping_continuously = false;  // 新しいセッションを初期化するので、フラグを下ろす\n                    destroy_promise.then(() => this.init());  // destroy() の実行完了を待ってから初期化する\n                }, 0.5 * 1000));\n\n            // 通常のチャンネル移動時は、すぐに再生セッションを初期化する\n            } else {\n                this.is_zapping_continuously = false;  // 新しいセッションを初期化するので、フラグを下ろす\n                destroy_promise.then(() => this.init());  // destroy() の実行完了を待ってから初期化する\n            }\n        })();\n\n        // 次のルートに置き換え\n        next();\n    },\n    watch: {\n        // 前回視聴画面を開いた際にパネルが表示されていたかどうかを保存\n        is_panel_display() {\n            Utils.setSettingsItem('showed_panel_last_time', this.is_panel_display);\n        }\n    },\n    methods: {\n\n        // 再生セッションを初期化する\n        init() {\n\n            // ローディング中の背景画像をランダムで設定\n            this.background_url = PlayerUtils.generatePlayerBackgroundURL();\n\n            // コントロール表示タイマーを実行\n            this.controlDisplayTimer();\n\n            // チャンネル情報を取得\n            this.update();\n\n            // 現在時刻を1秒おきに更新\n            this.interval_ids.push(window.setInterval(() => {\n                this.time = dayjs().format('YYYY/MM/DD HH:mm:ss');\n            }, 1 * 1000));\n\n            // 00秒までの残り秒数\n            // 現在 16:01:34 なら 26 (秒) になる\n            const residue_second = 60 - (Math.floor(new Date().getTime() / 1000) % 60);\n\n            // 00秒になるまで待ってから\n            // 番組は基本1分単位で組まれているため、20秒や45秒など中途半端な秒数で更新してしまうと反映が遅れてしまう\n            this.interval_ids.push(window.setTimeout(() => {\n\n                // チャンネル情報を更新\n                this.update();\n\n                // チャンネル情報を定期的に更新\n                this.interval_ids.push(window.setInterval(() => {\n                    this.update();\n                }, 30 * 1000));  // 30秒おき\n\n            }, residue_second * 1000));\n        },\n\n        // チャンネル情報一覧を取得し、画面を更新する\n        async update() {\n\n            // チャンネル ID が未定義なら実行しない（フェイルセーフ）\n            if (this.$route.params.channel_id === undefined) {\n                return;\n            }\n\n            // チャンネル情報 API にアクセス\n            let channel_response: AxiosResponse;\n            try {\n                channel_response = await Vue.axios.get(`/channels/${this.channel_id}`);\n            } catch (error) {\n\n                // エラー内容を表示\n                console.error(error);\n\n                // ステータスコードが 422（チャンネルが存在しない）なら 404 ページにリダイレクト\n                // 正確には 404 ページ自体がルートとして存在するわけじゃないけど、そもそも存在しないページなら 404 になるので\n                if (error.response && error.response.status === 422 && error.response.data.detail === 'Specified channel_id was not found') {\n                    await this.$router.push({path: '/not-found/'});\n                }\n\n                // 処理を中断\n                return;\n            }\n\n            // 取得したチャンネル情報と現在のチャンネル情報の NID-SID-EID の組み合わせが異なる場合\n            // ハッシュタグフォームのリセットがオンなら、ハッシュタグフォームを空にする\n            const channel_response_data = channel_response.data as IChannel;\n            if ((this.channel.id !== channel_response_data.id) ||  // チャンネルが異なる\n                (this.channel.program_present !== null && channel_response_data.program_present === null) ||  // 番組情報あり→番組情報なし\n                (this.channel.program_present === null && channel_response_data.program_present !== null) ||  // 番組情報なし→番組情報あり\n                ((this.channel.program_present !== null && channel_response_data.program_present !== null) &&\n                 (this.channel.program_present.id !== channel_response_data.program_present.id))) {  // 番組情報あり→番組情報あり & 番組が異なる\n                if (Utils.getSettingsItem('reset_hashtag_when_program_switches') === true) {\n                    const twitter_component = this.$refs.Twitter as InstanceType<typeof Twitter>;\n                    twitter_component.tweet_hashtag = twitter_component.formatHashtag('');\n                }\n            }\n\n            // チャンネル情報を代入\n            this.channel = channel_response_data;\n\n            // プレイヤーがまだ初期化されていない or 他のチャンネルからの切り替えですでにプレイヤーが初期化されているけど破棄が可能\n            // update() 自体は初期化時以外にも1分ごとに定期実行されるため、その際に毎回プレイヤーを再初期化しないようにする\n            if (this.player === null || this.player_can_be_destroyed === true) {\n\n                // プレイヤー (DPlayer) 周りのセットアップ\n                this.initPlayer();\n\n                // サーバーから送られてくるメッセージのイベントハンドラーを初期化\n                this.initEventHandler();\n\n                // キャプチャのイベントハンドラーを初期化\n                this.initCaptureHandler();\n\n                // ショートカットキーのイベントハンドラーを初期化\n                // 事前に前のイベントハンドラーを削除しておかないと、重複してキー操作が実行されてしまう\n                // 直前で実行しないと上下キーでのチャンネル操作が動かなくなる\n                document.removeEventListener('keydown', this.shortcut_key_handler);\n                this.initShortcutKeyHandler();\n            }\n\n            // 副音声がない番組でプレイヤー上で副音声に切り替えられないように\n            // 音声多重放送でもデュアルモノでもない番組のみ\n            if ((this.channel.program_present === null) ||\n               ((this.channel.program_present.primary_audio_type !== '1/0+1/0モード(デュアルモノ)') &&\n                (this.channel.program_present.secondary_audio_type === null))) {\n\n                // クラスを付与\n                this.player.template.audioItem[1].classList.add('dplayer-setting-audio-item--disabled');\n\n                // 現在副音声が選択されている可能性を考慮し、明示的に主音声に切り替える\n                if (this.player.plugins.mpegts !== undefined || this.player.plugins.liveLLHLSForKonomiTV !== undefined) {\n                    window.setTimeout(() => {  // プレイヤーの初期化が完了するまで少し待つ\n                        this.player.template.audioItem[0].classList.add('dplayer-setting-audio-current');\n                        this.player.template.audioItem[1].classList.remove('dplayer-setting-audio-current');\n                        this.player.template.audioValue.textContent = this.player.tran('Primary audio');\n                        try {\n                            if (this.player.plugins.mpegts !== undefined && this.player.plugins.mpegts instanceof mpegts.MSEPlayer) {\n                                this.player.plugins.mpegts.switchPrimaryAudio();\n                            }\n                            if (this.player.plugins.liveLLHLSForKonomiTV !== undefined) {\n                                this.player.plugins.liveLLHLSForKonomiTV.switchPrimaryAudio();\n                            }\n                        } catch (error) {\n                            // pass\n                        }\n                    }, 300);\n                }\n\n            // 音声多重放送かデュアルモノなので、副音声への切り替えを有効化\n            } else {\n\n                // クラスを削除\n                this.player.template.audioItem[1].classList.remove('dplayer-setting-audio-item--disabled');\n            }\n\n            // チャンネル情報一覧 API にアクセス\n            // チャンネル情報 API と同時にアクセスするとむしろレスポンスが遅くなるので、返ってくるのを待ってから実行\n            let channels_response: AxiosResponse;\n            try {\n                channels_response = await Vue.axios.get('/channels');\n            } catch (error) {\n                console.error(error);   // エラー内容を表示\n                return;\n            }\n\n            // is_display が true または現在表示中のチャンネルのみに絞り込むフィルタ関数\n            // 放送していないサブチャンネルを表示から除外する\n            const filter = (channel: IChannel) => {\n                return channel.is_display || this.channel_id === channel.channel_id;\n            }\n\n            // チャンネルリストを再構築\n            // 1つでもチャンネルが存在するチャンネルタイプのみ表示するように\n            // たとえば SKY (スカパー！プレミアムサービス) のタブは SKY に属すチャンネルが1つもない（=受信できない）なら表示されない\n            this.channels_list = new Map();\n            this.channels_list.set('ピン留め', []);  // ピン留めタブの準備\n            if (channels_response.data.GR.length > 0) this.channels_list.set('地デジ', channels_response.data.GR.filter(filter));\n            if (channels_response.data.BS.length > 0) this.channels_list.set('BS', channels_response.data.BS.filter(filter));\n            if (channels_response.data.CS.length > 0) this.channels_list.set('CS', channels_response.data.CS.filter(filter));\n            if (channels_response.data.CATV.length > 0) this.channels_list.set('CATV', channels_response.data.CATV.filter(filter));\n            if (channels_response.data.SKY.length > 0) this.channels_list.set('SKY', channels_response.data.SKY.filter(filter));\n            if (channels_response.data.STARDIGIO.length > 0) this.channels_list.set('StarDigio', channels_response.data.STARDIGIO.filter(filter));\n\n            // ピン留めされているチャンネルの ID を取得\n            const pinned_channel_ids = Utils.getSettingsItem('pinned_channel_ids');\n\n            // ピン留めされているチャンネル情報のリスト\n            const pinned_channels = [] as IChannel[];\n\n            // チャンネル ID が一致したチャンネルの情報を保存する\n            for (const pinned_channel_id of pinned_channel_ids) {\n                const pinned_channel_type = ChannelUtils.getChannelType(pinned_channel_id, true) as ChannelTypePretty;\n                const pinned_channel = this.channels_list.get(pinned_channel_type).find((channel) => {\n                    return channel.channel_id === pinned_channel_id;  // チャンネル ID がピン留めされているチャンネルのものと同じ\n                });\n                // チャンネル情報を取得できているときだけ\n                // サブチャンネルをピン留めしたが、マルチ編成が終了して現在は放送していない場合などに備える (BS142 など)\n                // 現在放送していないチャンネルは this.channels_list に入れた段階で弾いているため、チャンネル情報を取得できない\n                if (pinned_channel !== undefined) {\n                    pinned_channels.push(pinned_channel);\n                }\n            }\n\n            // pinned_channels に何か入っていたらピン留めタブを表示するし、そうでなければ表示しない\n            if (pinned_channels.length > 0) {\n                this.channels_list.set('ピン留め', pinned_channels);\n            } else {\n                this.channels_list.delete('ピン留め');\n            }\n\n            // 前と次のチャンネル ID を取得する\n            [this.channel_previous, , this.channel_next] = ChannelUtils.getPreviousAndCurrentAndNextChannel(this.channels_list, this.channel_id);\n\n            // MediaSession API を使い、メディア通知の表示をカスタマイズ\n            if ('mediaSession' in navigator) {\n\n                // アートワークとして表示するアイコン\n                const artwork = [\n                    {src: '/assets/images/icons/icon-maskable-192px.png', sizes: '192x192', type: 'image/png'},\n                    {src: '/assets/images/icons/icon-maskable-512px.png', sizes: '512x512', type: 'image/png'},\n                ];\n\n                // メディア通知の表示をカスタマイズ\n                navigator.mediaSession.metadata = new MediaMetadata({\n                    title: this.channel.program_present ? this.channel.program_present.title : '放送休止',\n                    artist: this.channel.channel_name,\n                    artwork: artwork,\n                });\n\n                // 再生状況のステータスを設定\n                if ('setPositionState' in navigator.mediaSession) {\n                    navigator.mediaSession.setPositionState({\n                        duration: 0,  // ライブなので0（長さなしを表すらしい）に設定\n                        playbackRate: 1,  // ライブなので再生速度は常に1になる\n                    });\n                }\n\n                // メディア通知上のボタンが押されたときのイベント\n                navigator.mediaSession.setActionHandler('play', () => { this.player.play() });  // 再生\n                navigator.mediaSession.setActionHandler('pause', () => { this.player.pause() });  // 停止\n                navigator.mediaSession.setActionHandler('previoustrack', async () => {  // 前のチャンネルに切り替え\n                    navigator.mediaSession.metadata = new MediaMetadata({\n                        title: this.channel_previous.program_present ? this.channel_previous.program_present.title : '放送休止',\n                        artist: this.channel_previous.channel_name,\n                        artwork: artwork,\n                    });\n                    // ルーティングを前のチャンネルに置き換える\n                    await this.$router.push({path: `/tv/watch/${this.channel_previous.channel_id}`});\n                });\n                navigator.mediaSession.setActionHandler('nexttrack', async () => {  // 次のチャンネルに切り替え\n                    navigator.mediaSession.metadata = new MediaMetadata({\n                        title: this.channel_next.program_present ? this.channel_next.program_present.title : '放送休止',\n                        artist: this.channel_next.channel_name,\n                        artwork: artwork,\n                    });\n                    // ルーティングを次のチャンネルに置き換える\n                    await this.$router.push({path: `/tv/watch/${this.channel_next.channel_id}`});\n                });\n            }\n        },\n\n        // マウスが動いたりタップされた時のイベント\n        // 3秒間何も操作がなければコントロールを非表示にする\n        controlDisplayTimer(event: Event | null = null, is_player_event: boolean = false) {\n\n            // タッチデバイスかどうか\n            // DPlayer の UA 判定コードと同一\n            const is_touch_device = /iPhone|iPad|iPod|Windows|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\n\n            // タッチデバイスで mousemove 、あるいはタッチデバイス以外で touchmove か click が発火した時は実行じない\n            if (is_touch_device == true  && event !== null && event.type === 'mousemove') return;\n            if (is_touch_device == false && event !== null && (event.type === 'touchmove' || event.type === 'click')) return;\n\n            // 以前セットされたタイマーを止める\n            window.clearTimeout(this.control_interval_id);\n\n            // setTimeout に渡すタイマー関数\n            const timeout = () => {\n\n                // コメント入力フォームが表示されているときは実行しない\n                // タイマーを掛け直してから抜ける\n                if (this.player !== null && this.player.template.controller.classList.contains('dplayer-controller-comment')) {\n                    this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\n                    return;\n                }\n\n                // コントロールを非表示にする\n                this.is_control_display = false;\n\n                // プレイヤーのコントロールと設定パネルを非表示にする\n                if (this.player !== null) {\n                    this.player.controller.hide();\n                    this.player.setting.hide();\n                }\n            }\n\n            // タッチデバイスでプレイヤー画面がクリックされたとき\n            if (is_touch_device === true && is_player_event === true) {\n\n                // プレイヤーのコントロールの表示状態に合わせる\n                if (this.player.controller.isShow()) {\n\n                    // コントロールを表示する\n                    this.is_control_display = true;\n\n                    // プレイヤーのコントロールを表示する\n                    this.player.controller.show();\n\n                    // 3秒間何も操作がなければコントロールを非表示にする\n                    // 3秒間の間一度でもマウスが動けばタイマーが解除されてやり直しになる\n                    this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\n\n                } else {\n\n                    // コントロールを非表示にする\n                    this.is_control_display = false;\n\n                    // プレイヤーのコントロールと設定パネルを非表示にする\n                    this.player.controller.hide();\n                    this.player.setting.hide();\n                }\n\n            // それ以外の画面がクリックされたとき\n            } else {\n\n                // コントロールを表示する\n                this.is_control_display = true;\n\n                // プレイヤーのコントロールを表示する\n                if (this.player !== null) {\n                    this.player.controller.show();\n                }\n\n                // 3秒間何も操作がなければコントロールを非表示にする\n                // 3秒間の間一度でもマウスが動けばタイマーが解除されてやり直しになる\n                this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\n            }\n        },\n\n        // プレイヤーを初期化する\n        initPlayer() {\n\n            // mpegts.js を window 直下に入れる\n            // こうしないと DPlayer が mpegts.js を認識できない\n            (window as any).mpegts = mpegts;\n\n            // すでに DPlayer が初期化されている場合は破棄する\n            // チャンネル切り替え時などが該当する\n            if (this.player !== null && this.player_can_be_destroyed === true) {\n                try {\n                    this.player.destroy();\n                } catch (error) {\n                    // mpegts.js をうまく破棄できない場合\n                    if (this.player.plugins.mpegts !== undefined) {\n                        this.player.plugins.mpegts.destroy();\n                    }\n                }\n                this.player_can_be_destroyed = false;\n                this.player = null;\n            }\n\n            // 低遅延モードであれば低遅延向けの再生バッファを、そうでなければ通常の再生バッファをセット (秒単位)\n            const playback_buffer_sec = Utils.getSettingsItem('tv_low_latency_mode') ?\n                PLAYBACK_BUFFER_SEC_LOW_LATENCY : PLAYBACK_BUFFER_SEC;\n\n            // DPlayer を初期化\n            this.player = new DPlayer({\n                container: this.$el.querySelector('.watch-player__dplayer'),\n                theme: '#E64F97',  // テーマカラー\n                lang: 'ja-jp',  // 言語\n                live: true,  // ライブモード\n                liveSyncMinBufferSize: this.is_mpegts_supported ? playback_buffer_sec : 0,  // ライブモードで同期する際の最小バッファサイズ\n                loop: false,  // ループ再生 (ライブのため無効化)\n                airplay: false,  // AirPlay 機能 (うまく動かないため無効化)\n                autoplay: true,  // 自動再生\n                hotkey: false,  // ショートカットキー（こちらで制御するため無効化）\n                screenshot: false,  // スクリーンショット (こちらで制御するため無効化)\n                volume: 1.0,  // 音量の初期値\n                // 映像\n                video: {\n                    // デフォルトの品質\n                    // ラジオチャンネルでは常に 48KHz/192kbps に固定する\n                    defaultQuality: (this.channel.is_radiochannel) ? '48kHz/192kbps' : Utils.getSettingsItem('tv_streaming_quality'),\n                    // 品質リスト\n                    quality: (() => {\n                        const qualities: DPlayerType.VideoQuality[] = [];\n\n                        // ラジオチャンネル\n                        // API が受け付ける品質の値は通常のチャンネルと同じだが (手抜き…)、実際の品質は 48KHz/192kbps で固定される\n                        // ラジオチャンネルの場合は、1080p と渡しても 48kHz/192kbps 固定の音声だけの MPEG-TS が配信される\n                        if (this.channel.is_radiochannel) {\n                            // mpegts.js\n                            if (this.is_mpegts_supported === true) {\n                                qualities.push({\n                                    name: '48kHz/192kbps',\n                                    type: 'mpegts',\n                                    url: `${Utils.api_base_url}/streams/live/${this.channel_id}/1080p/mpegts`,\n                                });\n                            // LL-HLS (mpegts.js がサポートされていない場合)\n                            } else {\n                                qualities.push({\n                                    name: '48kHz/192kbps',\n                                    type: 'live-llhls-for-KonomiTV',\n                                    url: `${Utils.api_base_url}/streams/live/${this.channel_id}/1080p/ll-hls`,\n                                });\n                            }\n\n                        // 通常のチャンネル\n                        } else {\n\n                            // ブラウザが H.265 / HEVC の再生に対応していて、かつ通信節約モードが有効なとき\n                            // API に渡す画質に -hevc のプレフィックスをつける\n                            let hevc_prefix = '';\n                            if (PlayerUtils.isHEVCVideoSupported() && Utils.getSettingsItem('tv_data_saver_mode') === true) {\n                                hevc_prefix = '-hevc';\n                            }\n\n                            // 品質リストを作成\n                            for (const quality of ['1080p-60fps', '1080p', '810p', '720p', '540p', '480p', '360p', '240p']) {\n                                // mpegts.js\n                                if (this.is_mpegts_supported === true) {\n                                    qualities.push({\n                                        name: quality === '1080p-60fps' ? '1080p (60fps)' : quality,\n                                        type: 'mpegts',\n                                        url: `${Utils.api_base_url}/streams/live/${this.channel_id}/${quality}${hevc_prefix}/mpegts`,\n                                    });\n                                // LL-HLS (mpegts.js がサポートされていない場合)\n                                } else {\n                                    qualities.push({\n                                        name: quality === '1080p-60fps' ? '1080p (60fps)' : quality,\n                                        type: 'live-llhls-for-KonomiTV',\n                                        url: `${Utils.api_base_url}/streams/live/${this.channel_id}/${quality}${hevc_prefix}/ll-hls`,\n                                    });\n                                }\n                            }\n                        }\n                        return qualities;\n                    })(),\n                },\n                // コメント\n                danmaku: {\n                    user: 'KonomiTV',  // 便宜上 KonomiTV に固定\n                    speedRate: Utils.getSettingsItem('comment_speed_rate'),  // コメントの流れる速度\n                    fontSize: Utils.getSettingsItem('comment_font_size'),  // コメントのフォントサイズ\n                },\n                // コメント API バックエンド\n                apiBackend: {\n                    // コメント取得時\n                    read: (options) => {\n                        // 空の配列を返す (こうするとコメント0件と認識される)\n                        options.success([]);\n                    },\n                    // コメント送信時\n                    send: async (options) => {\n                        // Comment コンポーネント内のコメント送信メソッドを呼び出す\n                        // ref: https://stackoverflow.com/a/65729556/17124142 ($refs への型設定)\n                        await (this.$refs.Comment as InstanceType<typeof Comment>).sendComment(options);\n                    },\n                },\n                // プラグイン\n                pluginOptions: {\n                    // mpegts.js\n                    mpegts: {\n                        config: {\n                            // Web Worker を有効にする\n                            enableWorker: true,\n                            // IO 層のバッファを禁止する\n                            enableStashBuffer: false,\n                            // HTMLMediaElement の内部バッファによるライブストリームの遅延を追跡する\n                            // liveBufferLatencyChasing と異なり、いきなり再生時間をスキップするのではなく、\n                            // 再生速度を少しだけ上げることで再生を途切れさせることなく遅延を追跡する\n                            liveSync: Utils.getSettingsItem('tv_low_latency_mode'),\n                            // 許容する HTMLMediaElement の内部バッファの最大値 (秒単位, 3秒)\n                            liveSyncMaxLatency: 3,\n                            // HTMLMediaElement の内部バッファ (遅延) が liveSyncMaxLatency を超えたとき、ターゲットとする遅延時間 (秒単位)\n                            liveSyncTargetLatency: playback_buffer_sec,\n                            // ライブストリームの遅延の追跡に利用する再生速度 (x1.1)\n                            // 遅延が 3 秒を超えたとき、遅延が playback_buffer_sec を下回るまで再生速度が x1.1 に設定される\n                            liveSyncPlaybackRate: 1.1,\n                        }\n                    },\n                    // aribb24.js\n                    aribb24: {\n                        // 描画フォント\n                        normalFont: `\"${Utils.getSettingsItem('caption_font')}\", sans-serif`,\n                        // 縁取りする色\n                        forceStrokeColor: Utils.getSettingsItem('always_border_caption_text') ? true : false,\n                        // 背景色\n                        forceBackgroundColor: Utils.getSettingsItem('specify_caption_background_color') ?\n                            Utils.getSettingsItem('caption_background_color') : null,\n                        // DRCS 文字を対応する Unicode 文字に置換\n                        drcsReplacement: true,\n                        // 高解像度の字幕 Canvas を取得できるように\n                        enableRawCanvas: true,\n                        // 縁取りに strokeText API を利用\n                        useStroke: true,\n                        // Unicode 領域の代わりに私用面の領域を利用 (Windows TV 系フォントのみ)\n                        usePUA: (() => {\n                            const font = Utils.getSettingsItem('caption_font') as string;\n                            const context = document.createElement('canvas').getContext('2d');\n                            context.font = `10px ${font}`;\n                            context.fillText('Test', 0, 0);\n                            if (font.startsWith('Windows TV')) {\n                                return true;\n                            } else {\n                                return false;\n                            }\n                        })(),\n                        // 文字スーパーの PRA (内蔵音再生コマンド) のコールバックを指定\n                        PRACallback: async (index: number) => {\n\n                            // 設定で文字スーパーが無効なら実行しない\n                            if (Utils.getSettingsItem('tv_show_superimpose') === false) return;\n\n                            // index に応じた内蔵音を鳴らす\n                            // ref: https://ics.media/entry/200427/\n                            // ref: https://www.ipentec.com/document/javascript-web-audio-api-change-volume\n\n                            // 自動再生ポリシーに引っかかったなどで AudioContext が一時停止されている場合、一度 resume() する必要がある\n                            // resume() するまでに何らかのユーザーのジェスチャーが行われているはず…\n                            // なくても動くこともあるみたいだけど、念のため\n                            if (this.romsounds_context.state === 'suspended') {\n                                await this.romsounds_context.resume();\n                            }\n\n                            // index で指定された音声データを読み込み\n                            const buffer_source_node = this.romsounds_context.createBufferSource();\n                            buffer_source_node.buffer = this.romsounds_buffers[index];\n\n                            // GainNode につなげる\n                            const gain_node = this.romsounds_context.createGain();\n                            buffer_source_node.connect(gain_node);\n\n                            // 出力につなげる\n                            gain_node.connect(this.romsounds_context.destination);\n\n                            // 音量を元の wav の3倍にする (1倍だと結構小さめ)\n                            gain_node.gain.value = 3;\n\n                            // 再生開始\n                            buffer_source_node.start(0);\n                        },\n                    }\n                },\n                // 字幕\n                subtitle: {\n                    type: 'aribb24',  // aribb24.js を有効化\n                }\n            });\n\n            // デバッグ用にプレイヤーインスタンスも window 直下に入れる\n            (window as any).player = this.player;\n\n            // プレイヤー側のコントロール非表示タイマーを無効化（上書き）\n            // 無効化しておかないと、controlDisplayTimer() と競合してしまう\n            // 上書き元のコードは https://github.com/tsukumijima/DPlayer/blob/master/src/js/controller.js#L387-L395 にある\n            this.player.controller.setAutoHide = (time: number) => {};\n\n            // ***** コメント送信時のイベントハンドラー *****\n\n            // コメントが送信されたときに、プレイヤーからのコメント送信から間もないかどうかのフラグを立てる (0.1秒後に解除する)\n            // コメントを送信するとコメント入力フォームへのフォーカスが外れるため、ページ全体の keydown イベントでは\n            // Enter キーの押下がコメント送信由来のイベントかキャプチャ拡大表示由来のイベントかを判断できない\n            // そこで、コメント入力フォームフォーカス中に Enter キーが押された場合（=コメント送信時）に 0.1 秒間フラグを立てることで、\n            // ショートカットキーハンドラーがコメント送信由来のイベントであることを判定できるようにしている\n            this.player.template.commentInput.addEventListener('keydown', (event) => {\n                if (event.code === 'Enter') {\n                    this.is_comment_send_just_did = true;\n                    setTimeout(() => this.is_comment_send_just_did = false, 100);\n                }\n            });\n\n            // 「コメント送信後にコメント入力フォームを閉じる」がオフになっている時のために、プレイヤー側のコメント送信関数を上書き\n            // 上書き部分以外の処理内容は概ね https://github.com/tsukumijima/DPlayer/blob/master/src/js/comment.js に準じる\n            this.player.comment.send = () => {\n\n                // コメント入力フォームへのフォーカスを外す (「コメント送信後にコメント入力フォームを閉じる」がオンのときだけ)\n                if (Utils.getSettingsItem('close_comment_form_after_sending') === true) {\n                this.player.template.commentInput.blur();\n                }\n\n                // 空コメントを弾く\n                if (!this.player.template.commentInput.value.replace(/^\\s+|\\s+$/g, '')) {\n                    this.player.notice(this.player.tran('Please input danmaku content!'));\n                    return;\n                }\n\n                // コメントを送信\n                this.player.danmaku.send(\n                    {\n                        text: this.player.template.commentInput.value,\n                        color: this.player.container.\n                            querySelector<HTMLInputElement>('.dplayer-comment-setting-color input:checked').value,\n                        type: this.player.container.\n                            querySelector<HTMLInputElement>('.dplayer-comment-setting-type input:checked').value as DPlayerType.DanmakuType,\n                        size: this.player.container.\n                            querySelector<HTMLInputElement>('.dplayer-comment-setting-size input:checked').value as DPlayerType.DanmakuSize,\n                    },\n                    // 送信完了後にコメント入力フォームを閉じる ([コメント送信後にコメント入力フォームを閉じる] がオンのときだけ)\n                    () => {\n                        if (Utils.getSettingsItem('close_comment_form_after_sending') === true) {\n                            this.player.comment.hide();\n                        }\n                    },\n                    true,\n                );\n\n                // 重複送信を防ぐ\n                this.player.template.commentInput.value = '';\n            };\n\n            // ***** 設定パネルのショートカット一覧へのリンクのイベントハンドラー *****\n\n            // 設定パネルにショートカット一覧を表示するリンクを動的に追加する\n            // タッチデバイスでは実行しない\n            const is_touch_device = /iPhone|iPad|iPod|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\n            if (is_touch_device === false) {\n                this.player.template.settingOriginPanel.insertAdjacentHTML('beforeend', `\n                <div class=\"dplayer-setting-item dplayer-setting-keyboard-shortcut\">\n                    <span class=\"dplayer-label\">キーボードショートカット</span>\n                    <div class=\"dplayer-toggle\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\">\n                            <path d=\"M22 16l-10.105-10.6-1.895 1.987 8.211 8.613-8.211 8.612 1.895 1.988 8.211-8.613z\"></path>\n                        </svg>\n                    </div>\n                </div>`)\n\n                // 設定パネルの高さを再設定\n                const settingOriginPanelHeight = this.player.template.settingOriginPanel.scrollHeight;\n                this.player.template.settingBox.style.clipPath = `inset(calc(100% - ${settingOriginPanelHeight}px) 0 0 round 7px)`;\n\n                // 設定パネルのショートカット一覧を表示するリンクがクリックされたときのイベント\n                // リアクティブではないので、手動でやらないといけない…\n                this.$el.querySelector('.dplayer-setting-keyboard-shortcut').addEventListener('click', () => {\n                    this.player.setting.hide();  // 設定パネルを閉じる\n                    this.shortcut_key_modal = true;\n                });\n            }\n\n            // ***** フルスクリーンのイベントハンドラー *****\n\n            // フルスクリーンにするコンテナ要素（ページ全体）\n            const fullscreen_container = document.querySelector('.v-application');\n            this.fullscreen_handler = () => this.is_fullscreen = this.player.fullScreen.isFullScreen();\n            if (fullscreen_container.onfullscreenchange !== undefined) {\n                fullscreen_container.addEventListener('fullscreenchange', this.fullscreen_handler);\n            } else {\n                fullscreen_container.addEventListener('webkitfullscreenchange', this.fullscreen_handler);\n            }\n\n            // DPlayer のフルスクリーン関係のメソッドを無理やり上書きし、KonomiTV の UI と統合する\n            // 上書き元のコードは https://github.com/tsukumijima/DPlayer/blob/master/src/js/fullscreen.js にある\n            // フルスクリーンかどうか\n            this.player.fullScreen.isFullScreen = (type: string) => {\n                return !!(document.fullscreenElement || document.webkitFullscreenElement);\n            }\n            // フルスクリーンをリクエスト\n            this.player.fullScreen.request = (type: string) => {\n\n                // すでにフルスクリーンだったらキャンセルする\n                if (this.player.fullScreen.isFullScreen()) {\n                    this.player.fullScreen.cancel();\n                    return;\n                }\n\n                // フルスクリーンをリクエスト\n                // Safari は webkit のベンダープレフィックスが必要\n                fullscreen_container.requestFullscreen = fullscreen_container.requestFullscreen || fullscreen_container.webkitRequestFullscreen;\n                if (fullscreen_container.requestFullscreen) {\n                    fullscreen_container.requestFullscreen();\n                } else {\n                    // フルスクリーンがサポートされていない場合はエラーを表示\n                    this.player.notice('iPhone Safari は動画のフルスクリーン表示に対応していません。');\n                    return;\n                }\n\n                // 画面の向きを横に固定 (Screen Orientation API がサポートされている場合)\n                if (screen.orientation) {\n                    screen.orientation.lock('landscape').catch(() => {});\n                }\n            }\n            // フルスクリーンをキャンセル\n            this.player.fullScreen.cancel = (type: string) => {\n\n                // フルスクリーンを終了\n                // Safari は webkit のベンダープレフィックスが必要\n                document.exitFullscreen = document.exitFullscreen || document.webkitExitFullscreen;\n                if (document.exitFullscreen) {\n                    document.exitFullscreen();\n                }\n\n                // 画面の向きの固定を解除\n                if (screen.orientation) {\n                    screen.orientation.unlock();\n                }\n            }\n\n            // ***** 再生/停止/画質切り替え時のイベントハンドラー *****\n\n            // 再生/停止されたとき\n            // 通知バーからの制御など、画面から以外の外的要因で再生/停止が行われる事もある\n            const on_play_or_pause = () => {\n\n                // まだ設定パネルが表示されていたら非表示にする\n                this.player.setting.hide();\n\n                // コントロールを表示する\n                this.controlDisplayTimer();\n            }\n            this.player.on('play', on_play_or_pause);\n            this.player.on('pause', on_play_or_pause);\n\n            // 画質の切り替えが開始されたときのイベント\n            this.player.on('quality_start', () => {\n\n                // ローディング中の背景画像をランダムで設定\n                this.background_url = PlayerUtils.generatePlayerBackgroundURL();\n\n                // イベントソースを閉じる\n                if (this.eventsource !== null) {\n                    this.eventsource.close();\n                    this.eventsource = null;\n                }\n\n                // 新しい EventSource を作成\n                // 画質ごとにイベント API は異なるため、一度破棄してから作り直す\n                this.initEventHandler();\n            });\n\n            // 停止状態でかつ再生時間からバッファが 30 秒以上離れていないかを監視し、そうなっていたら強制的にシークする\n            // mpegts.js の仕様上、MSE に未再生のバッファがたまり過ぎると SourceBuffer が追加できなくなるため、強制的に接続が切断されてしまう\n            // LL-HLS 再生時も、ずっと停止したままだとプレイリストやセグメントに HTTP リクエストされなくなり、サーバー側でタイムアウトさせられてしまう\n            // mpegts.js 再生時は 60 秒、LL-HLS 再生時は 30 秒おきに監視する (LL-HLS 再生時はバッファの状態に関わらずシークする)\n            if (this.is_mpegts_supported === true) {\n                this.interval_ids.push(window.setInterval(() => {\n                    if (this.player.video.paused && this.player.video.buffered.end(0) - this.player.video.currentTime > 30) {\n                        this.player.sync();\n                    }\n                }, 60 * 1000));\n            } else {\n                this.interval_ids.push(window.setInterval(() => {\n                    if (this.player.video.paused) {\n                        this.player.sync();\n                    }\n                }, 30 * 1000));\n            }\n\n            // ***** 文字スーパーのイベントハンドラー *****\n\n            (async () => {\n\n                // 文字スーパーが初期化されるまで待つ\n                while (this.player.plugins.aribb24Superimpose === undefined) {\n                    await Utils.sleep(0.1);  // 0.1 秒待つ\n                }\n\n                // 設定で文字スーパーが有効\n                // 字幕が非表示の場合でも、文字スーパーは表示する\n                if (Utils.getSettingsItem('tv_show_superimpose') === true) {\n                    this.player.plugins.aribb24Superimpose.show();\n                    this.player.on('subtitle_hide', () => {\n                        this.player.plugins.aribb24Superimpose.show();\n                    });\n                // 設定で文字スーパーが無効\n                } else {\n                    this.player.plugins.aribb24Superimpose.hide();\n                    this.player.on('subtitle_show', () => {\n                        this.player.plugins.aribb24Superimpose.hide();\n                    });\n                }\n\n            })();\n        },\n\n        // イベントハンドラーを初期化する\n        initEventHandler() {\n\n            // ***** プレイヤー再生開始時のイベントハンドラー *****\n\n            // 必ず最初はローディング状態とする\n            this.is_loading = true;\n\n            // 音量を 0 に設定\n            this.player.video.volume = 0;\n\n            // video 要素の crossOrigin 属性を 'anonymous' に設定\n            // これを設定しないと、クロスオリジンの場合にキャプチャができない\n            this.player.video.crossOrigin = 'anonymous';\n\n            // LL-HLS 再生時のみ、ローディングが終わるまでは表示上再生状態を維持する\n            // play() が正常に実行できればいいのだが、Safari の自動再生制限により失敗することがあるので、\n            // その際はアイコンの HTML を書き換えたりして強制的に再生状態にする (苦肉の策)\n            if (this.is_mpegts_supported === false) {\n                const force_play = () => {\n                    this.player.video.play().catch(() => {\n                        console.warn('HTMLVideoElement.play() rejected. run fallback.');\n                        const pause_icon = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 17 32\"><path d=\"M14.080 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048zM2.88 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048z\"></path></svg>';\n                        this.player.template.playButton.innerHTML = pause_icon;\n                        this.player.template.mobilePlayButton.innerHTML = pause_icon;\n                        this.player.container.classList.remove('dplayer-paused');\n                        this.player.container.classList.add('dplayer-playing');\n                        this.player.danmaku.play();\n                    });\n                    // ローディング表示が消えたタイミングでイベントを登録解除\n                    if (this.is_loading === false) {\n                        this.player.video.removeEventListener('pause', force_play);\n                        return;\n                    }\n                };\n                this.player.video.addEventListener('pause', force_play);\n            }\n\n            // 再生バッファを調整し、再生準備ができた段階でプレイヤーの背景を非表示にするイベントを登録\n            // 実際に再生可能になるのを待ってから実行する\n            // 画質切り替え時にも実行する必要があるので、あえてこの位置に記述している\n            const on_canplay = async () => {\n\n                // 自分自身のイベントを登録解除 (重複実行を避ける)\n                this.player.video.oncanplay = null;\n                this.player.video.oncanplaythrough = null;\n\n                // mpegts.js 利用時のみ実行\n                if (this.is_mpegts_supported === true) {\n\n                    // 再生バッファ調整のため、一旦停止させる\n                    // this.player.video.pause() を使うとプレイヤーの UI アイコンが停止してしまうので、代わりに playbackRate を使う\n                    this.player.video.playbackRate = 0;\n\n                    // 再生バッファを取得する (取得に失敗した場合は 0 を返す)\n                    const get_playback_buffer_sec = (): number => {\n                        try {\n                            return (Math.round((this.player.video.buffered.end(0) - this.player.video.currentTime) * 1000) / 1000);\n                        } catch (error) {\n                            // まだ再生準備が整っていないなどの理由で、再生バッファの取得に失敗した場合\n                            return 0;\n                        }\n                    }\n\n                    // 低遅延モードであれば低遅延向けの再生バッファを、そうでなければ通常の再生バッファをセット (秒単位)\n                    const playback_buffer_sec = Utils.getSettingsItem('tv_low_latency_mode') ?\n                        PLAYBACK_BUFFER_SEC_LOW_LATENCY : PLAYBACK_BUFFER_SEC;\n\n                    // 再生バッファが playback_buffer_sec を超えるまで 0.1 秒おきに再生バッファをチェックする\n                    // 再生バッファが playback_buffer_sec を切ると再生が途切れやすくなるので (特に動きの激しい映像)、\n                    // 再生開始までの時間を若干犠牲にして、再生バッファの調整と同期に時間を割く\n                    // playback_buffer_sec の値は mpegts.js に渡す liveSyncTargetLatency プロパティに渡す値と共通\n                    let current_playback_buffer_sec = get_playback_buffer_sec();\n                    while (current_playback_buffer_sec < playback_buffer_sec) {\n                        await Utils.sleep(0.1);\n                        current_playback_buffer_sec = get_playback_buffer_sec();\n                    }\n\n                    // 再生開始\n                    this.player.video.playbackRate = 1;\n                }\n\n                // 再生が一時的に止まってバッファリングしているとき/再び再生されはじめたときのイベント\n                // バッファリングの Progress Circular の表示を制御する\n                // 同期が終わってからの方が都合が良い\n                this.player.video.addEventListener('waiting', () => this.is_video_buffering = true);\n                this.player.video.addEventListener('playing', () => this.is_video_buffering = false);\n\n                // ローディング状態を解除し、映像を表示する\n                this.is_loading = false;\n\n                // バッファリング中の Progress Circular を非表示にする\n                this.is_video_buffering = false;\n\n                if (this.channel.is_radiochannel) {\n                    // ラジオチャンネルでは引き続き映像の代わりとして背景画像を表示し続ける\n                    this.is_background_display = true;\n                } else {\n                    // 背景画像をフェードアウト\n                    this.is_background_display = false;\n                }\n\n                // 再生開始時に音量を徐々に上げる\n                // いきなり再生されるよりも体験が良い\n                const current_volume = this.player.user.get('volume');\n                while ((this.player.video.volume + 0.05) < current_volume) {\n                    // 小数第2位以下を切り捨てて、浮動小数の誤差で 1 (100%) を微妙に超えてしまいエラーになるのを避ける\n                    this.player.video.volume = Utils.mathFloor(this.player.video.volume + 0.05, 2);\n                    await Utils.sleep(0.02);\n                }\n                this.player.video.volume = current_volume;\n            }\n            this.player.video.oncanplay = on_canplay;\n            this.player.video.oncanplaythrough = on_canplay;\n\n            // ***** KonomiTV サーバーのイベント API のイベントハンドラー *****\n\n            // EventSource を作成\n            const eventsource_url = (this.player.quality.url as string).replace('/mpegts', '/events').replace(/\\/ll-hls.*/, '/events');\n            this.eventsource = new EventSource(eventsource_url);\n\n            // 初回接続時のイベント\n            this.eventsource.addEventListener('initial_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n                console.log(`[initial_update] Status: ${event.status} / Detail: ${event.detail}`);\n\n                // ステータスごとに処理を振り分け\n                switch (event.status) {\n\n                    // Status: Standby\n                    case 'Standby': {\n\n                        // バッファリング中の Progress Circular を表示\n                        this.is_video_buffering = true;\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n                        break;\n                    }\n                }\n            });\n\n            // ステータスが更新されたときのイベント\n            this.eventsource.addEventListener('status_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n                console.log(`[status_update] Status: ${event.status} / Detail: ${event.detail}`);\n\n                // 視聴者数を更新\n                this.channel.viewers = event.clients_count;\n\n                // ステータスごとに処理を振り分け\n                switch (event.status) {\n\n                    // Status: Standby\n                    case 'Standby': {\n\n                        // ステータス詳細をプレイヤーに表示\n                        if (!this.player.template.notice.textContent.includes('画質を')) {  // 画質切り替えの表示を上書きしない\n                            this.player.notice(event.detail, -1);\n                        }\n\n                        // バッファリング中の Progress Circular を表示\n                        this.is_video_buffering = true;\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n                        break;\n                    }\n\n                    // Status: ONAir\n                    case 'ONAir': {\n\n                        // ステータス詳細をプレイヤーから削除\n                        if (!this.player.template.notice.textContent.includes('画質を')) {  // 画質切り替えの表示を上書きしない\n                            this.player.notice(this.player.template.notice.textContent, 0.000001);\n                        }\n\n                        // LL-HLS ストリーミング時のみ、このタイミングで映像をロードして再生を開始する\n                        if (this.is_mpegts_supported === false) {\n                            this.player.video.load();\n                            this.player.video.play();\n                            on_canplay();\n                        }\n\n                        // 前のプレイヤーインスタンスの Picture-in-Picture ウインドウが残っている場合、終了させてからもう一度切り替える\n                        // チャンネル切り替えが完了しても前の Picture-in-Picture ウインドウは再利用されないため、一旦終了させるしかない\n                        if (document.pictureInPictureElement) {\n                            document.exitPictureInPicture();\n                            this.player.video.requestPictureInPicture();\n                        }\n                        break;\n                    }\n\n                    // Status: Restart\n                    case 'Restart': {\n\n                        // ステータス詳細をプレイヤーに表示\n                        this.player.notice(event.detail, -1);\n\n                        // プレイヤーを再起動する\n                        this.player.switchVideo({\n                            url: this.player.quality.url,\n                            type: this.player.quality.type,\n                        });\n\n                        // 再起動しただけでは自動再生されないので、明示的に\n                        this.player.play();\n\n                        // バッファリング中の Progress Circular を表示\n                        this.is_video_buffering = true;\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n                        break;\n                    }\n\n                    // Status: Offline\n                    // 基本的に Offline は放送休止中やエラーなどで復帰の見込みがない状態\n                    case 'Offline': {\n\n                        if (this.player !== null) {\n\n                            // ステータス詳細をプレイヤーに表示\n                            // 動画の読み込みエラーが送出された時にメッセージを上書きする\n                            this.player.notice(event.detail, -1);\n                            this.player.video.onerror = () => {\n                                this.player.notice(event.detail, -1);\n                                this.player.video.onerror = null;\n                            }\n\n                            // 描画されたコメントをクリア\n                            this.player.danmaku.clear()\n\n                            // 動画を停止する\n                            this.player.video.pause();\n                        }\n\n                        // イベントソースを閉じる（復帰の見込みがないため）\n                        if (this.eventsource !== null) {\n                            this.eventsource.close();\n                            this.eventsource = null;\n                        }\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n\n                        // バッファリング中の Progress Circular を非表示にする\n                        this.is_loading = false;\n                        this.is_video_buffering = false;\n                        break;\n                    }\n                }\n            });\n\n            // ステータス詳細が更新されたときのイベント\n            this.eventsource.addEventListener('detail_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n                console.log(`[detail_update] Status: ${event.status} Detail:${event.detail}`);\n\n                // 視聴者数を更新\n                this.channel.viewers = event.clients_count;\n\n                // ステータスごとに処理を振り分け\n                switch (event.status) {\n\n                    // Status: Standby\n                    case 'Standby': {\n\n                        // ステータス詳細をプレイヤーに表示\n                        this.player.notice(event.detail, -1);\n\n                        // プレイヤーの背景を表示する\n                        if (!this.is_background_display) {\n                            this.is_background_display = true;\n                        }\n                        break;\n                    }\n                }\n            });\n\n            // クライアント数（だけ）が更新されたときのイベント\n            this.eventsource.addEventListener('clients_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n\n                // 視聴者数を更新\n                this.channel.viewers = event.clients_count;\n            });\n        },\n\n        // ショートカットキーを初期化する\n        initShortcutKeyHandler() {\n\n            const twitter_component = (this.$refs.Twitter as InstanceType<typeof Twitter>);\n            const tweet_form_element = twitter_component.$el.querySelector<HTMLDivElement>('.tweet-form__textarea');\n\n            // IME 変換中の状態を保存する\n            for (const element of document.querySelectorAll('input[type=text],input[type=search],textarea')) {\n                element.addEventListener('compositionstart', () => this.is_ime_composing = true);\n                element.addEventListener('compositionend', () => this.is_ime_composing = false);\n            }\n\n            // ショートカットキーハンドラー\n            this.shortcut_key_handler = async (event: KeyboardEvent) => {\n\n                const tag = document.activeElement.tagName.toUpperCase();\n                const editable = document.activeElement.getAttribute('contenteditable');\n\n                // 矢印キーのデフォルトの挙動（スクロール）を抑制\n                // キーリピート周りで間引かれるイベントでも event.preventDefault() しないとスクロールしてしまうため、\n                // 一番最初のタイミングでやっておく\n                // input・textarea・contenteditable 状態の要素では実行しない\n                if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.code) &&\n                    (tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true')) {\n                    event.preventDefault();\n                }\n\n                // キーリピート（押しっぱなし）状態の場合は基本実行しない\n                // 押し続けると何度も同じ動作が実行されて大変な事になる…\n                // ただ、キーリピートを使いたい場合もあるので、リピート状態をフラグとして保存する\n                let is_repeat = false;\n                if (event.repeat) is_repeat = true;\n\n                // キーリピート状態は event.repeat を見る事でだいたい検知できるが、最初の何回かは検知できないこともある\n                // そこで、0.05 秒以内に連続して発火したキーイベントは間引きも兼ねて実行しない\n                const now = Date.now();\n                if (now - this.shortcut_key_pressed_at < (0.05 * 1000)) return;\n                this.shortcut_key_pressed_at = now;  // 最終押下時刻を更新\n\n                // 無名関数の中で実行する\n                const result = await (async (): Promise<boolean> => {\n\n                    // ***** ツイート入力フォームにフォーカスを当てる/フォーカスを外す *****\n\n                    // ツイート入力フォームにフォーカスしているときもこのショートカットが動くようにする\n                    // 以降の if 文で textarea フォーカス時のイベントをすべて弾いてしまっているため、前に持ってきている\n                    // Tab キーに割り当てている関係で、IME 変換中は実行しない（IME 変換中に実行すると文字変換ができなくなる）\n                    if (((tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') ||\n                        (document.activeElement === tweet_form_element)) && this.is_ime_composing === false) {\n                        if (event.code === 'Tab') {\n\n                            // ツイート入力フォームにフォーカスがすでに当たっていたら、フォーカスを外して終了\n                            if (document.activeElement === tweet_form_element) {\n                                tweet_form_element.blur();\n                                return true;\n                            }\n\n                            // パネルを開く\n                            this.is_panel_display = true;\n\n                            // どのタブを開いていたかに関係なく Twitter タブに切り替える\n                            this.tv_panel_active_tab = 'Twitter';\n\n                            // ツイート入力フォームの textarea 要素にフォーカスを当てる\n                            tweet_form_element.focus();\n\n                            // フォーカスを当てると勝手に横方向にスクロールされてしまうので、元に戻す\n                            this.$el.scrollLeft = 0;\n\n                            window.setTimeout(() => {\n\n                                // 他のタブから切り替えると一発でフォーカスが当たらないことがあるので、ちょっとだけ待ってから念押し\n                                // $nextTick() だと上手くいかなかった…\n                                tweet_form_element.focus();\n\n                                // フォーカスを当てると勝手に横方向にスクロールされてしまうので、元に戻す\n                                this.$el.scrollLeft = 0;\n\n                            }, 100);  // 0.1秒\n\n                            return true;\n                        }\n                    }\n\n                    // ***** ツイートを送信する *****\n\n                    // ツイート入力フォームにフォーカスしているときもこのショートカットが動くようにする\n                    // Twitter タブ以外を開いているときは実行しない\n                    // 以降の if 文で textarea フォーカス時のイベントをすべて弾いてしまっているため、前に持ってきている\n                    if (((tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') ||\n                        (document.activeElement === tweet_form_element)) &&\n                        this.tv_panel_active_tab === 'Twitter' &&\n                        this.is_ime_composing === false) {\n                        // (Ctrl or Cmd or Shift) + Enter\n                        // Shift + Enter は隠し機能（間違えたとき用）\n                        if ((event.ctrlKey || event.metaKey || event.shiftKey) && event.code === 'Enter') {\n                            twitter_component.$el.querySelector<HTMLDivElement>('.tweet-button').click();\n                            return true;\n                        }\n                    }\n\n                    // ***** コメント入力フォームを閉じる *****\n\n                    // プレイヤーが初期化されていない時・Shift / Alt キーが一緒に押された時に作動しないように\n                    if (this.player !== null && !event.shiftKey && !event.altKey) {\n\n                        // コメント入力フォームが表示されているときのみ\n                        if (this.player.template.controller.classList.contains('dplayer-controller-comment')) {\n                            // Ctrl or Cmd + M\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'KeyM') {\n                                this.player.comment.hide();\n                                return true;\n                            }\n                        }\n                    }\n\n                    // input・textarea・contenteditable 状態の要素でなければ\n                    // 文字入力中にショートカットキーが作動してしまわないように\n                    if (tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') {\n\n                        // キーリピートでない時・Ctrl / Cmd / Alt キーが一緒に押された時に作動しないように\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.altKey) {\n\n                            // ***** 数字キーでチャンネルを切り替える *****\n\n                            // Ctrl / Cmd キーが同時押しされていたら BS チャンネルの方を選局する\n                            const switch_channel_type = (event.shiftKey) ? 'BS' : 'GR';\n\n                            // 1～9キー\n                            let switch_remocon_id = null;\n                            if (event.code === 'Digit1' || event.code === 'Digit2' || event.code === 'Digit3' ||\n                                event.code === 'Digit4' || event.code === 'Digit5' || event.code === 'Digit6' ||\n                                event.code === 'Digit7' || event.code === 'Digit8' || event.code === 'Digit9') {\n                                switch_remocon_id = Number(event.code.replace('Digit', ''));\n                            }\n                            // 0キー: 10に割り当て\n                            if (event.code === 'Digit0') switch_remocon_id = 10;\n                            // -キー: 11に割り当て\n                            if (event.code === 'Minus') switch_remocon_id = 11;\n                            // ^キー: 12に割り当て\n                            if (event.code === 'Equal') switch_remocon_id = 12;\n                            // 1～9キー (テンキー)\n                            if (event.code === 'Numpad1' || event.code === 'Numpad2' || event.code === 'Numpad3' ||\n                                event.code === 'Numpad4' || event.code === 'Numpad5' || event.code === 'Numpad6' ||\n                                event.code === 'Numpad7' || event.code === 'Numpad8' || event.code === 'Numpad9') {\n                                switch_remocon_id = Number(event.code.replace('Numpad', ''));\n                            }\n                            // 0キー (テンキー): 10に割り当て\n                            if (event.code === 'Numpad0') switch_remocon_id = 10;\n\n                            // この時点でリモコン番号が取得できていたら実行\n                            if (switch_remocon_id !== null) {\n\n                                // 切り替え先のチャンネルを取得する\n                                const switch_channel = ChannelUtils.getChannelFromRemoconID(\n                                    this.channels_list, switch_channel_type, switch_remocon_id);\n\n                                // チャンネルが取得できていれば、ルーティングをそのチャンネルに置き換える\n                                // 押されたキーに対応するリモコン番号のチャンネルがない場合や、現在と同じチャンネル ID の場合は何も起こらない\n                                if (switch_channel !== null && switch_channel.channel_id !== this.channel_id) {\n                                    await this.$router.push({path: `/tv/watch/${switch_channel.channel_id}`});\n                                    return true;\n                                }\n                            }\n                        }\n\n                        // キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\n\n                            // ***** キーボードショートカットの一覧を表示する *****\n\n                            // /(?)キー: キーボードショートカットの一覧を表示する\n                            if (event.code === 'Slash') {\n                                this.shortcut_key_modal = !this.shortcut_key_modal;\n                                return true;\n                            }\n\n                            // ***** パネルのタブを切り替える *****\n\n                            // Pキー: パネルの表示切り替え\n                            if (event.code === 'KeyP') {\n                                this.is_panel_display = !this.is_panel_display;\n                                return true;\n                            }\n                            // Kキー: 番組情報タブ\n                            if (event.code === 'KeyK') {\n                                this.tv_panel_active_tab = 'Program';\n                                return true;\n                            }\n                            // Lキー: チャンネルタブ\n                            if (event.code === 'KeyL') {\n                                this.tv_panel_active_tab = 'Channel';\n                                return true;\n                            }\n                            // ;(+)キー: コメントタブ\n                            if (event.code === 'Semicolon') {\n                                this.tv_panel_active_tab = 'Comment';\n                                return true;\n                            }\n                            // :(*)キー: Twitterタブ\n                            if (event.code === 'Quote') {\n                                this.tv_panel_active_tab = 'Twitter';\n                                return true;\n                            }\n\n                            // ***** Twitter タブ内のタブを切り替える *****\n\n                            // [(「): ツイート検索タブ\n                            if (event.code === 'BracketRight') {\n                                twitter_component.twitter_active_tab = 'Search';\n                                return true;\n                            }\n                            // ](」): タイムラインタブ\n                            if (event.code === 'Backslash') {\n                                twitter_component.twitter_active_tab = 'Timeline';\n                                return true;\n                            }\n                            // \\(￥)キー: キャプチャタブ\n                            if (event.code === 'IntlRo') {\n                                twitter_component.twitter_active_tab = 'Capture';\n                                return true;\n                            }\n                        }\n\n                        // Twitter タブ内のキャプチャタブが表示されている & Ctrl / Cmd / Shift / Alt のいずれも押されていないときだけ\n                        // キャプチャタブが表示されている時は、プレイヤー操作側の矢印キー/スペースキーのショートカットは動作しない（キーが重複するため）\n                        if (this.tv_panel_active_tab === 'Twitter' && twitter_component.twitter_active_tab === 'Capture' &&\n                            (!event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey)) {\n\n                            // ***** キャプチャにフォーカスする *****\n\n                            if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.code)) {\n\n                                // キャプチャリストに一枚もキャプチャがない\n                                if (twitter_component.captures.length === 0) return false;\n\n                                // まだどのキャプチャにもフォーカスされていない場合は、一番新しいキャプチャにフォーカスして終了\n                                if (twitter_component.captures.some(capture => capture.focused === true) === false) {\n                                    twitter_component.captures[twitter_component.captures.length - 1].focused = true;\n                                    return true;\n                                }\n\n                                // 現在フォーカスされているキャプチャのインデックスを取得\n                                const focused_capture_index = twitter_component.captures.findIndex(capture => capture.focused === true);\n\n                                // ↑キー: 2つ前のキャプチャにフォーカスする\n                                // キャプチャリストは2列で並んでいるので、2つ後のキャプチャが現在フォーカスされているキャプチャの直上になる\n                                if (event.code === 'ArrowUp') {\n                                    // 2つ前のキャプチャがないなら実行しない\n                                    if (focused_capture_index - 2 < 0) return false;\n                                    twitter_component.captures[focused_capture_index - 2].focused = true;\n                                }\n\n                                // ↓キー: 2つ後のキャプチャにフォーカスする\n                                // キャプチャリストは2列で並んでいるので、2つ後のキャプチャが現在フォーカスされているキャプチャの直下になる\n                                if (event.code === 'ArrowDown') {\n                                    // 2つ後のキャプチャがないなら実行しない\n                                    if (focused_capture_index + 2 > (twitter_component.captures.length - 1)) return false;\n                                    twitter_component.captures[focused_capture_index + 2].focused = true;\n                                }\n\n                                // ←キー: 1つ前のキャプチャにフォーカスする\n                                if (event.code === 'ArrowLeft') {\n                                    // 1つ前のキャプチャがないなら実行しない\n                                    if (focused_capture_index - 1 < 0) return false;\n                                    twitter_component.captures[focused_capture_index - 1].focused = true;\n                                }\n\n                                // ←キー: 1つ後のキャプチャにフォーカスする\n                                if (event.code === 'ArrowRight') {\n                                    // 1つ後のキャプチャがないなら実行しない\n                                    if (focused_capture_index + 1 > (twitter_component.captures.length - 1)) return false;\n                                    twitter_component.captures[focused_capture_index + 1].focused = true;\n                                }\n\n                                // 現在フォーカスされているキャプチャのフォーカスを外す\n                                twitter_component.captures[focused_capture_index].focused = false;\n\n                                // 拡大表示のモーダルが開かれている場合は、フォーカスしたキャプチャをモーダルにセット\n                                // こうすることで、QuickLook みたいな挙動になる\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\n                                if (twitter_component.zoom_capture_modal === true) {\n                                    twitter_component.zoom_capture = focused_capture;\n                                }\n\n                                // 現在フォーカスされているキャプチャが見える位置までスクロール\n                                // block: 'nearest' の指定で、上下どちらにスクロールしてもフォーカスされているキャプチャが常に表示されるようになる\n                                const focused_capture_element =\n                                    twitter_component.$el.querySelector(`img[src=\"${focused_capture.image_url}\"]`).parentElement;\n                                if (is_repeat) {\n                                    // キーリピート状態ではスムーズスクロールがフォーカスの移動に追いつけずスクロールの挙動がおかしくなるため、\n                                    // スムーズスクロールは無効にしてある\n                                    focused_capture_element.scrollIntoView({block: 'nearest', inline: 'nearest', behavior: 'auto'});\n                                } else {\n                                    focused_capture_element.scrollIntoView({block: 'nearest', inline: 'nearest', behavior: 'smooth'});\n                                }\n                                return true;\n                            }\n\n                            // ***** キャプチャを拡大表示する/拡大表示を閉じる *****\n\n                            if (event.code === 'Enter') {\n\n                                // Enter キーの押下がプレイヤー側のコメント送信由来のイベントの場合は実行しない\n                                if (this.is_comment_send_just_did) return false;\n\n                                // すでにモーダルが開かれている場合は、どのキャプチャが拡大表示されているかに関わらず閉じる\n                                if (twitter_component.zoom_capture_modal === true) {\n                                    twitter_component.zoom_capture_modal = false;\n                                    return true;\n                                }\n\n                                // 現在フォーカスされているキャプチャを取得\n                                // まだどのキャプチャにもフォーカスされていない場合は実行しない\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\n                                if (focused_capture === undefined) return false;\n\n                                // モーダルを開き、モーダルで拡大表示するキャプチャとしてセット\n                                twitter_component.zoom_capture = focused_capture;\n                                twitter_component.zoom_capture_modal = true;\n                                return true;\n                            }\n\n                            // ***** キャプチャを選択する/選択を解除する *****\n\n                            if (event.code === 'Space') {\n\n                                // 現在フォーカスされているキャプチャを取得\n                                // まだどのキャプチャにもフォーカスされていない場合は実行しない\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\n                                if (focused_capture === undefined) return false;\n\n                                // 「キャプチャリスト内のキャプチャがクリックされたときのイベント」を呼ぶ\n                                // 選択されていなければ選択され、選択されていれば選択が解除される\n                                // キャプチャの枚数制限などはすべて clickCapture() の中で処理される\n                                twitter_component.clickCapture(focused_capture);\n                                return true;\n                            }\n                        }\n\n                        // ***** 上下キーでチャンネルを切り替える *****\n\n                        // キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\n                        // キャプチャ関連のショートカットの後に持ってこないとキャプチャ関連のショートカットが動作しなくなる\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\n\n                            // ↑キー: 前のチャンネルに切り替え\n                            if (event.code === 'ArrowUp') {\n                                this.is_zapping = true;\n                                await this.$router.push({path: `/tv/watch/${this.channel_previous.channel_id}`});\n                                return true;\n                            }\n                            // ↓キー: 次のチャンネルに切り替え\n                            if (event.code === 'ArrowDown') {\n                                this.is_zapping = true;\n                                await this.$router.push({path: `/tv/watch/${this.channel_next.channel_id}`});\n                                return true;\n                            }\n                        }\n\n                        // ***** プレイヤーのショートカットキー *****\n\n                        // プレイヤーが初期化されていない時・Shift / Alt キーが一緒に押された時に作動しないように\n                        if (this.player !== null && !event.shiftKey && !event.altKey) {\n\n                            // Ctrl / Cmd + ↑キー: プレイヤーの音量を上げる\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowUp') {\n                                this.player.volume(this.player.volume() + 0.05);\n                                return true;\n                            }\n                            // Ctrl / Cmd + ↓キー: プレイヤーの音量を下げる\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowDown') {\n                                this.player.volume(this.player.volume() - 0.05);\n                                return true;\n                            }\n                            // Ctrl / Cmd + ←キー: 停止して0.5秒巻き戻し\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowLeft') {\n                                if (this.player.video.paused === false) this.player.video.pause();\n                                this.player.video.currentTime = this.player.video.currentTime - 0.5;\n                                return true;\n                            }\n                            // Ctrl / Cmd + →キー: 停止して0.5秒早送り\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowRight') {\n                                if (this.player.video.paused === false) this.player.video.pause();\n                                this.player.video.currentTime = this.player.video.currentTime + 0.5;\n                                return true;\n                            }\n                        }\n\n                        // プレイヤーが初期化されていない時・Ctrl / Cmd / Alt キーが一緒に押された時に作動しないように\n                        if (this.player !== null && !event.ctrlKey && !event.metaKey && !event.altKey) {\n\n                            // Shift + Spaceキー + キーリピートでない時 + Twitter タブ表示時 + キャプチャタブ表示時: 再生/停止\n                            if (event.shiftKey === true && event.code === 'Space' && is_repeat === false &&\n                                this.tv_panel_active_tab === 'Twitter' && twitter_component.twitter_active_tab === 'Capture') {\n                                this.player.toggle();\n                                return true;\n                            }\n                        }\n\n                        // プレイヤーが初期化されていない時・キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\n                        if (this.player !== null && is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\n\n                            // Spaceキー: 再生/停止\n                            if (event.code === 'Space') {\n                                this.player.toggle();\n                                return true;\n                            }\n                            // Fキー: フルスクリーンの切り替え\n                            if (event.code === 'KeyF') {\n                                this.player.fullScreen.toggle();\n                                return true;\n                            }\n                            // Wキー: ライブストリームの同期\n                            if (event.code === 'KeyW') {\n                                this.player.sync();\n                                return true;\n                            }\n                            // Eキー: Picture-in-Picture の表示切り替え\n                            if (event.code === 'KeyE') {\n                                if (document.pictureInPictureEnabled) {\n                                    this.player.template.pipButton.click();\n                                }\n                                return true;\n                            }\n                            // Sキー: 字幕の表示切り替え\n                            if (event.code === 'KeyS') {\n                                this.player.subtitle.toggle();\n                                if (!this.player.subtitle.container.classList.contains('dplayer-subtitle-hide')) {\n                                    this.player.notice(`${this.player.tran('Show subtitle')}`);\n                                } else {\n                                    this.player.notice(`${this.player.tran('Hide subtitle')}`);\n                                }\n                                return true;\n                            }\n                            // Dキー: コメントの表示切り替え\n                            if (event.code === 'KeyD') {\n                                this.player.template.showDanmaku.click();\n                                if (this.player.template.showDanmakuToggle.checked) {\n                                    this.player.notice(`${this.player.tran('Show comment')}`);\n                                } else {\n                                    this.player.notice(`${this.player.tran('Hide comment')}`);\n                                }\n                                return true;\n                            }\n                            // Cキー: 映像をキャプチャ\n                            if (event.code === 'KeyC') {\n                                await this.capture_handler.captureAndSave(this.channel, false);\n                                return true;\n                            }\n                            // Vキー: 映像を実況コメントを付けてキャプチャ\n                            if (event.code === 'KeyV') {\n                                await this.capture_handler.captureAndSave(this.channel, true);\n                                return true;\n                            }\n                            // Mキー: コメント入力フォームにフォーカス\n                            if (event.code === 'KeyM') {\n                                this.player.controller.show();\n                                this.player.comment.show();\n                                this.controlDisplayTimer();\n                                window.setTimeout(() => this.player.template.commentInput.focus(), 100);\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                })();\n\n                // 無名関数を実行した後の戻り値が true ならショートカットキーの操作を実行したことになるので、デフォルトのキー操作を封じる\n                if (result === true) {\n                    event.preventDefault();\n                }\n            };\n\n            // ページ上でキーが押されたときのイベントを登録\n            document.addEventListener('keydown', this.shortcut_key_handler);\n        },\n\n        // キャプチャ関連のイベントを初期化する\n        initCaptureHandler() {\n\n            // キャプチャハンドラーを初期化\n            this.capture_handler = new PlayerCaptureHandler(this.player, (blob: Blob, filename: string) => {\n                // キャプチャが撮られたら、随時 Twitter タブのキャプチャリストに追加する\n                (this.$refs.Twitter as InstanceType<typeof Twitter>).addCaptureList(blob, filename);\n            });\n\n            // キャプチャボタンがクリックされたときのイベント\n            // ショートカットからのキャプチャでも同じイベントがトリガーされる\n            const capture_button = this.$el.querySelector('.dplayer-icon.dplayer-capture-icon');\n            capture_button.addEventListener('click', async () => {\n                await this.capture_handler.captureAndSave(this.channel, false);\n            });\n\n            // コメント付きキャプチャボタンがクリックされたときのイベント\n            // ショートカットからのキャプチャでも同じイベントがトリガーされる\n            const comment_capture_button = this.$el.querySelector('.dplayer-icon.dplayer-comment-capture-icon');\n            comment_capture_button.addEventListener('click', async () => {\n                await this.capture_handler.captureAndSave(this.channel, true);\n            });\n        },\n\n\n        // 再生セッションを破棄する\n        // チャンネルを切り替える際に実行される\n        async destroy(is_destroy_player = false, is_zapping_continuously = false) {\n\n            // clearInterval() ですべての setInterval(), setTimeout() の実行を止める\n            // clearInterval() と clearTimeout() は中身共通なので問題ない\n            for (const interval_id of this.interval_ids) {\n                window.clearInterval(interval_id);\n            }\n\n            // コントロール表示制御用タイマーを止める\n            window.clearTimeout(this.control_interval_id);\n\n            // interval_ids をクリア\n            this.interval_ids = [];\n\n            // 再びローディング状態にする\n            this.is_loading = true;\n\n            // プレイヤーの背景を隠す\n            this.is_background_display = false;\n\n            // プレイヤーの破棄を許可する\n            if (this.player !== null) {\n                this.player_can_be_destroyed = true;\n            }\n\n            // イベントソースを閉じる\n            if (this.eventsource !== null) {\n                this.eventsource.close();\n                this.eventsource = null;\n            }\n\n            // 映像がフェードアウトするアニメーション (0.2秒) 分待ってから実行\n            // この 0.2 秒の間に音量をフェードアウトさせる\n            // なお、ザッピングでチャンネルを連続で切り替えている場合は実行しない (実行しても意味がないため)\n            if (is_zapping_continuously === false) {\n                const current_volume = this.player.user.get('volume');\n                // 20回 (0.01秒おき) に分けて音量を下げる\n                for (let i = 0; i < 20; i++) {\n                    await Utils.sleep(0.01);\n                    this.player.video.volume = current_volume * (1 - (i + 1) / 20);\n                }\n            }\n\n            // is_destroy_player が true の時は、ここで DPlayer 自体を破棄する\n            // false の時は次の initPlayer() が実行されるまで破棄されない\n            // 次のプレイヤーの初期化の直前に前のプレイヤーを破棄することで、プレイヤーの HTML が消えることによるちらつきを防ぐ\n            if (is_destroy_player === true && this.player !== null) {\n                try {\n                    this.player.destroy();\n                } catch (error) {\n                    // mpegts.js をうまく破棄できない場合\n                    if (this.player.plugins.mpegts !== undefined) {\n                        this.player.plugins.mpegts.destroy();\n                    }\n                }\n                this.player_can_be_destroyed = false;\n                this.player = null;\n            }\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Watch.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Watch.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Watch.vue?vue&type=template&id=2c786556&scoped=true&\"\nimport script from \"./Watch.vue?vue&type=script&lang=ts&\"\nexport * from \"./Watch.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Watch.vue?vue&type=style&index=0&id=2c786556&prod&lang=scss&\"\nimport style1 from \"./Watch.vue?vue&type=style&index=1&id=2c786556&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2c786556\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('v-card',{staticClass:\"settings-container d-flex px-5 py-5 mx-auto background\",attrs:{\"elevation\":\"0\",\"width\":\"100%\",\"max-width\":\"1000\"}},[_c('v-navigation-drawer',{staticClass:\"settings-navigation flex-shrink-0 background\",attrs:{\"permanent\":\"\",\"width\":\"100%\",\"height\":\"auto\"}},[_c('v-list-item',{staticClass:\"px-1\"},[_c('v-list-item-content',[_c('h1',[_vm._v(\"設定\")])])],1),_c('v-list',{staticClass:\"mt-2 px-0\",attrs:{\"nav\":\"\"}},[_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/general\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 3px\"},attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"全般\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/account\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"アカウント\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/jikkyo\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 2px\"},attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"ニコニコ実況\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/twitter\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 1px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"Twitter\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/environment\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:toolbox-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"環境設定\")])],1)],1),_c('v-list-item',{staticClass:\"px-4 settings-navigation-version\",class:{'settings-navigation-version--highlight': _vm.is_update_available},attrs:{\"link\":\"\",\"color\":\"primary\",\"href\":\"https://github.com/tsukumijima/KonomiTV\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:info-16-regular\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\" version \"+_vm._s(_vm.Utils.version)+_vm._s(_vm.is_update_available ? ' (Update Available)' : '')+\" \")])],1)],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport { IVersionInformation } from '@/interface';\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Settings-Index',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n\n            // 最新のバージョン\n            latest_version: null as string | null,\n\n            // アップデートが利用可能か\n            is_update_available: false as boolean,\n        }\n    },\n    async created() {\n        try {\n\n            // バージョン情報を取得\n            const version_info: IVersionInformation = (await Vue.axios.get(`/version`)).data;\n            this.latest_version = version_info.latest_version;\n\n            // 最新のサーバーバージョンが取得できなかった場合は中断\n            if (this.latest_version === null) {\n                return;\n            }\n\n            // もし現在のサーバーバージョン (-dev を除く) と最新のサーバーバージョンが異なるなら、アップデートが利用できる旨を表示する\n            // 現在のサーバーバージョンが -dev 付きで、かつ最新のサーバーバージョンが -dev なし の場合 (リリース版がリリースされたとき) も同様に表示する\n            // つまり開発版だと同じバージョンのリリース版がリリースされたときにしかアップデート通知が表示されない事になるが、ひとまずこれで…\n            if ((version_info.version.includes('-dev') === false && version_info.version !== version_info.latest_version) ||\n                (version_info.version.includes('-dev') === true && version_info.version.replace('-dev', '') === version_info.latest_version)) {\n                this.is_update_available = true;\n            }\n\n        } catch (error) {\n            throw new Error(error);  // エラー内容をコンソールに表示して終了\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Index.vue?vue&type=template&id=e85ed69a&scoped=true&\"\nimport script from \"./Index.vue?vue&type=script&lang=ts&\"\nexport * from \"./Index.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=e85ed69a&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e85ed69a\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"19px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"全般\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item settings__item--sync-disabled\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"テレビのストリーミング画質\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" テレビをライブストリーミングするときの既定の画質を設定します。\"),_c('br'),_vm._v(\" ストリーミング画質はプレイヤーの設定からいつでも切り替えられます。\"),_c('br')]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" [1080p (60fps)] は、通常 30fps (60i) の映像を補間することで、ほかの画質よりも滑らか（ぬるぬる）な映像で再生できます。ただし、再生負荷が少し高くなります。\"),_c('br'),_vm._v(\" [1080p (60fps)] で視聴するときは、QSVEncC / NVEncC / VCEEncC エンコーダーの利用をおすすめします。FFmpeg エンコーダーでは CPU 使用率が高くなり、再生に支障が出ることがあります。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tv_streaming_quality},model:{value:(_vm.settings.tv_streaming_quality),callback:function ($$v) {_vm.$set(_vm.settings, \"tv_streaming_quality\", $$v)},expression:\"settings.tv_streaming_quality\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch settings__item--sync-disabled\",class:{'settings__item--disabled': _vm.PlayerUtils.isHEVCVideoSupported() === false}},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_data_saver_mode\"}},[_vm._v(\"テレビを通信節約モードで視聴する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_data_saver_mode\"}},[_vm._v(\" テレビをライブストリーミングするときに、通信節約モードで視聴するかを設定します。\"),_c('br'),_vm._v(\" 通信節約モードでは、H.265 / HEVC という圧縮率の高いコーデックを使い、画質はほぼそのまま、通信量を通常の 2/3 程度に抑えながら視聴できます。ただし、再生負荷が高くなります。\"),_c('br'),_vm._v(\" 通信節約モードで視聴するときは、QSVEncC / NVEncC / VCEEncC エンコーダーの利用をおすすめします。FFmpeg エンコーダーではまともに再生できない可能性が高いです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_data_saver_mode\",\"inset\":\"\",\"hide-details\":\"\",\"disabled\":_vm.PlayerUtils.isHEVCVideoSupported() === false},model:{value:(_vm.settings.tv_data_saver_mode),callback:function ($$v) {_vm.$set(_vm.settings, \"tv_data_saver_mode\", $$v)},expression:\"settings.tv_data_saver_mode\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch settings__item--sync-disabled\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_low_latency_mode\"}},[_vm._v(\"テレビを低遅延で視聴する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_low_latency_mode\"}},[_vm._v(\" テレビをライブストリーミングするときに、低遅延で視聴するかを設定します。\"),_c('br'),_vm._v(\" 低遅延ストリーミングがオンのときは、放送波との遅延を最短 0.7 秒に抑えて視聴できます。\"),_c('br'),_vm._v(\" また、約 3 秒以上遅延したときに少しだけ再生速度を早める (1.1x) ことで、滑らかにストリーミングの遅れを取り戻します。\"),_c('br'),_vm._v(\" 宅外視聴などのネットワークが不安定になりがちな環境では、一度低遅延ストリーミングをオフにしてみると、映像のカクつきを改善できるかもしれません。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_low_latency_mode\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.tv_low_latency_mode),callback:function ($$v) {_vm.$set(_vm.settings, \"tv_low_latency_mode\", $$v)},expression:\"settings.tv_low_latency_mode\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_show_superimpose\"}},[_vm._v(\"テレビをみるときに文字スーパーを表示する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_show_superimpose\"}},[_vm._v(\" テレビをライブストリーミングするときに、文字スーパーを表示するかを設定します。\"),_c('br'),_vm._v(\" 文字スーパーは、緊急地震速報の赤テロップや、NHK BS のニュース速報のテロップなどで利用されています。とくに理由がなければ、オンのままにしておくことをおすすめします。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_show_superimpose\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.tv_show_superimpose),callback:function ($$v) {_vm.$set(_vm.settings, \"tv_show_superimpose\", $$v)},expression:\"settings.tv_show_superimpose\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"既定のパネルの表示状態\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 視聴画面を開いたときに、右側のパネルをどう表示するかを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.panel_display_state},model:{value:(_vm.settings.panel_display_state),callback:function ($$v) {_vm.$set(_vm.settings, \"panel_display_state\", $$v)},expression:\"settings.panel_display_state\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"テレビをみるときに既定で表示されるパネルのタブ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" テレビの視聴画面を開いたときに、右側のパネルで最初に表示されるタブを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tv_panel_active_tab},model:{value:(_vm.settings.tv_panel_active_tab),callback:function ($$v) {_vm.$set(_vm.settings, \"tv_panel_active_tab\", $$v)},expression:\"settings.tv_panel_active_tab\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item\"},[_c('label',{staticClass:\"settings__item-heading\"},[_vm._v(\"字幕のフォント\")]),_c('label',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーで字幕表示をオンにしているときの、字幕のフォントを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.caption_font},model:{value:(_vm.settings.caption_font),callback:function ($$v) {_vm.$set(_vm.settings, \"caption_font\", $$v)},expression:\"settings.caption_font\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"always_border_caption_text\"}},[_vm._v(\"字幕の文字を常に縁取って描画する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"always_border_caption_text\"}},[_vm._v(\" プレイヤーで字幕表示をオンにしているときに、字幕の文字を常に縁取って描画するかを設定します。\"),_c('br'),_vm._v(\" 字幕は縁取られていた方が視認性が良く、見た目的にもきれいです。とくに理由がなければ、オンのままにしておくことをおすすめします。\"),_c('br'),_vm._v(\" この設定をオフにしているときも、字幕データ側で明示的に縁取りするように指定されていれば、オンにしているとき同様に文字が縁取られて描画されます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"always_border_caption_text\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.always_border_caption_text),callback:function ($$v) {_vm.$set(_vm.settings, \"always_border_caption_text\", $$v)},expression:\"settings.always_border_caption_text\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"specify_caption_background_color\"}},[_vm._v(\"字幕の背景色を指定する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"specify_caption_background_color\"}},[_vm._v(\" プレイヤーで字幕表示をオンにしているときに、字幕の背景色を明示的に指定するかを設定します。\"),_c('br'),_vm._v(\" この設定をオフにしているときは、字幕データ側で指定されている背景色で描画します。とくに理由がなければ、オフのままにしておくことをおすすめします。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"specify_caption_background_color\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.specify_caption_background_color),callback:function ($$v) {_vm.$set(_vm.settings, \"specify_caption_background_color\", $$v)},expression:\"settings.specify_caption_background_color\"}})],1),_c('div',{staticClass:\"settings__item\",class:{'settings__item--disabled': _vm.settings.specify_caption_background_color === false}},[_c('label',{staticClass:\"settings__item-heading\"},[_vm._v(\"字幕の背景色\")]),_c('label',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーで字幕表示をオンにしているときの、字幕の背景色を設定します。\"),_c('br'),_vm._v(\" 上の [字幕の背景色を指定する] をオンにしているときのみ有効です。透明度 (アルファチャンネル) を 0 に設定すれば、字幕の背景を非表示にできます。\"),_c('br')]),_c('div',{ref:\"caption_background_color\",staticClass:\"settings__item-label\"},[_c('v-color-picker',{staticClass:\"settings__item-form\",attrs:{\"hide-details\":\"\",\"flat\":true,\"show-alpha\":true,\"show-swatches\":false,\"hide-inputs\":false,\"width\":690,\"canvas-height\":80,\"disabled\":_vm.settings.specify_caption_background_color === false},model:{value:(_vm.settings.caption_background_color),callback:function ($$v) {_vm.$set(_vm.settings, \"caption_background_color\", $$v)},expression:\"settings.caption_background_color\"}})],1)]),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item settings__item--switch settings__item--sync-disabled\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"capture_copy_to_clipboard\"}},[_vm._v(\"キャプチャをクリップボードにコピーする\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"capture_copy_to_clipboard\"}},[_vm._v(\" プレイヤーでキャプチャを撮ったときに、撮ったキャプチャをクリップボードにもコピーするかを設定します。\"),_c('br'),_vm._v(\" クリップボードの履歴をサポートしていない OS では、この設定をオンにした状態でキャプチャを撮ると、以前のクリップボードが上書きされます。注意してください。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"capture_copy_to_clipboard\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.capture_copy_to_clipboard),callback:function ($$v) {_vm.$set(_vm.settings, \"capture_copy_to_clipboard\", $$v)},expression:\"settings.capture_copy_to_clipboard\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"キャプチャの保存先\")]),_c('div',{staticClass:\"settings__item-label\"},[_c('p',[_vm._v(\" キャプチャした画像をブラウザでダウンロードするか、KonomiTV サーバーにアップロードするかを設定します。\"),_c('br'),_vm._v(\" ブラウザでのダウンロードと、KonomiTV サーバーへのアップロードを両方同時に行うこともできます。\"),_c('br')]),_c('p',[_vm._v(\" ブラウザでダウンロードすると、視聴中のデバイスのダウンロードフォルダに保存されます。\"),_c('br'),_vm._v(\" 視聴中のデバイスにそのまま保存されるためシンプルですが、保存先のフォルダを変更できないこと、PC 版 Chrome では毎回ダウンロードバーが表示されてしまうことがデメリットです。\"),_c('br')]),_c('p',[_vm._v(\" KonomiTV サーバーにアップロードすると、環境設定で指定されたキャプチャ保存フォルダに保存されます。視聴したデバイスにかかわらず、今までに撮ったキャプチャをひとつのフォルダにまとめて保存できます。\"),_c('br'),_vm._v(\" 他のデバイスでキャプチャを見るにはキャプチャ保存フォルダをネットワークに共有する必要があること、スマホ・タブレットではネットワーク上のフォルダへのアクセスがやや面倒なことがデメリットです。\"),_c('br')])]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.capture_save_mode},model:{value:(_vm.settings.capture_save_mode),callback:function ($$v) {_vm.$set(_vm.settings, \"capture_save_mode\", $$v)},expression:\"settings.capture_save_mode\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"字幕が表示されているときのキャプチャの保存モード\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 字幕が表示されているときに、キャプチャした画像に字幕を合成するかを設定します。\"),_c('br'),_vm._v(\" 映像のみのキャプチャと、字幕を合成したキャプチャを両方同時に保存することもできます。\"),_c('br'),_vm._v(\" なお、字幕が表示されていない場合は、常に映像のみ (+コメント付きキャプチャではコメントを合成して) 保存されます。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.capture_caption_mode},model:{value:(_vm.settings.capture_caption_mode),callback:function ($$v) {_vm.$set(_vm.settings, \"capture_caption_mode\", $$v)},expression:\"settings.capture_caption_mode\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"設定をエクスポート\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" このデバイス（ブラウザ）に保存されている設定データをエクスポート（ダウンロード）できます。\"),_c('br'),_vm._v(\" ダウンロードした設定データ (KonomiTV-Settings.json) は、[設定をインポート] からインポートできます。異なるサーバーの KonomiTV を同じ設定で使いたいときなどに使ってください。\"),_c('br')])]),_c('v-btn',{staticClass:\"settings__save-button mt-4\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.exportSettings()}}},[_c('Icon',{staticClass:\"mr-3\",attrs:{\"icon\":\"fa6-solid:download\",\"height\":\"19px\"}}),_vm._v(\"設定をエクスポート \")],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"設定をインポート\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" [設定をエクスポート] でダウンロードした設定データを、このデバイス（ブラウザ）にインポートできます。\"),_c('br'),_vm._v(\" 設定をインポートすると、それまでこのデバイス（ブラウザ）に保存されていた設定が、すべてインポート先の設定データで上書きされます。元に戻すことはできません。 \")]),_c('v-file-input',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"設定データ (KonomiTV-Settings.json) を選択\",\"dense\":_vm.is_form_dense,\"accept\":\"application/json\",\"prepend-icon\":\"\",\"prepend-inner-icon\":\"mdi-paperclip\"},model:{value:(_vm.import_settings_file),callback:function ($$v) {_vm.import_settings_file=$$v},expression:\"import_settings_file\"}})],1),_c('v-btn',{staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.importSettings()}}},[_c('Icon',{staticClass:\"mr-3\",attrs:{\"icon\":\"fa6-solid:upload\",\"height\":\"19px\"}}),_vm._v(\"設定をインポート \")],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('v-card',{staticClass:\"settings-container d-flex px-5 py-5 mx-auto background\",attrs:{\"elevation\":\"0\",\"width\":\"100%\",\"max-width\":\"1000\"}},[_c('div',[_c('v-navigation-drawer',{staticClass:\"settings-navigation flex-shrink-0 background\",attrs:{\"permanent\":\"\",\"width\":\"195\",\"height\":\"auto\"}},[_c('v-list-item',{staticClass:\"px-4\"},[_c('v-list-item-content',[_c('h1',[_vm._v(\"設定\")])])],1),_c('v-list',{staticClass:\"mt-2 px-0\",attrs:{\"nav\":\"\"}},[_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/general\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 3px\"},attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"全般\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/account\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"アカウント\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/jikkyo\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 2px\"},attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"ニコニコ実況\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/twitter\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 1px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"Twitter\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/environment\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:toolbox-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"環境設定\")])],1)],1)],1)],1)],1),_c('v-card',{staticClass:\"settings ml-5 px-7 py-7 lighten-1\",attrs:{\"width\":\"100%\"}},[_vm._t(\"default\")],2)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\n\n// 設定のベース画面なので、ロジックは基本置かない\nexport default Vue.extend({\n    name: 'Settings-Base',\n    components: {\n        Header,\n        Navigation,\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Base.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Base.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Base.vue?vue&type=template&id=397293d6&scoped=true&\"\nimport script from \"./Base.vue?vue&type=script&lang=ts&\"\nexport * from \"./Base.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Base.vue?vue&type=style&index=0&id=397293d6&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"397293d6\",\n  null\n  \n)\n\nexport default component.exports","\n\nimport Vue from 'vue';\n\nimport Base from '@/views/Settings/Base.vue';\nimport Utils, { PlayerUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'Settings-General',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            PlayerUtils: PlayerUtils,\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            // テレビのストリーミング画質の選択肢\n            tv_streaming_quality: [\n                {'text': '1080p (60fps) （約3.24GB/h / 平均7.2Mbps）', 'value': '1080p-60fps'},\n                {'text': '1080p （約2.31GB/h / 平均5.1Mbps）', 'value': '1080p'},\n                {'text': '810p （約1.92GB/h / 平均4.2Mbps）', 'value': '810p'},\n                {'text': '720p （約1.33GB/h / 平均3.0Mbps）', 'value': '720p'},\n                {'text': '540p （約1.00GB/h / 平均2.2Mbps）', 'value': '540p'},\n                {'text': '480p （約0.74GB/h / 平均1.6Mbps）', 'value': '480p'},\n                {'text': '360p （約0.40GB/h / 平均0.9Mbps）', 'value': '360p'},\n                {'text': '240p （約0.23GB/h / 平均0.5Mbps）', 'value': '240p'},\n            ],\n\n            // 既定のパネルの表示状態の選択肢\n            panel_display_state: [\n                {'text': '前回の状態を復元する', 'value': 'RestorePreviousState'},\n                {'text': '常に表示する', 'value': 'AlwaysDisplay'},\n                {'text': '常に折りたたむ', 'value': 'AlwaysFold'},\n            ],\n\n            // テレビをみるときに既定で表示されるパネルのタブの選択肢\n            tv_panel_active_tab: [\n                {'text': '番組情報タブ', 'value': 'Program'},\n                {'text': 'チャンネルタブ', 'value': 'Channel'},\n                {'text': 'コメントタブ', 'value': 'Comment'},\n                {'text': 'Twitter タブ', 'value': 'Twitter'},\n            ],\n\n            // 字幕のフォントの選択肢\n            caption_font: [\n                {'text': 'Windows TV ゴシック', 'value': 'Windows TV Gothic'},\n                {'text': 'Windows TV 丸ゴシック', 'value': 'Windows TV MaruGothic'},\n                {'text': 'Windows TV 太丸ゴシック', 'value': 'Windows TV FutoMaruGothic'},\n                {'text': 'ヒラギノTV丸ゴ', 'value': 'Hiragino TV Sans Rd S'},\n                {'text': '新丸ゴ ARIB', 'value': 'TT-ShinMGo-regular'},\n                {'text': 'Rounded M+ 1m for ARIB', 'value': 'Rounded M+ 1m for ARIB'},\n                {'text': 'Noto Sans JP', 'value': 'Noto Sans JP Caption'},\n                {'text': 'デフォルトのフォント', 'value': 'sans-serif'},\n            ],\n\n            // キャプチャの保存先の選択肢\n            capture_save_mode: [\n                {'text': 'ブラウザでダウンロード', 'value': 'Browser'},\n                {'text': 'KonomiTV サーバーにアップロード', 'value': 'UploadServer'},\n                {'text': 'ブラウザでのダウンロードと、KonomiTV サーバーへのアップロードを両方行う', 'value': 'Both'},\n            ],\n\n            // 字幕が表示されているときのキャプチャの保存モードの選択肢\n            capture_caption_mode: [\n                {'text': '映像のみのキャプチャを保存する', 'value': 'VideoOnly'},\n                {'text': '字幕を合成したキャプチャを保存する', 'value': 'CompositingCaption'},\n                {'text': '映像のみのキャプチャと、字幕を合成したキャプチャを両方保存する', 'value': 'Both'},\n            ],\n\n            // 選択された設定データ (KonomiTV-Settings.json) が入る\n            import_settings_file: null as File | null,\n\n            // 設定値が保存されるオブジェクト\n            // ここの値とフォームを v-model で binding する\n            settings: (() => {\n                // 現在の設定値を取得する\n                const settings = {}\n                const setting_keys = [\n                    'tv_streaming_quality',\n                    'tv_data_saver_mode',\n                    'tv_low_latency_mode',\n                    'tv_show_superimpose',\n                    'panel_display_state',\n                    'tv_panel_active_tab',\n                    'caption_font',\n                    'always_border_caption_text',\n                    'specify_caption_background_color',\n                    'caption_background_color',\n                    'capture_copy_to_clipboard',\n                    'capture_save_mode',\n                    'capture_caption_mode',\n                ];\n                for (const setting_key of setting_keys) {\n                    settings[setting_key] = Utils.getSettingsItem(setting_key);\n                }\n                return settings;\n            })(),\n        }\n    },\n    watch: {\n        // settings 内の値の変更を監視する\n        settings: {\n            deep: true,\n            handler() {\n                // settings 内の値を順に LocalStorage に保存する\n                for (const [setting_key, setting_value] of Object.entries(this.settings)) {\n                    Utils.setSettingsItem(setting_key, setting_value);\n                }\n            }\n        }\n    },\n    methods: {\n\n        // 設定データをエクスポートする\n        exportSettings() {\n\n            // JSON のままの設定データを LocalStorage から直に取得\n            // \"KonomiTV-Settings\" キーがないときはデフォルト設定を JSON 化したものを入れる\n            const settings_json = localStorage.getItem('KonomiTV-Settings') || JSON.stringify(Utils.default_settings);\n\n            // ダウンロードさせるために Blob にしてから、KonomiTV-Settings.json としてダウンロード\n            const settings_json_blob = new Blob([settings_json], {type: 'application/json'});\n            Utils.downloadBlobData(settings_json_blob, 'KonomiTV-Settings.json');\n            this.$message.success('設定をエクスポートしました。');\n        },\n\n        // 設定データをインポートする\n        async importSettings() {\n\n            // 設定データが選択されていないときは実行しない\n            if (this.import_settings_file === null) {\n                this.$message.error('インポートする設定データを選択してください！');\n                return;\n            }\n\n            try {\n\n                // 選択された設定データの JSON を取得してデコード\n                // そのまま突っ込んでもいいんだけど、念のため一度オブジェクトになおしておく\n                const settings = JSON.parse(await this.import_settings_file.text());\n\n                // LocalStorage に直に保存\n                // このとき、既存の設定データはすべて上書きされる\n                localStorage.setItem('KonomiTV-Settings', JSON.stringify(settings));\n\n                // 設定データをサーバーに同期する\n                await Utils.syncClientSettingsToServer();\n\n                // 設定を適用するためリロード\n                this.$message.success('設定をインポートしました。');\n                window.setTimeout(() => this.$router.go(0), 300);\n\n            } catch (error) {\n                this.$message.error('設定データが不正なため、インポートできませんでした。');\n                return;\n            }\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./General.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./General.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./General.vue?vue&type=template&id=198b9a72&\"\nimport script from \"./General.vue?vue&type=script&lang=ts&\"\nexport * from \"./General.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"25px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"アカウント\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[(_vm.user === null)?_c('div',{staticClass:\"account\"},[_c('div',{staticClass:\"account-wrapper\"},[_c('img',{staticClass:\"account__icon\",attrs:{\"src\":\"/assets/images/account-icon-default.png\"}}),_c('div',{staticClass:\"account__info\"},[_c('div',{staticClass:\"account__info-name\"},[_c('span',{staticClass:\"account__info-name-text\"},[_vm._v(\"ログインしていません\")])]),_c('span',{staticClass:\"account__info-id\"},[_vm._v(\"Not logged in\")])])]),_c('v-btn',{staticClass:\"account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"140\",\"height\":\"56\",\"depressed\":\"\",\"to\":\"/login/\"}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-in\"}}),_vm._v(\"ログイン \")],1)],1):_vm._e(),(_vm.user !== null)?_c('div',{staticClass:\"account\"},[_c('div',{staticClass:\"account-wrapper\"},[_c('img',{staticClass:\"account__icon\",attrs:{\"src\":_vm.user_icon_blob}}),_c('div',{staticClass:\"account__info\"},[_c('div',{staticClass:\"account__info-name\"},[_c('span',{staticClass:\"account__info-name-text\"},[_vm._v(_vm._s(_vm.user.name))]),(_vm.user.is_admin)?_c('span',{staticClass:\"account__info-admin\"},[_vm._v(\"管理者\")]):_vm._e()]),_c('span',{staticClass:\"account__info-id\"},[_vm._v(\"User ID: \"+_vm._s(_vm.user.id))])])]),_c('v-btn',{staticClass:\"account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"140\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.logout()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-out\"}}),_vm._v(\"ログアウト \")],1)],1):_vm._e(),(_vm.is_logged_in === false)?_c('div',{staticClass:\"account-register\"},[_c('div',{staticClass:\"account-register__heading\"},[_vm._v(\" KonomiTV アカウントにログインすると、\"),_c('br'),_vm._v(\"より便利な機能が使えます！ \")]),_c('div',{staticClass:\"account-register__feature\"},[_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"ニコニコ実況にコメントする\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"テレビを見ながらニコニコ実況にコメントできます。別途、ニコニコアカウントとの連携が必要です。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fa-brands:twitter\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"Twitter 連携機能\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"テレビを見ながら Twitter にツイートしたり、検索したツイートをリアルタイムで表示できます。別途、Twitter アカウントとの連携が必要です。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fluent:arrow-sync-20-filled\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"設定をデバイス間で同期\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"ピン留めしたチャンネルなど、ブラウザに保存されている各種設定をブラウザやデバイスをまたいで同期できます。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fa-solid:sliders-h\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"環境設定をブラウザから変更\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"管理者権限があれば、環境設定をブラウザから変更できます。一番最初に作成されたアカウントには、自動で管理者権限が付与されます。\")])])],1)]),_c('div',{staticClass:\"account-register__description\"},[_vm._v(\" KonomiTV アカウントの作成に必要なものは\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\"ユーザー名とパスワードだけです。\"),_c('br'),_vm._v(\" アカウントはローカルにインストールした\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\" KonomiTV サーバーごとに保存されます。\"),_c('br'),_vm._v(\" 外部のサービスには保存されませんので、ご安心ください。\"),_c('br')]),_c('v-btn',{staticClass:\"account-register__button\",attrs:{\"color\":\"secondary\",\"width\":\"100%\",\"max-width\":\"250\",\"height\":\"50\",\"depressed\":\"\",\"to\":\"/register/\"}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-add-20-filled\",\"height\":\"24\"}}),_vm._v(\"アカウントを作成 \")],1)],1):_vm._e(),(_vm.is_logged_in === true)?_c('div',[_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"sync_settings\"}},[_vm._v(\"設定をデバイス間で同期する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"sync_settings\"}},[_vm._v(\" KonomiTV の設定を、同じアカウントにログインしているデバイス同士で同期するかを設定します。\"),_c('br'),_vm._v(\" 同期を有効にすると、同期が有効なデバイスすべてで同じ設定が使えます。ピン留めしたチャンネルやハッシュタグリストなども同期されます。\"),_c('br'),_vm._v(\" ストリーミング画質やコメントの遅延時間など、デバイスごとに最適な設定が異なるものは、同期を有効にしたあとも引き続きこのデバイス（ブラウザ）のみに反映されます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"sync_settings\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.sync_settings),callback:function ($$v) {_vm.sync_settings=$$v},expression:\"sync_settings\"}})],1),_c('v-dialog',{attrs:{\"max-width\":\"530\"},model:{value:(_vm.sync_settings_dialog),callback:function ($$v) {_vm.sync_settings_dialog=$$v},expression:\"sync_settings_dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"justify-center\"},[_vm._v(\"設定データの競合\")]),_c('v-card-text',[_vm._v(\" このデバイスの設定と、サーバーに保存されている設定が競合しています。\"),_c('br'),_vm._v(\" 一度上書きすると、元に戻すことはできません。慎重に選択してください。\"),_c('br')]),_c('div',{staticClass:\"d-flex flex-column px-4 pb-4 settings__conflict-dialog\"},[_c('v-btn',{staticClass:\"settings__save-button error--text text--lighten-1\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.overrideServerSettingsFromClient()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:document-arrow-up-16-filled\",\"height\":\"22px\"}}),_vm._v(\" サーバーに保存されている設定を、\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\"このデバイスの設定で上書きする \")],1),_c('v-btn',{staticClass:\"settings__save-button error--text text--lighten-1 mt-3\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.overrideClientSettingsFromServer()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:document-arrow-down-16-filled\",\"height\":\"22px\"}}),_vm._v(\" このデバイスの設定を、\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\"サーバーに保存されている設定で上書きする \")],1),_c('v-btn',{staticClass:\"settings__save-button mt-3\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){_vm.sync_settings_dialog = false}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:dismiss-16-filled\",\"height\":\"22px\"}}),_vm._v(\" キャンセル \")],1)],1)],1)],1),_c('v-form',{ref:\"settings_username\",staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ユーザー名\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントのユーザー名を設定します。アルファベットだけでなく日本語や記号も使えます。\"),_c('br'),_vm._v(\" 同じ KonomiTV サーバー上の他のアカウントと同じユーザー名には変更できません。\"),_c('br')]),_c('v-text-field',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"dense\":_vm.is_form_dense,\"rules\":[_vm.settings_username_validation]},model:{value:(_vm.settings_username),callback:function ($$v) {_vm.settings_username=$$v},expression:\"settings_username\"}})],1),_c('v-btn',{staticClass:\"settings__save-button\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountInfo('username')}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"ユーザー名を更新 \")],1),_c('v-form',{staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"アイコン画像\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントのアイコン画像を設定します。\"),_c('br'),_vm._v(\" アップロードされた画像は自動的に 400×400 の正方形にリサイズされます。\"),_c('br')]),_c('v-file-input',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"アイコン画像を選択\",\"dense\":_vm.is_form_dense,\"accept\":\"image/jpeg, image/png\",\"prepend-icon\":\"\",\"prepend-inner-icon\":\"mdi-paperclip\"},model:{value:(_vm.settings_icon),callback:function ($$v) {_vm.settings_icon=$$v},expression:\"settings_icon\"}})],1),_c('v-btn',{staticClass:\"settings__save-button mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountIcon()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"アイコン画像を更新 \")],1),_c('v-form',{ref:\"settings_password\",staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"新しいパスワード\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントの新しいパスワードを設定します。\"),_c('br')]),_c('v-text-field',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"placeholder\":\"新しいパスワード\",\"dense\":_vm.is_form_dense,\"type\":_vm.settings_password_showing ? 'text' : 'password',\"append-icon\":_vm.settings_password_showing ? 'mdi-eye' : 'mdi-eye-off',\"rules\":[_vm.settings_password_validation]},on:{\"click:append\":function($event){_vm.settings_password_showing = !_vm.settings_password_showing}},model:{value:(_vm.settings_password),callback:function ($$v) {_vm.settings_password=$$v},expression:\"settings_password\"}})],1),_c('v-btn',{staticClass:\"settings__save-button\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountInfo('password')}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"パスワードを更新 \")],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item mt-6\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"アカウントを削除\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 現在ログインしている KonomiTV アカウントを削除します。\"),_c('br'),_vm._v(\" アカウントに紐づくすべてのデータが削除されます。元に戻すことはできません。\"),_c('br')])]),_c('v-dialog',{attrs:{\"max-width\":\"385\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"}},'v-btn',attrs,false),on),[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:delete-16-filled\",\"height\":\"24px\"}}),_vm._v(\"アカウントを削除 \")],1)]}}],null,false,974850237),model:{value:(_vm.account_delete_confirm_dialog),callback:function ($$v) {_vm.account_delete_confirm_dialog=$$v},expression:\"account_delete_confirm_dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"justify-center\"},[_vm._v(\"本当にアカウントを削除しますか？\")]),_c('v-card-text',[_vm._v(\" アカウントに紐づくすべてのデータが削除されます。元に戻すことはできません。\"),_c('br'),_vm._v(\" 本当にアカウントを削除しますか？ \")]),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"text\",\"text\":\"\"},on:{\"click\":function($event){_vm.account_delete_confirm_dialog = false}}},[_vm._v(\"キャンセル\")]),_c('v-btn',{attrs:{\"color\":\"error\",\"text\":\"\"},on:{\"click\":function($event){return _vm.deleteAccount()}}},[_vm._v(\"削除\")])],1)],1)],1)],1):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport axios from 'axios';\nimport Vue from 'vue';\n\nimport { IUser } from '@/interface';\nimport Base from '@/views/Settings/Base.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Settings-Account',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            // ローディング中かどうか\n            is_loading: true,\n\n            // ログイン中かどうか\n            is_logged_in: Utils.getAccessToken() !== null,\n\n            // ユーザーアカウントの情報\n            // ログインしていない場合は null になる\n            user: null as IUser | null,\n\n            // ユーザーアカウントのアイコンの Blob URL\n            user_icon_blob: '',\n\n            // ユーザー名とパスワード\n            // ログイン画面やアカウント作成画面の data と同一のもの\n            settings_username: null as string | null,\n            settings_username_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'ユーザー名を入力してください。';\n                if (/^.{2,}$/.test(value) === false) return 'ユーザー名は2文字以上で入力してください。';\n                return true;\n            },\n            settings_password: null as string | null,\n            settings_password_showing: true,  // アカウント情報変更時は既定でパスワードを表示する\n            settings_password_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'パスワードを入力してください。';\n                // 正規表現の参考: https://qiita.com/grrrr/items/0b35b5c1c98eebfa5128\n                if (/^[a-zA-Z0-9!-/:-@¥[-`{-~]{4,}$/.test(value) === false) return 'パスワードは4文字以上の半角英数記号を入力してください。';\n                return true;\n            },\n\n            // アイコン画像\n            settings_icon: null as File | null,\n\n            // アカウント削除確認ダイヤログ\n            account_delete_confirm_dialog: null,\n\n            // 設定を同期するかの設定値\n            sync_settings: Utils.getSettingsItem('sync_settings') as boolean,\n\n            // 設定を同期するときのダイヤログ\n            sync_settings_dialog: false,\n        }\n    },\n    async created() {\n\n        // 表示されているアカウント情報を更新\n        // アクセストークンが無効化されている可能性もあるので、アクセストークンの有無に関わらず実行する\n        await this.syncAccountInfo();\n\n        // ローディング状態を解除\n        this.is_loading = false;\n    },\n    watch: {\n        // sync_settings の値の変更を監視する\n        async sync_settings() {\n\n            // 同期がオンになった & ダイヤログが表示されていない\n            if (this.sync_settings === true && this.sync_settings_dialog === false) {\n\n                try {\n\n                    // もし KonomiTV-Settings キーがまだない場合、あらかじめデフォルトの設定値を保存しておく\n                    if (localStorage.getItem('KonomiTV-Settings') === null) {\n                        localStorage.setItem('KonomiTV-Settings', JSON.stringify(Utils.default_settings));\n                    }\n\n                    // LocalStorage から KonomiTV-Settings を取得\n                    const settings: {[key: string]: any} = JSON.parse(localStorage.getItem('KonomiTV-Settings'));\n\n                    // 同期対象の設定キーのみで設定データをまとめ直す\n                    // sync_settings には同期対象外の設定は含まれない\n                    const sync_settings: {[key: string]: any} = {};\n                    for (const sync_settings_key of Utils.sync_settings_keys) {\n                        if (sync_settings_key in settings) {\n                            sync_settings[sync_settings_key] = settings[sync_settings_key];\n                        } else {\n                            // 後から追加された設定キーなどの理由で設定キーが現状の KonomiTV-Settings に存在しない場合\n                            // その設定キーのデフォルト値を取得する\n                            sync_settings[sync_settings_key] = Utils.default_settings[sync_settings_key];\n                        }\n                    }\n\n                    // 同期対象のこのクライアントの設定を再度 JSON にする（文字列比較のため）\n                    const sync_settings_json = JSON.stringify(sync_settings);\n\n                    // サーバーから設定データ (生の JSON) をダウンロード\n                    // 一度オブジェクトにしたものを再度 JSON にする（文字列比較のため）\n                    const server_sync_settings_json: string = JSON.stringify((await Vue.axios.get('/settings/client')).data);\n\n                    // このクライアントの設定とサーバーに保存されている設定が一致しない（=競合している）\n                    if (sync_settings_json !== server_sync_settings_json) {\n\n                        // 一度同期をオフにして、クライアントとサーバーどちらの設定を使うのかを選択させるダイヤログを表示\n                        this.sync_settings_dialog = true;\n                        this.sync_settings = false;\n\n                    // このクライアントの設定とサーバーに保存されている設定が一致する\n                    } else {\n\n                        // 特に設定の同期をオンにしても問題ないので、そのまま有効にする\n                        Utils.setSettingsItem('sync_settings', true);\n                    }\n\n                } catch (error) {\n                    // 何らかの理由でエラーになったとき\n                    this.$message.error(`サーバーから設定データを取得できませんでした。(HTTP Error ${error.response.status})`);\n                }\n\n            // 同期がオフになった & ダイヤログが表示されていない\n            } else if (this.sync_settings === false && this.sync_settings_dialog === false) {\n                Utils.setSettingsItem('sync_settings', false);\n            }\n        }\n    },\n    methods: {\n\n        // このクライアントの設定でサーバー上の設定を上書きする\n        async overrideServerSettingsFromClient() {\n\n            // 強制的にこのクライアントの設定をサーバーに同期\n            await Utils.syncClientSettingsToServer(true);\n\n            // 設定の同期を有効化\n            this.sync_settings = true;\n            Utils.setSettingsItem('sync_settings', true);\n\n            // ダイヤログを閉じる\n            this.sync_settings_dialog = false;\n        },\n\n        // サーバー上の設定でこのクライアントの設定を上書きする\n        async overrideClientSettingsFromServer() {\n\n            // 強制的にサーバーに保存されている設定データをこのクライアントに同期する\n            // 設定の同期を有効化する前に実行しておくのが重要\n            await Utils.syncServerSettingsToClient(true);\n\n            // 設定の同期を有効化\n            // Utils.setSettingsItem() した段階で設定データがサーバーにアップロードされてしまうので、\n            // それよりも前に Utils.syncServerSettingsToClient(true) でサーバー上の設定データを同期させておく必要がある\n            // さもなければ、サーバー上の設定データがこのクライアントの設定で上書きされてしまい、overrideServerSettingsFromClient() と同じ挙動になってしまう\n            this.sync_settings = true;\n            Utils.setSettingsItem('sync_settings', true);\n\n            // ダイヤログを閉じる\n            this.sync_settings_dialog = false;\n        },\n\n        async syncAccountInfo() {\n\n            try {\n\n                // ユーザーアカウントの情報を取得する\n                const response = await Vue.axios.get('/users/me');\n                this.user = response.data;\n                this.settings_username = this.user.name;\n\n                // 表示中のアイコン画像を更新\n                await this.syncAccountIcon();\n\n            } catch (error) {\n\n                // ログインされていない\n                if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n                    console.log('Not logged in.');\n\n                    // 未ログイン状態に設定\n                    this.is_logged_in = false;\n                    this.user = null;\n                    this.user_icon_blob = '';\n\n                    // まだアクセストークンが残っているかもしれないので、明示的にログアウト\n                    Utils.deleteAccessToken();\n                }\n            }\n        },\n\n        async syncAccountIcon() {\n\n            // ユーザーアカウントのアイコンを取得する\n            // 認証が必要な URL は img タグからは直で読み込めないため\n            const icon_response = await Vue.axios.get('/users/me/icon', {\n                responseType: 'arraybuffer',\n            });\n\n            // Blob URL を生成\n            this.user_icon_blob = URL.createObjectURL(new Blob([icon_response.data], {type: 'image/png'}));\n        },\n\n        async updateAccountInfo(update_type: 'username' | 'password') {\n\n            // すべてのバリデーションが通過したときのみ\n            // ref: https://qiita.com/Hijiri_Ishi/items/56cac99c8f3806a6fa24\n            if (update_type === 'username') {\n                if ((this.$refs.settings_username as any).validate() === false) return;\n            } else {\n                if ((this.$refs.settings_password as any).validate() === false) return;\n            }\n\n            try {\n\n                // アカウント情報更新 API にリクエスト\n                // レスポンスは 204 No Content なので不要\n                if (update_type === 'username') {\n                    await Vue.axios.put('/users/me', {username: this.settings_username});\n                    this.$message.show('ユーザー名を更新しました。');\n                } else {\n                    await Vue.axios.put('/users/me', {password: this.settings_password});\n                    this.$message.show('パスワードを更新しました。');\n                }\n\n                // 表示中のアカウント情報を更新\n                await this.syncAccountInfo();\n\n            } catch (error) {\n\n                // アカウント情報の更新に失敗\n                // ref: https://dev.classmethod.jp/articles/typescript-typing-exception-objects-in-axios-trycatch/\n                if (axios.isAxiosError(error) && error.response && error.response.status === 422) {\n                    // エラーメッセージごとに Snackbar に表示\n                    switch ((error.response.data as any).detail) {\n                        case 'Specified username is duplicated': {\n                            this.$message.error('ユーザー名が重複しています。');\n                            break;\n                        }\n                        case 'Specified username is not accepted due to system limitations': {\n                            this.$message.error('ユーザー名に token と me は使えません。');\n                            break;\n                        }\n                        default: {\n                            this.$message.error(`アカウント情報を更新できませんでした。(HTTP Error ${error.response.status})`);\n                            break;\n                        }\n                    }\n                }\n            }\n        },\n\n        async updateAccountIcon() {\n\n            // アイコン画像が選択されていないなら更新しない\n            if (this.settings_icon === null) {\n                this.$message.error('アップロードする画像を選択してください！');\n                return;\n            }\n\n            // アイコン画像の File オブジェクト (= Blob) を FormData に入れる\n            // multipart/form-data で送るために必要\n            // ref: https://r17n.page/2020/02/04/nodejs-axios-file-upload-api/\n            const form_data = new FormData();\n            form_data.append('image', this.settings_icon);\n\n            try {\n\n                // アカウントアイコン画像更新 API にリクエスト\n                await Vue.axios.put('/users/me/icon', form_data, {headers: {'Content-Type': 'multipart/form-data'}});\n\n                // 表示中のアイコン画像を更新\n                await this.syncAccountIcon();\n\n            } catch (error) {\n\n                // アカウント情報の更新に失敗\n                // ref: https://dev.classmethod.jp/articles/typescript-typing-exception-objects-in-axios-trycatch/\n                if (axios.isAxiosError(error) && error.response && error.response.status === 422) {\n                    // エラーメッセージごとに Snackbar に表示\n                    switch ((error.response.data as any).detail) {\n                        case 'Please upload JPEG or PNG image': {\n                            this.$message.error('JPEG または PNG 画像をアップロードしてください。');\n                            break;\n                        }\n                        default: {\n                            this.$message.error(`アイコン画像を更新できませんでした。(HTTP Error ${error.response.status})`);\n                            break;\n                        }\n                    }\n                }\n            }\n        },\n\n        async deleteAccount() {\n\n            // ダイヤログを閉じる\n            this.account_delete_confirm_dialog = false;\n\n            // アカウント削除 API にリクエスト\n            await Vue.axios.delete('/users/me');\n\n            // 設定の同期を無効化\n            Utils.setSettingsItem('sync_settings', false);\n\n            // ブラウザからアクセストークンを削除\n            Utils.deleteAccessToken();\n\n            // 未ログイン状態に設定\n            this.is_logged_in = false;\n            this.user = null;\n            this.user_icon_blob = '';\n\n            this.$message.show('アカウントを削除しました。');\n        },\n\n        logout() {\n\n            // 設定の同期を無効化\n            Utils.setSettingsItem('sync_settings', false);\n\n            // ブラウザからアクセストークンを削除\n            // これをもってログアウトしたことになる（それ以降の Axios のリクエストにはアクセストークンが含まれなくなる）\n            Utils.deleteAccessToken();\n\n            // 未ログイン状態に設定\n            this.is_logged_in = false;\n            this.user = null;\n            this.user_icon_blob = '';\n\n            this.$message.success('ログアウトしました。');\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Account.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Account.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Account.vue?vue&type=template&id=582fcc57&scoped=true&\"\nimport script from \"./Account.vue?vue&type=script&lang=ts&\"\nexport * from \"./Account.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Account.vue?vue&type=style&index=0&id=582fcc57&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"582fcc57\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"19px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"ニコニコ実況\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[(_vm.user.niconico_user_id === null)?_c('div',{staticClass:\"niconico-account niconico-account--anonymous\"},[_c('div',{staticClass:\"niconico-account-wrapper\"},[_c('Icon',{staticClass:\"flex-shrink-0\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"45px\"}}),_c('div',{staticClass:\"niconico-account__info ml-4\"},[_c('div',{staticClass:\"niconico-account__info-name\"},[_c('span',{staticClass:\"niconico-account__info-name-text\"},[_vm._v(\"ニコニコアカウントと連携していません\")])]),_c('span',{staticClass:\"niconico-account__info-description\"},[_vm._v(\" ニコニコアカウントと連携すると、テレビを見ながらニコニコ実況にコメントできるようになります。 \")])])],1),_c('v-btn',{staticClass:\"niconico-account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"130\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.loginNiconicoAccount()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-connected-20-filled\",\"height\":\"26\"}}),_vm._v(\"連携する \")],1)],1):_vm._e(),(_vm.user.niconico_user_id !== null)?_c('div',{staticClass:\"niconico-account\"},[_c('div',{staticClass:\"niconico-account-wrapper\"},[_c('img',{staticClass:\"niconico-account__icon\",attrs:{\"src\":this.niconico_user_icon_url}}),_c('div',{staticClass:\"niconico-account__info\"},[_c('div',{staticClass:\"niconico-account__info-name\"},[_c('span',{staticClass:\"niconico-account__info-name-text\"},[_vm._v(_vm._s(_vm.user.niconico_user_name)+\" と連携しています\")])]),_c('span',{staticClass:\"niconico-account__info-description\"},[_c('span',{staticClass:\"mr-2\",staticStyle:{\"white-space\":\"nowrap\"}},[_vm._v(\"Niconico User ID:\")]),_c('a',{staticClass:\"mr-2\",attrs:{\"href\":`https://www.nicovideo.jp/user/${_vm.user.niconico_user_id}`,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.user.niconico_user_id))]),(_vm.user.niconico_user_premium == true)?_c('span',{staticClass:\"secondary--text\"},[_vm._v(\"(Premium)\")]):_vm._e()])])]),_c('v-btn',{staticClass:\"niconico-account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"130\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.logoutNiconicoAccount()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-disconnected-20-filled\",\"height\":\"26\"}}),_vm._v(\"連携解除 \")],1)],1):_vm._e(),_c('div',{staticClass:\"settings__item mt-7\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントのミュート設定\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 表示したくないコメントを、画面やコメントリストに表示しないようにミュートできます。\"),_c('br')])]),_c('v-btn',{staticClass:\"settings__save-button mt-4\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){_vm.comment_mute_settings_modal = !_vm.comment_mute_settings_modal}}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"19px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"コメントのミュート設定を開く\")])],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントの速さ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーに流れるコメントの速さを設定します。\"),_c('br'),_vm._v(\" たとえば 1.2 に設定すると、コメントが 1.2 倍速く流れます。\"),_c('br')]),_c('v-slider',{staticClass:\"settings__item-form\",attrs:{\"ticks\":\"always\",\"thumb-label\":\"\",\"hide-details\":\"\",\"step\":0.1,\"min\":0.5,\"max\":2},model:{value:(_vm.settings.comment_speed_rate),callback:function ($$v) {_vm.$set(_vm.settings, \"comment_speed_rate\", $$v)},expression:\"settings.comment_speed_rate\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントの文字サイズ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーに流れるコメントの文字サイズの基準値を設定します。\"),_c('br'),_vm._v(\" 実際の文字サイズは画面の大きさに合わせて調整されます。既定の文字サイズは 34px です。\"),_c('br')]),_c('v-slider',{staticClass:\"settings__item-form\",attrs:{\"ticks\":\"always\",\"thumb-label\":\"\",\"hide-details\":\"\",\"min\":20,\"max\":60},model:{value:(_vm.settings.comment_font_size),callback:function ($$v) {_vm.$set(_vm.settings, \"comment_font_size\", $$v)},expression:\"settings.comment_font_size\"}})],1),_c('div',{staticClass:\"settings__item settings__item--sync-disabled\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントの遅延時間\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーやコメントリストに表示されるコメントを何秒遅らせて反映するかを設定します。\"),_c('br'),_vm._v(\" 通常は 1.75 秒程度で大丈夫です。ネットワークが遅いなどでタイムラグが大きいときだけ、映像の遅延に合わせて調整してください。\"),_c('br')]),_c('v-slider',{staticClass:\"settings__item-form\",attrs:{\"ticks\":\"always\",\"thumb-label\":\"\",\"hide-details\":\"\",\"step\":0.25,\"min\":0,\"max\":10},model:{value:(_vm.settings.comment_delay_time),callback:function ($$v) {_vm.$set(_vm.settings, \"comment_delay_time\", $$v)},expression:\"settings.comment_delay_time\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"close_comment_form_after_sending\"}},[_vm._v(\"コメント送信後にコメント入力フォームを閉じる\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"close_comment_form_after_sending\"}},[_vm._v(\" コメントを送信したあとに、コメント入力フォームを自動的に閉じるかを設定します。\"),_c('br'),_vm._v(\" 基本的にはオンのままにしておくことをおすすめします。コメント入力フォームが表示されたままだと、大部分のショートカットキーが文字入力と競合して使えないためです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"close_comment_form_after_sending\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.close_comment_form_after_sending),callback:function ($$v) {_vm.$set(_vm.settings, \"close_comment_form_after_sending\", $$v)},expression:\"settings.close_comment_form_after_sending\"}})],1)],1),_c('CommentMuteSettings',{model:{value:(_vm.comment_mute_settings_modal),callback:function ($$v) {_vm.comment_mute_settings_modal=$$v},expression:\"comment_mute_settings_modal\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport axios from 'axios';\nimport Vue from 'vue';\n\nimport { IUser } from '@/interface';\nimport CommentMuteSettings from '@/components/Settings/CommentMuteSettings.vue';\nimport Base from '@/views/Settings/Base.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Settings-Jikkyo',\n    components: {\n        Base,\n        CommentMuteSettings,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n\n            // コメントのミュート設定のモーダルを表示するか\n            comment_mute_settings_modal: false,\n\n            // ローディング中かどうか\n            is_loading: true,\n\n            // ログイン中かどうか\n            is_logged_in: Utils.getAccessToken() !== null,\n\n            // ユーザーアカウントの情報\n            // ログインしていない場合は null になる\n            user: null as IUser | null,\n\n            // ニコニコアカウントのユーザーアイコンの URL\n            niconico_user_icon_url: '',\n\n            // 設定値が保存されるオブジェクト\n            // ここの値とフォームを v-model で binding する\n            settings: (() => {\n                // 現在の設定値を取得する\n                const settings = {};\n                const setting_keys = [\n                    'comment_speed_rate',\n                    'comment_font_size',\n                    'comment_delay_time',\n                    'close_comment_form_after_sending',\n                ];\n                for (const setting_key of setting_keys) {\n                    settings[setting_key] = Utils.getSettingsItem(setting_key);\n                }\n                return settings;\n            })(),\n        }\n    },\n    async created() {\n\n        // ユーザーモデルの初期値\n        // 初回描画で niconico_user_id が null かを判定するだけのためにセットしている\n        this.user = {\n            id: 0,\n            name: '',\n            is_admin: true,\n            niconico_user_id: null,\n            niconico_user_name: null,\n            niconico_user_premium: null,\n            twitter_accounts: [],\n            created_at: '',\n            updated_at: '',\n        }\n\n        // 表示されているアカウント情報を更新 (ログイン時のみ)\n        if (this.is_logged_in === true) {\n            await this.syncAccountInfo();\n        }\n\n        // ローディング状態を解除\n        this.is_loading = false;\n\n        // もしハッシュ (# から始まるフラグメント) に何か指定されていたら、\n        // OAuth 連携のコールバックの結果が入っている可能性が高いので、パースを試みる\n        // アカウント情報更新より後にしないと Snackbar がうまく表示されない\n        if (location.hash !== '') {\n            const params = new URLSearchParams(location.hash.replace('#', ''));\n            if (params.get('status') !== null && params.get('detail') !== null) {\n                // コールバックの結果を取得できたので、OAuth 連携の結果を画面に通知する\n                const authorization_status = parseInt(params.get('status'));\n                const authorization_detail = params.get('detail');\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\n                // URL からフラグメントを削除\n                // ref: https://stackoverflow.com/a/49373716/17124142\n                history.replaceState(null, null, ' ');\n            }\n        }\n    },\n    watch: {\n        // settings 内の値の変更を監視する\n        settings: {\n            deep: true,\n            handler() {\n                // settings 内の値を順に LocalStorage に保存する\n                for (const [setting_key, setting_value] of Object.entries(this.settings)) {\n                    Utils.setSettingsItem(setting_key, setting_value);\n                }\n            }\n        }\n    },\n    methods: {\n        async syncAccountInfo() {\n\n            try {\n\n                // ユーザーアカウントの情報を取得する\n                const response = await Vue.axios.get('/users/me');\n                this.user = response.data;\n\n                // ニコニコアカウントのユーザーアイコンの URL を生成 (ニコニコアカウントと連携されている場合のみ)\n                if (this.user.niconico_user_id !== null) {\n                    const user_id_slice = this.user.niconico_user_id.toString().slice(0, 4);\n                    this.niconico_user_icon_url =\n                        `https://secure-dcdn.cdn.nimg.jp/nicoaccount/usericon/${user_id_slice}/${this.user.niconico_user_id}.jpg`;\n                }\n\n            } catch (error) {\n\n                // ログインされていない\n                if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n\n                    // 未ログイン状態に設定\n                    this.is_logged_in = false;\n                    this.user = null;\n                }\n            }\n        },\n\n        async loginNiconicoAccount() {\n\n            // ログインしていない場合はエラーにする\n            if (this.is_logged_in === false) {\n                this.$message.warning('連携をはじめるには、KonomiTV アカウントにログインしてください。');\n                return;\n            }\n\n            // ニコニコアカウントと連携するための認証 URL を取得\n            const authorization_url = (await Vue.axios.get('/niconico/auth')).data.authorization_url;\n\n            // モバイルデバイスではポップアップが事実上使えない (特に Safari ではブロックされてしまう) ので、素直にリダイレクトで実装する\n            if (Utils.isMobileDevice() === true) {\n                location.href = authorization_url;\n                return;\n            }\n\n            // OAuth 連携のため、認証 URL をポップアップウインドウで開く\n            // window.open() の第2引数はユニークなものにしておくと良いらしい\n            // ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1 (大変参考になりました)\n            const popup_window = window.open(authorization_url, 'KonomiTV-OAuthPopup', Utils.getWindowFeatures());\n\n            // 認証完了 or 失敗後、ポップアップウインドウから送信される文字列を受信\n            const onMessage = async (event) => {\n\n                // すでにウインドウが閉じている場合は実行しない\n                if (popup_window.closed) return;\n\n                // 受け取ったオブジェクトに KonomiTV-OAuthPopup キーがない or そもそもオブジェクトではない際は実行しない\n                // ブラウザの拡張機能から結構余計な message が飛んでくるっぽい…。\n                if (Utils.typeof(event.data) !== 'object') return;\n                if (('KonomiTV-OAuthPopup' in event.data) === false) return;\n\n                // 認証は完了したので、ポップアップウインドウを閉じ、リスナーを解除する\n                if (popup_window) popup_window.close();\n                window.removeEventListener('message', onMessage);\n\n                // ステータスコードと詳細メッセージを取得\n                const authorization_status = event.data['KonomiTV-OAuthPopup']['status'] as number;\n                const authorization_detail = event.data['KonomiTV-OAuthPopup']['detail'] as string;\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\n            };\n\n            // postMessage() を受信するリスナーを登録\n            window.addEventListener('message', onMessage);\n        },\n\n        async onOAuthCallbackReceived(authorization_status: number, authorization_detail: string) {\n            console.log(`NiconicoAuthCallbackAPI: Status: ${authorization_status} / Detail: ${authorization_detail}`);\n\n            // OAuth 連携に失敗した\n            if (authorization_status !== 200) {\n                if (authorization_detail.startsWith('Authorization was denied (access_denied)')) {\n                    this.$message.error('ニコニコアカウントとの連携がキャンセルされました。');\n                } else if (authorization_detail.startsWith('Failed to get access token (HTTP Error ')) {\n                    const error = authorization_detail.replace('Failed to get access token ', '');\n                    this.$message.error(`アクセストークンの取得に失敗しました。${error}`);\n                } else if (authorization_detail.startsWith('Failed to get access token (Connection Timeout)')) {\n                    this.$message.error('アクセストークンの取得に失敗しました。ニコニコで障害が発生している可能性があります。');\n                } else if (authorization_detail.startsWith('Failed to get user information (HTTP Error ')) {\n                    const error = authorization_detail.replace('Failed to get user information ', '');\n                    this.$message.error(`ニコニコアカウントのユーザー情報の取得に失敗しました。${error}`);\n                } else if (authorization_detail.startsWith('Failed to get user information (Connection Timeout)')) {\n                    this.$message.error('ニコニコアカウントのユーザー情報の取得に失敗しました。ニコニコで障害が発生している可能性があります。');\n                } else {\n                    this.$message.error(`ニコニコアカウントとの連携に失敗しました。(${authorization_detail})`);\n                }\n                return;\n            }\n\n            // 表示されているアカウント情報を更新\n            await this.syncAccountInfo();\n\n            this.$message.success('ニコニコアカウントと連携しました。');\n        },\n\n        async logoutNiconicoAccount() {\n\n            // ニコニコアカウント連携解除 API にリクエスト\n            await Vue.axios.delete('/niconico/logout');\n\n            // 表示されているアカウント情報を更新\n            await this.syncAccountInfo();\n\n            this.$message.success('ニコニコアカウントとの連携を解除しました。');\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Jikkyo.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Jikkyo.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Jikkyo.vue?vue&type=template&id=30ff5c96&scoped=true&\"\nimport script from \"./Jikkyo.vue?vue&type=script&lang=ts&\"\nexport * from \"./Jikkyo.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Jikkyo.vue?vue&type=style&index=0&id=30ff5c96&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"30ff5c96\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"22px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"Twitter\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[_c('div',{staticClass:\"twitter-accounts\"},[(_vm.user.twitter_accounts.length > 0)?_c('div',{staticClass:\"twitter-accounts__heading\"},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-board-20-filled\",\"height\":\"30\"}}),_vm._v(\"連携中のアカウント \")],1):_vm._e(),(_vm.user.twitter_accounts.length === 0)?_c('div',{staticClass:\"twitter-accounts__guide\"},[_c('Icon',{staticClass:\"flex-shrink-0\",attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"45px\"}}),_c('div',{staticClass:\"ml-4\"},[_c('div',{staticClass:\"font-weight-bold text-h6\"},[_vm._v(\"Twitter アカウントと連携していません\")]),_c('div',{staticClass:\"text--text text--darken-1 text-subtitle-2 mt-1\"},[_vm._v(\" Twitter アカウントと連携すると、テレビを見ながら Twitter にツイートしたり、ほかの実況ツイートをリアルタイムで表示できるようになります。 \")])])],1):_vm._e(),_vm._l((_vm.user.twitter_accounts),function(twitter_account){return _c('div',{key:twitter_account.id,staticClass:\"twitter-account\"},[_c('img',{staticClass:\"twitter-account__icon\",attrs:{\"src\":twitter_account.icon_url}}),_c('div',{staticClass:\"twitter-account__info\"},[_c('div',{staticClass:\"twitter-account__info-name\"},[_c('span',{staticClass:\"twitter-account__info-name-text\"},[_vm._v(_vm._s(twitter_account.name))])]),_c('span',{staticClass:\"twitter-account__info-screen-name\"},[_vm._v(\"@\"+_vm._s(twitter_account.screen_name))])]),_c('v-btn',{staticClass:\"twitter-account__logout ml-auto\",attrs:{\"width\":\"124\",\"height\":\"52\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.logoutTwitterAccount(twitter_account.screen_name)}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-disconnected-20-filled\",\"height\":\"24\"}}),_vm._v(\"連携解除 \")],1)],1)}),_c('v-btn',{staticClass:\"twitter-account__login\",attrs:{\"color\":\"secondary\",\"max-width\":\"250\",\"height\":\"50\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.loginTwitterAccount()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-connected-20-filled\",\"height\":\"24\"}}),_vm._v(\"連携するアカウントを追加 \")],1)],2),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"fold_panel_after_sending_tweet\"}},[_vm._v(\"ツイート送信後にパネルを閉じる\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"fold_panel_after_sending_tweet\"}},[_vm._v(\" ツイートを送信した後に、表示中のパネルを閉じる（折りたたむ）かを設定します。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"fold_panel_after_sending_tweet\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.fold_panel_after_sending_tweet),callback:function ($$v) {_vm.$set(_vm.settings, \"fold_panel_after_sending_tweet\", $$v)},expression:\"settings.fold_panel_after_sending_tweet\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"reset_hashtag_when_program_switches\"}},[_vm._v(\"番組が切り替わったときにハッシュタグフォームをリセットする\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"reset_hashtag_when_program_switches\"}},[_vm._v(\" チャンネルを切り替えたときや、視聴中の番組が終了し次の番組の放送が開始されたときに、ハッシュタグフォームをリセットするかを設定します。\"),_c('br'),_vm._v(\" この設定をオンにしておけば、「誤って前番組のハッシュタグをつけたまま次番組の実況ツイートをしてしまう」といったミスを回避できます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"reset_hashtag_when_program_switches\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.reset_hashtag_when_program_switches),callback:function ($$v) {_vm.$set(_vm.settings, \"reset_hashtag_when_program_switches\", $$v)},expression:\"settings.reset_hashtag_when_program_switches\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"auto_add_watching_channel_hashtag\"}},[_vm._v(\"視聴中のチャンネルに対応する局タグを自動的に追加する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"auto_add_watching_channel_hashtag\"}},[_vm._v(\" ハッシュタグフォームに、視聴中のチャンネルに対応する局タグ (#nhk, #tokyomx など) を自動的に追加するかを設定します。\"),_c('br'),_vm._v(\" 現時点で、局タグは三大首都圏の地上波・BS の一部チャンネル・AT-X にのみ対応しています。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"auto_add_watching_channel_hashtag\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.auto_add_watching_channel_hashtag),callback:function ($$v) {_vm.$set(_vm.settings, \"auto_add_watching_channel_hashtag\", $$v)},expression:\"settings.auto_add_watching_channel_hashtag\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"既定で表示される Twitter タブ内のタブ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 視聴画面を開いたときに、パネルの Twitter タブの中で最初に表示されるタブを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.twitter_active_tab},model:{value:(_vm.settings.twitter_active_tab),callback:function ($$v) {_vm.$set(_vm.settings, \"twitter_active_tab\", $$v)},expression:\"settings.twitter_active_tab\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ツイートにつけるハッシュタグの位置\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" ツイート本文から見て、ハッシュタグをどの位置につけてツイートするかを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tweet_hashtag_position},model:{value:(_vm.settings.tweet_hashtag_position),callback:function ($$v) {_vm.$set(_vm.settings, \"tweet_hashtag_position\", $$v)},expression:\"settings.tweet_hashtag_position\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ツイートするキャプチャに番組タイトルの透かしを描画する\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" ツイートするキャプチャに、視聴中の番組タイトルの透かしを描画するかを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tweet_capture_watermark_position},model:{value:(_vm.settings.tweet_capture_watermark_position),callback:function ($$v) {_vm.$set(_vm.settings, \"tweet_capture_watermark_position\", $$v)},expression:\"settings.tweet_capture_watermark_position\"}})],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport axios from 'axios';\nimport Vue from 'vue';\n\nimport { IUser } from '@/interface';\nimport Base from '@/views/Settings/Base.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Settings-Twitter',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            // 既定で表示されるパネルのタブの選択肢\n            twitter_active_tab: [\n                {'text': 'ツイート検索タブ', 'value': 'Search'},\n                {'text': 'タイムラインタブ', 'value': 'Timeline'},\n                {'text': 'キャプチャタブ', 'value': 'Capture'},\n            ],\n\n            // ツイートにつけるハッシュタグの位置の選択肢\n            tweet_hashtag_position: [\n                {'text': 'ツイート本文の前に追加する', 'value': 'Prepend'},\n                {'text': 'ツイート本文の後に追加する', 'value': 'Append'},\n                {'text': 'ツイート本文の前に追加してから改行する', 'value': 'PrependWithLineBreak'},\n                {'text': 'ツイート本文の後に改行してから追加する', 'value': 'AppendWithLineBreak'},\n            ],\n\n            // ツイートするキャプチャに番組タイトルの透かしを描画する位置の選択肢\n            tweet_capture_watermark_position: [\n                {'text': '透かしを描画しない', 'value': 'None'},\n                {'text': '透かしをキャプチャの左上に描画する', 'value': 'TopLeft'},\n                {'text': '透かしをキャプチャの右上に描画する', 'value': 'TopRight'},\n                {'text': '透かしをキャプチャの左下に描画する', 'value': 'BottomLeft'},\n                {'text': '透かしをキャプチャの右下に描画する', 'value': 'BottomRight'},\n            ],\n\n            // ローディング中かどうか\n            is_loading: true,\n\n            // ログイン中かどうか\n            is_logged_in: Utils.getAccessToken() !== null,\n\n            // ユーザーアカウントの情報\n            // ログインしていない場合は null になる\n            user: null as IUser | null,\n\n            // 設定値が保存されるオブジェクト\n            // ここの値とフォームを v-model で binding する\n            settings: (() => {\n                // 現在の設定値を取得する\n                const settings = {};\n                const setting_keys = [\n                    'fold_panel_after_sending_tweet',\n                    'reset_hashtag_when_program_switches',\n                    'auto_add_watching_channel_hashtag',\n                    'twitter_active_tab',\n                    'tweet_hashtag_position',\n                    'tweet_capture_watermark_position',\n                ];\n                for (const setting_key of setting_keys) {\n                    settings[setting_key] = Utils.getSettingsItem(setting_key);\n                }\n                return settings;\n            })(),\n        }\n    },\n    async created() {\n\n        // ユーザーモデルの初期値\n        this.user = {\n            id: 0,\n            name: '',\n            is_admin: true,\n            niconico_user_id: null,\n            niconico_user_name: null,\n            niconico_user_premium: null,\n            twitter_accounts: [],\n            created_at: '',\n            updated_at: '',\n        }\n\n        // 表示されているアカウント情報を更新 (ログイン時のみ)\n        if (this.is_logged_in === true) {\n            await this.syncAccountInfo();\n        }\n\n        // ローディング状態を解除\n        this.is_loading = false;\n\n        // もしハッシュ (# から始まるフラグメント) に何か指定されていたら、\n        // OAuth 連携のコールバックの結果が入っている可能性が高いので、パースを試みる\n        // アカウント情報更新より後にしないと Snackbar がうまく表示されない\n        if (location.hash !== '') {\n            const params = new URLSearchParams(location.hash.replace('#', ''));\n            if (params.get('status') !== null && params.get('detail') !== null) {\n                // コールバックの結果を取得できたので、OAuth 連携の結果を画面に通知する\n                const authorization_status = parseInt(params.get('status'));\n                const authorization_detail = params.get('detail');\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\n                // URL からフラグメントを削除\n                // ref: https://stackoverflow.com/a/49373716/17124142\n                history.replaceState(null, null, ' ');\n            }\n        }\n    },\n    watch: {\n        // settings 内の値の変更を監視する\n        settings: {\n            deep: true,\n            handler() {\n                // settings 内の値を順に LocalStorage に保存する\n                for (const [setting_key, setting_value] of Object.entries(this.settings)) {\n                    Utils.setSettingsItem(setting_key, setting_value);\n                }\n            }\n        }\n    },\n    methods: {\n        async syncAccountInfo() {\n\n            try {\n\n                // ユーザーアカウントの情報を取得する\n                this.user = (await Vue.axios.get('/users/me')).data;\n\n            } catch (error) {\n\n                // ログインされていない\n                if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n\n                    // 未ログイン状態に設定\n                    this.is_logged_in = false;\n                    this.user = null;\n                }\n            }\n        },\n\n        async loginTwitterAccount() {\n\n            // ログインしていない場合はエラーにする\n            if (this.is_logged_in === false) {\n                this.$message.warning('連携をはじめるには、KonomiTV アカウントにログインしてください。');\n                return;\n            }\n\n            // Twitter アカウントと連携するための認証 URL を取得\n            const authorization_url = (await Vue.axios.get('/twitter/auth')).data.authorization_url;\n\n            // モバイルデバイスではポップアップが事実上使えない (特に Safari ではブロックされてしまう) ので、素直にリダイレクトで実装する\n            if (Utils.isMobileDevice() === true) {\n                location.href = authorization_url;\n                return;\n            }\n\n            // OAuth 連携のため、認証 URL をポップアップウインドウで開く\n            // window.open() の第2引数はユニークなものにしておくと良いらしい\n            // ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1 (大変参考になりました)\n            const popup_window = window.open(authorization_url, 'KonomiTV-OAuthPopup', Utils.getWindowFeatures());\n\n            // 認証完了 or 失敗後、ポップアップウインドウから送信される文字列を受信\n            const onMessage = async (event) => {\n\n                // すでにウインドウが閉じている場合は実行しない\n                if (popup_window.closed) return;\n\n                // 受け取ったオブジェクトに KonomiTV-OAuthPopup キーがない or そもそもオブジェクトではない際は実行しない\n                // ブラウザの拡張機能から結構余計な message が飛んでくるっぽい…。\n                if (Utils.typeof(event.data) !== 'object') return;\n                if (('KonomiTV-OAuthPopup' in event.data) === false) return;\n\n                // 認証は完了したので、ポップアップウインドウを閉じ、リスナーを解除する\n                if (popup_window) popup_window.close();\n                window.removeEventListener('message', onMessage);\n\n                // ステータスコードと詳細メッセージを取得\n                const authorization_status = event.data['KonomiTV-OAuthPopup']['status'] as number;\n                const authorization_detail = event.data['KonomiTV-OAuthPopup']['detail'] as string;\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\n            };\n\n            // postMessage() を受信するリスナーを登録\n            window.addEventListener('message', onMessage);\n        },\n\n        async onOAuthCallbackReceived(authorization_status: number, authorization_detail: string) {\n            console.log(`TwitterAuthCallbackAPI: Status: ${authorization_status} / Detail: ${authorization_detail}`);\n\n            // OAuth 連携に失敗した\n            if (authorization_status !== 200) {\n                if (authorization_detail.startsWith('Authorization was denied by user')) {\n                    this.$message.error('Twitter アカウントとの連携がキャンセルされました。');\n                } else if (authorization_detail.startsWith('Failed to get access token')) {\n                    this.$message.error('アクセストークンの取得に失敗しました。');\n                } else if (authorization_detail.startsWith('Failed to get user information')) {\n                    this.$message.error('Twitter アカウントのユーザー情報の取得に失敗しました。');\n                } else {\n                    this.$message.error(`Twitter アカウントとの連携に失敗しました。(${authorization_detail})`);\n                }\n                return;\n            }\n\n            // 表示されているアカウント情報を更新\n            await this.syncAccountInfo();\n\n            // ログイン中のユーザーに紐づく Twitter アカウントのうち、一番 updated_at が新しいものを取得\n            // ログインすると updated_at が更新されるため、この時点で一番 updated_at が新しいアカウントが今回連携したものだと判断できる\n            // ref: https://stackoverflow.com/a/12192544/17124142 (ISO8601 のソートアルゴリズム)\n            const current_twitter_account = [...this.user.twitter_accounts].sort((a, b) => {\n                return (a.updated_at < b.updated_at) ? 1 : ((a.updated_at > b.updated_at) ? -1 : 0);\n            })[0];\n\n            this.$message.success(`Twitter @${current_twitter_account.screen_name} と連携しました。`);\n        },\n\n        async logoutTwitterAccount(screen_name: string) {\n\n            // Twitter アカウント連携解除 API にリクエスト\n            await Vue.axios.delete(`/twitter/accounts/${screen_name}`);\n\n            // 表示されているアカウント情報を更新\n            await this.syncAccountInfo();\n\n            this.$message.success(`Twitter @${screen_name} との連携を解除しました。`);\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Twitter.vue?vue&type=template&id=829e9b7a&scoped=true&\"\nimport script from \"./Twitter.vue?vue&type=script&lang=ts&\"\nexport * from \"./Twitter.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Twitter.vue?vue&type=style&index=0&id=829e9b7a&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"829e9b7a\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:toolbox-20-filled\",\"width\":\"22px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"環境設定\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"鋭意開発中…\")])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport Base from '@/views/Settings/Base.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Settings-Environment',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // 設定値が保存されるオブジェクト\n            // ここの値とフォームを v-model で binding する\n            settings: (() => {\n                // 現在の設定値を取得する\n                const settings = {};\n                const setting_keys = [];\n                for (const setting_key of setting_keys) {\n                    settings[setting_key] = Utils.getSettingsItem(setting_key);\n                }\n                return settings;\n            })(),\n        }\n    },\n    watch: {\n        // settings 内の値の変更を監視する\n        settings: {\n            deep: true,\n            handler() {\n                // settings 内の値を順に LocalStorage に保存する\n                for (const [setting_key, setting_value] of Object.entries(this.settings)) {\n                    Utils.setSettingsItem(setting_key, setting_value);\n                }\n            }\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Environment.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Environment.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Environment.vue?vue&type=template&id=39075e10&\"\nimport script from \"./Environment.vue?vue&type=script&lang=ts&\"\nexport * from \"./Environment.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"login-container-wrapper d-flex align-center w-100 mb-13\"},[_c('v-card',{staticClass:\"login-container px-10 pt-8 pb-11 mx-auto background lighten-1\",attrs:{\"elevation\":\"10\",\"width\":\"100%\",\"max-width\":\"450\"}},[_c('v-card-title',{staticClass:\"login__logo justify-center pb-7\"},[_c('v-img',{attrs:{\"max-width\":\"250\",\"src\":\"/assets/images/logo.svg\"}})],1),_c('v-divider'),_c('v-form',{ref:\"login\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('v-text-field',{staticClass:\"mt-12\",attrs:{\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"hide-details\":\"\",\"autofocus\":\"\",\"dense\":_vm.is_form_dense},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}}),_c('v-text-field',{staticClass:\"mt-8\",attrs:{\"outlined\":\"\",\"placeholder\":\"パスワード\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"type\":_vm.password_showing ? 'text' : 'password',\"append-icon\":_vm.password_showing ? 'mdi-eye' : 'mdi-eye-off'},on:{\"click:append\":function($event){_vm.password_showing = !_vm.password_showing}},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('v-btn',{staticClass:\"login-button mt-5\",attrs:{\"color\":\"secondary\",\"depressed\":\"\",\"width\":\"100%\",\"height\":\"56\"},on:{\"click\":function($event){return _vm.login()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-in\"}}),_vm._v(\"ログイン \")],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport axios from 'axios';\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Login',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            username: '' as string,\n            password: '' as string,\n            password_showing: false,\n        }\n    },\n    methods: {\n        async login() {\n\n            // ユーザー名またはパスワードが空\n            if (this.username === '' || this.password === '') return;\n\n            try {\n\n                // ログインしてアクセストークンを取得する\n                const response = await Vue.axios.post('/users/token', new URLSearchParams({\n                    username: this.username,\n                    password: this.password,\n                }));\n\n                // 取得したアクセストークンを保存\n                console.log('Login successful.');\n                console.log(response.data);\n                Utils.saveAccessToken(response.data.access_token);\n\n                // アカウントページに遷移\n                this.$message.success('ログインしました。');\n                await this.$router.push({path: '/settings/account'});\n\n            } catch (error) {\n\n                // ログインに失敗\n                if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n\n                    console.log('Failed to login.');\n                    console.log(error.response.data);\n\n                    // エラーメッセージごとに Snackbar に表示\n                    switch ((error.response.data as any).detail) {\n                        case 'Incorrect username': {\n                            this.$message.error('ログインできませんでした。そのユーザー名のアカウントは存在しません。');\n                            break;\n                        }\n                        case 'Incorrect password': {\n                            this.$message.error('ログインできませんでした。パスワードを間違えていませんか？');\n                            break;\n                        }\n                        default: {\n                            this.$message.error(`ログインできませんでした。(HTTP Error ${error.response.status})`);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=58f627c5&scoped=true&\"\nimport script from \"./Login.vue?vue&type=script&lang=ts&\"\nexport * from \"./Login.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Login.vue?vue&type=style&index=0&id=58f627c5&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"58f627c5\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"register-container-wrapper d-flex align-center w-100 mb-13\"},[_c('v-card',{staticClass:\"register-container px-10 pt-8 pb-11 mx-auto background lighten-1\",attrs:{\"elevation\":\"10\",\"width\":\"100%\",\"max-width\":\"450\"}},[_c('v-card-title',{staticClass:\"register__logo flex-column justify-center\"},[_c('v-img',{attrs:{\"max-width\":\"250\",\"src\":\"/assets/images/logo.svg\"}}),_c('h4',{staticClass:\"mt-10\"},[_vm._v(\"アカウントを作成\")])],1),_c('v-divider'),_c('v-form',{ref:\"register\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('v-text-field',{staticClass:\"mt-10\",attrs:{\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"autofocus\":\"\",\"dense\":_vm.is_form_dense,\"rules\":[_vm.username_validation]},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}}),_c('v-text-field',{staticClass:\"mt-2\",attrs:{\"outlined\":\"\",\"placeholder\":\"パスワード\",\"dense\":_vm.is_form_dense,\"type\":_vm.password_showing ? 'text' : 'password',\"append-icon\":_vm.password_showing ? 'mdi-eye' : 'mdi-eye-off',\"rules\":[_vm.password_validation]},on:{\"click:append\":function($event){_vm.password_showing = !_vm.password_showing}},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('v-btn',{staticClass:\"register-button mt-5\",attrs:{\"color\":\"secondary\",\"depressed\":\"\",\"width\":\"100%\",\"height\":\"56\"},on:{\"click\":function($event){return _vm.register()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-add-20-filled\",\"height\":\"24\"}}),_vm._v(\"アカウントを作成 \")],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport axios from 'axios';\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Register',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            username: null as string | null,\n            username_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'ユーザー名を入力してください。';\n                if (/^.{2,}$/.test(value) === false) return 'ユーザー名は2文字以上で入力してください。';\n                return true;\n            },\n            password: null as string | null,\n            password_showing: true,  // アカウント作成時は既定でパスワードを表示する\n            password_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'パスワードを入力してください。';\n                // 正規表現の参考: https://qiita.com/grrrr/items/0b35b5c1c98eebfa5128\n                if (/^[a-zA-Z0-9!-/:-@¥[-`{-~]{4,}$/.test(value) === false) return 'パスワードは4文字以上の半角英数記号を入力してください。';\n                return true;\n            },\n        }\n    },\n    methods: {\n        async register() {\n\n            // すべてのバリデーションが通過したときのみ\n            // ref: https://qiita.com/Hijiri_Ishi/items/56cac99c8f3806a6fa24\n            if ((this.$refs.register as any).validate() === false) return;\n\n            try {\n\n                // アカウント作成 API にリクエスト\n                const response = await Vue.axios.post('/users', {\n                    username: this.username,\n                    password: this.password,\n                });\n\n                console.log('Account created.')\n                console.log(response.data);\n\n            } catch (error) {\n\n                // アカウントの作成に失敗\n                // ref: https://dev.classmethod.jp/articles/typescript-typing-exception-objects-in-axios-trycatch/\n                if (axios.isAxiosError(error) && error.response && error.response.status === 422) {\n\n                    console.log('Failed to create account.');\n                    console.log(error.response.data);\n\n                    // エラーメッセージごとに Snackbar に表示\n                    switch ((error.response.data as any).detail) {\n                        case 'Specified username is duplicated': {\n                            this.$message.error('ユーザー名が重複しています。');\n                            break;\n                        }\n                        case 'Specified username is not accepted due to system limitations': {\n                            this.$message.error('ユーザー名に token と me は使えません。');\n                            break;\n                        }\n                        default: {\n                            this.$message.error(`アカウントを作成できませんでした。(HTTP Error ${error.response.status})`);\n                            break;\n                        }\n                    }\n                }\n                return;  // 処理を中断\n            }\n\n            // ここから先の処理はログイン画面とほぼ同じ\n            try {\n\n                // アカウントを作成できたので、ログインしてアクセストークンを取得する\n                const response = await Vue.axios.post('/users/token', new URLSearchParams({\n                    username: this.username,\n                    password: this.password,\n                }));\n\n                // 取得したアクセストークンを保存\n                console.log('Login successful.');\n                console.log(response.data);\n                Utils.saveAccessToken(response.data.access_token);\n\n                // アカウントページに遷移\n                this.$message.success('アカウントを作成しました。');\n                await this.$router.push({path: '/settings/account'});\n\n            } catch (error) {\n\n                // ログインに失敗\n                if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n\n                    console.log('Failed to login.');\n                    console.log(error.response.data);\n\n                    // エラーメッセージごとに Snackbar に表示\n                    switch ((error.response.data as any).detail) {\n                        case 'Incorrect username': {\n                            this.$message.error('ログインできませんでした。そのユーザー名のアカウントは存在しません。');\n                            break;\n                        }\n                        case 'Incorrect password': {\n                            this.$message.error('ログインできませんでした。パスワードを間違えていませんか？');\n                            break;\n                        }\n                        default: {\n                            this.$message.error(`ログインできませんでした。(HTTP Error ${error.response.status})`);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Register.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Register.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Register.vue?vue&type=template&id=58a97cb7&scoped=true&\"\nimport script from \"./Register.vue?vue&type=script&lang=ts&\"\nexport * from \"./Register.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Register.vue?vue&type=style&index=0&id=58a97cb7&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"58a97cb7\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_vm._m(0)],1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"d-flex justify-center align-center w-100\"},[_c('div',{staticClass:\"d-flex justify-center align-center flex-column\"},[_c('h1',[_vm._v(\"Not Found, or Under Development...\")]),_c('span',{staticClass:\"mt-4 text--text text--darken-1\"},[_vm._v(\"お探しのページは存在しないか、鋭意開発中です。\")])])])\n}]\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\n\nexport default Vue.extend({\n    name: 'NotFound',\n    components: {\n        Header,\n        Navigation,\n    },\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NotFound.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NotFound.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./NotFound.vue?vue&type=template&id=1310cfee&scoped=true&\"\nimport script from \"./NotFound.vue?vue&type=script&lang=ts&\"\nexport * from \"./NotFound.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./NotFound.vue?vue&type=style&index=0&id=1310cfee&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1310cfee\",\n  null\n  \n)\n\nexport default component.exports","\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\n\nimport TVHome from '@/views/TV/Home.vue';\nimport TVWatch from '@/views/TV/Watch.vue';\nimport SettingsIndex from '@/views/Settings/Index.vue';\nimport SettingsGeneral from '@/views/Settings/General.vue';\nimport SettingsAccount from '@/views/Settings/Account.vue';\nimport SettingsJikkyo from '@/views/Settings/Jikkyo.vue';\nimport SettingsTwitter from '@/views/Settings/Twitter.vue';\nimport SettingsEnvironment from '@/views/Settings/Environment.vue';\nimport Login from '@/views/Login.vue';\nimport Register from '@/views/Register.vue';\nimport NotFound from '@/views/NotFound.vue';\nimport Utils from '@/utils';\n\nVue.use(VueRouter);\n\nconst router = new VueRouter({\n\n    // History API モード\n    mode: 'history',\n\n    // ルーティングのベース URL\n    base: process.env.BASE_URL,\n\n    // ルーティング設定\n    routes: [\n        {\n            path: '/',\n            redirect: '/tv/',\n        },\n        {\n            path: '/tv/',\n            name: 'TV Home',\n            component: TVHome,\n        },\n        {\n            path: '/tv/watch/:channel_id',\n            name: 'TV Watch',\n            component: TVWatch,\n        },\n        {\n            path: '/settings/',\n            name: 'Settings Index',\n            component: SettingsIndex,\n            beforeEnter: (to, from, next) => {\n\n                // スマホ縦画面・スマホ横画面・タブレット縦画面では設定一覧画面を表示する（画面サイズの関係）\n                if (Utils.isSmartphoneVertical() || Utils.isSmartphoneHorizontal() || Utils.isTabletVertical()) {\n                    next();  // 通常通り遷移\n                    return;\n                }\n\n                // それ以外の画面サイズでは全般設定にリダイレクト\n                next({path: '/settings/general/'});\n            }\n        },\n        {\n            path: '/settings/general',\n            name: 'Settings General',\n            component: SettingsGeneral,\n        },\n        {\n            path: '/settings/account',\n            name: 'Settings Account',\n            component: SettingsAccount,\n        },\n        {\n            path: '/settings/jikkyo',\n            name: 'Settings Jikkyo',\n            component: SettingsJikkyo,\n        },\n        {\n            path: '/settings/twitter',\n            name: 'Settings Twitter',\n            component: SettingsTwitter,\n        },\n        {\n            path: '/settings/environment',\n            name: 'Settings Environment',\n            component: SettingsEnvironment,\n        },\n        {\n            path: '/login/',\n            name: 'Login',\n            component: Login,\n        },\n        {\n            path: '/register/',\n            name: 'Register',\n            component: Register,\n        },\n        {\n            path: '*',\n            name: 'NotFound',\n            component: NotFound,\n        },\n    ],\n\n    // ページ遷移時のスクロールの挙動の設定\n    // ref: https://v3.router.vuejs.org/ja/guide/advanced/scroll-behavior.html\n    scrollBehavior (to, from, savedPosition) {\n        if (savedPosition) {\n            // 戻る/進むボタンが押されたときは保存されたスクロール位置を使う\n            return savedPosition;\n        } else {\n            // それ以外は常に先頭にスクロールする\n            return {x: 0, y: 0};\n        }\n    }\n});\n\nexport default router;\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  });\n}\n","\nimport { Icon } from '@iconify/vue2';\nimport { polyfill as SeamlessScrollPolyfill } from \"seamless-scroll-polyfill\";\nimport Vue from 'vue';\nimport VueAxios from 'vue-axios';\nimport VueVirtualScroller from 'vue-virtual-scroller';\nimport 'vue-virtual-scroller/dist/vue-virtual-scroller.css';\nimport VuetifyMessageSnackbar from 'vuetify-message-snackbar';\nimport VTooltip from 'v-tooltip';\nimport 'v-tooltip/dist/v-tooltip.css';\n\nimport App from '@/App.vue';\nimport VTabItem from '@/components/VTabItem';\nimport VTabs from '@/components/VTabs';\nimport VTabsItems from '@/components/VTabsItems';\nimport axios from '@/plugins/axios';\nimport vuetify from '@/plugins/vuetify';\nimport router from '@/router';\nimport '@/service-worker';\nimport Utils from './utils';\n\n// スムーズスクロール周りの API の polyfill を適用\n// Element.scrollInfoView() のオプション指定を使うために必要\nSeamlessScrollPolyfill();\n\n// Production Tip を非表示にする\nVue.config.productionTip = false;\n\n// 常に Vue.js devtools を有効にする\nVue.config.devtools = true;\n\n// Axios を使う\nVue.use(VueAxios, axios);\n\n// vue-virtual-scroller を使う\nVue.use(VueVirtualScroller);\n\n// vuetify-message-snackbar を使う\n// マイナーな OSS（しかも中国語…）だけど、Snackbar を関数で呼びたかったのでちょうどよかった\n// ref: https://github.com/thinkupp/vuetify-message-snackbar\nVue.use(VuetifyMessageSnackbar, {\n    // 画面上に配置しない\n    top: false,\n    // 画面下に配置する\n    bottom: true,\n    // デフォルトの背景色\n    color: '#433532',\n    // ダークテーマを適用する\n    dark: true,\n    // 影 (Elevation) の設定\n    elevation: 8,\n    // 2.5秒でタイムアウト\n    timeout: 2500,\n    // 要素が非表示になった後に DOM から要素を削除する\n\tautoRemove: true,\n    // 閉じるボタンのテキスト\n\tcloseButtonContent: '閉じる',\n\t// Vuetify のインスタンス\n\tvuetifyInstance: vuetify,\n});\n\n// VTooltip を使う\n// タッチデバイスでは無効化する\n// ref: https://v-tooltip.netlify.app/guide/config.html#default-values\nconst trigger = Utils.isTouchDevice() ? [] : ['hover', 'focus', 'touch'];\nVTooltip.options.themes.tooltip.showTriggers = trigger;\nVTooltip.options.themes.tooltip.hideTriggers = trigger;\nVTooltip.options.themes.tooltip.delay.show = 0;\nVTooltip.options.offset = [0, 7];\nVue.use(VTooltip);\n\n// Iconify（アイコン）のグローバルコンポーネント\nVue.component('Icon', Icon);\n\n// VTabItem の挙動を改善するグローバルコンポーネント\nVue.component('v-tab-item-fix', VTabItem);\n\n// VTabs の挙動を改善するグローバルコンポーネント\nVue.component('v-tabs-fix', VTabs);\n\n// VTabsItems の挙動を改善するグローバルコンポーネント\nVue.component('v-tabs-items-fix', VTabsItems);\n\n// Vue を初期化\nnew Vue({\n    router,\n    vuetify,\n    render: h => h(App),\n}).$mount('#app');\n\n// ログイン時かつ設定の同期が有効なとき、ページ遷移に関わらず、常に3秒おきにサーバーから設定を取得する\n// 初回のページレンダリングに間に合わないのは想定内（同期の完了を待つこともできるが、それだと表示速度が遅くなるのでしょうがない）\nwindow.setInterval(async () => {\n    if (Utils.getAccessToken() !== null && Utils.getSettingsItem('sync_settings') === true) {\n        Utils.syncServerSettingsToClient();\n    }\n}, 3 * 1000);  // 3秒おき\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = function(module) {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: function() {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkKonomiTV\"] = self[\"webpackChunkKonomiTV\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(490); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_vm","_c","script","component","render","staticRenderFns","VTabItem","h","props","name","this","computedTransition","on","beforeEnter","onBeforeTransition","afterEnter","onAfterTransition","enterCancelled","onTransitionCancelled","beforeLeave","afterLeave","leaveCancelled","enter","onEnter","genWindowItem","VTabsBar","data","items","methods","register","item","activeItem","internalIndex","push","sort","a","b","index_a","$slots","default","findIndex","element","$vnode","key","index_b","$on","onClick","mandatory","selectedValues","length","updateMandatory","updateItem","indexOf","undefined","updateInternalValue","unregister","constructor","super","options","call","VTabs","genBar","slider","style","height","convertToUnit","activeClass","centerActive","dark","light","optional","mobileBreakpoint","nextIcon","prevIcon","showArrows","value","internalValue","callSlider","change","val","ref","setTextColor","computedColor","setBackgroundColor","backgroundColor","$createElement","genSlider","VTabsItems","updateReverse","oldVal","itemsLength","lastIndex","continuous","Utils","localStorage","getItem","setItem","JSON","stringify","default_settings","settings","parse","new_settings","default_settings_key","Object","keys","syncClientSettingsToServer","force","getAccessToken","sync_settings","uploading_settings","sleep","server_settings","Vue","server_settings_key","server_settings_value","entries","error","sync_settings_key","sync_settings_keys","access_token","removeItem","test","navigator","userAgent","blob","filename","blob_url","URL","createObjectURL","link","document","createElement","download","href","click","revokeObjectURL","content","html_escape_table","replace","match","popupSizeWidth","popupSizeHeight","window","screen","posTop","posLeft","width","class_name","activeElement","classList","contains","matchMedia","matches","base","Math","floor","seconds","Promise","resolve","setTimeout","Date","now","prototype","toString","slice","toLowerCase","text","escapeHTML","pattern","process","location","protocol","host","pinned_channel_ids","showed_panel_last_time","selected_twitter_account_id","saved_twitter_hashtags","tv_streaming_quality","tv_data_saver_mode","tv_low_latency_mode","tv_show_superimpose","panel_display_state","tv_panel_active_tab","caption_font","always_border_caption_text","specify_caption_background_color","caption_background_color","capture_copy_to_clipboard","capture_save_mode","capture_caption_mode","comment_speed_rate","comment_font_size","comment_delay_time","close_comment_form_after_sending","muted_comment_keywords","muted_niconico_user_ids","mute_vulgar_comments","mute_abusive_discriminatory_prejudiced_comments","mute_big_size_comments","mute_fixed_comments","mute_colored_comments","mute_consecutive_same_characters_comments","fold_panel_after_sending_tweet","reset_hashtag_when_program_switches","auto_add_watching_channel_hashtag","twitter_active_tab","tweet_hashtag_position","tweet_capture_watermark_position","ChannelUtils","channel_id","is_pretty","result","groups","channel_type","toUpperCase","channel_force","channels_list","remocon_id","channel_type_pretty","channels","get","index","channel","getChannelType","previous_index","next_index","CommentUtils","color","color_table","position","comment","user_id","getSettingsItem","muted_comment_keyword","includes","startsWith","endsWith","RegExp","mute_vulgar_comments_pattern","mute_abusive_discriminatory_prejudiced_comments_pattern","muted_niconico_user_id","setSettingsItem","Buffer","PlayerCaptureHandler","player","captured_callback","player_container","container","querySelector","insertAdjacentHTML","comment_capture_button","capture_button","canvas","OffscreenCanvas","canvas_context","getContext","alpha","desynchronized","willReadFrequently","async","video","videoWidth","videoHeight","with_comments","total_time","time","is_radiochannel","notice","danmaku","showing","addHighlight","filename_base","dayjs","format","filename_caption","caption_canvas","plugins","aribb24Caption","getRawCanvas","superimpose_canvas","aribb24Superimpose","is_caption_showing","isShowing","isPresent","is_superimpose_showing","caption_text","getTextContent","export_and_save","program","is_caption_composited","is_comment_composited","exportToBlob","console","log","mathFloor","setEXIFDataToCapture","downloadBlobData","uploadCaptureToServer","capture_normal","capture_caption","image_bitmap","createImageBitmap","promises","drawImage","comments_image","createCommentsImage","drawComments","filename_real","program_present","close","all","bitmap_canvas","transferFromImageBitmap","removeHighlight","capture","copyBlobToClipboard","convertBlobToPng","add","remove","html","svg","trim","image","Image","src","encodeURIComponent","decode","comments_html","template","outerHTML","querySelectorAll","getBoundingClientRect","left","replaceAll","commentsHTMLtoSVGImage","offsetWidth","offsetHeight","draw_scale_ratio","draw_height","convertToBlob","type","quality","HTMLCanvasElement","reject","toBlob","Error","captured_playback_position","diff","start_time","json","captured_at","network_id","service_id","event_id","title","description","end_time","duration","datetime","exif","piexif","TagValues","ImageIFD","XResolution","YResolution","ResolutionUnit","YCbCrPositioning","DateTime","Software","version","XPComment","ExifIFD","ExifVersion","ComponentsConfiguration","FlashpixVersion","ColorSpace","DateTimeOriginal","DateTimeDigitized","exif_string","dump","blob_string","reader","FileReader","onload","onerror","readAsBinaryString","blob_string_new","insert","buffer","Uint8Array","charCodeAt","Blob","form_data","FormData","append","headers","PlayerUtils","background_count","random","padStart","canPlayType","ProgramUtils","mark","pattern1","pattern2","isSameOrAfter","isSameOrBefore","isBetween","pause_time_start","hour","minute","second","pause_time_end","pause_time_start_23","pause_time_end_23","default_value","progress","is_short","axios_instance","axios","interceptors","request","use","config","baseURL","response","status","Vuetify","VSnackbar","VBtn","VIcon","theme","themes","primary","secondary","twitter","lighten1","lighten2","gray","black","background","lighten3","darken1","darken2","darken3","customProperties","staticClass","attrs","model","callback","expression","Array","from","channels_type","_v","tab","class","rawName","id","staticStyle","directives","preventDefault","$event","removePinnedChannel","stopPropagation","domProps","_s","components","BottomNavigation","latest_version","is_update_available","version_info","Header","Navigation","is_loading","interval_ids","Map","created","update","residue_second","getTime","setInterval","beforeDestroy","interval_id","clearInterval","channels_response","filter","is_display","GR","set","BS","CS","CATV","SKY","STARDIGIO","updatePinnedChannelList","addPinnedChannel","splice","is_update_tab","pinned_channels","pinned_channel_id","pinned_channel_type","pinned_channel","find","has","isPinnedChannel","controlDisplayTimer","modifiers","backgroundImage","is_zapping","is_panel_display","$router","shortcut_key_modal","shortcut_key_column_name","shortcut_key_column","shortcut_keys","_l","key_name","shortcut","IProgramDefault","detail","is_free","genre","video_type","video_codec","video_resolution","primary_audio_type","primary_audio_language","primary_audio_sampling_rate","secondary_audio_type","secondary_audio_language","secondary_audio_sampling_rate","IChannelDefault","transport_stream_id","channel_number","channel_name","channel_comment","is_subchannel","viewers","program_following","getProgramTime","getProgramProgress","required","comment_mute_settings_modal","is_comment_list_dropdown_display","scopedSlots","fn","active","isTouchDevice","initialize_failed_message","is_manual_scroll","scrollCommentList","_setup","muted_comment_keyword_match_type","prop","event","Boolean","interval_timer_id","map","keyword","setting_keys","setting_key","new_muted_comment_keywords","new_muted_niconico_user_ids","watch","deep","handler","setting_value","$emit","CommentMuteSettings","is_auto_scrolling","user","comment_list","comment_list_element","comment_list_dropdown_top","comment_list_dropdown_comment","watch_session","comment_session","vpos_base_timestamp","keep_seat_interval_id","resize_observer","resize_observer_element","$el","is_user_scrolling","onmousedown","x","clientX","clientWidth","onmouseup","on_user_scrolling","is_dragging","ontouchstart","ontouchend","ontouchmove","onwheel","onscroll","scrollTop","scrollHeight","destroy","unobserve","new_channel","old_channel","initReserveObserver","init","comment_session_info","initWatchSession","unix","initCommentSession","message","watch_session_info","is_success","WebSocket","audience_token","addEventListener","send","messageServer","uri","threadId","vposBaseTime","yourPostKey","readyState","keepIntervalSec","code","waitTimeSec","disconnect_reason","onclose","reason","comment_list_buffer","is_received_initial_comment","message_server","thread_id","your_post_key","event_raw","thread","resultcode","ping","chat","yourpost","isMutedComment","size","mail","commands","split","command","getCommentColor","getCommentPosition","shift","comment_dict","no","date","my_post","visibilityState","paused","draw","onvisibilitychange","niconico_user_id","niconico_user_premium","position_table","vpos","onmessage","success","animation_timeout_id","on_resize","video_element","comment_area_element","clientHeight","letter_box_height","threshold","comment_area_vertical_margin","comment_area_width","comment_area_height","gcd","y","gcd_result","comment_area_height_aspect","transition","setProperty","clearTimeout","removeProperty","ResizeObserver","observe","smooth","scrollTo","top","behavior","displayCommentListDropdown","comment_list_wrapper_rect","$refs","comment_list_wrapper","comment_list_dropdown_height","comment_button_rect","currentTarget","_self","_setupProxy","api_base_url","$route","params","decorateProgramInfo","getAttribute","genre_index","major","middle","getChannelForceType","detail_text","detail_heading","URLtoLink","zoom_capture_modal","clickCapture","target","tweet_hashtag","is_tweet_hashtag_form_focused","tweet_text","is_tweet_text_form_focused","is_logged_in_twitter","tweet_letter_count","editing","hashtag","twitter_account","updateSelectedTwitterAccount","draggable","is_virtual_keyboard_display","is_logged_in","selected_twitter_account","is_twitter_account_list_display","is_hashtag_list_display","zoom_capture","captures","captures_element","tweet_captures","is_admin","niconico_user_name","twitter_accounts","created_at","updated_at","syncAccountInfo","some","twitter_account_index","formatHashtag","image_url","old_channel_hashtag","getChannelHashtag","_a","updateTweetLetterCount","pasteClipboardData","clipboard_item","clipboardData","file","getAsFile","addCaptureList","clickHashtagListButton","clickHashtag","clickAccountButton","fullscreenElement","exitFullscreen","path","selected","focused","$nextTick","context","font","fillStyle","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","textAlign","textBaseline","fillText","from_hashtag_list","tweet_hashtag_array","channel_hashtag","join","tweet_capture","drawProgramTitleOnCapture","blur","screen_name","PLAYBACK_BUFFER_SEC_LOW_LATENCY","PLAYBACK_BUFFER_SEC","Channel","Comment","Program","Twitter","background_url","is_video_buffering","is_background_display","is_control_display","is_fullscreen","is_ime_composing","is_comment_send_just_did","control_interval_id","channel_previous","channel_next","is_zapping_continuously","player_can_be_destroyed","is_mpegts_supported","mpegts","romsounds_context","romsounds_buffers","eventsource","fullscreen_handler","capture_handler","shortcut_key_handler","shortcut_key_pressed_at","shortcut_key_list","left_column","icon","icon_height","shortcuts","right_column","virtualKeyboard","overlaysContent","ongeometrychange","boundingRect","AudioContext","url","audio_data","responseType","decodeAudioData","beforeRouteUpdate","to","next","destroy_promise","getPreviousAndCurrentAndNextChannel","then","generatePlayerBackgroundURL","channel_response","channel_response_data","twitter_component","initPlayer","initEventHandler","initCaptureHandler","removeEventListener","initShortcutKeyHandler","audioItem","liveLLHLSForKonomiTV","audioValue","textContent","tran","switchPrimaryAudio","delete","artwork","sizes","mediaSession","metadata","MediaMetadata","artist","setPositionState","playbackRate","setActionHandler","play","pause","is_player_event","is_touch_device","timeout","controller","hide","setting","isShow","show","playback_buffer_sec","DPlayer","lang","live","liveSyncMinBufferSize","loop","airplay","autoplay","hotkey","screenshot","volume","defaultQuality","qualities","hevc_prefix","isHEVCVideoSupported","speedRate","fontSize","apiBackend","read","sendComment","pluginOptions","enableWorker","enableStashBuffer","liveSync","liveSyncMaxLatency","liveSyncTargetLatency","liveSyncPlaybackRate","aribb24","normalFont","forceStrokeColor","forceBackgroundColor","drcsReplacement","enableRawCanvas","useStroke","usePUA","PRACallback","state","resume","buffer_source_node","createBufferSource","gain_node","createGain","connect","destination","gain","start","subtitle","setAutoHide","commentInput","settingOriginPanel","settingOriginPanelHeight","settingBox","clipPath","fullscreen_container","fullScreen","isFullScreen","onfullscreenchange","webkitFullscreenElement","cancel","requestFullscreen","webkitRequestFullscreen","orientation","lock","catch","webkitExitFullscreen","unlock","on_play_or_pause","buffered","end","currentTime","sync","crossOrigin","force_play","warn","pause_icon","playButton","innerHTML","mobilePlayButton","on_canplay","oncanplay","oncanplaythrough","get_playback_buffer_sec","round","current_playback_buffer_sec","current_volume","eventsource_url","EventSource","clients_count","load","pictureInPictureElement","exitPictureInPicture","requestPictureInPicture","switchVideo","clear","tweet_form_element","tag","tagName","editable","is_repeat","repeat","focus","scrollLeft","ctrlKey","metaKey","shiftKey","altKey","switch_channel_type","switch_remocon_id","Number","switch_channel","getChannelFromRemoconID","focused_capture_index","focused_capture","focused_capture_element","parentElement","scrollIntoView","block","inline","toggle","pictureInPictureEnabled","pipButton","showDanmaku","showDanmakuToggle","checked","captureAndSave","is_destroy_player","i","exportSettings","import_settings_file","Base","is_form_dense","settings_json","settings_json_blob","$message","go","user_icon_blob","overrideServerSettingsFromClient","sync_settings_dialog","settings_username","settings_icon","$$v","settings_password_showing","settings_password","account_delete_confirm_dialog","settings_username_validation","settings_password_validation","sync_settings_json","server_sync_settings_json","syncAccountIcon","icon_response","update_type","validate","username","password","logout","$set","niconico_user_icon_url","hash","URLSearchParams","authorization_status","parseInt","authorization_detail","onOAuthCallbackReceived","history","replaceState","user_id_slice","warning","authorization_url","popup_window","open","onMessage","closed","loginTwitterAccount","current_twitter_account","password_showing","password_validation","username_validation","_m","VueRouter","router","mode","routes","redirect","TVHome","TVWatch","SettingsIndex","SettingsGeneral","SettingsAccount","SettingsJikkyo","SettingsTwitter","SettingsEnvironment","Login","Register","NotFound","scrollBehavior","savedPosition","ready","registered","cached","updatefound","updated","offline","SeamlessScrollPolyfill","VueAxios","VueVirtualScroller","VuetifyMessageSnackbar","bottom","elevation","autoRemove","closeButtonContent","vuetifyInstance","vuetify","trigger","VTooltip","Icon","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","hmd","create","children","obj","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}