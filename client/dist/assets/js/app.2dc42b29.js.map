{"version":3,"file":"assets/js/app.2dc42b29.js","mappings":"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","sources":["webpack://KonomiTV/./src/App.vue","webpack://KonomiTV/./src/App.vue?74c6","webpack://KonomiTV/./src/components/VTabItem.ts","webpack://KonomiTV/./src/components/VTabsBar.ts","webpack://KonomiTV/./src/components/VTabs.ts","webpack://KonomiTV/./src/components/VTabsItems.ts","webpack://KonomiTV/./src/utils/Utils.ts","webpack://KonomiTV/./src/utils/TVUtils.ts","webpack://KonomiTV/./src/utils/index.ts","webpack://KonomiTV/./src/plugins/axios.ts","webpack://KonomiTV/./src/plugins/vuetify.ts","webpack://KonomiTV/./src/views/TV/Home.vue","webpack://KonomiTV/./src/components/Header.vue","webpack://KonomiTV/./src/components/Header.vue?5d06","webpack://KonomiTV/./src/components/Navigation.vue","webpack://KonomiTV/./src/components/Navigation.vue?e993","webpack://KonomiTV/./src/components/Navigation.vue?c328","webpack://KonomiTV/./src/components/Navigation.vue?bd43","webpack://KonomiTV/./src/views/TV/Home.vue?bdd6","webpack://KonomiTV/./src/views/TV/Home.vue?8980","webpack://KonomiTV/./src/views/TV/Home.vue?6763","webpack://KonomiTV/./src/views/TV/Watch.vue","webpack://KonomiTV/./src/interface.ts","webpack://KonomiTV/./src/components/Panel/Channel.vue","webpack://KonomiTV/./src/components/Panel/Channel.vue?0e9d","webpack://KonomiTV/./src/components/Panel/Channel.vue?34fb","webpack://KonomiTV/./src/components/Panel/Channel.vue?d5d3","webpack://KonomiTV/./src/components/Panel/Comment.vue","webpack://KonomiTV/./src/components/Panel/Comment.vue?94d2","webpack://KonomiTV/./src/components/Panel/Comment.vue?31bb","webpack://KonomiTV/./src/components/Panel/Comment.vue?ffda","webpack://KonomiTV/./src/components/Panel/Program.vue","webpack://KonomiTV/./src/components/Panel/Program.vue?d838","webpack://KonomiTV/./src/components/Panel/Program.vue?f967","webpack://KonomiTV/./src/components/Panel/Program.vue?393d","webpack://KonomiTV/./src/components/Panel/Twitter.vue","webpack://KonomiTV/./src/components/Panel/Twitter.vue?d4d0","webpack://KonomiTV/./src/components/Panel/Twitter.vue?710e","webpack://KonomiTV/./src/components/Panel/Twitter.vue?82e1","webpack://KonomiTV/./src/views/TV/Watch.vue?a1ad","webpack://KonomiTV/./src/views/TV/Watch.vue?78bf","webpack://KonomiTV/./src/views/TV/Watch.vue?f307","webpack://KonomiTV/./src/views/Settings/General.vue","webpack://KonomiTV/./src/views/Settings/Base.vue","webpack://KonomiTV/./src/views/Settings/Base.vue?8f0e","webpack://KonomiTV/./src/views/Settings/Base.vue?b75f","webpack://KonomiTV/./src/views/Settings/Base.vue?13e1","webpack://KonomiTV/./src/views/Settings/General.vue?5f9b","webpack://KonomiTV/./src/views/Settings/General.vue?6383","webpack://KonomiTV/./src/views/Settings/General.vue?1430","webpack://KonomiTV/./src/views/Settings/Account.vue","webpack://KonomiTV/./src/views/Settings/Account.vue?a46e","webpack://KonomiTV/./src/views/Settings/Account.vue?c440","webpack://KonomiTV/./src/views/Settings/Account.vue?d79e","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?43de","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?dae2","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?e1ab","webpack://KonomiTV/./src/views/Settings/Twitter.vue","webpack://KonomiTV/./src/views/Settings/Twitter.vue?a501","webpack://KonomiTV/./src/views/Settings/Twitter.vue?c5a2","webpack://KonomiTV/./src/views/Settings/Twitter.vue?8f70","webpack://KonomiTV/./src/views/Settings/Environment.vue","webpack://KonomiTV/./src/views/Settings/Environment.vue?c875","webpack://KonomiTV/./src/views/Settings/Environment.vue?8e72","webpack://KonomiTV/./src/views/Settings/Environment.vue?4a7e","webpack://KonomiTV/./src/views/Login.vue","webpack://KonomiTV/./src/views/Login.vue?21ac","webpack://KonomiTV/./src/views/Login.vue?ce3e","webpack://KonomiTV/./src/views/Login.vue?f5d0","webpack://KonomiTV/./src/views/Register.vue","webpack://KonomiTV/./src/views/Register.vue?4c26","webpack://KonomiTV/./src/views/Register.vue?e763","webpack://KonomiTV/./src/views/Register.vue?709e","webpack://KonomiTV/./src/views/NotFound.vue","webpack://KonomiTV/./src/views/NotFound.vue?5999","webpack://KonomiTV/./src/views/NotFound.vue?4637","webpack://KonomiTV/./src/views/NotFound.vue?dbe0","webpack://KonomiTV/./src/router/index.ts","webpack://KonomiTV/./src/service-worker.ts","webpack://KonomiTV/./src/main.ts","webpack://KonomiTV/webpack/bootstrap","webpack://KonomiTV/webpack/runtime/amd options","webpack://KonomiTV/webpack/runtime/chunk loaded","webpack://KonomiTV/webpack/runtime/compat get default export","webpack://KonomiTV/webpack/runtime/define property getters","webpack://KonomiTV/webpack/runtime/global","webpack://KonomiTV/webpack/runtime/harmony module decorator","webpack://KonomiTV/webpack/runtime/hasOwnProperty shorthand","webpack://KonomiTV/webpack/runtime/make namespace object","webpack://KonomiTV/webpack/runtime/jsonp chunk loading","webpack://KonomiTV/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-app',{attrs:{\"id\":\"app\"}},[_c('transition',[_c('router-view')],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6529f5e1&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&id=6529f5e1&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\nimport { VueConstructor, VNode } from 'vue';\n\nimport VTabItem from 'vuetify/lib/components/VTabs/VTabItem';\n\n// VTabItem は VWindowItem を extend() して実装されている\nexport default (VTabItem as VueConstructor).extend({\n    render (h): VNode {\n        return h('transition', {\n            props: {\n                name: (this as any).computedTransition,\n            },\n            on: {\n                // Handlers for enter windows.\n                beforeEnter: (this as any).onBeforeTransition,\n                afterEnter: (this as any).onAfterTransition,\n                enterCancelled: (this as any).onTransitionCancelled,\n\n                // Handlers for leave windows.\n                beforeLeave: (this as any).onBeforeTransition,\n                afterLeave: (this as any).onAfterTransition,\n                leaveCancelled: (this as any).onTransitionCancelled,\n\n                // Enter handler for height transition.\n                enter: (this as any).onEnter,\n            }\n        // this.showLazyContent() を通さずに常にレンダリングされるようにする\n        // 本来は実際に表示されている時だけレンダリングし、負荷を減らすための処理\n        // ただチャンネルリストのレンダリングは重いので、最初からレンダリングされていた方がタブの初回切り替えが早くなる\n        }, [(this as any).genWindowItem()]);\n    }\n});\n","\nimport { VueConstructor } from 'vue';\n\nimport { GroupableInstance } from 'vuetify/lib/components/VItemGroup/VItemGroup';\nimport VTabsBar from 'vuetify/lib/components/VTabs/VTabsBar';\n\n// VTabsBar は VItemGroup を extend() して実装されている\nexport default (VTabsBar as VueConstructor).extend({\n    data() {\n        return {\n            // 一応型定義をしておく\n            items: [] as GroupableInstance[],\n        }\n    },\n    methods: {\n\n        // タブのデータ配列の先頭に新しい要素が追加されるとそのタブのアニメーションの向きが逆になるバグがあるので、VItemGroup 側の挙動をオーバーライドする\n        // DOM 上も VNode 上も正しい順序で並んでいるが、this.items に関しては追加された順になっていてしまっていて齟齬が発生するのが原因\n        // ref: https://github.com/vuetifyjs/vuetify/issues/13862\n        register(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 要素を items に追加\n            this.items.push(item);\n\n            // this.$slots.default に VNode が、items には単に VueComponent が入っているので、事前に VNode の順番に合わせて並べ替える\n            // こうすることで、追加された順ではなく元のデータ配列通りの順番になる\n            this.items.sort((a, b) => {\n\n                // VueComponent の key が一致する this.$slots.default 内の VNode を探す\n                const index_a = this.$slots.default.findIndex((element) => {\n                    return a.$vnode.key === element.key;\n                });\n                const index_b = this.$slots.default.findIndex((element) => {\n                    return b.$vnode.key === element.key;\n                });\n\n                // index 順で並び替え\n                return index_a - index_b;\n            });\n\n            item.$on('change', () => (this as any).onClick(item));\n            if ((this as any).mandatory && !(this as any).selectedValues.length) {\n                (this as any).updateMandatory();\n            }\n\n            // 追加された要素のソート後のインデックスを取得して更新する\n            (this as any).updateItem(item, this.items.indexOf(item));\n\n            // ソート後の現在アクティブなタブのインデックスを取得し直し、設定する\n            // 配列の末尾以外に追加された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\n            }\n        },\n\n        unregister(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 継承元の unregister() の処理を呼び出す（いわゆる super() ）\n            // ref: https://github.com/vuejs/vue/issues/2977\n            (this.constructor as any).super.options.methods.unregister.call(this, item);\n\n            // 配列の末尾以外から削除された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\n            }\n        }\n    }\n});\n","\nimport { VueConstructor, VNode } from 'vue';\n\nimport { convertToUnit } from 'vuetify/lib/util/helpers'\nimport VTabs from 'vuetify/lib/components/VTabs/VTabs';\nimport VTabsBar from '@/components/VTabsBar';\n\nexport default (VTabs as VueConstructor).extend({\n    methods: {\n\n        // VTabsBar は VTabs から暗黙的に生成されるコンポーネントのため、直接上書きすることができない\n        // そこで VTabs 自体も上書きし、VTabs で $createElement() される時の VTabsBar を自前でオーバーライドしたものに差し替える\n        // ビルド済みのファイルには型定義が入っていないので any を多用せざるを得ない…\n        genBar(items: VNode[], slider: VNode | null) {\n            const data = {\n                style: {\n                    height: convertToUnit((this as any).height),\n                },\n                props: {\n                    activeClass: (this as any).activeClass,\n                    centerActive: (this as any).centerActive,\n                    dark: (this as any).dark,\n                    light: (this as any).light,\n                    mandatory: !(this as any).optional,\n                    mobileBreakpoint: (this as any).mobileBreakpoint,\n                    nextIcon: (this as any).nextIcon,\n                    prevIcon: (this as any).prevIcon,\n                    showArrows: (this as any).showArrows,\n                    value: (this as any).internalValue,\n                },\n                on: {\n                    'call:slider': (this as any).callSlider,\n                    change: (val: any) => {\n                        (this as any).internalValue = val;\n                    },\n                },\n                ref: 'items',\n            };\n\n            (this as any).setTextColor((this as any).computedColor, data);\n            (this as any).setBackgroundColor((this as any).backgroundColor, data);\n\n            // ここでオーバーライドした VTabsBar を使うのが最重要\n            // これをやるためだけにわざわざ VTabs に関してもオーバーライドする羽目になってる…\n            return (this as any).$createElement(VTabsBar, data, [\n                (this as any).genSlider(slider),\n                items,\n            ]);\n        }\n    }\n});\n","\nimport { VueConstructor } from 'vue';\n\nimport { GroupableInstance } from 'vuetify/lib/components/VItemGroup/VItemGroup';\nimport VTabsItems from 'vuetify/lib/components/VTabs/VTabsItems';\n\n// VTabsItems は VItemGroup と VWindow を extend() して実装されている\nexport default (VTabsItems as VueConstructor).extend({\n    data() {\n        return {\n            // 一応型定義をしておく\n            items: [] as GroupableInstance[],\n        }\n    },\n    methods: {\n\n        // タブのデータ配列の先頭に新しい要素が追加されるとそのタブのアニメーションの向きが逆になるバグがあるので、VItemGroup 側の挙動をオーバーライドする\n        // DOM 上も VNode 上も正しい順序で並んでいるが、this.items に関しては追加された順になっていてしまっていて齟齬が発生するのが原因\n        // ref: https://github.com/vuetifyjs/vuetify/issues/13862\n        register(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 要素を items に追加\n            this.items.push(item);\n\n            // this.$slots.default に VNode が、items には単に VueComponent が入っているので、事前に VNode の順番に合わせて並べ替える\n            // こうすることで、追加された順ではなく元のデータ配列通りの順番になる\n            this.items.sort((a, b) => {\n\n                // VueComponent の key が一致する this.$slots.default 内の VNode を探す\n                const index_a = this.$slots.default.findIndex((element) => {\n                    return a.$vnode.key === element.key;\n                });\n                const index_b = this.$slots.default.findIndex((element) => {\n                    return b.$vnode.key === element.key;\n                });\n\n                // index 順で並び替え\n                return index_a - index_b;\n            });\n\n            item.$on('change', () => (this as any).onClick(item));\n            if ((this as any).mandatory && !(this as any).selectedValues.length) {\n                (this as any).updateMandatory();\n            }\n\n            // 追加された要素のソート後のインデックスを取得して更新する\n            (this as any).updateItem(item, this.items.indexOf(item));\n\n            // ソート後の現在アクティブなタブのインデックスを取得し直し、設定する\n            // 配列の末尾以外に追加された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                // 値が異なるときだけ更新する\n                // こうしないと、Safari で変なアニメーションがついてしまう\n                if (this.items.indexOf(activeItem) !== (this as any).internalValue) {\n                    (this as any).updateInternalValue(this.items.indexOf(activeItem));\n                }\n            }\n        },\n\n        unregister(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 継承元の unregister() の処理を呼び出す（いわゆる super() ）\n            // ref: https://github.com/vuejs/vue/issues/2977\n            (this.constructor as any).super.options.methods.unregister.call(this, item);\n\n            // 配列の末尾以外から削除された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\n            }\n        },\n\n        // 最初のタブから最後のタブに遷移するとアニメーションの向きが逆になるバグがあるので、VWindow 側の挙動をオーバーライドする\n        // 本来は VCarousel 用の動作だが、VTabsItems も VWindow を継承しているので、それが適用されてしまっているらしい\n        // ref: https://github.com/yuwu9145/vuetify/blob/master/packages/vuetify/src/components/VWindow/VWindow.ts#L239-L252\n        updateReverse(val: number, oldVal: number) {\n\n            const itemsLength = this.items.length;\n            const lastIndex = itemsLength - 1;\n\n            if (itemsLength <= 2) return val < oldVal;\n\n            // continuous が false の時、常に val < oldVal の結果を返す\n            if (!(this as any).continuous) return val < oldVal;\n\n            if (val === lastIndex && oldVal === 0) {\n                return true;\n            } else if (val === 0 && oldVal === lastIndex) {\n                return false;\n            } else {\n                return val < oldVal;\n            }\n        }\n    }\n});\n","\nimport Vue from 'vue';\n\n/**\n * 共通ユーティリティ\n */\nexport default class Utils {\n\n    // バージョン情報\n    // ビルド時の環境変数 (vue.config.js に記載) から取得\n    static readonly version: string = process.env.VUE_APP_VERSION;\n\n    // バックエンドの API のベース URL\n    static readonly api_base_url = (() => {\n        if (process.env.NODE_ENV === 'development') {\n            // デバッグ時はポートを 7000 に強制する\n            return `${window.location.protocol}//${window.location.hostname}:7000/api`;\n        } else {\n            // ビルド後は同じポートを使う\n            return `${window.location.protocol}//${window.location.host}/api`;\n        }\n    })();\n\n    // デフォルトの設定値\n    // (同期無効) とある項目は、デバイス間で同期するとかえって面倒なことになりそうなため同期されない設定\n    // ここを変えたときはサーバー側の app.schemas.ClientSettings も変更すること\n    static readonly default_settings = {\n\n        // ***** 設定画面から直接変更できない設定値 *****\n\n        // ピン留めしているチャンネルの ID (ex: gr011) が入るリスト\n        pinned_channel_ids: [] as string[],\n\n        // 前回視聴画面を開いた際にパネルが表示されていたかどうか (同期無効)\n        showed_panel_last_time: true as boolean,\n\n        // 現在ツイート対象として選択されている Twitter アカウントの ID (同期無効)\n        selected_twitter_account_id: null as number | null,\n\n        // 保存している Twitter のハッシュタグが入るリスト\n        saved_twitter_hashtags: [] as string[],\n\n        // ***** 設定 → 全般 *****\n\n        // テレビのストリーミング画質 (Default: 1080p) (同期無効)\n        tv_streaming_quality: '1080p' as ('1080p-60fps' | '1080p' | '810p' | '720p' | '540p' | '480p' | '360p' | '240p'),\n\n        // テレビを低遅延で視聴する (Default: 低遅延で視聴する) (同期無効)\n        low_latency_mode: true as boolean,\n\n        // テレビをみるときに文字スーパーを表示する (Default: 表示する)\n        show_superimpose_tv: true as boolean,\n\n        // 既定のパネルの表示状態 (Default: 前回の状態を復元する)\n        panel_display_state: 'RestorePreviousState' as ('RestorePreviousState' | 'AlwaysDisplay' | 'AlwaysFold'),\n\n        // テレビをみるときに既定で表示されるパネルのタブ (Default: 番組情報タブ)\n        tv_panel_active_tab: 'Program' as ('Program' | 'Channel' | 'Comment' | 'Twitter'),\n\n        // キャプチャの保存先 (Default: ブラウザでダウンロード)\n        capture_save_mode: 'Browser' as ('Browser' | 'UploadServer' | 'Both'),\n\n        // 字幕が表示されているときのキャプチャの保存モード (Default: 映像のみのキャプチャと、字幕を合成したキャプチャを両方保存する)\n        capture_caption_mode: 'Both' as ('VideoOnly' | 'CompositingCaption' | 'Both'),\n\n        // ***** 設定 → アカウント *****\n\n        // 設定を同期する (Default: 同期しない) (同期無効)\n        sync_settings: false as boolean,\n\n        // ***** 設定 → ニコニコ実況 *****\n\n        // コメントの速さ (Default: 1倍)\n        comment_speed_rate: 1 as number,\n\n        // コメントのフォントサイズ (Default: 34px)\n        comment_font_size: 34 as number,\n\n        // コメントの遅延時間 (Default: 1.75秒) (同期無効)\n        comment_delay_time: 1.75 as number,\n\n        // コメント送信後にコメント入力フォームを閉じる (Default: オン)\n        close_comment_form_after_send: true as boolean,\n\n        // ***** 設定 → Twitter *****\n\n        // 既定で表示される Twitter タブ内のタブ (Default: キャプチャタブ)\n        twitter_active_tab: 'Capture' as ('Search' | 'Timeline' | 'Capture'),\n\n        // ツイートにつけるハッシュタグの位置 (Default: ツイート本文の後に追加する)\n        tweet_hashtag_position: 'Append' as ('Prepend' | 'Append' | 'PrependWithLineBreak' | 'AppendWithLineBreak'),\n\n        // ツイートするキャプチャに番組名の透かしを描画する (Default: 透かしを描画しない)\n        tweet_capture_watermark_position: 'None' as ('None' | 'TopLeft' | 'TopRight' | 'BottomLeft' | 'BottomRight'),\n    };\n\n    // 同期対象の設定キー\n    // サーバー側の app.schemas.ClientSettings に定義されているものと同じ\n    static readonly sync_settings_keys = [\n        'pinned_channel_ids',\n        'saved_twitter_hashtags',\n        'show_superimpose_tv',\n        'panel_display_state',\n        'tv_panel_active_tab',\n        'capture_save_mode',\n        'capture_caption_mode',\n        'comment_speed_rate',\n        'comment_font_size',\n        'close_comment_form_after_send',\n        'twitter_active_tab',\n        'tweet_hashtag_position',\n        'tweet_capture_watermark_position',\n    ];\n\n    // 設定をサーバーにアップロード中かどうか\n    // これが true のときは、定期的なサーバーからの設定ダウンロードを行わない\n    static uploading_settings: boolean = false;\n\n\n    /**\n     * 設定を LocalStorage から取得する\n     * @param key 設定のキー名\n     * @returns 設定されている値\n     */\n    static getSettingsItem(key: string): any | null {\n\n        // もし KonomiTV-Settings キーがまだない場合、あらかじめデフォルトの設定値を保存しておく\n        if (localStorage.getItem('KonomiTV-Settings') === null) {\n            localStorage.setItem('KonomiTV-Settings', JSON.stringify(Utils.default_settings));\n        }\n\n        // LocalStorage から KonomiTV-Settings を取得\n        // データは JSON で管理し、LocalStorage 上の一つのキーにまとめる\n        const settings: {[key: string]: any} = JSON.parse(localStorage.getItem('KonomiTV-Settings'));\n\n        // そのキーが保存されているときだけ、設定値を返す\n        if (key in settings) {\n            return settings[key];\n        } else {\n            // デフォルトの設定値にあればそれを使う\n            if (key in Utils.default_settings) {\n                return Utils.default_settings[key];\n            } else {\n                return null;\n            }\n        }\n    }\n\n\n    /**\n     * 設定を LocalStorage に保存する\n     * @param key 設定のキー名\n     * @param value 設定する値\n     */\n    static setSettingsItem(key: string, value: any): void {\n\n        // もし KonomiTV-Settings キーがまだない場合、あらかじめデフォルトの設定値を保存しておく\n        if (localStorage.getItem('KonomiTV-Settings') === null) {\n            localStorage.setItem('KonomiTV-Settings', JSON.stringify(Utils.default_settings));\n        }\n\n        // LocalStorage から KonomiTV-Settings を取得\n        const settings: {[key: string]: any} = JSON.parse(localStorage.getItem('KonomiTV-Settings'));\n\n        // 設定値を新しい値で置き換え\n        settings[key] = value;\n\n        // (名前が変わった、廃止されたなどの理由で) 現在の default_settings に存在しない設定キーを排除した上で並び替え\n        // 並び替えられていないと設定データの比較がうまくいかない\n        const new_settings: {[key: string]: any} = {};\n        for (const default_settings_key of Object.keys(Utils.default_settings)) {\n            if (default_settings_key in settings) {\n                new_settings[default_settings_key] = settings[default_settings_key];\n            } else {\n                // 後から追加された設定キーなどの理由で設定キーが現状の KonomiTV-Settings に存在しない場合\n                // その設定キーのデフォルト値を取得する\n                new_settings[default_settings_key] = Utils.default_settings[default_settings_key];\n            }\n        }\n\n        // LocalStorage に保存\n        localStorage.setItem('KonomiTV-Settings', JSON.stringify(new_settings));\n\n        // 更新された設定をサーバーに同期 (同期有効時のみ)\n        Utils.syncClientSettingsToServer();\n    }\n\n\n    /**\n     * ログイン時かつ同期が有効な場合、サーバーに保存されている設定データをこのクライアントに同期する\n     * @param force ログイン中なら同期が有効かに関わらず実行する (デフォルト: false)\n     */\n    static async syncServerSettingsToClient(force = false): Promise<void> {\n\n        // LocalStorage から KonomiTV-Settings を取得\n        const settings: {[key: string]: any} = JSON.parse(localStorage.getItem('KonomiTV-Settings'));\n\n        // ログインしていない時、同期が無効なときは実行しない\n        if (Utils.getAccessToken() === null || (settings.sync_settings === false && force === false)) {\n            return;\n        }\n\n        // 設定データをアップロード中のときは、動作が競合しないように終わるまで待つ\n        while (Utils.uploading_settings === true) {\n            await Utils.sleep(0.1);\n        }\n\n        try {\n\n            // サーバーから設定データをダウンロード\n            const server_settings: {[key: string]: any} = (await Vue.axios.get('/settings/client')).data;\n\n            // クライアントの設定値をサーバーからの設定値で上書き\n            for (const [server_settings_key, server_settings_value] of Object.entries(server_settings)) {\n                settings[server_settings_key] = server_settings_value;\n            }\n\n            // LocalStorage に保存\n            localStorage.setItem('KonomiTV-Settings', JSON.stringify(settings));\n\n        } catch (error) {\n            // 何らかの理由でエラーになったときは何もしない\n        }\n    }\n\n\n    /**\n     * ログイン時かつ同期が有効な場合、このクライアントの設定をサーバーに同期する\n     * @param force ログイン中なら同期が有効かに関わらず実行する (デフォルト: false)\n     */\n    static async syncClientSettingsToServer(force = false): Promise<void> {\n\n        // LocalStorage から KonomiTV-Settings を取得\n        const settings: {[key: string]: any} = JSON.parse(localStorage.getItem('KonomiTV-Settings'));\n\n        // ログインしていない時、同期が無効なときは実行しない\n        if (Utils.getAccessToken() === null || (settings.sync_settings === false && force === false)) {\n            return;\n        }\n\n        // 設定データのアップロード開始\n        Utils.uploading_settings = true;\n\n        // 同期対象の設定キーのみで設定データをまとめ直す\n        // sync_settings には同期対象外の設定は含まれない\n        const sync_settings: {[key: string]: any} = {};\n        for (const sync_settings_key of Utils.sync_settings_keys) {\n            if (sync_settings_key in settings) {\n                sync_settings[sync_settings_key] = settings[sync_settings_key];\n            } else {\n                // 後から追加された設定キーなどの理由で設定キーが現状の KonomiTV-Settings に存在しない場合\n                // その設定キーのデフォルト値を取得する\n                sync_settings[sync_settings_key] = Utils.default_settings[sync_settings_key];\n            }\n        }\n\n        // サーバーに設定データをアップロード\n        try {\n            await Vue.axios.put('/settings/client', sync_settings);\n        } catch (error) {\n            // 何もしない\n        }\n\n        // 設定データのアップロード終了\n        Utils.uploading_settings = false;\n    }\n\n\n    /**\n     * アクセストークンを LocalStorage から取得する\n     * @returns JWT アクセストークン（ログインしていない場合は null が返る）\n     */\n    static getAccessToken(): string | null {\n\n        // LocalStorage の取得結果をそのまま返す\n        // LocalStorage.getItem() はキーが存在しなければ（=ログインしていなければ）null を返す\n        return localStorage.getItem('KonomiTV-AccessToken');\n    }\n\n\n    /**\n     * アクセストークンを LocalStorage に保存する\n     * @param access_token 発行された JWT アクセストークン\n     */\n    static saveAccessToken(access_token: string): void {\n\n        // そのまま LocalStorage に保存\n        localStorage.setItem('KonomiTV-AccessToken', access_token);\n    }\n\n\n    /**\n     * ブラウザが実行されている OS に応じて、\"Ctrl\" または \"Cmd\" を返す\n     * キーボードショートカットのコンビネーションキーの説明を OS によって分けるために使う\n     * @returns ブラウザが実行されている OS が Mac なら Cmd を、それ以外なら Ctrl を返す\n     */\n    static CtrlOrCmd(): 'Ctrl' | 'Cmd' {\n        // iPhone・iPad で純正キーボードを接続した場合も一応想定して、iPhone・iPad も含める（動くかは未検証）\n        return /iPhone|iPad|Macintosh/i.test(navigator.userAgent) ? 'Cmd' : 'Ctrl';\n    }\n\n\n    /**\n     * アクセストークンを LocalStorage から削除する\n     * アクセストークンを削除することで、ログアウト相当になる\n     */\n    static deleteAccessToken(): void {\n\n        // LocalStorage に KonomiTV-AccessToken キーが存在しない\n        if (localStorage.getItem('KonomiTV-AccessToken') === null) return;\n\n        // KonomiTV-AccessToken キーを削除\n        localStorage.removeItem('KonomiTV-AccessToken');\n    }\n\n\n    /**\n     * Blob に格納されているデータをブラウザにダウンロードさせる\n     * @param blob Blob オブジェクト\n     * @param filename 保存するファイル名\n     */\n    static downloadBlobData(blob: Blob, filename: string): void {\n\n        // Blob URL を発行\n        const blob_url = URL.createObjectURL(blob);\n\n        // 画像をダウンロード\n        const link = document.createElement('a');\n        link.download = filename;\n        link.href = blob_url;\n        link.click();\n\n        // Blob URL を破棄\n        URL.revokeObjectURL(blob_url);\n    }\n\n\n    /**\n     * innerHTML しても問題ないように HTML の特殊文字をエスケープする\n     * PHP の htmlspecialchars() と似たようなもの\n     * @param content HTML エスケープされてないテキスト\n     * @returns HTML エスケープされたテキスト\n     */\n    static escapeHTML(content: string): string {\n\n        // HTML エスケープが必要な文字\n        // ref: https://www.php.net/manual/ja/function.htmlspecialchars.php\n        const html_escape_table = {\n            '&': '&amp;',\n            '\"': '&quot;',\n            '\\'': '&apos;',\n            '<': '&lt;',\n            '>': '&gt;',\n        };\n\n        // ref: https://qiita.com/noriaki/items/4bfef8d7cf85dc1035b3\n        return content.replace(/[&\"'<>]/g, (match) => {\n            return html_escape_table[match];\n        });\n    }\n\n\n    /**\n     * OAuth 連携時のポップアップを画面中央に表示するための windowFeatures 文字列を取得する\n     * ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1\n     * @returns window.open() で使う windowFeatures 文字列\n     */\n    static getWindowFeatures(): string {\n\n        // ポップアップウインドウのサイズ\n        const popupSizeWidth = 650;\n        const popupSizeHeight = window.screen.height >= 800 ? 800 : window.screen.height - 100;\n\n        // ポップアップウインドウの位置\n        const posTop = (window.screen.height - popupSizeHeight) / 2;\n        const posLeft = (window.screen.width - popupSizeWidth) / 2;\n\n        return `toolbar=0,status=0,top=${posTop},left=${posLeft},width=${popupSizeWidth},height=${popupSizeHeight},modal=yes,alwaysRaised=yes`;\n    }\n\n\n    /**\n     * async/await でスリープ的なもの\n     * @param seconds 待機する秒数\n     * @returns Promise を返すので、await sleep(1); のように使う\n     */\n    static async sleep(seconds: number): Promise<number> {\n        return await new Promise(resolve => setTimeout(resolve, seconds * 1000));\n    }\n\n\n    /**\n     * 指定された値の型の名前を取得する\n     * ref: https://qiita.com/amamamaou/items/ef0b797156b324bb4ef3\n     * @returns 指定された値の型の名前\n     */\n    static typeof(value: any): string {\n        return Object.prototype.toString.call(value).slice(8, -1).toLowerCase();\n    }\n\n\n    /**\n     * 文字列中に含まれる URL をリンクの HTML に置き換える\n     * @param text 置換対象の文字列\n     * @returns URL をリンクに置換した文字列\n     */\n    static URLtoLink(text: string): string {\n\n        // HTML の特殊文字で表示がバグらないように、事前に HTML エスケープしておく\n        text = Utils.escapeHTML(text);\n\n        // ref: https://www.softel.co.jp/blogs/tech/archives/6099\n        const pattern = /(https?:\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/ig;\n        return text.replace(pattern, '<a href=\"$1\" target=\"_blank\">$1</a>');\n    }\n}\n","\nimport { Buffer } from 'buffer';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ja';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore'\nimport * as piexif from 'piexifjs';\n\nimport { IChannel, IProgram } from '@/interface';\nimport Utils from './Utils';\n\n/**\n * TV 機能のユーティリティ\n */\nexport class TVUtils {\n\n    /**\n     * 番組情報中の[字]や[解]などの記号をいい感じに装飾する\n     * @param program 番組情報のオブジェクト\n     * @param key 番組情報のオブジェクトから取り出すプロパティのキー\n     * @returns 装飾した文字列\n     */\n    static decorateProgramInfo(program: IProgram | null, key: string): string {\n\n        // program が空でないかつ、program[key] が存在する\n        if (program !== null && program[key] !== null) {\n\n            // 番組情報に含まれる HTML の特殊文字で表示がバグらないように、事前に HTML エスケープしておく\n            const text = Utils.escapeHTML(program[key]);\n\n            // 本来 ARIB 外字である記号の一覧\n            // ref: https://ja.wikipedia.org/wiki/%E7%95%AA%E7%B5%84%E8%A1%A8\n            // ref: https://github.com/xtne6f/EDCB/blob/work-plus-s/EpgDataCap3/EpgDataCap3/ARIB8CharDecode.cpp#L1319\n            const mark = '新|終|再|交|映|手|声|多|副|字|文|CC|OP|二|S|B|SS|無|無料' +\n                'C|S1|S2|S3|MV|双|デ|D|N|W|P|H|HV|SD|天|解|料|前|後初|生|販|吹|PPV|' +\n                '演|移|他|収|・|英|韓|中|字/日|字/日英|3D|2K|4K|8K|5.1|7.1|22.2|60P|120P|d|HC|HDR|SHV|UHD|VOD|配|初';\n\n            // 正規表現を作成\n            const pattern1 = new RegExp(`\\\\((二|字|再)\\\\)`, 'g');  // 通常の括弧で囲まれている記号\n            const pattern2 = new RegExp(`\\\\[(${mark})\\\\]`, 'g');\n\n            // 正規表現で置換した結果を返す\n            return text.replace(pattern1, '<span class=\"decorate-symbol\">$1</span>')\n                       .replace(pattern2, '<span class=\"decorate-symbol\">$1</span>');\n\n        // 番組情報がない時間帯\n        } else {\n\n            dayjs.extend(isSameOrAfter);\n            dayjs.extend(isSameOrBefore);\n            dayjs.extend(isBetween);\n\n            // 23時～翌7時 (0:00 ~ 06:59 or 23:00 ~ 23:59) の間なら放送を休止している可能性が高いので、放送休止と表示する\n            const now = dayjs();\n            const pause_time_start = dayjs().hour(0).minute(0).second(0);\n            const pause_time_end = dayjs().hour(6).minute(59).second(59);\n            const pause_time_start_23 = dayjs().hour(23).minute(0).second(0);\n            const pause_time_end_23 = dayjs().hour(23).minute(59).second(59);\n            if ((now.isSameOrAfter(pause_time_start) && now.isSameOrBefore(pause_time_end)) ||\n                (now.isSameOrAfter(pause_time_start_23) && now.isSameOrBefore(pause_time_end_23))) {\n                if (key === 'title') {\n                    return '放送休止';  // タイトル\n                } else {\n                    return 'この時間は放送を休止しています。';  // 番組概要\n                }\n\n            // それ以外の時間帯では、「番組情報がありません」と表示する\n            // 急な番組変更の影響で、一時的にその時間帯に対応する番組情報が消えることがある\n            // 特に Mirakurun バックエンドでは高頻度で収集した EIT[p/f] が比較的すぐ反映されるため、この現象が起こりやすい\n            // 日中に放送休止（停波）になることはまずあり得ないので、番組情報が取得できてないだけで視聴できるかも？というニュアンスを与える\n            } else {\n                if (key === 'title') {\n                    return '番組情報がありません';  // タイトル\n                } else {\n                    return 'この時間の番組情報を取得できませんでした。';  // 番組概要\n                }\n            }\n        }\n    }\n\n\n    /**\n     * プレイヤーの背景画像をランダムで取得し、その URL を返す\n     * @returns ランダムで設定されたプレイヤーの背景画像の URL\n     */\n    static generatePlayerBackgroundURL(): string {\n        const background_count = 12;  // 12種類から選択\n        const random = (Math.floor(Math.random() * background_count) + 1);\n        return `/assets/images/player-backgrounds/${random.toString().padStart(2, '0')}.jpg`;\n    }\n\n\n    /**\n     * オブジェクトからプロパティを取得し、もしプロパティが存在しなければ代替値を返す\n     * @param items 対象のオブジェクト\n     * @param key オブジェクトから取り出すプロパティのキー\n     * @param default_value 取得できなかった際の代替値\n     * @returns オブジェクト取得した値 or 代替値\n     */\n    static getAttribute(items: {[key: string]: any}, key: string, default_value: any): any {\n\n        // items が空でないかつ、items[key] が存在する\n        if (items !== null && items[key] !== undefined && items[key] !== null) {\n\n            // items[key] の内容を返す\n            return items[key];\n\n        // 指定された代替値を返す\n        } else {\n            return default_value;\n        }\n    }\n\n\n    /**\n     * チャンネル ID からチャンネルタイプを取得する\n     * @param channel_id チャンネル ID\n     * @param is_chideji GR を「地デジ」と表記するかどうか\n     * @returns チャンネルタイプ\n     */\n    static getChannelType(channel_id: string, is_chideji: boolean = false): string {\n        const result = channel_id.match('(?<channel_type>[a-z]+)[0-9]+').groups.channel_type.toUpperCase();\n        if (result === 'GR' && is_chideji) {\n            return '地デジ';\n        } else {\n            return result;\n        }\n    }\n\n\n    /**\n     * チャンネルの実況勢いから「多」「激多」「祭」を取得する\n     * ref: https://ja.wikipedia.org/wiki/%E3%83%8B%E3%82%B3%E3%83%8B%E3%82%B3%E5%AE%9F%E6%B3%81\n     * @param channel_force チャンネルの実況勢い\n     * @returns normal（普通）or many（多）or so-many（激多）or festival（祭）\n     */\n    static getChannelForceType(channel_force: number | null): 'normal' | 'many' | 'so-many' | 'festival' {\n\n        // 実況勢いが null（=対応する実況チャンネルがない）\n        if (channel_force === null) return 'normal';\n\n        // 実況勢いが 1000 コメント以上（祭）\n        if (channel_force >= 1000) return 'festival';\n        // 実況勢いが 200 コメント以上（激多）\n        if (channel_force >= 200) return 'so-many';\n        // 実況勢いが 100 コメント以上（多）\n        if (channel_force >= 100) return 'many';\n\n        // それ以外\n        return 'normal';\n    }\n\n\n    /**\n     * チャンネルタイプとリモコン番号からチャンネル情報を取得する\n     * @param channels_list チャンネルリスト\n     * @param channel_type チャンネルタイプ\n     * @param remocon_id リモコン番号\n     * @returns チャンネル情報\n     */\n    static getChannelFromRemoconID(channels_list: Map<string, IChannel[]>, channel_type: string, remocon_id: number): IChannel | null {\n\n        // 指定されたチャンネルタイプのチャンネルを取得\n        channel_type = channel_type.replace('GR', '地デジ');  //「GR」は「地デジ」に置換しておく\n        const channels = channels_list.get(channel_type);\n\n        // リモコン番号が一致するチャンネルを見つけ、一番最初に見つかったものを返す\n        for (let index = 0; index < channels.length; index++) {\n            const channel = channels[index];\n            if (channel.remocon_id === remocon_id) {\n                return channel;\n            }\n        }\n\n        // リモコン番号が一致するチャンネルを見つけられなかった\n        return null;\n    }\n\n\n    /**\n     * 前・現在・次のチャンネル情報を取得する\n     * @param channels_list チャンネルリスト\n     * @param channel_id 起点にする現在のチャンネル ID\n     * @returns 前・現在・次のチャンネル情報\n     */\n    static getPreviousAndCurrentAndNextChannel(channels_list: Map<string, IChannel[]>, channel_id: string): IChannel[] {\n\n        // 前後のチャンネルを取得\n        const channels = channels_list.get(this.getChannelType(channel_id, true));\n        for (let index = 0; index < channels.length; index++) {\n            const element = channels[index];\n\n            // チャンネル ID が一致したときだけ\n            if (element.channel_id === channel_id) {\n\n                // インデックスが最初か最後の時はそれぞれ最後と最初にインデックスを一周させる\n                let previous_index = index - 1;\n                if (previous_index === -1) previous_index = channels.length - 1;\n                let next_index = index + 1;\n                if (next_index === channels.length) next_index = 0;\n\n                // 前・現在・次のチャンネル情報を返す\n                return [channels[previous_index], channels[index], channels[next_index]];\n            }\n        }\n    }\n\n\n    /**\n     * 番組の進捗状況を取得する\n     * @param program 番組情報\n     * @returns 番組の進捗状況（%単位）\n     */\n    static getProgramProgress(program: IProgram): number {\n\n        // program が空でない\n        if (program !== null) {\n\n            // 番組開始時刻から何秒進んだか\n            const progress = dayjs(dayjs()).diff(program.start_time, 'second');\n\n            // %単位の割合を算出して返す\n            return progress / program.duration * 100;\n\n        // 放送休止中\n        } else {\n            return 0;\n        }\n    }\n\n\n    /**\n     * 番組の放送時刻を取得する\n     * @param program 番組情報\n     * @param is_short 時刻のみ返すかどうか\n     * @returns 番組の放送時刻\n     */\n    static getProgramTime(program: IProgram, is_short: boolean = false): string {\n\n        // program が空でなく、かつ番組時刻が初期値でない\n        if (program !== null && program.start_time !== '2000-01-01T00:00:00+09:00') {\n\n            // dayjs で日付を扱いやすく\n            dayjs.locale('ja');  // ロケールを日本に設定\n            const start_time = dayjs(program.start_time);\n            const end_time = dayjs(program.end_time);\n            const duration = program.duration / 60;  // 分換算\n\n            // 時刻のみ返す\n            if (is_short === true) {  // 時刻のみ\n                return `${start_time.format('HH:mm')} ～ ${end_time.format('HH:mm')}`;\n            // 通常\n            } else {\n                return `${start_time.format('YYYY/MM/DD (dd) HH:mm')} ～ ${end_time.format('HH:mm')} (${duration}分)`;\n            }\n\n        // 放送休止中\n        } else {\n\n            // 時刻のみ返す\n            if (is_short === true) {\n                return '--:-- ～ --:--';\n            // 通常\n            } else {\n                return '----/--/-- (-) --:-- ～ --:-- (--分)';\n            }\n        }\n    }\n\n\n    /**\n     * キャプチャ画像に番組情報と撮影時刻のメタデータ (EXIF) をセットする\n     * @param blob キャプチャ画像の Blob オブジェクト\n     * @param program EXIF にセットする番組情報オブジェクト\n     * @returns EXIF が追加されたキャプチャ画像の Blob オブジェクト\n     */\n    static async setEXIFDataToCapture(blob: Blob, program: IProgram): Promise<Blob> {\n\n        // EXIF の XPComment 領域に入れるメタデータの JSON オブジェクト\n        // 撮影時刻とチャンネル・番組を一意に特定できる情報を入れる\n        const json = {\n            'capture_time': dayjs().format('YYYY-MM-DDTHH:mm:ss+09:00'),  // ISO8601 フォーマット\n            'network_id': program.network_id,\n            'service_id': program.service_id,\n            'event_id': program.event_id,\n            'title': program.title,\n            'description': program.description,\n            'start_time': program.start_time,\n            'end_time': program.end_time,\n            'duration': program.duration,\n        }\n\n        // 保存する EXIF メタデータを構築\n        // ref: 「カメラアプリで体感するWeb App」4.2\n        const datetime = dayjs().format('YYYY:MM:DD HH:mm:ss');  // すべてコロンで区切るのがポイント\n        const exif: piexif.IExif = {\n            '0th': {\n                // 必須らしいプロパティ\n                // とりあえずデフォルト値 (?) を設定しておく\n                [piexif.TagValues.ImageIFD.XResolution]: [72, 1],\n                [piexif.TagValues.ImageIFD.YResolution]: [72, 1],\n                [piexif.TagValues.ImageIFD.ResolutionUnit]: 2,\n                [piexif.TagValues.ImageIFD.YCbCrPositioning]: 1,\n                // 撮影時刻\n                [piexif.TagValues.ImageIFD.DateTime]: datetime,\n                // ソフトウェア名\n                [piexif.TagValues.ImageIFD.Software]: `KonomiTV version ${Utils.version}`,\n                // Microsoft 拡張のコメント領域（エクスプローラーで出てくるコメント欄と同じもの）\n                // ref: https://stackoverflow.com/a/66186660/17124142\n                [piexif.TagValues.ImageIFD.XPComment]: [...Buffer.from(JSON.stringify(json), 'ucs2')],\n            },\n            'Exif': {\n                // 必須らしいプロパティ\n                // とりあえずデフォルト値 (?) を設定しておく\n                [piexif.TagValues.ExifIFD.ExifVersion]: '0230',\n                [piexif.TagValues.ExifIFD.ComponentsConfiguration]: '\\x01\\x02\\x03\\x00',\n                [piexif.TagValues.ExifIFD.FlashpixVersion]: '0100',\n                [piexif.TagValues.ExifIFD.ColorSpace]: 1,\n                // 撮影時刻\n                [piexif.TagValues.ExifIFD.DateTimeOriginal]: datetime,\n                [piexif.TagValues.ExifIFD.DateTimeDigitized]: datetime,\n            },\n        };\n        const exif_string = piexif.dump(exif);  // バイナリ文字列に変換した EXIF データ\n\n        // piexifjs はバイナリ文字列か DataURL しか受け付けないので、Blob をバイナリ文字列に変換\n        const blob_string: string = await new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result as string);\n            reader.onerror = reject;\n            reader.readAsBinaryString(blob);  // バイナリ文字列で読み込む\n        });\n\n        // 画像に EXIF を挿入\n        // 戻り値は EXIF が追加された画像のバイナリ文字列 (なぜ未だにバイナリ文字列で実装してるんだ…)\n        const blob_string_new = piexif.insert(exif_string, blob_string);\n\n        // 画像のバイナリ文字列を ArrayBuffer に変換\n        // ref: 「カメラアプリで体感するWeb App」4.2\n        const buffer = new Uint8Array(blob_string_new.length);\n        for (let index = 0; index < buffer.length; index++) {\n            buffer[index] = blob_string_new.charCodeAt(index) & 0xff;\n        }\n\n        // 新しい Blob を返す\n        return new Blob([buffer], {type: blob.type});\n    }\n}\n","\n// 共通ユーティリティをデフォルトとしてインポート\nimport Utils from '@/utils/Utils';\nexport default Utils;\n\n// Utils フォルダ配下のユーティリティを一括でインポートできるように\nexport * from '@/utils/TVUtils';\n","\nimport Utils from '@/utils';\nimport axios from 'axios'\n\n// ref: https://note.com/quoizunda/n/nb62e13e73499\n\n// Axios のインスタンスを作成\nconst axios_instance = axios.create();\n\n// HTTP リクエスト前に割り込んで行われる処理\naxios_instance.interceptors.request.use(config => {\n\n    // API のベース URL を設定\n    // BaseURL が明示的に指定されているときは設定しない\n    if (config.baseURL === undefined) {\n        config.baseURL = Utils.api_base_url;\n    }\n\n    // アクセストークンが取得できたら（=ログインされていれば）\n    // 取得したアクセストークンを Authorization ヘッダーに Bearer トークンとしてセット\n    // これを忘れると（当然ながら）ログインしていない扱いになる\n    const access_token = Utils.getAccessToken();\n    if (access_token !== null) {\n        config.headers['Authorization'] = `Bearer ${access_token}`;\n    }\n\n    // KonomiTV クライアントのバージョンを設定\n    // 今のところ使わないが、将来的にクライアントとサーバーを分離することを見据えて念のため\n    config.headers['X-KonomiTV-Version'] = Utils.version;\n\n    return config;\n})\n\n// ここで返したインスタンスを VueAxios (Vue.axios) に設定する\nexport default axios_instance;\n","\nimport Vue from 'vue';\nimport Vuetify from 'vuetify/lib/framework';\nimport { VSnackbar, VBtn, VIcon } from 'vuetify/lib';\n\nVue.use(Vuetify);\n\n// vuetify-message-snackbar を使うのに必要\nVue.component('v-snackbar', VSnackbar);\nVue.component('v-btn', VBtn);\nVue.component('v-icon', VIcon);\n\nexport default new Vuetify({\n    theme: {\n        dark: true,\n        themes: {\n            dark: {\n                primary: '#E64F97',\n                secondary: '#E33157',\n                twitter: {\n                    base: '#4F82E6',\n                    lighten1: '#799FEC',\n                    lighten2: '#41A5F1',\n                },\n                gray: '#66514C',\n                black: '#110A09',\n                background: {\n                    base: '#1E1310',\n                    lighten1: '#2F221F',\n                    lighten2: '#433532',\n                    lighten3: '#4c3c38',\n                },\n                text: {\n                    base: '#FFEAEA',\n                    darken1: '#D9C7C7',\n                    darken2: '#8E7F7E',\n                    darken3: '#786968',\n                }\n            }\n        },\n        options: {\n          customProperties: true,\n        },\n    },\n});\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"channels-container channels-container--home\",class:{'channels-container--loading': _vm.is_loading}},[_c('v-tabs-fix',{staticClass:\"channels-tab\",attrs:{\"centered\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channels_list)),function([channels_type,]){return _c('v-tab',{key:channels_type,staticClass:\"channels-tab__item\"},[_vm._v(_vm._s(channels_type))])}),1),_c('v-tabs-items-fix',{staticClass:\"channels-list\",model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channels_list)),function([channels_type, channels]){return _c('v-tab-item-fix',{key:channels_type,staticClass:\"channels-tabitem\"},[_c('div',{staticClass:\"channels\",class:`channels--tab-${channels_type} channels--length-${channels.length}`},[_vm._l((channels),function(channel){return _c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:channel.id,staticClass:\"channel\",attrs:{\"to\":`/tv/watch/${channel.channel_id}`}},[_c('div',{staticClass:\"channel__broadcaster\"},[_c('img',{staticClass:\"channel__broadcaster-icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${channel.channel_id}/logo`}}),_c('div',{staticClass:\"channel__broadcaster-content\"},[_c('span',{staticClass:\"channel__broadcaster-name\"},[_vm._v(\"Ch: \"+_vm._s(channel.channel_number)+\" \"+_vm._s(channel.channel_name))]),_c('div',{staticClass:\"channel__broadcaster-status\"},[_c('div',{staticClass:\"channel__broadcaster-status-force\",class:`channel__broadcaster-status-force--${_vm.TVUtils.getChannelForceType(channel.channel_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"12px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"勢い:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(_vm.TVUtils.getAttribute(channel, 'channel_force', '--'))+\" コメ/分\")])],1),_c('div',{staticClass:\"channel__broadcaster-status-viewers ml-4\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:eye\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"視聴数:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(channel.viewers))])],1)])]),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip\",value:(_vm.isPinnedChannel(channel.channel_id) ? 'ピン留めを外す' : 'ピン留めする'),expression:\"isPinnedChannel(channel.channel_id) ? 'ピン留めを外す' : 'ピン留めする'\"}],staticClass:\"channel__broadcaster-pin\",class:{'channel__broadcaster-pin--pinned': _vm.isPinnedChannel(channel.channel_id)},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.isPinnedChannel(channel.channel_id) ? _vm.removePinnedChannel(channel.channel_id) : _vm.addPinnedChannel(channel.channel_id)},\"mousedown\":function($event){$event.preventDefault();$event.stopPropagation();/* 親要素の波紋が広がらないように */}}},[_c('Icon',{attrs:{\"icon\":\"fluent:pin-20-filled\",\"width\":\"24px\"}})],1)]),_c('div',{staticClass:\"channel__program-present\"},[_c('span',{staticClass:\"channel__program-present-title\",domProps:{\"innerHTML\":_vm._s(_vm.TVUtils.decorateProgramInfo(channel.program_present, 'title'))}}),_c('span',{staticClass:\"channel__program-present-time\"},[_vm._v(_vm._s(_vm.TVUtils.getProgramTime(channel.program_present)))]),_c('span',{staticClass:\"channel__program-present-description\",domProps:{\"innerHTML\":_vm._s(_vm.TVUtils.decorateProgramInfo(channel.program_present, 'description'))}})]),_c('v-spacer'),_c('div',{staticClass:\"channel__program-following\"},[_c('div',{staticClass:\"channel__program-following-title\"},[_c('span',{staticClass:\"channel__program-following-title-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"channel__program-following-title-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}}),_c('span',{staticClass:\"channel__program-following-title-text\",domProps:{\"innerHTML\":_vm._s(_vm.TVUtils.decorateProgramInfo(channel.program_following, 'title'))}})],1),_c('span',{staticClass:\"channel__program-following-time\"},[_vm._v(_vm._s(_vm.TVUtils.getProgramTime(channel.program_following)))])]),_c('div',{staticClass:\"channel__progressbar\"},[_c('div',{staticClass:\"channel__progressbar-progress\",style:(`width:${_vm.TVUtils.getProgramProgress(channel.program_present)}%;`)})])],1)}),(channels_type === 'ピン留め' && channels.length === 0)?_c('div',{staticClass:\"d-flex justify-center align-center w-100\"},[_c('div',{staticClass:\"d-flex justify-center align-center flex-column\"},[_c('h2',[_vm._v(\"ピン留めされているチャンネルがありません。\")]),_c('div',{staticClass:\"mt-4 text--text text--darken-1\"},[_vm._v(\"各チャンネルの \"),_c('Icon',{staticStyle:{\"position\":\"relative\",\"bottom\":\"-5px\"},attrs:{\"icon\":\"fluent:pin-20-filled\",\"width\":\"22px\"}}),_vm._v(\" アイコンから、よくみるチャンネルをこのタブにピン留めできます。\")],1),_c('div',{staticClass:\"mt-2 text--text text--darken-1\"},[_vm._v(\"チャンネルをピン留めすると、このタブが最初に表示されます。\")])])]):_vm._e()],2)])}),1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-toolbar',{staticClass:\"header\",attrs:{\"absolute\":\"\",\"color\":\"background\",\"elevation\":\"8\",\"width\":\"100%\"}},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"logo ml-3 ml-md-6\",attrs:{\"to\":\"/tv/\"}},[_c('img',{staticClass:\"logo__image\",attrs:{\"src\":\"/assets/images/logo.svg\",\"height\":\"21\"}})]),_c('v-spacer')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./Header.vue?vue&type=template&id=6559d612&\"\nvar script = {}\nimport style0 from \"./Header.vue?vue&type=style&index=0&id=6559d612&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"navigation-container elevation-8\"},[_c('nav',{staticClass:\"navigation\"},[_c('div',{staticClass:\"navigation-scroll\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/tv/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"テレビをみる\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/videos/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"ビデオをみる\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/timetable/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:calendar-ltr-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"番組表\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/captures/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:image-multiple-24-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"キャプチャ\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/watchlists/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"ic:round-playlist-play\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"ウォッチリスト\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/histories/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:history-16-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"視聴履歴\")])],1),_c('v-spacer'),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/settings/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"設定\")])],1),_c('a',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"href\":\"https://github.com/tsukumijima/KonomiTV\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:info-16-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"version \"+_vm._s(_vm.Utils.version))])],1)],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Navigation',\n    data() {\n        return {\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n        }\n    }\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Navigation.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Navigation.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Navigation.vue?vue&type=template&id=3201c226&scoped=true&\"\nimport script from \"./Navigation.vue?vue&type=script&lang=ts&\"\nexport * from \"./Navigation.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Navigation.vue?vue&type=style&index=0&id=3201c226&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3201c226\",\n  null\n  \n)\n\nexport default component.exports","\n\nimport Vue from 'vue';\n\nimport { IChannel } from '@/interface';\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport Utils, { TVUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'TV-Home',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            TVUtils: TVUtils,\n\n            // タブの状態管理\n            tab: null as number | null,\n\n            // ローディング中かどうか\n            is_loading: true,\n\n            // インターバル ID\n            // ページ遷移時に setInterval(), setTimeout() の実行を止めるのに使う\n            // setInterval(), setTimeout() の返り値を登録する\n            interval_ids: [] as number[],\n\n            // チャンネル情報リスト\n            channels_list: new Map() as Map<string, IChannel[]>,\n\n            // ピン留めしているチャンネルの ID (ex: gr011) が入るリスト\n            pinned_channel_ids: [] as string[],\n        }\n    },\n    // 開始時に実行\n    created() {\n\n        // チャンネル情報を取得\n        this.update();\n\n        // 00秒までの残り秒数\n        // 現在 16:01:34 なら 26 (秒) になる\n        const residue_second = 60 - (Math.floor(new Date().getTime() / 1000) % 60);\n\n        // 00秒になるまで待ってから\n        // 番組は基本1分単位で組まれているため、20秒や45秒など中途半端な秒数で更新してしまうと反映が遅れてしまう\n        this.interval_ids.push(window.setTimeout(() => {\n\n            // チャンネル情報を更新\n            this.update();\n\n            // チャンネル情報を定期的に更新\n            this.interval_ids.push(window.setInterval(() => {\n                this.update();\n            }, 30 * 1000));  // 30秒おき\n\n        }, residue_second * 1000));\n    },\n    // 終了前に実行\n    beforeDestroy() {\n\n        // clearInterval() ですべての setInterval(), setTimeout() の実行を止める\n        // clearInterval() と clearTimeout() は中身共通なので問題ない\n        for (const interval_id of this.interval_ids) {\n            window.clearInterval(interval_id);\n        }\n    },\n    methods: {\n\n        // チャンネル情報一覧を取得し、画面を更新する\n        async update() {\n\n            // チャンネル情報一覧 API にアクセス\n            let channels_response;\n            try {\n                channels_response = await Vue.axios.get('/channels');\n            } catch (error) {\n                console.error(error);   // エラー内容を表示\n                return;\n            }\n\n            // is_display が true のチャンネルのみに絞り込むフィルタ関数\n            // 放送していないサブチャンネルを表示から除外する\n            const filter = (channel: IChannel) => {\n                return channel.is_display;\n            }\n\n            // チャンネルリストを再構築\n            // 1つでもチャンネルが存在するチャンネルタイプのみ表示するように\n            // たとえば SKY (スカパー！プレミアムサービス) のタブは SKY に属すチャンネルが1つもない（=受信できない）なら表示されない\n            this.channels_list = new Map();\n            if (channels_response.data.GR.length > 0) this.channels_list.set('地デジ', channels_response.data.GR.filter(filter));\n            if (channels_response.data.BS.length > 0) this.channels_list.set('BS', channels_response.data.BS.filter(filter));\n            if (channels_response.data.CS.length > 0) this.channels_list.set('CS', channels_response.data.CS.filter(filter));\n            if (channels_response.data.CATV.length > 0) this.channels_list.set('CATV', channels_response.data.CATV.filter(filter));\n            if (channels_response.data.SKY.length > 0) this.channels_list.set('SKY', channels_response.data.SKY.filter(filter));\n            if (channels_response.data.STARDIGIO.length > 0) this.channels_list.set('StarDigio', channels_response.data.STARDIGIO.filter(filter));\n\n            // ピン留めされているチャンネルのリストを更新\n            this.updatePinnedChannelList(this.is_loading ? true : false);\n\n            // ローディング状態を解除\n            this.is_loading = false;\n        },\n\n        // チャンネルをピン留めする\n        addPinnedChannel(channel_id: string) {\n\n            // 現在ピン留めされているチャンネルを取得\n            this.pinned_channel_ids = Utils.getSettingsItem('pinned_channel_ids');\n\n            // ピン留めするチャンネルの ID を追加\n            this.pinned_channel_ids.push(channel_id);\n\n            // 設定を保存\n            Utils.setSettingsItem('pinned_channel_ids', this.pinned_channel_ids);\n\n            // ピン留めされているチャンネルのリストを更新\n            this.updatePinnedChannelList();\n        },\n\n        // チャンネルをピン留めから外す\n        removePinnedChannel(channel_id: string) {\n\n            // 現在ピン留めされているチャンネルを取得\n            this.pinned_channel_ids = Utils.getSettingsItem('pinned_channel_ids');\n\n            // ピン留めを外すチャンネルの ID を削除\n            this.pinned_channel_ids.splice(this.pinned_channel_ids.indexOf(channel_id), 1);\n\n            // 設定を保存\n            Utils.setSettingsItem('pinned_channel_ids', this.pinned_channel_ids);\n\n            // ピン留めされているチャンネルのリストを更新\n            this.updatePinnedChannelList();\n        },\n\n        // ピン留めされているチャンネルのリストを更新する\n        updatePinnedChannelList(is_update_tab: boolean = true) {\n\n            // ピン留めされているチャンネルの ID を取得\n            this.pinned_channel_ids = Utils.getSettingsItem('pinned_channel_ids');\n\n            // ピン留めされているチャンネル情報のリスト\n            const pinned_channels = [] as IChannel[];\n\n            // チャンネル ID が一致したチャンネルの情報を保存する\n            for (const pinned_channel_id of this.pinned_channel_ids) {\n                const pinned_channel_type = TVUtils.getChannelType(pinned_channel_id, true);\n                const pinned_channel = this.channels_list.get(pinned_channel_type).find((channel) => {\n                    return channel.channel_id === pinned_channel_id;  // チャンネル ID がピン留めされているチャンネルのものと同じ\n                });\n                // チャンネル情報を取得できているときだけ\n                // サブチャンネルをピン留めしたが、マルチ編成が終了して現在は放送していない場合などに備える (BS142 など)\n                // 現在放送していないチャンネルは this.channels_list に入れた段階で弾いているため、チャンネル情報を取得できない\n                if (pinned_channel !== undefined) {\n                    pinned_channels.push(pinned_channel);\n                }\n            }\n\n            if (!this.channels_list.has('ピン留め')) {\n                // タブの一番左にピン留めタブを表示する\n                this.channels_list = new Map([['ピン留め', pinned_channels], ...this.channels_list]);\n            } else {\n                // 既に存在するピン留めタブにチャンネル情報を設定する\n                this.channels_list.set('ピン留め', pinned_channels);\n            }\n\n            // pinned_channels が空の場合は、タブを地デジタブに変更\n            // ピン留めができる事を示唆するためにピン留めタブ自体は残す\n            if (pinned_channels.length === 0 && is_update_tab === true) {\n                this.tab = 1;\n            }\n        },\n\n        // チャンネルがピン留めされているか\n        isPinnedChannel(channel_id: string): boolean {\n\n            // 引数のチャンネルがピン留めリストに存在するかを返す\n            return this.pinned_channel_ids.includes(channel_id);\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=c8f44d5a&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=ts&\"\nexport * from \"./Home.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=c8f44d5a&prod&lang=scss&\"\nimport style1 from \"./Home.vue?vue&type=style&index=1&id=c8f44d5a&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c8f44d5a\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('main',{staticClass:\"watch-container\",class:{\n            'watch-container--control-display': _vm.is_control_display,\n            'watch-container--panel-display': _vm.is_panel_display,\n            'watch-container--fullscreen': _vm.is_fullscreen,\n        }},[_c('nav',{staticClass:\"watch-navigation\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event)},\"click\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"watch-navigation__icon\",attrs:{\"to\":\"/tv/\"}},[_c('img',{staticClass:\"watch-navigation__icon-image\",attrs:{\"src\":\"/assets/images/icon.svg\",\"width\":\"23px\"}})]),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('テレビをみる'),expression:\"'テレビをみる'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/tv/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('ビデオをみる'),expression:\"'ビデオをみる'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/videos/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('番組表'),expression:\"'番組表'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/timetable/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:calendar-ltr-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('キャプチャ'),expression:\"'キャプチャ'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/captures/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:image-multiple-24-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('ウォッチリスト'),expression:\"'ウォッチリスト'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/watchlists/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"ic:round-playlist-play\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('視聴履歴'),expression:\"'視聴履歴'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/histories/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:history-16-regular\",\"width\":\"26px\"}})],1),_c('v-spacer'),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('設定'),expression:\"'設定'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/settings/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"26px\"}})],1),_c('a',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:(`version ${_vm.Utils.version}`),expression:\"`version ${Utils.version}`\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"href\":\"https://github.com/tsukumijima/KonomiTV\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:info-16-regular\",\"width\":\"26px\"}})],1)],1),_c('div',{staticClass:\"watch-content\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event, true)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event, true)},\"click\":function($event){return _vm.controlDisplayTimer($event, true)}}},[_c('header',{staticClass:\"watch-header\"},[_c('img',{staticClass:\"watch-header__broadcaster\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.$route.params.channel_id)}/logo`}}),_c('span',{staticClass:\"watch-header__program-title\",domProps:{\"innerHTML\":_vm._s(_vm.TVUtils.decorateProgramInfo(_vm.channel.program_present, 'title'))}}),_c('span',{staticClass:\"watch-header__program-time\"},[_vm._v(_vm._s(_vm.TVUtils.getProgramTime(_vm.channel.program_present, true)))]),_c('v-spacer'),_c('span',{staticClass:\"watch-header__now\"},[_vm._v(_vm._s(_vm.time))])],1),_c('div',{staticClass:\"watch-player\",class:{'watch-player--loading': _vm.is_loading}},[_c('div',{staticClass:\"watch-player__background\",class:{'watch-player__background--display': _vm.is_background_display},style:({backgroundImage: `url(${_vm.background_url})`})},[_c('img',{staticClass:\"watch-player__background-logo\",attrs:{\"src\":\"/assets/images/logo.svg\"}})]),_c('div',{staticClass:\"watch-player__dplayer\"}),_c('div',{staticClass:\"watch-player__button\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event)},\"click\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.top\",value:('前のチャンネル'),expression:\"'前のチャンネル'\",modifiers:{\"top\":true}}],staticClass:\"switch-button switch-button-up\",attrs:{\"to\":`/tv/watch/${_vm.channel_previous.channel_id}`}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:ios-arrow-left-24-filled\",\"width\":\"32px\",\"rotate\":\"1\"}})],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"switch-button switch-button-panel switch-button-panel--open\",on:{\"click\":function($event){_vm.is_panel_display = !_vm.is_panel_display}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:navigation-16-filled\",\"width\":\"32px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.bottom\",value:('次のチャンネル'),expression:\"'次のチャンネル'\",modifiers:{\"bottom\":true}}],staticClass:\"switch-button switch-button-down\",attrs:{\"to\":`/tv/watch/${_vm.channel_next.channel_id}`}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:ios-arrow-right-24-filled\",\"width\":\"33px\",\"rotate\":\"1\"}})],1)],1)])]),_c('div',{staticClass:\"watch-panel\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event)},\"click\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('div',{staticClass:\"watch-panel__header\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-close-button\",on:{\"click\":function($event){_vm.is_panel_display = false}}},[_c('Icon',{staticClass:\"panel-close-button__icon\",attrs:{\"icon\":\"akar-icons:chevron-right\",\"width\":\"25px\"}}),_c('span',{staticClass:\"panel-close-button__text\"},[_vm._v(\"閉じる\")])],1),_c('v-spacer'),_c('div',{staticClass:\"panel-broadcaster\"},[_c('img',{staticClass:\"panel-broadcaster__icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.$route.params.channel_id)}/logo`}}),_c('div',{staticClass:\"panel-broadcaster__number\"},[_vm._v(_vm._s(_vm.channel.channel_number))]),_c('div',{staticClass:\"panel-broadcaster__name\"},[_vm._v(_vm._s(_vm.channel.channel_name))])])],1),_c('div',{staticClass:\"watch-panel__content-container\"},[_c('Program',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Program'},attrs:{\"channel\":_vm.channel}}),_c('Channel',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Channel'},attrs:{\"channels_list\":_vm.channels_list}}),_c('Comment',{ref:\"Comment\",staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Comment'},attrs:{\"channel\":_vm.channel,\"player\":_vm.player}}),_c('Twitter',{ref:\"Twitter\",staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Twitter'},attrs:{\"channel\":_vm.channel,\"player\":_vm.player}})],1),_c('div',{staticClass:\"watch-panel__navigation\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Program'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Program'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-solid:info-circle\",\"width\":\"33px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"番組情報\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Channel'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Channel'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-solid:broadcast-tower\",\"width\":\"34px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"チャンネル\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Comment'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Comment'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"29px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"コメント\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Twitter'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Twitter'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"34px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"Twitter\")])],1)])])]),_c('v-dialog',{attrs:{\"max-width\":\"1000\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.shortcut_key_modal),callback:function ($$v) {_vm.shortcut_key_modal=$$v},expression:\"shortcut_key_modal\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"px-5 pt-4 pb-3 d-flex align-center font-weight-bold\"},[_c('Icon',{attrs:{\"icon\":\"fluent:keyboard-20-filled\",\"height\":\"28px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"キーボードショートカット\")])],1),_c('div',{staticClass:\"px-5 pb-4\"},[_c('v-row',_vm._l((_vm.shortcut_key_list),function(shortcut_key_column,shortcut_key_column_name){return _c('v-col',{key:shortcut_key_column_name,attrs:{\"cols\":\"6\"}},_vm._l((shortcut_key_column),function(shortcut_keys){return _c('div',{key:shortcut_keys.name,staticClass:\"mt-3\"},[_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold\"},[_c('Icon',{attrs:{\"icon\":shortcut_keys.icon,\"height\":shortcut_keys.icon_height}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(_vm._s(shortcut_keys.name))])],1),_vm._l((shortcut_keys.shortcuts),function(shortcut){return _c('div',{key:shortcut.name,staticClass:\"mt-3\"},[_c('div',{staticClass:\"text-subtitle-2 mt-2 d-flex align-center font-weight-medium\"},[_c('span',{staticClass:\"mr-2\",domProps:{\"innerHTML\":_vm._s(shortcut.name)}}),_c('div',{staticClass:\"ml-auto d-flex align-center flex-shrink-0\"},_vm._l((shortcut.keys),function(key,index){return _c('div',{key:key.name,staticClass:\"ml-auto d-flex align-center\"},[_c('span',{staticClass:\"shortcut-key\"},[_vm._l((key.name.split(';')),function(key_name){return _c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(key.icon === true),expression:\"key.icon === true\"}],key:key_name,attrs:{\"icon\":key_name,\"height\":\"18px\"}})}),(key.icon === false)?_c('span',{domProps:{\"innerHTML\":_vm._s(key.name)}}):_vm._e()],2),(index < (shortcut.keys.length - 1))?_c('span',{staticClass:\"shortcut-key-plus\"},[_vm._v(\"+\")]):_vm._e()])}),0)])])})],2)}),0)}),1)],1),_c('v-divider'),_c('v-card-actions',{staticClass:\"px-5 py-3\"},[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"background lighten-2 px-3\",\"elevation\":\"0\"},on:{\"click\":function($event){_vm.shortcut_key_modal = false}}},[_vm._v(\"閉じる\")])],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n// 番組情報を表すインターフェイス\nexport interface IProgram {\n    id: string;\n    network_id: number;\n    service_id: number;\n    event_id: number;\n    channel_id: string;\n    title: string;\n    description: string;\n    detail: {[key: string]: string};\n    start_time: string;\n    end_time: string;\n    duration: number;\n    is_free: boolean;\n    genre: {major: string; middle: string}[];\n    video_type: string;\n    video_codec: string;\n    video_resolution: string;\n    primary_audio_type: string;\n    primary_audio_language: string;\n    primary_audio_sampling_rate: string;\n    secondary_audio_type: string | null;\n    secondary_audio_language: string | null;\n    secondary_audio_sampling_rate: string | null;\n}\n\n// 番組情報を表すインターフェイスのデフォルト値\nexport const IProgramDefault: IProgram = {\n    id: 'NID0-SID0',\n    service_id: 0,\n    network_id: 0,\n    event_id: 0,\n    channel_id: 'gr000',\n    title: '取得中…',\n    description: '取得中…',\n    detail: {},\n    start_time: '2000-01-01T00:00:00+09:00',\n    end_time: '2000-01-01T00:00:00+09:00',\n    duration: 0,\n    is_free: true,\n    genre: [],\n    video_type: '映像1080i(1125i)、アスペクト比16:9 パンベクトルなし',\n    video_codec: 'mpeg2',\n    video_resolution: '1080i',\n    primary_audio_type: '2/0モード(ステレオ)',\n    primary_audio_language: '日本語',\n    primary_audio_sampling_rate: '48kHz',\n    secondary_audio_type: null,\n    secondary_audio_language: null,\n    secondary_audio_sampling_rate: null,\n}\n\n// チャンネル情報を表すインターフェイス\nexport interface IChannel {\n    id: string;\n    network_id: number;\n    service_id: number;\n    transport_stream_id: number | null;\n    remocon_id: number | null;\n    channel_id: string;\n    channel_number: string;\n    channel_name: string;\n    channel_type: string;\n    channel_force: number | null;\n    channel_comment: number | null;\n    is_subchannel: boolean;\n    is_radiochannel: boolean;\n    is_display: boolean;\n    viewers: number;\n    program_present: IProgram;\n    program_following: IProgram;\n}\n\n// チャンネル情報を表すインターフェイスのデフォルト値\nexport const IChannelDefault: IChannel = {\n    id: 'NID0-SID0',\n    service_id: 0,\n    network_id: 0,\n    transport_stream_id: null,\n    remocon_id: null,\n    channel_id: 'gr000',\n    channel_number: '---',\n    channel_name: '取得中…',\n    channel_type: 'GR',\n    channel_force: null,\n    channel_comment: null,\n    is_subchannel: false,\n    is_radiochannel: false,\n    is_display: true,\n    viewers: 0,\n    program_present: IProgramDefault,\n    program_following: IProgramDefault,\n}\n\n// ユーザーアカウントに紐づく Twitter アカウントの情報を表すインターフェイス\nexport interface ITwitterAccount {\n    id: number;\n    name: string;\n    screen_name: string;\n    icon_url: string;\n    created_at: string;\n    updated_at: string;\n}\n\n// ユーザーアカウントの情報を表すインターフェイス\nexport interface IUser {\n    id: number;\n    name: string;\n    is_admin: boolean;\n    niconico_user_id: number | null;\n    niconico_user_name: string | null;\n    niconico_user_premium: boolean | null;\n    twitter_accounts: ITwitterAccount[];\n    created_at: string;\n    updated_at: string;\n}\n\n// DPlayer のコメントデータの型\n// KonomiTV で使うプロパティのみ定義している\n// ref: https://github.com/tsukumijima/DPlayer/blob/master/src/js/danmaku.js#L86-L96\nexport interface IDPlayerDanmaku {\n    author: string;\n    time: number;\n    text: string;\n    color: string;\n    type: 'top' | 'right' | 'bottom';\n    size: 'big' | 'medium' | 'small';\n}\n\n// コメントを送信する際に DPlayer から受け取るオプションの型\n// KonomiTV で使うプロパティのみ定義している\n// ref: https://github.com/tsukumijima/DPlayer/blob/master/src/js/danmaku.js#L98-L121\nexport interface IDPlayerDanmakuSendOptions {\n    data: IDPlayerDanmaku;\n    success: () => void;\n    error: (message: string | undefined) => void;\n}\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"channels-container channels-container--watch\"},[_c('v-tabs-fix',{staticClass:\"channels-tab\",attrs:{\"centered\":\"\",\"show-arrows\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channels_list)),function([channels_type,]){return _c('v-tab',{key:channels_type,staticClass:\"channels-tab__item\"},[_vm._v(\" \"+_vm._s(channels_type)+\" \")])}),1),_c('div',{staticClass:\"channels-list-container\"},[_c('v-tabs-items-fix',{staticClass:\"channels-list\",model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channels_list)),function([channels_type, channels]){return _c('v-tab-item-fix',{key:channels_type,staticClass:\"channels\"},_vm._l((channels),function(channel){return _c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:channel.id,staticClass:\"channel\",attrs:{\"to\":`/tv/watch/${channel.channel_id}`}},[_c('div',{staticClass:\"channel__broadcaster\"},[_c('img',{staticClass:\"channel__broadcaster-icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${channel.channel_id}/logo`}}),_c('div',{staticClass:\"channel__broadcaster-content\"},[_c('span',{staticClass:\"channel__broadcaster-name\"},[_vm._v(\"Ch: \"+_vm._s(channel.channel_number)+\" \"+_vm._s(channel.channel_name))]),_c('div',{staticClass:\"channel__broadcaster-force\",class:`channel__broadcaster-force--${_vm.TVUtils.getChannelForceType(channel.channel_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"11px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(_vm.TVUtils.getAttribute(channel, 'channel_force', '-')))])],1)])]),_c('div',{staticClass:\"channel__program-present\"},[_c('span',{staticClass:\"channel__program-present-title\",domProps:{\"innerHTML\":_vm._s(_vm.TVUtils.decorateProgramInfo(channel.program_present, 'title'))}}),_c('span',{staticClass:\"channel__program-present-time\"},[_vm._v(_vm._s(_vm.TVUtils.getProgramTime(channel.program_present)))])]),_c('div',{staticClass:\"channel__program-following\"},[_c('div',{staticClass:\"channel__program-following-title\"},[_c('span',{staticClass:\"channel__program-following-title-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"channel__program-following-title-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}}),_c('span',{staticClass:\"channel__program-following-title-text\",domProps:{\"innerHTML\":_vm._s(_vm.TVUtils.decorateProgramInfo(channel.program_following, 'title'))}})],1),_c('span',{staticClass:\"channel__program-following-time\"},[_vm._v(_vm._s(_vm.TVUtils.getProgramTime(channel.program_following)))])]),_c('div',{staticClass:\"channel__progressbar\"},[_c('div',{staticClass:\"channel__progressbar-progress\",style:(`width:${_vm.TVUtils.getProgramProgress(channel.program_present)}%;`)})])])}),1)}),1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue, { PropType } from 'vue';\n\nimport { IChannel } from '@/interface';\nimport Utils, { TVUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'Panel-ChannelTab',\n    props: {\n        // チャンネル情報リスト\n        channels_list: {\n            type: Map as PropType<Map<string, IChannel[]>>,\n            required: true,\n        }\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            TVUtils: TVUtils,\n\n            // タブの状態管理\n            tab: null,\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Channel.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Channel.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Channel.vue?vue&type=template&id=7f5f62bd&scoped=true&\"\nimport script from \"./Channel.vue?vue&type=script&lang=ts&\"\nexport * from \"./Channel.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Channel.vue?vue&type=style&index=0&id=7f5f62bd&prod&lang=scss&\"\nimport style1 from \"./Channel.vue?vue&type=style&index=1&id=7f5f62bd&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7f5f62bd\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"comment-container\"},[_c('section',{staticClass:\"comment-header\"},[_c('h2',{staticClass:\"comment-header__title\"},[_c('Icon',{staticClass:\"comment-header__title-icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"height\":\"18.5px\"}}),_c('span',{staticClass:\"comment-header__title-text\"},[_vm._v(\"コメント\")])],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"comment-header__button ml-auto\",on:{\"click\":function($event){_vm.comment_mute_settings_modal = !_vm.comment_mute_settings_modal}}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"11px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ミュート設定\")])],1)]),_c('section',{staticClass:\"comment-list-wrapper\"},[_c('DynamicScroller',{staticClass:\"comment-list\",attrs:{\"direction\":'vertical',\"items\":_vm.comment_list,\"min-item-size\":34},scopedSlots:_vm._u([{key:\"default\",fn:function({item, active}){return [_c('DynamicScrollerItem',{attrs:{\"item\":item,\"active\":active,\"size-dependencies\":[item.text]}},[_c('div',{staticClass:\"comment\",class:{'comment--my-post': item.my_post}},[_c('span',{staticClass:\"comment__text\"},[_vm._v(_vm._s(item.text))]),_c('span',{staticClass:\"comment__time\"},[_vm._v(_vm._s(item.time))])])])]}}])}),(_vm.initialize_failed_message === null && _vm.comment_list.length === 0)?_c('div',{staticClass:\"comment-announce\"},[_c('div',{staticClass:\"comment-announce__heading\"},[_vm._v(\"まだコメントがありません。\")]),_vm._m(0)]):_vm._e(),(_vm.initialize_failed_message !== null && _vm.comment_list.length === 0)?_c('div',{staticClass:\"comment-announce\"},[_c('div',{staticClass:\"comment-announce__heading\"},[_vm._v(\"コメントがありません。\")]),_c('div',{staticClass:\"comment-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(_vm._s(_vm.initialize_failed_message))])])]):_vm._e()],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"comment-scroll-button elevation-5\",class:{'comment-scroll-button--display': _vm.is_manual_scroll},on:{\"click\":function($event){_vm.is_manual_scroll = false; _vm.scrollCommentList(true);}}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-down-12-filled\",\"height\":\"29px\"}})],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"comment-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(\"このチャンネルに対応するニコニコ実況のコメントが、リアルタイムで表示されます。\")])])\n}]\n\nexport { render, staticRenderFns }","\n\nimport { AxiosResponse } from 'axios';\nimport dayjs from 'dayjs';\nimport Vue, { PropType } from 'vue';\n\nimport { IChannel, IDPlayerDanmakuSendOptions, IUser } from '@/interface';\nimport Utils from '@/utils';\n\n// このコンポーネント内でのコメントのインターフェイス\ninterface IComment {\n    id: number;\n    text: string;\n    time: string;\n    my_post: boolean;\n}\n\nexport default Vue.extend({\n    name: 'Panel-CommentTab',\n    props: {\n        // チャンネル情報\n        channel: {\n            type: Object as PropType<IChannel>,\n            required: true,\n        },\n        // プレイヤーのインスタンス\n        player: {\n            type: null as PropType<any>,  // 代入当初は null になるため苦肉の策\n            required: true,\n        }\n    },\n    data() {\n        return {\n\n            // 手動スクロール状態かどうか\n            is_manual_scroll: false,\n\n            // 自動スクロール中かどうか\n            // 自動スクロール中の場合、scroll イベントが発火しても無視する\n            is_auto_scrolling: false,\n\n            // ユーザーアカウントの情報\n            // ログインしていない場合は null になる\n            user: null as IUser | null,\n\n            // コメントリストの配列\n            comment_list: [] as IComment[],\n\n            // コメントリストの要素\n            comment_list_element: null as HTMLElement | null,\n\n            // 視聴セッションの WebSocket のインスタンス\n            watch_session: null as WebSocket | null,\n\n            // コメントセッションの WebSocket のインスタンス\n            comment_session: null as WebSocket | null,\n\n            // 視聴セッション・コメントセッションの初期化に失敗した際のエラーメッセージ\n            // 視聴中チャンネルのニコニコ実況がないときなどに発生する\n            initialize_failed_message: null as string | null,\n\n            // vpos を計算する基準となる時刻のタイムスタンプ\n            vpos_base_timestamp: 0,\n\n            // 座席維持用のタイマーのインターバル ID\n            keep_seat_interval_id: 0,\n\n            // ResizeObserver のインスタンス\n            resize_observer: null as ResizeObserver | null,\n\n            // ResizeObserver の監視対象の要素\n            resize_observer_element: null as HTMLElement | null,\n\n            // コメントのミュート設定のモーダルを表示するか\n            comment_mute_settings_modal: false,\n        }\n    },\n    // 終了前に実行\n    beforeDestroy() {\n\n        // destroy() を実行\n        this.destroy();\n\n        // ResizeObserver を終了\n        if (this.resize_observer !== null) {\n            this.resize_observer.unobserve(this.resize_observer_element);\n        }\n    },\n    watch: {\n\n        // チャンネル情報が変更されたとき\n        // created() だとチャンネル情報の取得前に実行してしまう\n        // this が変わってしまうのでアロー関数は使えない\n        async channel(new_channel: IChannel, old_channel: IChannel) {\n\n            // 前のチャンネル情報と次のチャンネル情報で channel_id が変わってたら\n            if (new_channel.channel_id !== old_channel.channel_id) {\n\n                // 0.5秒だけ待ってから\n                // 連続してチャンネルを切り替えた時などに毎回コメントサーバーに接続しないように猶予を設ける\n                // ただし、最初 (channel_id が gr000 の初期値になっている) だけは待たずに実行する\n                if (old_channel.channel_id !== 'gr000') {\n                    await Utils.sleep(0.5);\n                    // 0.5 秒待った結果、channel_id が既に変更されているので終了\n                    if (this.channel.channel_id !== new_channel.channel_id) {\n                        return;\n                    }\n                }\n\n                // 前の視聴セッション・コメントセッションを破棄\n                this.destroy();\n\n                // コメントリストの要素を取得\n                if (this.comment_list_element === null) {\n                    this.comment_list_element = this.$el.querySelector('.comment-list');\n                }\n\n                // 現在コメントリストがユーザーイベントでスクロールされているかどうか\n                let is_user_scrolling = false;\n\n                // mousedown → mouseup 中: スクロールバーをマウスでドラッグ\n                // 残念ながらスクロールバーのドラッグ中は mousemove のイベントが発火しないため、直接 is_user_scrolling を設定する\n                this.comment_list_element.onmousedown = (event: MouseEvent) => {\n                    // コメントリストの要素の左上を起点としたカーソルのX座標を求める\n                    const x = event.clientX - this.comment_list_element.getBoundingClientRect().left;\n                    // 座標が clientWidth 以上であれば、スクロールバー上で mousedown されたものとする\n                    if (x > this.comment_list_element.clientWidth) is_user_scrolling = true;\n                }\n                this.comment_list_element.onmouseup = (event: MouseEvent) => {\n                    // コメントリストの要素の左上を起点としたカーソルのX座標を求める\n                    const x = event.clientX - this.comment_list_element.getBoundingClientRect().left;\n                    // 座標が clientWidth 以上であれば、スクロールバー上で mouseup されたものとする\n                    if (x > this.comment_list_element.clientWidth) is_user_scrolling = false;\n                }\n\n                // ユーザーによるスクロールイベントで is_user_scrolling を true にする\n                // 0.1 秒後に false にする（継続してイベントが発火すれば再び true になる）\n                const on_user_scrolling = () => {\n                    is_user_scrolling = true;\n                    window.setTimeout(() => is_user_scrolling = false, 100);\n                }\n\n                // 現在コメントリストがドラッグされているかどうか\n                let is_dragging = false;\n                // touchstart → touchend 中: スクロールバーをタップでドラッグ\n                this.comment_list_element.ontouchstart = () => is_dragging = true;\n                this.comment_list_element.ontouchend = () => is_dragging = false;\n                // touchmove + is_dragging 中: コメントリストをタップでドラッグしてスクロール\n                this.comment_list_element.ontouchmove = () => is_dragging === true ? on_user_scrolling(): '';\n\n                // wheel 中: マウスホイールの回転\n                this.comment_list_element.onwheel = on_user_scrolling;\n\n                // コメントリストがスクロールされた際、自動スクロール中でない&ユーザーイベントで操作されていれば、手動スクロールモードに設定\n                // 手動スクロールモードでは自動スクロールを行わず、ユーザーがコメントリストをスクロールできるようにする\n                this.comment_list_element.onscroll = async () => {\n\n                    // scroll イベントは自動スクロールでも発火してしまうので、ユーザーイベントによるスクロールかを確認しないといけない\n                    // 自動スクロール中かどうかは is_auto_scrolling が true のときで判定できるはずだが、\n                    // コメントが多くなると is_auto_scrolling が false なのに scroll イベントが遅れて発火してしまうことがある\n                    if (this.is_auto_scrolling === false && is_user_scrolling === true) {\n\n                        // 手動スクロールを有効化\n                        this.is_manual_scroll = true;\n\n                        // イベント発火時点では scrollTop の値が完全に下にスクロールされていない場合があるため、0.1秒だけ待つ\n                        await Utils.sleep(0.1);\n\n                        // 一番下までスクロールされていたら自動スクロールに戻す\n                        if ((this.comment_list_element.scrollTop + this.comment_list_element.offsetHeight) >\n                            (this.comment_list_element.scrollHeight - 10)) {  // 一番下から 10px 以内\n                            this.is_manual_scroll = false;  // 手動スクロールを無効化\n                        }\n                    }\n                }\n\n                // リサイズ時のイベントを初期化\n                await this.initReserveObserver();\n\n                // ユーザーアカウントの情報を取得\n                try {\n                    this.user = (await Vue.axios.get('/users/me')).data;\n                } catch (error) {\n                    this.user = null;\n                }\n\n                try {\n\n                    // 視聴セッションを初期化\n                    const comment_session_info = await this.initWatchSession();\n\n                    // vpos の基準時刻のタイムスタンプを取得\n                    // vpos は番組開始時間からの累計秒（10ミリ秒単位）\n                    this.vpos_base_timestamp = dayjs(comment_session_info['vpos_base_time']).unix() * 100;\n\n                    // コメントセッションを初期化\n                    await this.initCommentSession(comment_session_info);\n\n                } catch (error) {\n\n                    // 初期化に失敗した場合のエラーメッセージを保存しておく\n                    // 初期化に失敗したのにコメントを送信しようとした際に表示するもの\n                    this.initialize_failed_message = error.message;\n                    console.error(error.toString());\n                }\n            }\n        }\n    },\n    methods: {\n\n        // 視聴セッションを初期化\n        async initWatchSession(): Promise<{[key: string]: string | null}> {\n\n            // セッション情報を取得\n            let watch_session_info: AxiosResponse;\n            try {\n                watch_session_info = await Vue.axios.get(`/channels/${this.channel.channel_id}/jikkyo`);\n            } catch (error) {\n                throw new Error(error);  // エラー内容をコンソールに表示して終了\n            }\n\n            // セッション情報を取得できなかった\n            if (watch_session_info.data.is_success === false) {\n\n                // 一部を除くエラーメッセージはプレイヤーにも通知する\n                if ((watch_session_info.data.detail !== 'このチャンネルはニコニコ実況に対応していません。') &&\n                    (watch_session_info.data.detail !== '現在放送中のニコニコ実況がありません。')) {\n                    this.player.notice(watch_session_info.data.detail);\n                }\n\n                throw new Error(watch_session_info.data.detail);  // エラー内容をコンソールに表示して終了\n            }\n\n            // イベント内で値を返すため、Promise で包む\n            return new Promise((resolve) => {\n\n                // 視聴セッション WebSocket を開く\n                this.watch_session = new WebSocket(watch_session_info.data.audience_token);\n\n                // 視聴セッション WebSocket を開いたとき\n                this.watch_session.addEventListener('open', () => {\n\n                    // 視聴セッションをリクエスト\n                    // 公式ドキュメントいわく、stream フィールドは Optional らしい\n                    // サーバー負荷軽減のため、映像が不要な場合は必ず省略してくださいとのこと\n                    this.watch_session.send(JSON.stringify({\n                        'type': 'startWatching',\n                        'data': {\n                            'reconnect': false,\n                        },\n                    }));\n                });\n\n                // 視聴セッション WebSocket からメッセージを受信したとき\n                this.watch_session.addEventListener('message', async (event) => {\n\n                    // 受信したメッセージ\n                    const message = JSON.parse(event.data);\n\n                    switch (message.type) {\n\n                        // 部屋情報（実際には統合されていて、全てアリーナ扱いになっている）\n                        case 'room': {\n\n                            // コメントサーバーへの接続情報の入ったオブジェクトを返す\n                            return resolve({\n                                // コメントサーバーへの接続情報\n                                'message_server': message.data.messageServer.uri,\n                                // コメントサーバー上のスレッド ID\n                                'thread_id': message.data.threadId,\n                                // vpos を計算する基準となる時刻 (ISO8601形式)\n                                'vpos_base_time': message.data.vposBaseTime,\n                                // メッセージサーバーから受信するコメント (chat メッセージ) に yourpost フラグを付けるためのキー\n                                'your_post_key': (message.data.yourPostKey ? message.data.yourPostKey : null),\n                            });\n                        }\n\n                        // 座席情報\n                        case 'seat': {\n\n                            // keepIntervalSec の秒数ごとに keepSeat を送信して座席を維持する\n                            this.keep_seat_interval_id = window.setInterval(() => {\n                                // セッションがまだ開いていれば\n                                if (this.watch_session.readyState === 1) {\n                                    // 座席を維持\n                                    this.watch_session.send(JSON.stringify({\n                                        'type': 'keepSeat',\n                                    }));\n                                // setInterval を解除\n                                } else {\n                                    window.clearInterval(this.keep_seat_interval_id);\n                                }\n                            }, message.data.keepIntervalSec * 1000);\n                            break;\n                        }\n\n                        // ping-pong\n                        case 'ping': {\n\n                            // pong を返してセッションを維持する\n                            // 送り返さなかった場合、勝手にセッションが閉じられてしまう\n                            this.watch_session.send(JSON.stringify({\n                                'type': 'pong',\n                            }));\n                            break;\n                        }\n\n                        // エラー情報\n                        case 'error': {\n\n                            // エラー情報\n                            let error:string;\n                            switch (message.data.code) {\n\n                                case 'CONNECT_ERROR':\n                                    error = 'コメントサーバーに接続できません。';\n                                break;\n                                case 'CONTENT_NOT_READY':\n                                    error = 'ニコニコ実況が配信できない状態です。';\n                                break;\n                                case 'NO_THREAD_AVAILABLE':\n                                    error = 'コメントスレッドを取得できません。';\n                                break;\n                                case 'NO_ROOM_AVAILABLE':\n                                    error = 'コメント部屋を取得できません。';\n                                break;\n                                case 'NO_PERMISSION':\n                                    error = 'API にアクセスする権限がありません。';\n                                break;\n                                case 'NOT_ON_AIR':\n                                    error = 'ニコニコ実況が放送中ではありません。';\n                                break;\n                                case 'BROADCAST_NOT_FOUND':\n                                    error = 'ニコニコ実況の配信情報を取得できません。';\n                                break;\n                                case 'INTERNAL_SERVERERROR':\n                                    error = 'ニコニコ実況でサーバーエラーが発生しています。';\n                                break;\n                                default:\n                                    error = `ニコニコ実況でエラーが発生しています。(${message.data.code})`;\n                                break;\n                            }\n\n                            // エラー情報を表示\n                            console.log(`error occurred. code: ${message.data.code}`);\n                            if (this.player.danmaku.showing) {\n                                this.player.notice(error);\n                            }\n\n                            break;\n                        }\n\n                        // 再接続を求められた\n                        case 'reconnect': {\n\n                            // waitTimeSec に記載の秒数だけ待ってから再接続する\n                            await Utils.sleep(message.data.waitTimeSec);\n                            if (this.player.danmaku.showing) {\n                                this.player.notice('ニコニコ実況に再接続しています…');\n                            }\n\n                            // 前の視聴セッション・コメントセッションを破棄\n                            this.destroy();\n\n                            // 視聴セッションを再初期化\n                            // 公式ドキュメントには reconnect で送られてくる audienceToken で再接続しろと書いてあるんだけど、\n                            // 確実性的な面で実装が面倒なので当面このままにしておく\n                            const comment_session_info = await this.initWatchSession();\n\n                            // コメントセッションを再初期化\n                            await this.initCommentSession(comment_session_info);\n\n                            break;\n                        }\n\n                        // 視聴セッションが閉じられた（4時のリセットなど）\n                        case 'disconnect': {\n\n                            // 実際に接続が閉じられる前に disconnect イベントが送られてきたので、onclose イベントを削除する\n                            // onclose イベントが発火するのは不意に切断されたときなど最終手段\n                            if (this.watch_session) this.watch_session.onclose = null;\n\n                            // 接続切断の理由\n                            let disconnect_reason;\n                            switch (message.data.reason) {\n\n                                case 'TAKEOVER':\n                                    disconnect_reason = 'ニコニコ実況の番組から追い出されました。';\n                                break;\n                                case 'NO_PERMISSION':\n                                    disconnect_reason = 'ニコニコ実況の番組の座席を取得できませんでした。';\n                                break;\n                                case 'END_PROGRAM':\n                                    disconnect_reason = 'ニコニコ実況がリセットされたか、コミュニティの番組が終了しました。';\n                                break;\n                                case 'PING_TIMEOUT':\n                                    disconnect_reason = 'コメントサーバーとの接続生存確認に失敗しました。';\n                                break;\n                                case 'TOO_MANY_CONNECTIONS':\n                                    disconnect_reason = 'ニコニコ実況の同一ユーザからの接続数上限を越えています。';\n                                break;\n                                case 'TOO_MANY_WATCHINGS':\n                                    disconnect_reason = 'ニコニコ実況の同一ユーザからの視聴番組数上限を越えています。';\n                                break;\n                                case 'CROWDED':\n                                    disconnect_reason = 'ニコニコ実況の番組が満席です。';\n                                break;\n                                case 'MAINTENANCE_IN':\n                                    disconnect_reason = 'ニコニコ実況はメンテナンス中です。';\n                                break;\n                                case 'SERVICE_TEMPORARILY_UNAVAILABLE':\n                                    disconnect_reason = 'ニコニコ実況で一時的にサーバーエラーが発生しています。';\n                                break;\n                                default:\n                                    disconnect_reason = `ニコニコ実況との接続が切断されました。(${message.data.reason})`;\n                                break;\n                            }\n\n                            // 接続切断の理由を表示\n                            console.log(`disconnected. reason: ${message.data.reason}`);\n                            if (this.player.danmaku.showing) {\n                                this.player.notice(disconnect_reason);\n                            }\n\n                            // 5 秒ほど待ってから再接続する\n                            await Utils.sleep(5);\n                            if (this.player.danmaku.showing) {\n                                this.player.notice('ニコニコ実況に再接続しています…');\n                            }\n\n                            // 前の視聴セッション・コメントセッションを破棄\n                            this.destroy();\n\n                            // 視聴セッションを再初期化\n                            const comment_session_info = await this.initWatchSession();\n\n                            // コメントセッションを再初期化\n                            await this.initCommentSession(comment_session_info);\n\n                            break;\n                        }\n                    }\n                });\n\n\n                // 視聴セッションの接続が閉じられたとき（ネットワークが切断された場合など）\n                // イベントを無効化しやすいように敢えて onclose で実装する\n                this.watch_session.onclose = async (event) => {\n\n                    // 接続切断の理由を表示\n                    console.log(`disconnected. code: ${event.code}`);\n                    if (this.player.danmaku.showing) {\n                        this.player.notice(`ニコニコ実況との接続が切断されました。(code: ${event.code})`);\n                    }\n\n                    // 10 秒ほど待ってから再接続する\n                    // ニコ生側から切断された場合と異なりネットワークが切断された可能性が高いので、間を多めに取る\n                    await Utils.sleep(10);\n                    if (this.player.danmaku.showing) {\n                        this.player.notice('ニコニコ実況に再接続しています…');\n                    }\n\n                    // 前の視聴セッション・コメントセッションを破棄\n                    this.destroy();\n\n                    // 視聴セッションを再初期化\n                    const comment_session_info = await this.initWatchSession();\n\n                    // コメントセッションを再初期化\n                    await this.initCommentSession(comment_session_info);\n                };\n            });\n        },\n\n        // コメントセッションを初期化\n        async initCommentSession(comment_session_info: {[key: string]: string | null}) {\n\n            // タブが非表示状態のときにコメントを格納する配列\n            // タブが表示状態になったらコメントリストにのみ表示する（遅れているのでプレイヤーには表示しない）\n            let comment_list_buffer: IComment[] = [];\n\n            // 最初に送信されてくるコメントを受信し終えたかどうかのフラグ\n            let is_received_initial_comment = false;\n\n            // コメントセッション WebSocket を開く\n            this.comment_session = new WebSocket(comment_session_info.message_server);\n\n            // コメントセッション WebSocket を開いたとき\n            this.comment_session.addEventListener('open', () => {\n\n                // コメント送信をリクエスト\n                // このコマンドを送らないとコメントが送信されてこない\n                this.comment_session.send(JSON.stringify([\n                    { 'ping': {'content': 'rs:0'} },\n                    { 'ping': {'content': 'ps:0'} },\n                    {\n                        'thread': {\n                            'version': '20061206',  // 設定必須\n                            'thread': comment_session_info.thread_id,  // スレッド ID\n                            'threadkey': comment_session_info.your_post_key,  // スレッドキー\n                            'user_id': '',  // ユーザー ID（設定不要らしい）\n                            'res_from': -50,  // 最初にコメントを 50 個送信する\n                        }\n                    },\n                    { 'ping': {'content': 'pf:0'} },\n                    { 'ping': {'content': 'rf:0'} },\n                ]));\n            });\n\n            // 視聴セッション WebSocket からメッセージを受信したとき\n            this.comment_session.addEventListener('message', async (event_raw) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n\n                // thread メッセージのみ\n                if (event.thread !== undefined) {\n\n                    // 接続成功のコールバックを DPlayer に通知\n                    if (event.thread.resultcode === 0) {\n\n                    // 接続失敗のコールバックを DPlayer に通知\n                    } else {\n                        const message = 'コメントサーバーに接続できませんでした。';\n                        console.error('Error: ' + message);\n                    }\n                }\n\n                // ping メッセージのみ\n                // rf:0 が送られてきたら初回コメントの受信は完了\n                if (event.ping !== undefined && event.ping.content === 'rf:0') {\n\n                    // 最初に送信されてくるコメントを受信し終えたフラグを立てる\n                    is_received_initial_comment = true;\n\n                    // コメントリストを一番下にスクロール\n                    // 初回コメントは量が多いので、一括でスクロールする\n                    this.scrollCommentList();\n                }\n\n                // コメントデータを取得\n                const comment = event.chat;\n\n                // コメントがない or 広告用など特殊な場合は弾く\n                if (comment === undefined ||\n                    comment.content === undefined ||\n                    comment.content.match(/\\/[a-z]+ /)) {\n                    return;\n                }\n\n                // 自分のコメントも表示しない\n                if (comment.yourpost && comment.yourpost === 1) {\n                    return;\n                }\n\n                // 色・位置・サイズ\n                let color = '#FFEAEA';  // コメント色のデフォルト\n                let position = 'right'; // コメント位置のデフォルト\n                let size = 'medium';    // コメントサイズのデフォルト\n                if (comment.mail !== undefined && comment.mail !== null) {\n\n                    // コマンドをスペースで区切って配列にしたもの (184 は事前に除外)\n                    const commands = comment.mail.replace('184', '').split(' ');\n\n                    for (const command of commands) {  // コマンドごとに\n                        // コメント色指定コマンドがあれば取得\n                        if (this.getCommentColor(command) !== null) {\n                            color = this.getCommentColor(command);\n                        }\n                        // コメント位置指定コマンドがあれば取得\n                        if (this.getCommentPosition(command) !== null) {\n                            position = this.getCommentPosition(command);\n                        }\n                        // コメントサイズ指定コマンドがあれば取得\n                        // コメントサイズのコマンドは DPlayer とニコニコで共通なので、変換の必要はない\n                        if (command === 'big' || command === 'medium' || command === 'small') {\n                            size = command;\n                        }\n                    }\n                }\n\n                // 配信に発生する遅延分待ってから\n                // 最初にドカッと送信されてくる初回コメントは少し前に投稿されたコメント群なので、遅らせずに表示させる\n                if (is_received_initial_comment) {\n                    const comment_delay_time = Utils.getSettingsItem('comment_delay_time');\n                    await Utils.sleep(comment_delay_time);\n                }\n\n                // コメントリストのコメントが 500 件を超えたら古いものから順に削除する\n                // 仮想スクロールとはいえ、さすがに 500 件を超えると重くなりそう\n                // 手動スクロール時は実行しない\n                if (this.comment_list.length >= 500 && this.is_manual_scroll === false) {\n                    while (this.comment_list.length >= 500) {\n                        this.comment_list.shift();\n                    }\n                }\n\n                // コメントリストへ追加するオブジェクト\n                // コメント投稿時刻はフォーマットしてから\n                const comment_dict: IComment = {\n                    id: comment.no,\n                    text: comment.content,\n                    time: dayjs(comment.date * 1000).format('HH:mm:ss'),\n                    my_post: false,\n                };\n\n                // タブが非表示状態のときは、バッファにコメントを追加するだけで終了する\n                // ここで追加すると、タブが表示状態になったときに一斉に描画されて大変なことになる\n                if (document.visibilityState === 'hidden') {\n                    comment_list_buffer.push(comment_dict);\n                    return;\n                }\n\n                // コメントリストに追加\n                this.comment_list.push(comment_dict);\n\n                // // コメントリストを一番下にスクロール\n                // 最初に受信したコメントは上の処理で一括でスクロールさせる\n                if (is_received_initial_comment) {\n                    this.scrollCommentList();\n                }\n\n                // コメント描画 (再生時のみ)\n                // 最初に受信したコメントはリアルタイムなコメントではないため、描画しないように\n                if (is_received_initial_comment) {\n                    if (!this.player.video.paused){\n                        this.player.danmaku.draw({\n                            text: comment.content,\n                            color: color,\n                            type: position,\n                            size: size,\n                        });\n                    }\n                }\n            });\n\n            // タブの表示/非表示の状態が切り替わったときのイベント\n            // 表示状態になったときにバッファにあるコメントをコメントリストに表示する\n            document.onvisibilitychange = () => {\n                if (document.visibilityState === 'visible') {\n                    this.comment_list.push(...comment_list_buffer);  // コメントリストに一括で追加\n                    comment_list_buffer = [];  // バッファをクリア\n                    this.scrollCommentList();  // コメントリストをスクロール\n                }\n            };\n        },\n\n        // コメントを送信する\n        async sendComment(options: IDPlayerDanmakuSendOptions) {\n\n            // 初期化に失敗しているときは実行せず、保存しておいたエラーメッセージを表示する\n            if (this.initialize_failed_message !== null) {\n                options.error(this.initialize_failed_message);\n                return;\n            }\n\n            // 未ログイン時\n            if (this.user === null) {\n                options.error('コメントするには、KonomiTV アカウントにログインしてください。');\n                return;\n            }\n\n            // ニコニコアカウント未連携時\n            if (this.user.niconico_user_id === null) {\n                options.error('コメントするには、ニコニコアカウントと連携してください。');\n                return;\n            }\n\n            // 一般会員ではコメント位置の指定 (ue, shita) が無視されるので、事前にエラーにしておく\n            if (this.user.niconico_user_premium === false && (options.data.type === 'top' || options.data.type === 'bottom')) {\n                options.error('コメントを上下に固定するには、ニコニコアカウントのプレミアム会員登録が必要です。');\n                return;\n            }\n\n            // 一般会員ではコメントサイズ大きめの指定 (big) が無視されるので、事前にエラーにしておく\n            if (this.user.niconico_user_premium === false && options.data.size === 'big') {\n                options.error('コメントサイズを大きめに設定するには、ニコニコアカウントのプレミアム会員登録が必要です。');\n                return;\n            }\n\n            // DPlayer 上のコメント色（カラーコード）とニコニコの色コマンド定義のマッピング\n            const color_table = {\n                '#FFEAEA': 'white',\n                '#F02840': 'red',\n                '#FD7E80': 'pink',\n                '#FDA708': 'orange',\n                '#FFE133': 'yellow',\n                '#64DD17': 'green',\n                '#00D4F5': 'cyan',\n                '#4763FF': 'blue',\n            };\n\n            // DPlayer 上のコメント位置を表す数値とニコニコの位置コマンド定義のマッピング\n            const position_table = {\n                'top': 'ue',\n                'right': 'naka',\n                'bottom': 'shita',\n            };\n\n            // vpos を計算 (10ミリ秒単位)\n            // 番組開始時間からの累計秒らしいけど、なぜ指定しないといけないのかは不明\n            const vpos = Math.floor(new Date().getTime() / 10) - this.vpos_base_timestamp;\n\n            // コメントを送信\n            this.watch_session.send(JSON.stringify({\n                'type': 'postComment',\n                'data': {\n                    'text': options.data.text,  // コメント本文\n                    'color': color_table[options.data.color.toUpperCase()],  // コメントの色\n                    'position': position_table[options.data.type],  // コメント位置\n                    'size': options.data.size,  // コメントサイズ (DPlayer とニコニコで表現が共通)\n                    'vpos': vpos,  // 番組開始時間からの累計秒（10ミリ秒単位）\n                    'isAnonymous': true,  // 匿名コメント (184)\n                }\n            }));\n\n            // 自分のコメントをコメントリストに追加\n            this.comment_list.push({\n                id: new Date().getTime(),\n                text: options.data.text,\n                time: dayjs().format('HH:mm:ss'),\n                my_post: true,  // コメントリスト上でハイライトする\n            });\n\n            // コメント送信のレスポンスを取得\n            // 簡単にイベントリスナーを削除できるため、あえて onmessage で実装している\n            this.watch_session.onmessage = (event) => {\n\n                // 受信したメッセージ\n                const message = JSON.parse(event.data);\n\n                switch (message.type) {\n\n                    // postCommentResult\n                    // これが送られてくる → コメント送信に成功している\n                    case 'postCommentResult': {\n\n                        // コメント成功のコールバックを DPlayer に通知\n                        options.success();\n\n                        // イベントリスナーを削除\n                        this.watch_session.onmessage = null;\n                        break;\n                    }\n\n                    // error\n                    // コメント送信直後に error が送られてきた → コメント送信に失敗している\n                    case 'error': {\n\n                        // エラーメッセージ\n                        let error = `コメントの送信に失敗しました。(${message.data.code})`;\n                        switch (message.data.code) {\n                            case 'COMMENT_POST_NOT_ALLOWED': {\n                                error = 'コメントが許可されていません。';\n                                break;\n                            }\n                            case 'INVALID_MESSAGE': {\n                                error = 'コメント内容が無効です。';\n                                break;\n                            }\n                        }\n\n                        // コメント失敗のコールバックを DPlayer に通知\n                        options.error(error);\n\n                        // イベントリスナーを解除\n                        this.watch_session.onmessage = null;\n                        break;\n                    }\n                }\n            };\n        },\n\n        // リサイズ時のイベントを初期化\n        async initReserveObserver() {\n\n            // 監視対象の要素\n            this.resize_observer_element = document.querySelector('.watch-player');\n\n            // タイムアウト ID\n            // 一時的に無効にした transition を有効化する際に利用する\n            let animation_timeout_id = null;\n\n            // プレイヤーの要素がリサイズされた際に発火するイベント\n            const on_resize = () => {\n\n                // 映像の要素\n                const video_element = document.querySelector('.dplayer-video-wrap-aspect');\n\n                // コメント描画領域の要素\n                const comment_area_element = (document.querySelector('.dplayer-danmaku') as HTMLElement);\n\n                // プレイヤー全体と映像の高さの差（レターボックス）から、コメント描画領域の高さを狭める必要があるかを判定する\n                // 2で割っているのは単体の差を測るため\n                if (this.resize_observer_element === null || this.resize_observer_element.clientHeight === null) return;\n                if (video_element === null || video_element.clientHeight === null) return;\n                const letter_box_height = (this.resize_observer_element.clientHeight - video_element.clientHeight) / 2;\n\n                // 70px or 54px (高さが 450px 以下) 以下ならヘッダー（番組名などの表示）と被るので対応する\n                const threshold = window.matchMedia('(max-height: 450px)').matches ? 50 : 66;\n                if (letter_box_height < threshold) {\n\n                    // コメント描画領域に必要な上下マージン\n                    const comment_area_vertical_margin = (threshold - letter_box_height) * 2;\n\n                    // 狭めるコメント描画領域の幅\n                    // 映像の要素の幅をそのまま利用する\n                    const comment_area_width = video_element.clientWidth;\n\n                    // 狭めるコメント描画領域の高さ\n                    const comment_area_height = video_element.clientHeight - comment_area_vertical_margin;\n\n                    // 狭めるコメント描画領域のアスペクト比を求める\n                    // https://tech.arc-one.jp/asepct-ratio/\n                    const gcd = (x: number, y: number) => {  // 最大公約数を求める関数\n                        if(y === 0) return x;\n                        return gcd(y, x % y);\n                    }\n                    // 幅と高さの最大公約数を求める\n                    const gcd_result = gcd(comment_area_width, comment_area_height);\n                    // 幅と高さをそれぞれ最大公約数で割ってアスペクト比を算出\n                    const comment_area_height_aspect = `${comment_area_width / gcd_result} / ${comment_area_height / gcd_result}`;\n\n                    // 一時的に transition を無効化する\n                    // アスペクト比の設定は連続して行われるが、その際に transition が適用されるとワンテンポ遅れたアニメーションになってしまう\n                    comment_area_element.style.transition = 'none';\n\n                    // コメント描画領域に算出したアスペクト比を設定する\n                    comment_area_element.style.setProperty('--comment-area-aspect-ratio', comment_area_height_aspect);\n\n                    // コメント描画領域に必要な上下マージンを設定する\n                    comment_area_element.style.setProperty('--comment-area-vertical-margin', `${comment_area_vertical_margin}px`);\n\n                    // 以前セットされた setTimeout() を止める\n                    window.clearTimeout(animation_timeout_id);\n\n                    // 0.2秒後に実行する\n                    // 0.2秒より前にもう一度リサイズイベントが来た場合はタイマーがクリアされるため実行されない\n                    window.setTimeout(() => {\n\n                        // 再び transition を有効化する\n                        comment_area_element.style.transition = '';\n\n                    }, 0.2 * 1000);\n\n                } else {\n\n                    // コメント描画領域に設定したアスペクト比・上下マージンを削除する\n                    comment_area_element.style.removeProperty('--comment-area-aspect-ratio');\n                    comment_area_element.style.removeProperty('--comment-area-vertical-margin');\n                }\n            }\n\n            // 要素の監視を開始\n            this.resize_observer = new ResizeObserver(on_resize);\n            this.resize_observer.observe(this.resize_observer_element);\n\n            // 0.6 秒待ってから初回実行\n            // チャンネル切り替え後、再初期化されたプレイヤーに適用するため（早いと再初期化前のプレイヤーに適用されてしまう）\n            window.setTimeout(on_resize, 0.6 * 1000);\n        },\n\n        // コメントリストを一番下までスクロールする\n        async scrollCommentList(smooth: boolean = false) {\n\n            // 手動スクロールモードの時は実行しない\n            if (this.is_manual_scroll === true) return;\n\n            // 自動スクロール中のフラグを立てる\n            this.is_auto_scrolling = true;\n\n            // 0.01 秒待って実行し、念押しで2回実行しないと完全に最下部までスクロールされない…（ブラウザの描画バグ？）\n            // this.$nextTick() は効かなかった\n            for (let index = 0; index < 3; index++) {\n                await Utils.sleep(0.01);\n                if (smooth === true) {  // スムーズスクロール\n                    this.comment_list_element.scrollTo({top: this.comment_list_element.scrollHeight, left: 0, behavior: 'smooth'});\n                } else {\n                    this.comment_list_element.scrollTo(0, this.comment_list_element.scrollHeight);\n                }\n            }\n\n            // 0.1 秒待つ（重要）\n            await Utils.sleep(0.1);\n\n            // 自動スクロール中のフラグを降ろす\n            this.is_auto_scrolling = false;\n        },\n\n        /**\n         * ニコニコの色指定を 16 進数カラーコードに置換する\n         * @param {string} color ニコニコの色指定\n         * @return {string} 16 進数カラーコード\n         */\n        getCommentColor(color: string): string {\n            const color_table = {\n                'white': '#FFEAEA',\n                'red': '#F02840',\n                'pink': '#FD7E80',\n                'orange': '#FDA708',\n                'yellow': '#FFE133',\n                'green': '#64DD17',\n                'cyan': '#00D4F5',\n                'blue': '#4763FF',\n                'purple': '#D500F9',\n                'black': '#1E1310',\n                'white2': '#CCCC99',\n                'niconicowhite': '#CCCC99',\n                'red2': '#CC0033',\n                'truered': '#CC0033',\n                'pink2': '#FF33CC',\n                'orange2': '#FF6600',\n                'passionorange': '#FF6600',\n                'yellow2': '#999900',\n                'madyellow': '#999900',\n                'green2': '#00CC66',\n                'elementalgreen': '#00CC66',\n                'cyan2': '#00CCCC',\n                'blue2': '#3399FF',\n                'marineblue': '#3399FF',\n                'purple2': '#6633CC',\n                'nobleviolet': '#6633CC',\n                'black2': '#666666',\n            };\n            if (color_table[color] !== undefined) {\n                return color_table[color];\n            } else {\n                return null;\n            }\n        },\n\n        /**\n         * ニコニコの位置指定を DPlayer の位置指定に置換する\n         * @param {string} position ニコニコの位置指定\n         * @return {string} DPlayer の位置指定\n         */\n        getCommentPosition(position: string): string {\n            switch (position) {\n                case 'ue':\n                    return 'top';\n                case 'naka':\n                    return 'right';\n                case 'shita':\n                    return 'bottom';\n                default:\n                    return null;\n            }\n        },\n\n        // 破棄する\n        destroy() {\n\n            // 初期化失敗時のメッセージをクリア\n            this.initialize_failed_message = null;\n\n            // コメントリストをクリア\n            this.comment_list = [];\n\n            // タブの表示/非表示の状態が切り替わったときのイベントを削除\n            document.onvisibilitychange = null;\n\n            // 視聴セッションを閉じる\n            if (this.watch_session !== null) {\n                this.watch_session.onclose = null;  // WebSocket が閉じられた際のイベントを削除\n                this.watch_session.close();  // WebSocket を閉じる\n                this.watch_session = null;  // null に戻す\n            }\n\n            // コメントセッションを閉じる\n            if (this.comment_session !== null) {\n                this.comment_session.onclose = null;  // WebSocket が閉じられた際のイベントを削除\n                this.comment_session.close();  // WebSocket を閉じる\n                this.comment_session = null;  // null に戻す\n            }\n\n            // 座席保持用のタイマーをクリア\n            window.clearInterval(this.keep_seat_interval_id);\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Comment.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Comment.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Comment.vue?vue&type=template&id=241c03d8&scoped=true&\"\nimport script from \"./Comment.vue?vue&type=script&lang=ts&\"\nexport * from \"./Comment.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Comment.vue?vue&type=style&index=0&id=241c03d8&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"241c03d8\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"program-container\"},[_c('section',{staticClass:\"program-broadcaster\"},[_c('img',{staticClass:\"program-broadcaster__icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.$route.params.channel_id)}/logo`}}),_c('div',{staticClass:\"program-broadcaster__number\"},[_vm._v(\"Ch: \"+_vm._s(_vm.channel.channel_number))]),_c('div',{staticClass:\"program-broadcaster__name\"},[_vm._v(_vm._s(_vm.channel.channel_name))])]),_c('section',{staticClass:\"program-info\"},[_c('h1',{staticClass:\"program-info__title\",domProps:{\"innerHTML\":_vm._s(_vm.TVUtils.decorateProgramInfo(_vm.channel.program_present, 'title'))}}),_c('div',{staticClass:\"program-info__time\"},[_vm._v(_vm._s(_vm.TVUtils.getProgramTime(_vm.channel.program_present)))]),_c('div',{staticClass:\"program-info__description\",domProps:{\"innerHTML\":_vm._s(_vm.TVUtils.decorateProgramInfo(_vm.channel.program_present, 'description'))}}),_c('div',{staticClass:\"program-info__genre-container\"},_vm._l((_vm.TVUtils.getAttribute(_vm.channel.program_present, 'genre', [])),function(genre,genre_index){return _c('div',{key:genre_index,staticClass:\"program-info__genre\"},[_vm._v(\" \"+_vm._s(genre.major)+\" / \"+_vm._s(genre.middle)+\" \")])}),0),_c('div',{staticClass:\"program-info__next\"},[_c('span',{staticClass:\"program-info__next-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"program-info__next-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}})],1),_c('span',{staticClass:\"program-info__next-title\",domProps:{\"innerHTML\":_vm._s(_vm.TVUtils.decorateProgramInfo(_vm.channel.program_following, 'title'))}}),_c('div',{staticClass:\"program-info__next-time\"},[_vm._v(_vm._s(_vm.TVUtils.getProgramTime(_vm.channel.program_following)))]),_c('div',{staticClass:\"program-info__status\"},[_c('div',{staticClass:\"program-info__status-force\",class:`program-info__status-force--${_vm.TVUtils.getChannelForceType(_vm.channel.channel_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"勢い:\")]),_c('span',{staticClass:\"ml-2\"},[_vm._v(_vm._s(_vm.TVUtils.getAttribute(_vm.channel, 'channel_force', '--'))+\" コメ/分\")])],1),_c('div',{staticClass:\"program-info__status-viewers ml-5\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:eye\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"視聴数:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(_vm.channel.viewers))])],1)])]),_c('section',{staticClass:\"program-detail-container\"},_vm._l((_vm.TVUtils.getAttribute(_vm.channel.program_present, 'detail', {})),function(detail_text,detail_heading){return _c('div',{key:detail_heading,staticClass:\"program-detail\"},[_c('h2',{staticClass:\"program-detail__heading\"},[_vm._v(_vm._s(detail_heading))]),_c('div',{staticClass:\"program-detail__text\",domProps:{\"innerHTML\":_vm._s(_vm.Utils.URLtoLink(detail_text))}})])}),0)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue, { PropType } from 'vue';\n\nimport { IChannel } from '@/interface';\nimport Utils, { TVUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'Panel-ProgramTab',\n    props: {\n        // チャンネル情報\n        channel: {\n            type: Object as PropType<IChannel>,\n            required: true,\n        }\n    },\n    data() {\n        return {\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            TVUtils: TVUtils,\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Program.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Program.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Program.vue?vue&type=template&id=0b22c227&scoped=true&\"\nimport script from \"./Program.vue?vue&type=script&lang=ts&\"\nexport * from \"./Program.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Program.vue?vue&type=style&index=0&id=0b22c227&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0b22c227\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"twitter-container\"},[_c('v-dialog',{attrs:{\"content-class\":\"zoom-capture-modal-container\",\"max-width\":\"980\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.zoom_capture_modal),callback:function ($$v) {_vm.zoom_capture_modal=$$v},expression:\"zoom_capture_modal\"}},[_c('div',{staticClass:\"zoom-capture-modal\"},[_c('img',{staticClass:\"zoom-capture-modal__image\",attrs:{\"src\":_vm.zoom_capture ? _vm.zoom_capture.image_url: ''}}),_c('a',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"zoom-capture-modal__download\",attrs:{\"href\":_vm.zoom_capture ? _vm.zoom_capture.image_url : '',\"download\":_vm.zoom_capture ? _vm.zoom_capture.filename : ''}},[_c('Icon',{attrs:{\"icon\":\"fa6-solid:download\",\"width\":\"45px\"}})],1)])]),_c('div',{staticClass:\"tab-container\"},[_c('div',{staticClass:\"tab-content\",class:{'tab-content--active': _vm.twitter_active_tab === 'Capture'}},[_c('div',{staticClass:\"captures\"},_vm._l((_vm.captures),function(capture){return _c('div',{key:capture.image_url,staticClass:\"capture\",class:{\n                        'capture--selected': capture.selected,\n                        'capture--focused': capture.focused,\n                        'capture--disabled': !capture.selected && _vm.tweet_captures.length >= 4,\n                    },on:{\"click\":function($event){return _vm.clickCapture(capture)}}},[_c('img',{staticClass:\"capture__image\",attrs:{\"src\":capture.image_url}}),_c('div',{staticClass:\"capture__disabled-cover\"}),_c('div',{staticClass:\"capture__selected-number\"},[_vm._v(_vm._s(_vm.tweet_captures.findIndex(blob => blob === capture.blob) + 1))]),_c('Icon',{staticClass:\"capture__selected-checkmark\",attrs:{\"icon\":\"fluent:checkmark-circle-16-filled\"}}),_c('div',{staticClass:\"capture__selected-border\"}),_c('div',{staticClass:\"capture__focused-border\"}),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"capture__zoom\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.zoom_capture_modal = true; _vm.zoom_capture = capture},\"mousedown\":function($event){$event.preventDefault();$event.stopPropagation();/* 親要素の波紋が広がらないように */}}},[_c('Icon',{attrs:{\"icon\":\"fluent:zoom-in-16-regular\",\"width\":\"32px\"}})],1)],1)}),0),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.captures.length === 0),expression:\"captures.length === 0\"}],staticClass:\"capture-announce\"},[_c('div',{staticClass:\"capture-announce__heading\"},[_vm._v(\"まだキャプチャがありません。\")]),_vm._m(0)])])]),_c('div',{staticClass:\"tab-button-container\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Search'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Search'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:search-16-filled\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"ツイート検索\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Timeline'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Timeline'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:home-16-regular\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"タイムライン\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Capture'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Capture'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:image-copy-20-regular\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"キャプチャ\")])],1)]),_c('div',{staticClass:\"tweet-form\",class:{'tweet-form--focused': _vm.is_tweet_hashtag_form_focused || _vm.is_tweet_text_form_focused}},[_c('div',{staticClass:\"tweet-form__hashtag\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.tweet_hashtag),expression:\"tweet_hashtag\"}],staticClass:\"tweet-form__hashtag-form\",attrs:{\"type\":\"search\",\"placeholder\":\"#ハッシュタグ\"},domProps:{\"value\":(_vm.tweet_hashtag)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.tweet_hashtag=$event.target.value},function($event){return _vm.updateTweetLetterCount()}],\"focus\":function($event){_vm.is_tweet_hashtag_form_focused = true},\"blur\":function($event){_vm.is_tweet_hashtag_form_focused = false}}}),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tweet-form__hashtag-list-button\",on:{\"click\":function($event){_vm.is_hashtag_list_display = !_vm.is_hashtag_list_display}}},[_c('Icon',{attrs:{\"icon\":\"fluent:clipboard-text-ltr-32-regular\",\"height\":\"22px\"}})],1)]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.tweet_text),expression:\"tweet_text\"}],staticClass:\"tweet-form__textarea\",attrs:{\"placeholder\":\"ツイート\"},domProps:{\"value\":(_vm.tweet_text)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.tweet_text=$event.target.value},function($event){return _vm.updateTweetLetterCount()}],\"focus\":function($event){_vm.is_tweet_text_form_focused = true},\"blur\":function($event){_vm.is_tweet_text_form_focused = false}}}),_c('div',{staticClass:\"tweet-form__control\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"account-button\",class:{'account-button--no-login': !this.is_logged_in_twitter},on:{\"click\":function($event){return _vm.clickAccountButton()}}},[_c('img',{staticClass:\"account-button__icon\",attrs:{\"src\":this.is_logged_in_twitter ? this.selected_twitter_account.icon_url : '/assets/images/account-icon-default.png'}}),_c('span',{staticClass:\"account-button__screen-name\"},[_vm._v(\" \"+_vm._s(this.is_logged_in_twitter ? `@${this.selected_twitter_account.screen_name}` : '連携されていません')+\" \")]),_c('Icon',{staticClass:\"account-button__menu\",attrs:{\"icon\":\"fluent:more-circle-20-regular\",\"width\":\"22px\"}})],1),_c('div',{staticClass:\"limit-meter\"},[_c('div',{staticClass:\"limit-meter__content\",class:{\n                    'limit-meter__content--yellow': this.tweet_letter_count <= 20,\n                    'limit-meter__content--red': this.tweet_letter_count <= 0,\n                }},[_c('Icon',{staticStyle:{\"margin-right\":\"-2px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"12px\"}}),_c('span',[_vm._v(_vm._s(_vm.tweet_letter_count))])],1),_c('div',{staticClass:\"limit-meter__content\"},[_c('Icon',{attrs:{\"icon\":\"fluent:image-16-filled\",\"width\":\"14px\"}}),_c('span',[_vm._v(_vm._s(_vm.tweet_captures.length)+\"/4\")])],1)]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tweet-button\",attrs:{\"disabled\":!this.is_logged_in_twitter || this.tweet_letter_count < 0 ||\n                    (this.tweet_letter_count === 140 && this.tweet_captures.length === 0)},on:{\"click\":function($event){return _vm.sendTweet()}}},[_c('Icon',{attrs:{\"icon\":\"fa-brands:twitter\",\"height\":\"16px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ツイート\")])],1)])]),_c('div',{staticClass:\"twitter-account-list\",class:{'twitter-account-list--display': _vm.is_twitter_account_list_display}},_vm._l((_vm.user.twitter_accounts),function(twitter_account){return _c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:twitter_account.id,staticClass:\"twitter-account\",on:{\"click\":function($event){return _vm.updateSelectedTwitterAccount(twitter_account)}}},[_c('img',{staticClass:\"twitter-account__icon\",attrs:{\"src\":twitter_account.icon_url}}),_c('div',{staticClass:\"twitter-account__info\"},[_c('div',{staticClass:\"twitter-account__name\"},[_vm._v(_vm._s(twitter_account.name))]),_c('div',{staticClass:\"twitter-account__screen-name\"},[_vm._v(\"@\"+_vm._s(twitter_account.screen_name))])]),_c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(twitter_account.id === _vm.selected_twitter_account_id),expression:\"twitter_account.id === selected_twitter_account_id\"}],staticClass:\"twitter-account__check\",attrs:{\"icon\":\"fluent:checkmark-16-filled\",\"width\":\"24px\"}})],1)}),0),_c('div',{staticClass:\"hashtag-list\",class:{'hashtag-list--display': _vm.is_hashtag_list_display}},[_c('div',{staticClass:\"hashtag-heading\"},[_c('div',{staticClass:\"hashtag-heading__text\"},[_c('Icon',{attrs:{\"icon\":\"charm:hash\",\"width\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ハッシュタグリスト\")])],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag-heading__add-button\",on:{\"click\":function($event){_vm.saved_twitter_hashtags.push({id: Date.now(), text: '#ここにハッシュタグを入力', editing: false})}}},[_c('Icon',{attrs:{\"icon\":\"fluent:add-12-filled\",\"width\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"追加\")])],1)]),_c('div',{staticClass:\"hashtag-container\"},_vm._l((_vm.saved_twitter_hashtags),function(hashtag){return _c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\",value:(!hashtag.editing),expression:\"!hashtag.editing\"}],key:hashtag.id,staticClass:\"hashtag\",class:{'hashtag--editing': hashtag.editing},on:{\"click\":function($event){_vm.tweet_hashtag = hashtag.text; _vm.updateTweetLetterCount(); _vm.window.setTimeout(() => _vm.is_hashtag_list_display = false, 150)}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(hashtag.text),expression:\"hashtag.text\"}],staticClass:\"hashtag__input\",attrs:{\"type\":\"search\",\"disabled\":!hashtag.editing},domProps:{\"value\":(hashtag.text)},on:{\"click\":function($event){$event.stopPropagation();},\"input\":function($event){if($event.target.composing)return;_vm.$set(hashtag, \"text\", $event.target.value)}}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag__edit-button\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();hashtag.editing = !hashtag.editing}}},[_c('Icon',{attrs:{\"icon\":hashtag.editing ? 'fluent:checkmark-16-filled': 'fluent:edit-16-filled',\"width\":\"19px\"}})],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag__delete-button\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.saved_twitter_hashtags.splice(_vm.saved_twitter_hashtags.indexOf(hashtag), 1)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:delete-16-filled\",\"width\":\"19px\"}})],1)])}),0)])],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"capture-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(\"プレイヤーのキャプチャボタンやショートカットキーでキャプチャを撮ると、ここに表示されます。\")]),_c('p',{staticClass:\"mt-2 mb-0\"},[_vm._v(\"表示されたキャプチャを選択してからツイートすると、キャプチャを付けてツイートできます。\")])])\n}]\n\nexport { render, staticRenderFns }","\n\nimport axios from 'axios';\nimport Vue, { PropType } from 'vue';\n\nimport { IChannel, ITwitterAccount, IUser } from '@/interface';\nimport Utils from '@/utils';\n\n// このコンポーネント内でのキャプチャのインターフェイス\ninterface ITweetCapture {\n    blob: Blob;\n    filename: string;\n    image_url: string;\n    selected: boolean;\n    focused: boolean;\n}\n\n// このコンポーネント内でのハッシュタグのインターフェイス\ninterface IHashtag {\n    id: number;\n    text: string;\n    editing: boolean;\n}\n\nexport default Vue.extend({\n    name: 'Panel-TwitterTab',\n    props: {\n        // チャンネル情報\n        channel: {\n            type: Object as PropType<IChannel>,\n            required: true,\n        },\n        // プレイヤーのインスタンス\n        player: {\n            type: null as PropType<any>,  // 代入当初は null になるため苦肉の策\n            required: true,\n        }\n    },\n    data() {\n        return {\n\n            // window.setTimeout() にアクセスできるように\n            window: window,\n\n            // ログイン中かどうか\n            is_logged_in: Utils.getAccessToken() !== null,\n\n            // Twitter アカウントを1つでも連携しているかどうか\n            is_logged_in_twitter: false,\n\n            // ユーザーアカウントの情報\n            // ログインしていない場合は null になる\n            user: null as IUser | null,\n\n            // 現在ツイート対象として選択されている Twitter アカウント\n            selected_twitter_account: null as ITwitterAccount | null,\n\n            // 現在ツイート対象として選択されている Twitter アカウントの ID\n            selected_twitter_account_id: Utils.getSettingsItem('selected_twitter_account_id') as number | null,\n\n            // 連携している Twitter アカウントリストを表示しているか\n            is_twitter_account_list_display: false,\n\n            // 保存している Twitter のハッシュタグが入るリスト\n            saved_twitter_hashtags: (Utils.getSettingsItem('saved_twitter_hashtags') as string[]).map((hashtag, index) => {\n                // id プロパティは :key=\"\" に指定するためにつける ID (ミリ秒単位のタイムスタンプ + index で適当に一意になるように)\n                return {id: Date.now() + index, text: hashtag, editing: false} as IHashtag;\n            }),\n\n            // ハッシュタグリストを表示しているか\n            is_hashtag_list_display: false,\n\n            // 既定で表示される Twitter タブ内のタブ\n            twitter_active_tab: Utils.getSettingsItem('twitter_active_tab') as ('Search' | 'Timeline' | 'Capture'),\n\n            // キャプチャを拡大表示するモーダルの表示状態\n            zoom_capture_modal: false,\n\n            // 現在モーダルで拡大表示中のキャプチャのオブジェクト\n            zoom_capture: null as ITweetCapture | null,\n\n            // キャプチャリスト\n            captures: [] as ITweetCapture[],\n\n            // キャプチャリストの要素\n            captures_element: null as HTMLDivElement | null,\n\n            // ツイートハッシュタグフォームにフォーカスしているか\n            is_tweet_hashtag_form_focused: false,\n\n            // ツイート本文フォームにフォーカスしているか\n            is_tweet_text_form_focused: false,\n\n            // ツイートのハッシュタグ\n            tweet_hashtag: '',\n\n            // ツイート本文\n            tweet_text: '',\n\n            // ツイートに添付するキャプチャの Blob のリスト\n            tweet_captures: [] as Blob[],\n\n            // 文字数カウント\n            tweet_letter_count: 140,\n        }\n    },\n    async created() {\n\n        // ユーザーモデルの初期値\n        this.user = {\n            id: 0,\n            name: '',\n            is_admin: true,\n            niconico_user_id: null,\n            niconico_user_name: null,\n            niconico_user_premium: null,\n            twitter_accounts: [],\n            created_at: '',\n            updated_at: '',\n        }\n\n        // 表示されているアカウント情報を更新 (ログイン時のみ)\n        if (this.is_logged_in === true) {\n            await this.syncAccountInfo();\n\n            // 連携している Twitter アカウントがあれば true に設定\n            if (this.user.twitter_accounts.length > 0) {\n                this.is_logged_in_twitter = true;\n\n                // 現在ツイート対象として選択されている Twitter アカウントの ID が設定されていない or ID に紐づく Twitter アカウントがない\n                // 連携している Twitter アカウントのうち、一番最初のものを自動選択する\n                // ここで言う Twitter アカウントの ID は DB 上で連番で振られるもので、Twitter アカウントそのものの固有 ID ではない\n                if (this.selected_twitter_account_id === null ||\n                    !this.user.twitter_accounts.some((twitter_account) => twitter_account.id === this.selected_twitter_account_id)) {\n                    this.selected_twitter_account_id = this.user.twitter_accounts[0].id;\n                    Utils.setSettingsItem('selected_twitter_account_id', this.selected_twitter_account_id);\n                }\n\n                // 現在ツイート対象として選択されている Twitter アカウントを取得・設定\n                const twitter_account_index = this.user.twitter_accounts.findIndex((twitter_account) => {\n                    return twitter_account.id === this.selected_twitter_account_id;  // Twitter アカウントの ID が選択されているものと一致する\n                });\n                this.selected_twitter_account = this.user.twitter_accounts[twitter_account_index];\n            }\n        }\n    },\n    beforeDestroy() {\n        // 終了前にすべてのキャプチャの Blob URL を revoke してリソースを解放する\n        for (const capture of this.captures) {\n            URL.revokeObjectURL(capture.image_url);\n        }\n    },\n    watch: {\n        // 保存しているハッシュタグが変更されたら随時 LocalStorage に保存する\n        saved_twitter_hashtags: {\n            deep: true,\n            handler() {\n                Utils.setSettingsItem('saved_twitter_hashtags', this.saved_twitter_hashtags.map(hashtag => hashtag.text));\n            }\n        }\n    },\n    methods: {\n\n        // ユーザーアカウントの情報を取得する\n        async syncAccountInfo() {\n            try {\n                this.user = (await Vue.axios.get('/users/me')).data;\n            } catch (error) {\n                // ログインされていないので未ログイン状態に設定\n                if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n                    this.is_logged_in = false;\n                    this.user = null;\n                }\n            }\n        },\n\n        // 文字数カウントを変更するイベント\n        updateTweetLetterCount() {\n\n            // サロゲートペアを考慮し、スプレッド演算子で一度配列化してから数えている\n            // ref: https://qiita.com/suin/items/3da4fb016728c024eaca\n            this.tweet_letter_count = 140 - [...this.tweet_hashtag].length - [...this.tweet_text].length;\n        },\n\n        // アカウントボタンが押されたときのイベント\n        clickAccountButton() {\n            // Twitter アカウントが連携されていない場合は Twitter 設定画面に飛ばす\n            if (!this.is_logged_in_twitter) {\n                // 視聴ページ以外に遷移するため、フルスクリーンを解除しないと画面が崩れる\n                if (document.fullscreenElement) {\n                    document.exitFullscreen();\n                }\n                this.$router.push({path: '/settings/twitter'});\n                return;\n            }\n            this.is_twitter_account_list_display = !this.is_twitter_account_list_display;\n        },\n\n        // 選択されている Twitter アカウントを更新する\n        updateSelectedTwitterAccount(twitter_account: ITwitterAccount) {\n            this.selected_twitter_account_id = twitter_account.id;\n            Utils.setSettingsItem('selected_twitter_account_id', this.selected_twitter_account_id);\n            this.selected_twitter_account = twitter_account;\n\n            // Twitter アカウントリストのオーバーレイを閉じる (少し待ってから閉じたほうが体感が良い)\n            window.setTimeout(() => this.is_twitter_account_list_display = false, 150);\n        },\n\n        // キャプチャリスト内のキャプチャがクリックされたときのイベント\n        clickCapture(capture: ITweetCapture) {\n\n            // 選択されたキャプチャが3枚まで & まだ選択されていないならキャプチャをツイート対象に追加する\n            if (this.tweet_captures.length < 4 && capture.selected === false) {\n                capture.selected = true;\n                this.tweet_captures.push(capture.blob);\n            } else {\n                // ツイート対象のキャプチャになっていたら取り除く\n                const index = this.tweet_captures.findIndex(blob => blob === capture.blob);\n                if (index > -1) {\n                    this.tweet_captures.splice(index, 1);\n                }\n                // キャプチャの選択を解除\n                capture.selected = false;\n            }\n        },\n\n        // 撮ったキャプチャを親コンポーネントから受け取り、キャプチャリストに追加する\n        async addCaptureList(blob: Blob, filename: string) {\n\n            if (this.captures_element === null) {\n                this.captures_element = this.$el.querySelector('.tab-content');\n            }\n\n            // 撮ったキャプチャが50件を超えていたら、重くなるので古いものから削除する\n            // 削除する前に Blob URL を revoke してリソースを解放するのがポイント\n            if (this.captures.length > 50) {\n                URL.revokeObjectURL(this.captures[0].image_url);\n                this.captures.shift();\n            }\n\n            // キャプチャリストにキャプチャを追加[\n            const u = URL.createObjectURL(blob);\n            this.captures.push({\n                blob: blob,\n                filename: filename,\n                image_url: u,\n                selected: false,\n                focused: false,\n            });\n\n            // キャプチャリストを下にスクロール\n            // this.$nextTick() のコールバックで DOM の更新を待つ\n            this.$nextTick(() => {\n                this.captures_element.scrollTo({\n                    top: this.captures_element.scrollHeight,\n                    behavior: 'smooth',\n                });\n            });\n        },\n\n        // 撮ったキャプチャに番組タイトルの透かしを描画する\n        async drawProgramTitleOnCapture(capture: Blob): Promise<Blob> {\n\n            // キャプチャの Blob を createImageBitmap() で Canvas に描ける ImageBitmap に変換\n            const image_bitmap = await createImageBitmap(capture);\n\n            // OffscreenCanvas が使えるなら使う (OffscreenCanvas の方がパフォーマンスが良い)\n            const canvas = ('OffscreenCanvas' in window) ?\n                new OffscreenCanvas(image_bitmap.width, image_bitmap.height) :\n                document.createElement('canvas');\n\n            // Canvas にキャプチャを描画\n            const context = canvas.getContext('2d');\n            context.drawImage(image_bitmap, 0, 0);\n            image_bitmap.close();\n\n            // 描画設定\n            context.font = `bold 22px 'YakuHanJPs', 'Open Sans', 'Hiragino Sans', 'Noto Sans JP', sans-serif`; // フォント\n            context.fillStyle = 'rgba(255, 255, 255, 70%)';  // 半透明の白\n            context.shadowColor = 'rgba(0, 0, 0, 100%)'  // 影の色\n            context.shadowBlur = 4;  // 影をぼかすしきい値\n            context.shadowOffsetX = 0;  // 影のX座標\n            context.shadowOffsetY = 0;  // 影のY座標\n\n            // 番組タイトルの透かしを描画\n            switch (Utils.getSettingsItem('tweet_capture_watermark_position')) {\n                case 'TopLeft': {\n                    context.textAlign = 'left'; // 左寄せ\n                    context.textBaseline = 'top'; // ベースラインを上寄せ\n                    context.fillText(this.channel.program_present.title, 16, 12);\n                    break;\n                }\n                case 'TopRight': {\n                    context.textAlign = 'right'; // 右寄せ\n                    context.textBaseline = 'top'; // ベースラインを上寄せ\n                    context.fillText(this.channel.program_present.title, canvas.width - 16, 12);\n                    break;\n                }\n                case 'BottomLeft': {\n                    context.textAlign = 'left'; // 左寄せ\n                    context.textBaseline = 'bottom'; // ベースラインを下寄せ\n                    context.fillText(this.channel.program_present.title, 16, canvas.height - 12);\n                    break;\n                }\n                case 'BottomRight': {\n                    context.textAlign = 'right'; // 右寄せ\n                    context.textBaseline = 'bottom'; // ベースラインを下寄せ\n                    context.fillText(this.channel.program_present.title, canvas.width - 16, canvas.height - 12);\n                    break;\n                }\n            }\n\n            // Blob にして返す\n            if ('OffscreenCanvas' in window) {\n                return await (canvas as OffscreenCanvas).convertToBlob({type: 'image/jpeg', quality: 1});\n            } else {\n                return new Promise(resolve => (canvas as HTMLCanvasElement).toBlob(blob => resolve(blob), 'image/jpeg', 1));\n            }\n        },\n\n        // ツイートを送信する\n        async sendTweet() {\n\n            // ハッシュタグを整形（余計なスペースなどを削り、全角ハッシュを半角ハッシュへ、全角スペースを半角スペースに置換）\n            const tweet_hashtag_array = this.tweet_hashtag.trim()\n                .replaceAll('♯', '#').replaceAll('＃', '#').replaceAll('　', '').replaceAll(/ +/g,' ').split(' ');\n            for (let index in tweet_hashtag_array) {\n                // ハッシュタグがついてない場合にハッシュタグを付与\n                if (!tweet_hashtag_array[index].startsWith('#')) tweet_hashtag_array[index] = `#${tweet_hashtag_array[index]}`;\n            }\n            const tweet_hashtag = this.tweet_hashtag !== '' ? tweet_hashtag_array.join(' ') : '';\n\n            // 実際に送るツイート本文を作成\n            let tweet_text = this.tweet_text;\n            if (tweet_hashtag !== '') {  // ハッシュタグが入力されているときのみ\n                switch (Utils.getSettingsItem('tweet_hashtag_position')) {\n                    // ツイート本文の前に追加する\n                    case 'Prepend': {\n                        tweet_text = `${tweet_hashtag} ${this.tweet_text}`;\n                        break;\n                    }\n                    // ツイート本文の後に追加する\n                    case 'Append': {\n                        tweet_text = `${this.tweet_text} ${tweet_hashtag}`;\n                        break;\n                    }\n                    // ツイート本文の前に追加してから改行する\n                    case 'PrependWithLineBreak': {\n                        tweet_text = `${tweet_hashtag}\\n${this.tweet_text}`;\n                        break;\n                    }\n                    // ツイート本文の後に改行してから追加する\n                    case 'AppendWithLineBreak': {\n                        tweet_text = `${this.tweet_text}\\n${tweet_hashtag}`;\n                        break;\n                    }\n                }\n            }\n\n            // multipart/form-data でツイート本文と画像（選択されている場合）を送る\n            const form_data = new FormData();\n            form_data.append('tweet', tweet_text);\n            for (let tweet_capture of this.tweet_captures) {\n                // キャプチャへの透かしの描画がオンの場合、キャプチャの Blob を透かし付きのものに差し替える\n                if (Utils.getSettingsItem('tweet_capture_watermark_position') !== 'None') {\n                    tweet_capture = await this.drawProgramTitleOnCapture(tweet_capture);\n                }\n                form_data.append('images', tweet_capture);\n            }\n\n            // 連投防止のため、フォーム上のツイート本文・キャプチャの選択・キャプチャのフォーカスを消去\n            // 送信した感を出す意味合いもある\n            for (const capture of this.captures) {\n                capture.selected = false;\n                capture.focused = false;\n            }\n            this.tweet_captures = [];\n            this.tweet_text = '';\n\n            try {\n\n                // ツイート送信 API にリクエスト\n                const result = await Vue.axios.post(`/twitter/accounts/${this.selected_twitter_account.screen_name}/tweets`, form_data, {\n                    headers: {'Content-Type': 'multipart/form-data'},\n                });\n\n                // 成功 or 失敗に関わらず detail の内容をそのまま通知する\n                this.player.notice(result.data.detail);\n\n            } catch (error) {\n                console.error(error);\n                this.player.notice('ツイートの送信に失敗しました。');\n            }\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Twitter.vue?vue&type=template&id=2ca1223a&scoped=true&\"\nimport script from \"./Twitter.vue?vue&type=script&lang=ts&\"\nexport * from \"./Twitter.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Twitter.vue?vue&type=style&index=0&id=2ca1223a&prod&lang=scss&\"\nimport style1 from \"./Twitter.vue?vue&type=style&index=1&id=2ca1223a&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2ca1223a\",\n  null\n  \n)\n\nexport default component.exports","\n\nimport { AxiosResponse } from 'axios';\nimport dayjs from 'dayjs';\n// @ts-ignore  JavaScript で書かれているので型定義がなく、作ろうとするとややこしくなるので黙殺\nimport DPlayer from 'dplayer';\nimport mpegts from 'mpegts.js';\nimport Vue from 'vue';\n\nimport { IChannel, IChannelDefault } from '@/interface';\nimport Channel from '@/components/Panel/Channel.vue';\nimport Comment from '@/components/Panel/Comment.vue';\nimport Program from '@/components/Panel/Program.vue';\nimport Twitter from '@/components/Panel/Twitter.vue';\nimport Utils, { TVUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'TV-Watch',\n    components: {\n        Channel,\n        Comment,\n        Program,\n        Twitter,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            TVUtils: TVUtils,\n\n            // 現在時刻\n            time: dayjs().format('YYYY/MM/DD HH:mm:ss'),\n\n            // 表示されるパネルのタブ\n            tv_panel_active_tab: Utils.getSettingsItem('tv_panel_active_tab'),\n\n            // 背景の URL\n            background_url: '',\n\n            // プレイヤーのローディング状態\n            // 既定でローディングとする\n            is_loading: true,\n\n            // プレイヤーの背景を表示するか\n            // 既定で表示しない\n            is_background_display: false,\n\n            // コントロールを表示するか\n            // 既定で表示する\n            is_control_display: true,\n\n            // パネルを表示するか\n            // panel_display_state が 'AlwaysDisplay' なら常に表示し、'AlwaysFold' なら常に折りたたむ\n            // 'RestorePreviousState' なら showed_panel_last_time の値を使い､前回の状態を復元する\n            is_panel_display: (() => {\n                switch (Utils.getSettingsItem('panel_display_state')) {\n                    case 'AlwaysDisplay':\n                        return true;\n                    case 'AlwaysFold':\n                        return false;\n                    case 'RestorePreviousState':\n                        return Utils.getSettingsItem('showed_panel_last_time');\n                }\n            })() as boolean,\n\n            // フルスクリーン状態かどうか\n            is_fullscreen: false,\n\n            // IME 変換中かどうか\n            is_ime_composing: false,\n\n            // プレイヤーからのコメント送信から間もないかどうか\n            is_comment_send_just_did: false,\n\n            // インターバル ID\n            // ページ遷移時に setInterval(), setTimeout() の実行を止めるのに使う\n            // setInterval(), setTimeout() の返り値を登録する\n            interval_ids: [] as number[],\n\n            // コントロール表示切り替え用のインターバル ID\n            // 混ぜるとダメなので独立させる\n            control_interval_id: 0,\n\n            // ***** チャンネル *****\n\n            // チャンネル ID\n            channel_id: this.$route.params.channel_id,\n\n            // チャンネル情報\n            // IChannelDefault に情報取得が完了するまでの間表示される初期値が定義されている\n            channel: IChannelDefault,\n\n            // 前のチャンネルのチャンネル情報\n            channel_previous: IChannelDefault,\n\n            // 次のチャンネルのチャンネル情報\n            channel_next: IChannelDefault,\n\n            // チャンネル情報リスト\n            channels_list: new Map() as Map<string, IChannel[]>,\n\n            // ***** プレイヤー *****\n\n            // プレイヤー (DPlayer) のインスタンス\n            player: null,\n\n            // RomSound の AudioContext\n            romsounds_context: null as AudioContext | null,\n\n            // RomSound の AudioBuffer（音声データ）が入るリスト\n            romsounds_buffers: [] as AudioBuffer[] | null,\n\n            // イベントソースのインスタンス\n            eventsource: null as EventSource | null,\n\n            // フルスクリーン状態が切り替わったときのハンドラー\n            fullscreen_handler: null as () => void | null,\n\n            // ***** キャプチャ *****\n\n            // キャプチャボタンの要素\n            capture_button: null as HTMLDivElement | null,\n\n            // コメント付きキャプチャボタンの要素\n            comment_capture_button: null as HTMLDivElement | null,\n\n            // キャプチャ用の Canvas\n            canvas: null as HTMLCanvasElement | null,\n\n            // キャプチャ用の Canvas のコンテキスト\n            canvas_context: null as CanvasRenderingContext2D | null,\n\n            // ***** キーボードショートカット *****\n\n            // ショートカットキーのハンドラー\n            shortcut_key_handler: null as (event: KeyboardEvent) => void | null,\n\n            // ショートカットキーの最終押下時刻のタイムスタンプ\n            shortcut_key_pressed_at: Date.now(),\n\n            // キーボードショートカットの一覧のモーダルを表示するか\n            shortcut_key_modal: false,\n\n            // キーボードショートカットの一覧に表示するショートカットキーのリスト\n            shortcut_key_list: {\n                left_column: [\n                    {\n                        name: '全般',\n                        icon: 'fluent:home-20-filled',\n                        icon_height: '22px',\n                        shortcuts: [\n                            { name: '数字キー・テンキーに対応するリモコン番号 (1~12) のチャンネルに切り替える<br style=\"display:block;content:\\'\\';margin:5px 0;\">（同時に Shift キーを押すと、地デジならBS、BSなら地デジのチャンネルを選局する）', keys: [{name: '1~9, 0, -(=), ^(~)', icon: false}] },\n                            { name: '前のチャンネルに切り替える', keys: [{name: 'fluent:arrow-up-12-filled', icon: true}] },\n                            { name: '次のチャンネルに切り替える', keys: [{name: 'fluent:arrow-down-12-filled', icon: true}] },\n                            { name: 'キーボードショートカットの一覧を表示する', keys: [{name: '／(？)', icon: false}] },\n                        ]\n                    },\n                    {\n                        name: 'プレイヤー',\n                        icon: 'fluent:play-20-filled',\n                        icon_height: '20px',\n                        shortcuts: [\n                            { name: '再生 / 一時停止の切り替え', keys: [{name: 'Space', icon: false}] },\n                            { name: '再生 / 一時停止の切り替え (キャプチャタブ表示時)', keys: [{name: 'Shift', icon: false}, {name: 'Space', icon: false}] },\n                            { name: 'プレイヤーの音量を上げる', keys: [{name: 'Shift', icon: false}, {name: 'fluent:arrow-up-12-filled', icon: true}] },\n                            { name: 'プレイヤーの音量を下げる', keys: [{name: 'Shift', icon: false}, {name: 'fluent:arrow-down-12-filled', icon: true}] },\n                            { name: '停止して0.5秒早戻し', keys: [{name: 'Shift', icon: false}, {name: 'fluent:arrow-left-12-filled', icon: true}] },\n                            { name: '停止して0.5秒早送り', keys: [{name: 'Shift', icon: false}, {name: 'fluent:arrow-right-12-filled', icon: true}] },\n                            { name: 'フルスクリーンの切り替え', keys: [{name: 'F', icon: false}] },\n                            { name: 'ライブストリームの同期', keys: [{name: 'W', icon: false}] },\n                            { name: 'Picture-in-Picture の表示切り替え', keys: [{name: 'E', icon: false}] },\n                            { name: '字幕の表示切り替え', keys: [{name: 'S', icon: false}] },\n                            { name: 'コメントの表示切り替え', keys: [{name: 'D', icon: false}] },\n                            { name: '映像をキャプチャする', keys: [{name: 'C', icon: false}] },\n                            { name: '映像をコメントを付けてキャプチャする', keys: [{name: 'V', icon: false}] },\n                            { name: 'コメント入力フォームにフォーカスする', keys: [{name: 'M', icon: false}] },\n                            { name: 'コメント入力フォームを閉じる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'M', icon: false}] },\n                        ]\n                    },\n                ],\n                right_column: [\n                    {\n                        name: 'パネル',\n                        icon: 'fluent:panel-right-20-filled',\n                        icon_height: '24px',\n                        shortcuts: [\n                            { name: 'パネルの表示切り替え', keys: [{name: 'P', icon: false}] },\n                            { name: '番組情報タブを表示する', keys: [{name: 'K', icon: false}] },\n                            { name: 'チャンネルタブを表示する', keys: [{name: 'L', icon: false}] },\n                            { name: 'コメントタブを表示する', keys: [{name: '；(＋)', icon: false}] },\n                            { name: 'Twitter タブを表示する', keys: [{name: '：(＊)', icon: false}] },\n                        ]\n                    },\n                    {\n                        name: 'Twitter',\n                        icon: 'fa-brands:twitter',\n                        icon_height: '22px',\n                        shortcuts: [\n                            { name: 'ツイート検索タブを表示する', keys: [{name: '［ (「)', icon: false}] },\n                            { name: 'タイムラインタブを表示する', keys: [{name: '］ (」)', icon: false}] },\n                            { name: 'キャプチャタブを表示する', keys: [{name: '＼(￥)', icon: false}] },\n                            { name: 'ツイート入力フォームにフォーカスを当てる/フォーカスを外す', keys: [{name: 'Tab', icon: false}] },\n                            { name: 'キャプチャにフォーカスする', keys: [{name: 'キャプチャタブを表示', icon: false}, {name: 'fluent:arrow-up-12-filled;fluent:arrow-down-12-filled;fluent:arrow-left-12-filled;fluent:arrow-right-12-filled', icon: true}] },\n                            { name: 'キャプチャを拡大表示する/<br>キャプチャの拡大表示を閉じる', keys: [{name: 'キャプチャにフォーカス', icon: false}, {name: 'Enter', icon: false}] },\n                            { name: 'キャプチャを選択する/<br>キャプチャの選択を解除する', keys: [{name: 'キャプチャにフォーカス', icon: false}, {name: 'Space', icon: false}] },\n                            { name: 'ツイートを送信する', keys: [{name: 'Twitter タブを表示', icon: false}, {name: Utils.CtrlOrCmd(), icon: false}, {name: 'Enter', icon: false}] },\n                        ]\n                    },\n                ]\n            }\n        }\n    },\n    // 開始時に実行\n    async created() {\n\n        // 再生セッションを初期化\n        this.init();\n\n        // RomSound を鳴らすための AudioContext を生成\n        this.romsounds_context = new AudioContext();\n\n        // 01 ~ 14 まですべての RomSound を読み込む\n        for (let index = 1; index <= 14; index++) {\n\n            // ArrayBuffer として RomSound を取得\n            const url = `/assets/romsounds/${index.toString().padStart(2, '0')}.wav`;\n            const audio_data = await Vue.axios.get(url, {\n                baseURL: '',  // BaseURL を明示的にクライアントのルートに設定\n                responseType: 'arraybuffer',\n            });\n\n            // ArrayBuffer をデコードして AudioBuffer にし、すぐ呼び出せるように貯めておく\n            // ref: https://ics.media/entry/200427/\n            this.romsounds_buffers.push(await this.romsounds_context.decodeAudioData(audio_data.data));\n        }\n    },\n    // 終了前に実行\n    beforeDestroy() {\n\n        // destroy() を実行\n        // 別のページへ遷移するため、DPlayer のインスタンスを確実に破棄する\n        // さもなければ、ブラウザがリロードされるまでバックグラウンドで永遠に再生され続けてしまう\n        this.destroy(true);\n\n        // AudioContext のリソースを解放\n        this.romsounds_context.close();\n    },\n    // チャンネル切り替え時に実行\n    // コンポーネント（インスタンス）は再利用される\n    // ref: https://router.vuejs.org/ja/guide/advanced/navigation-guards.html#%E3%83%AB%E3%83%BC%E3%83%88%E5%8D%98%E4%BD%8D%E3%82%AB%E3%82%99%E3%83%BC%E3%83%88%E3%82%99\n    beforeRouteUpdate(to, from, next) {\n\n        // 前の再生セッションを破棄して終了する\n        this.destroy();\n\n        // チャンネル ID を次のチャンネルのものに切り替える\n        this.channel_id = to.params.channel_id;\n\n        // 既に取得済みのチャンネル情報で、前・現在・次のチャンネル情報を更新する\n        [this.channel_previous, this.channel, this.channel_next]\n            = TVUtils.getPreviousAndCurrentAndNextChannel(this.channels_list, this.channel_id);\n\n        // 0.5秒だけ待ってから、新しい再生セッションを初期化する\n        // 連続して押した時などに毎回再生処理を開始しないように猶予を設ける\n        this.interval_ids.push(window.setTimeout(() => this.init(), 500));\n\n        next();\n    },\n    watch: {\n        // 前回視聴画面を開いた際にパネルが表示されていたかどうかを保存\n        is_panel_display() {\n            Utils.setSettingsItem('showed_panel_last_time', this.is_panel_display);\n        }\n    },\n    methods: {\n\n        // 再生セッションを初期化する\n        init() {\n\n            // ローディング中の背景画像をランダムで設定\n            this.background_url = TVUtils.generatePlayerBackgroundURL();\n\n            // コントロール表示タイマーを実行\n            this.controlDisplayTimer();\n\n            // チャンネル情報を取得\n            this.update();\n\n            // 現在時刻を1秒おきに更新\n            this.interval_ids.push(window.setInterval(() => {\n                this.time = dayjs().format('YYYY/MM/DD HH:mm:ss');\n            }, 1 * 1000));\n\n            // 00秒までの残り秒数\n            // 現在 16:01:34 なら 26 (秒) になる\n            const residue_second = 60 - (Math.floor(new Date().getTime() / 1000) % 60);\n\n            // 00秒になるまで待ってから\n            // 番組は基本1分単位で組まれているため、20秒や45秒など中途半端な秒数で更新してしまうと反映が遅れてしまう\n            this.interval_ids.push(window.setTimeout(() => {\n\n                // チャンネル情報を更新\n                this.update();\n\n                // チャンネル情報を定期的に更新\n                this.interval_ids.push(window.setInterval(() => {\n                    this.update();\n                }, 30 * 1000));  // 30秒おき\n\n            }, residue_second * 1000));\n        },\n\n        // チャンネル情報一覧を取得し、画面を更新する\n        async update() {\n\n            // チャンネル ID が未定義なら実行しない（フェイルセーフ）\n            if (this.$route.params.channel_id === undefined) {\n                return;\n            }\n\n            // チャンネル情報 API にアクセス\n            let channel_response: AxiosResponse;\n            try {\n                channel_response = await Vue.axios.get(`/channels/${this.channel_id}`);\n            } catch (error) {\n\n                // エラー内容を表示\n                console.error(error);\n\n                // ステータスコードが 422（チャンネルが存在しない）なら 404 ページにリダイレクト\n                // 正確には 404 ページ自体がルートとして存在するわけじゃないけど、そもそも存在しないページなら 404 になるので\n                if (error.response && error.response.status === 422 && error.response.data.detail === 'Specified channel_id was not found') {\n                    await this.$router.push({path: '/not-found/'});\n                }\n\n                // 処理を中断\n                return;\n            }\n\n            // チャンネル情報を代入\n            this.channel = channel_response.data;\n\n            // プレイヤーがまだ初期化されていない or 他のチャンネルからの切り替えですでにプレイヤーが初期化されているけど破棄が可能\n            // update() 自体は初期化時以外にも1分ごとに定期実行されるため、その際に毎回プレイヤーを再初期化しないようにする\n            if (this.player === null || this.player.KonomiTVCanDestroy === true) {\n\n                // プレイヤー (DPlayer) 周りのセットアップ\n                this.initPlayer();\n\n                // サーバーから送られてくるメッセージのイベントハンドラーを初期化\n                this.initEventHandler();\n\n                // キャプチャのイベントハンドラーを初期化\n                this.initCaptureHandler();\n\n                // ショートカットキーのイベントハンドラーを初期化\n                // 事前に前のイベントハンドラーを削除しておかないと、重複してキー操作が実行されてしまう\n                // 直前で実行しないと上下キーでのチャンネル操作が動かなくなる\n                document.removeEventListener('keydown', this.shortcut_key_handler);\n                this.initShortcutKeyHandler();\n            }\n\n            // 副音声がない番組でプレイヤー上で副音声に切り替えられないように\n            // 音声多重放送でもデュアルモノでもない番組のみ\n            if ((this.channel.program_present === null) ||\n               ((this.channel.program_present.primary_audio_type !== '1/0+1/0モード(デュアルモノ)') &&\n                (this.channel.program_present.secondary_audio_type === null))) {\n\n                // クラスを付与\n                this.player.template.audioItem[1].classList.add('dplayer-setting-audio-item--disabled');\n\n                // 現在副音声が選択されている可能性を考慮し、明示的に主音声に切り替える\n                if (this.player.plugins.mpegts) {\n                    window.setTimeout(() => {  // プレイヤーの初期化が完了するまで少し待つ\n                        this.player.template.audioItem[0].classList.add('dplayer-setting-audio-current');\n                        this.player.template.audioItem[1].classList.remove('dplayer-setting-audio-current');\n                        this.player.template.audioValue.textContent = this.player.tran('Primary audio');\n                        try {\n                            this.player.plugins.mpegts.switchPrimaryAudio();\n                        } catch (error) {\n                            // pass\n                        }\n                    }, 300);\n                }\n\n            // 音声多重放送かデュアルモノなので、副音声への切り替えを有効化\n            } else {\n\n                // クラスを削除\n                this.player.template.audioItem[1].classList.remove('dplayer-setting-audio-item--disabled');\n            }\n\n            // チャンネル情報一覧 API にアクセス\n            // チャンネル情報 API と同時にアクセスするとむしろレスポンスが遅くなるので、返ってくるのを待ってから実行\n            let channels_response: AxiosResponse;\n            try {\n                channels_response = await Vue.axios.get('/channels');\n            } catch (error) {\n                console.error(error);   // エラー内容を表示\n                return;\n            }\n\n            // is_display が true または現在表示中のチャンネルのみに絞り込むフィルタ関数\n            // 放送していないサブチャンネルを表示から除外する\n            const filter = (channel: IChannel) => {\n                return channel.is_display || this.channel_id === channel.channel_id;\n            }\n\n            // チャンネルリストを再構築\n            // 1つでもチャンネルが存在するチャンネルタイプのみ表示するように\n            // たとえば SKY (スカパー！プレミアムサービス) のタブは SKY に属すチャンネルが1つもない（=受信できない）なら表示されない\n            this.channels_list = new Map();\n            this.channels_list.set('ピン留め', []);  // ピン留めタブの準備\n            if (channels_response.data.GR.length > 0) this.channels_list.set('地デジ', channels_response.data.GR.filter(filter));\n            if (channels_response.data.BS.length > 0) this.channels_list.set('BS', channels_response.data.BS.filter(filter));\n            if (channels_response.data.CS.length > 0) this.channels_list.set('CS', channels_response.data.CS.filter(filter));\n            if (channels_response.data.CATV.length > 0) this.channels_list.set('CATV', channels_response.data.CATV.filter(filter));\n            if (channels_response.data.SKY.length > 0) this.channels_list.set('SKY', channels_response.data.SKY.filter(filter));\n            if (channels_response.data.STARDIGIO.length > 0) this.channels_list.set('StarDigio', channels_response.data.STARDIGIO.filter(filter));\n\n            // ピン留めされているチャンネルの ID を取得\n            const pinned_channel_ids = Utils.getSettingsItem('pinned_channel_ids');\n\n            // ピン留めされているチャンネル情報のリスト\n            const pinned_channels = [] as IChannel[];\n\n            // チャンネル ID が一致したチャンネルの情報を保存する\n            for (const pinned_channel_id of pinned_channel_ids) {\n                const pinned_channel_type = TVUtils.getChannelType(pinned_channel_id, true);\n                const pinned_channel = this.channels_list.get(pinned_channel_type).find((channel) => {\n                    return channel.channel_id === pinned_channel_id;  // チャンネル ID がピン留めされているチャンネルのものと同じ\n                });\n                // チャンネル情報を取得できているときだけ\n                // サブチャンネルをピン留めしたが、マルチ編成が終了して現在は放送していない場合などに備える (BS142 など)\n                // 現在放送していないチャンネルは this.channels_list に入れた段階で弾いているため、チャンネル情報を取得できない\n                if (pinned_channel !== undefined) {\n                    pinned_channels.push(pinned_channel);\n                }\n            }\n\n            // pinned_channels に何か入っていたらピン留めタブを表示するし、そうでなければ表示しない\n            if (pinned_channels.length > 0) {\n                this.channels_list.set('ピン留め', pinned_channels);\n            } else {\n                this.channels_list.delete('ピン留め');\n            }\n\n            // 前と次のチャンネル ID を取得する\n            [this.channel_previous, , this.channel_next] = TVUtils.getPreviousAndCurrentAndNextChannel(this.channels_list, this.channel_id);\n\n            // MediaSession API を使い、メディア通知の表示をカスタマイズ\n            if ('mediaSession' in navigator) {\n\n                // アートワークとして表示するアイコン\n                const artwork = [\n                    {src: '/assets/images/icons/icon-maskable-192px.png', sizes: '192x192', type: 'image/png'},\n                    {src: '/assets/images/icons/icon-maskable-512px.png', sizes: '512x512', type: 'image/png'},\n                ];\n\n                // メディア通知の表示をカスタマイズ\n                navigator.mediaSession.metadata = new MediaMetadata({\n                    title: this.channel.program_present ? this.channel.program_present.title : '放送休止',\n                    artist: this.channel.channel_name,\n                    artwork: artwork,\n                });\n\n                // 再生状況のステータスを設定\n                if ('setPositionState' in navigator.mediaSession) {\n                    navigator.mediaSession.setPositionState({\n                        duration: 0,  // ライブなので0（長さなしを表すらしい）に設定\n                        playbackRate: 1,  // ライブなので再生速度は常に1になる\n                    });\n                }\n\n                // メディア通知上のボタンが押されたときのイベント\n                navigator.mediaSession.setActionHandler('play', () => { this.player.play() });  // 再生\n                navigator.mediaSession.setActionHandler('pause', () => { this.player.pause() });  // 停止\n                navigator.mediaSession.setActionHandler('previoustrack', async () => {  // 前のチャンネルに切り替え\n                    navigator.mediaSession.metadata = new MediaMetadata({\n                        title: this.channel_previous.program_present ? this.channel_previous.program_present.title : '放送休止',\n                        artist: this.channel_previous.channel_name,\n                        artwork: artwork,\n                    });\n                    // ルーティングを前のチャンネルに置き換える\n                    await this.$router.push({path: `/tv/watch/${this.channel_previous.channel_id}`});\n                });\n                navigator.mediaSession.setActionHandler('nexttrack', async () => {  // 次のチャンネルに切り替え\n                    navigator.mediaSession.metadata = new MediaMetadata({\n                        title: this.channel_next.program_present ? this.channel_next.program_present.title : '放送休止',\n                        artist: this.channel_next.channel_name,\n                        artwork: artwork,\n                    });\n                    // ルーティングを次のチャンネルに置き換える\n                    await this.$router.push({path: `/tv/watch/${this.channel_next.channel_id}`});\n                });\n            }\n        },\n\n        // マウスが動いたりタップされた時のイベント\n        // 3秒間何も操作がなければコントロールを非表示にする\n        controlDisplayTimer(event: Event | null = null, is_player_event: boolean = false) {\n\n            // タッチデバイスかどうか\n            // DPlayer の UA 判定コードと同一\n            const is_touch_device = /iPhone|iPad|iPod|Windows|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\n\n            // タッチデバイスで mousemove 、あるいはタッチデバイス以外で touchmove か click が発火した時は実行じない\n            if (is_touch_device == true  && event !== null && event.type === 'mousemove') return;\n            if (is_touch_device == false && event !== null && (event.type === 'touchmove' || event.type === 'click')) return;\n\n            // 以前セットされたタイマーを止める\n            window.clearTimeout(this.control_interval_id);\n\n            // setTimeout に渡すタイマー関数\n            const timeout = () => {\n\n                // コメント入力フォームが表示されているときは実行しない\n                // タイマーを掛け直してから抜ける\n                if (this.player.template.controller.classList.contains('dplayer-controller-comment')) {\n                    this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\n                    return;\n                }\n\n                // コントロールを非表示にする\n                this.is_control_display = false;\n\n                // プレイヤーのコントロールと設定パネルを非表示にする\n                if (this.player !== null) {\n                    this.player.controller.hide();\n                    this.player.setting.hide();\n                }\n            }\n\n            // タッチデバイスでプレイヤー画面がクリックされたとき\n            if (is_touch_device === true && is_player_event === true) {\n\n                // プレイヤーのコントロールの表示状態に合わせる\n                if (this.player.controller.isShow()) {\n\n                    // コントロールを表示する\n                    this.is_control_display = true;\n\n                    // プレイヤーのコントロールを表示する\n                    this.player.controller.show();\n\n                    // 3秒間何も操作がなければコントロールを非表示にする\n                    // 3秒間の間一度でもマウスが動けばタイマーが解除されてやり直しになる\n                    this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\n\n                } else {\n\n                    // コントロールを非表示にする\n                    this.is_control_display = false;\n\n                    // プレイヤーのコントロールと設定パネルを非表示にする\n                    this.player.controller.hide();\n                    this.player.setting.hide();\n                }\n\n            // それ以外の画面がクリックされたとき\n            } else {\n\n                // コントロールを表示する\n                this.is_control_display = true;\n\n                // プレイヤーのコントロールを表示する\n                if (this.player !== null) {\n                    this.player.controller.show();\n                }\n\n                // 3秒間何も操作がなければコントロールを非表示にする\n                // 3秒間の間一度でもマウスが動けばタイマーが解除されてやり直しになる\n                this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\n            }\n        },\n\n        // プレイヤーを初期化する\n        initPlayer() {\n\n            // mpegts.js を window 直下に入れる\n            // こうしないと DPlayer が mpegts.js を認識できない\n            (window as any).mpegts = mpegts;\n\n            // すでに DPlayer が初期化されている場合は破棄する\n            // チャンネル切り替え時などが該当する\n            if (this.player !== null && this.player.KonomiTVCanDestroy === true) {\n                try {\n                    this.player.destroy();\n                } catch (error) {\n                    // mpegts.js をうまく破棄できない場合\n                    if (this.player.plugins.mpegts !== undefined) {\n                        this.player.plugins.mpegts.destroy();\n                    }\n                }\n                this.player = null;\n            }\n\n            // DPlayer を初期化\n            this.player = new DPlayer({\n                container: this.$el.querySelector('.watch-player__dplayer'),\n                theme: '#E64F97',  // テーマカラー\n                lang: 'ja-jp',  // 言語\n                live: true,  // ライブモード\n                liveSyncMinBufferSize: 1.1,  // ライブモードで同期する際の最小バッファサイズ (1.1秒)\n                loop: false,  // ループ再生 (ライブのため無効化)\n                airplay: false,  // AirPlay 機能 (うまく動かないため無効化)\n                autoplay: true,  // 自動再生\n                hotkey: false,  // ショートカットキー（こちらで制御するため無効化）\n                screenshot: false,  // スクリーンショット (こちらで制御するため無効化)\n                volume: 1.0,  // 音量の初期値\n                // 映像\n                video: {\n                    // デフォルトの品質\n                    // ラジオチャンネルでは常に 48KHz/192kbps に固定する\n                    defaultQuality: (this.channel.is_radiochannel) ? '48kHz/192kbps' : Utils.getSettingsItem('tv_streaming_quality'),\n                    // 品質リスト\n                    quality: (() => {\n                        const qualities = [];\n                        // ラジオチャンネル\n                        // API が受け付ける品質の値は通常のチャンネルと同じだが (手抜き…)、実際の品質は 48KHz/192kbps で固定される\n                        // ラジオチャンネルの場合は、1080p と渡しても 48kHz/192kbps 固定の音声だけの MPEG-TS が配信される\n                        if (this.channel.is_radiochannel) {\n                            qualities.push({\n                                name: '48kHz/192kbps',\n                                type: 'mpegts',\n                                url: `${Utils.api_base_url}/streams/live/${this.channel_id}/1080p/mpegts`,\n                            });\n                        // 通常のチャンネル\n                        } else {\n                            for (const quality of ['1080p-60fps', '1080p', '810p', '720p', '540p', '480p', '360p', '240p']) {\n                                qualities.push({\n                                    name: quality === '1080p-60fps' ? '1080p (60fps)' : quality,\n                                    type: 'mpegts',\n                                    url: `${Utils.api_base_url}/streams/live/${this.channel_id}/${quality}/mpegts`,\n                                });\n                            }\n                        }\n                        return qualities;\n                    })(),\n                },\n                // コメント\n                danmaku: {\n                    user: 'KonomiTV',  // 便宜上 KonomiTV に固定\n                    speedRate: Utils.getSettingsItem('comment_speed_rate'),  // コメントの流れる速度\n                    fontSize: Utils.getSettingsItem('comment_font_size'),  // コメントのフォントサイズ\n                },\n                // コメント API バックエンド\n                apiBackend: {\n                    // コメント受信時\n                    read: (options) => {\n                        // 成功したことにして通知を抑制\n                        options.success([{}]);\n                    },\n                    // コメント送信時\n                    send: async (options) => {\n                        // Comment コンポーネント内のコメント送信メソッドを呼び出す\n                        // ref: https://stackoverflow.com/a/65729556/17124142 ($refs への型設定)\n                        await (this.$refs.Comment as InstanceType<typeof Comment>).sendComment(options);\n                    },\n                },\n                // プラグイン\n                pluginOptions: {\n                    // mpegts.js\n                    mpegts: {\n                        config: {\n                            // Web Worker を有効にする\n                            enableWorker: true,\n                            // HTMLMediaElement の内部バッファによるライブストリームの遅延を追跡する\n                            // liveBufferLatencyChasing と異なり、いきなり再生時間をスキップするのではなく、\n                            // 再生速度を少しだけ上げることで再生を途切れさせることなく遅延を追跡する\n                            liveSync: Utils.getSettingsItem('low_latency_mode'),\n                            // 許容する HTMLMediaElement の内部バッファの最大値 (秒単位, 2.5秒)\n                            liveSyncMaxLatency: 2.5,\n                            // HTMLMediaElement の内部バッファ (遅延) が liveSyncMaxLatency を超えたとき、ターゲットとする遅延時間 (秒単位, 1.3秒)\n                            liveSyncTargetLatency: 1.3,\n                            // ライブストリームの遅延の追跡に利用する再生速度 (x1.1)\n                            // 遅延が 2.5 秒を超えたとき、遅延が 1.3 秒を下回るまで再生速度が x1.1 に設定される\n                            liveSyncPlaybackRate: 1.1,\n                        }\n                    },\n                    // aribb24.js\n                    aribb24: {\n                        normalFont: '\"Windows TV MaruGothic\", \"Hiragino Maru Gothic Pro\", \"Yu Gothic Medium\", sans-serif',\n                        gaijiFont: '\"Windows TV MaruGothic\", \"Hiragino Maru Gothic Pro\", \"Yu Gothic Medium\", sans-serif',\n                        forceStrokeColor: 'black',  // 縁取りする色\n                        drcsReplacement: true,  // DRCS 文字を対応する Unicode 文字に置換\n                        enableRawCanvas: true,  // 高解像度の字幕 Canvas を取得できるように\n                        useStrokeText: true,  // 縁取りに strokeText API を利用\n                        usePUA: true,  // Unicode 領域の代わりに私用面の領域を利用\n                        PRACallback: async (index: number) => {  // 文字スーパーの PRA (内蔵音再生コマンド) のコールバックを指定\n\n                            // 設定で文字スーパーが無効なら実行しない\n                            if (Utils.getSettingsItem('show_superimpose_tv') === false) return;\n\n                            // index に応じた内蔵音を鳴らす\n                            // ref: https://ics.media/entry/200427/\n                            // ref: https://www.ipentec.com/document/javascript-web-audio-api-change-volume\n\n                            // 自動再生ポリシーに引っかかったなどで AudioContext が一時停止されている場合、一度 resume() する必要がある\n                            // resume() するまでに何らかのユーザーのジェスチャーが行われているはず…\n                            // なくても動くこともあるみたいだけど、念のため\n                            if (this.romsounds_context.state === 'suspended') {\n                                await this.romsounds_context.resume();\n                            }\n\n                            // index で指定された音声データを読み込み\n                            const buffer_source_node = this.romsounds_context.createBufferSource();\n                            buffer_source_node.buffer = this.romsounds_buffers[index];\n\n                            // GainNode につなげる\n                            const gain_node = this.romsounds_context.createGain();\n                            buffer_source_node.connect(gain_node);\n\n                            // 出力につなげる\n                            gain_node.connect(this.romsounds_context.destination);\n\n                            // 音量を元の wav の3倍にする (1倍だと結構小さめ)\n                            gain_node.gain.value = 3;\n\n                            // 再生開始\n                            buffer_source_node.start(0);\n                        },\n                    }\n                },\n                // 字幕\n                subtitle: {\n                    type: 'aribb24',  // aribb24.js を有効化\n                }\n            });\n\n            // 同期が完了するまで音声をミュートしておく\n            this.player.video.muted = true;\n\n            // デバッグ用にプレイヤーインスタンスも window 直下に入れる\n            (window as any).player = this.player;\n\n            // コメントが送信されたときに、プレイヤーからのコメント送信から間もないかどうかのフラグを立てる (0.1秒後に解除する)\n            // コメントを送信するとコメント入力フォームへのフォーカスが外れるため、ページ全体の keydown イベントでは\n            // Enter キーの押下がコメント送信由来のイベントかキャプチャ拡大表示由来のイベントかを判断できない\n            // そこで、コメント入力フォームフォーカス中に Enter キーが押された場合（=コメント送信時）に 0.1 秒間フラグを立てることで、\n            // ショートカットキーハンドラーがコメント送信由来のイベントであることを判定できるようにしている\n            this.player.template.commentInput.addEventListener('keydown', (event) => {\n                if (event.code === 'Enter') {\n                    this.is_comment_send_just_did = true;\n                    setTimeout(() => this.is_comment_send_just_did = false, 100);\n                }\n            });\n\n            // プレイヤー側のコントロール非表示タイマーを無効化（上書き）\n            // 無効化しておかないと、controlDisplayTimer() と競合してしまう\n            // 上書き元のコードは https://github.com/tsukumijima/DPlayer/blob/master/src/js/controller.js#L387-L395 にある\n            this.player.controller.setAutoHide = (time: number) => {};\n\n            // 「コメント送信後にコメント入力フォームを閉じる」がオフになっている場合のために、プレイヤー側のコメント送信関数を上書き\n            // 上書き部分以外の処理内容は概ね https://github.com/tsukumijima/DPlayer/blob/master/src/js/comment.js に準じる\n            this.player.comment.send = () => {\n\n                // コメント入力フォームへのフォーカスを外す (「コメント送信後にコメント入力フォームを閉じる」がオンのときだけ)\n                if (Utils.getSettingsItem('close_comment_form_after_send') === true) {\n                this.player.template.commentInput.blur();\n                }\n\n                // 空コメントを弾く\n                if (!this.player.template.commentInput.value.replace(/^\\s+|\\s+$/g, '')) {\n                    this.player.notice(this.player.tran('Please input danmaku content!'));\n                    return;\n                }\n\n                // コメントを送信\n                this.player.danmaku.send(\n                    {\n                        text: this.player.template.commentInput.value,\n                        color: this.player.container.querySelector('.dplayer-comment-setting-color input:checked').value,\n                        type: this.player.container.querySelector('.dplayer-comment-setting-type input:checked').value,\n                        size: this.player.container.querySelector('.dplayer-comment-setting-size input:checked').value,\n                    },\n                    // 送信完了後にコメント入力フォームを閉じる (「コメント送信後にコメント入力フォームを閉じる」がオンのときだけ)\n                    () => {\n                        if (Utils.getSettingsItem('close_comment_form_after_send') === true) {\n                            this.player.comment.hide();\n                        }\n                    },\n                    true,\n                );\n\n                // 重複送信を防ぐ\n                this.player.template.commentInput.value = '';\n            };\n\n            // 設定パネルにショートカット一覧を表示するリンクを動的に追加する\n            // タッチデバイスでは実行しない\n            const is_touch_device = /iPhone|iPad|iPod|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\n            if (is_touch_device === false) {\n                this.player.template.settingOriginPanel.insertAdjacentHTML('beforeend', `\n                <div class=\"dplayer-setting-item dplayer-setting-keyboard-shortcut\">\n                    <span class=\"dplayer-label\">キーボードショートカット</span>\n                    <div class=\"dplayer-toggle\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\">\n                            <path d=\"M22 16l-10.105-10.6-1.895 1.987 8.211 8.613-8.211 8.612 1.895 1.988 8.211-8.613z\"></path>\n                        </svg>\n                    </div>\n                </div>`)\n\n                // 設定パネルの高さを再設定\n                const settingOriginPanelHeight = this.player.template.settingOriginPanel.scrollHeight;\n                this.player.template.settingBox.style.clipPath = `inset(calc(100% - ${settingOriginPanelHeight}px) 0 0 round 7px)`;\n\n                // 設定パネルのショートカット一覧を表示するリンクがクリックされたときのイベント\n                // リアクティブではないので、手動でやらないといけない…\n                this.$el.querySelector('.dplayer-setting-keyboard-shortcut').addEventListener('click', () => {\n                    this.player.setting.hide();  // 設定パネルを閉じる\n                    this.shortcut_key_modal = true;\n                });\n            }\n\n            // 再生/停止されたとき\n            // 通知バーからの制御など、画面から以外の外的要因で再生/停止が行われる事もある\n            const on_play_or_pause = () => {\n\n                // まだ設定パネルが表示されていたら非表示にする\n                this.player.setting.hide();\n\n                // コントロールを表示する\n                this.controlDisplayTimer();\n            }\n            this.player.on('play', on_play_or_pause);\n            this.player.on('pause', on_play_or_pause);\n\n            // 画質の切り替えが開始されたとき\n            this.player.on('quality_start', () => {\n\n                // ローディング中の背景画像をランダムで設定\n                this.background_url = TVUtils.generatePlayerBackgroundURL();\n\n                // イベントソースを閉じる\n                if (this.eventsource !== null) {\n                    this.eventsource.close();\n                    this.eventsource = null;\n                }\n\n                // 新しい EventSource を作成\n                // 画質ごとにイベント API は異なるため、一度破棄してから作り直す\n                this.initEventHandler();\n            });\n\n            // 設定で文字スーパーが有効\n            // 字幕が非表示の場合でも、文字スーパーは表示する\n            if (Utils.getSettingsItem('show_superimpose_tv') === true) {\n                this.player.plugins.aribb24Superimpose.show();\n                this.player.on('subtitle_hide', () => {\n                    this.player.plugins.aribb24Superimpose.show();\n                });\n            // 設定で文字スーパーが無効\n            } else {\n                this.player.plugins.aribb24Superimpose.hide();\n                this.player.on('subtitle_show', () => {\n                    this.player.plugins.aribb24Superimpose.hide();\n                });\n            }\n\n            // 停止状態でかつ再生時間からバッファが 30 秒以上離れていないかを1分おきに監視し、そうなっていたら強制的にシークする\n            // mpegts.js の仕様上、MSE に未再生のバッファがたまり過ぎると SourceBuffer が追加できなくなるため、強制的に接続が切断されてしまう\n            this.interval_ids.push(window.setInterval(() => {\n                if (this.player.video.paused && this.player.video.buffered.end(0) - this.player.video.currentTime > 30) {\n                    this.player.sync();\n                }\n            }, 60 * 1000));\n\n            // フルスクリーンにするコンテナ要素（ページ全体）\n            const fullscreen_container = document.querySelector('.v-application');\n            this.fullscreen_handler = () => this.is_fullscreen = this.player.fullScreen.isFullScreen();\n            if (fullscreen_container.onfullscreenchange !== undefined) {\n                fullscreen_container.addEventListener('fullscreenchange', this.fullscreen_handler);\n            } else {\n                fullscreen_container.addEventListener('webkitfullscreenchange', this.fullscreen_handler);\n            }\n\n            // DPlayer のフルスクリーン関係のメソッドを無理やり上書きし、KonomiTV の UI と統合する\n            // 上書き元のコードは https://github.com/tsukumijima/DPlayer/blob/master/src/js/fullscreen.js にある\n            // フルスクリーンかどうか\n            this.player.fullScreen.isFullScreen = (type: string) => {\n                return !!(document.fullscreenElement || document.webkitFullscreenElement);\n            }\n            // フルスクリーンをリクエスト\n            this.player.fullScreen.request = (type: string) => {\n\n                // すでにフルスクリーンだったらキャンセルする\n                if (this.player.fullScreen.isFullScreen()) {\n                    this.player.fullScreen.cancel();\n                    return;\n                }\n\n                // フルスクリーンをリクエスト\n                // Safari は webkit のベンダープレフィックスが必要\n                fullscreen_container.requestFullscreen = fullscreen_container.requestFullscreen || fullscreen_container.webkitRequestFullscreen;\n                if (fullscreen_container.requestFullscreen) {\n                    fullscreen_container.requestFullscreen();\n                }\n\n                // 画面の向きを横に固定 (Screen Orientation API がサポートされている場合)\n                if (screen.orientation) {\n                    screen.orientation.lock('landscape').catch(() => {});\n                }\n            }\n            // フルスクリーンをキャンセル\n            this.player.fullScreen.cancel = (type: string) => {\n\n                // フルスクリーンを終了\n                // Safari は webkit のベンダープレフィックスが必要\n                document.exitFullscreen = document.exitFullscreen || document.webkitExitFullscreen;\n                if (document.exitFullscreen) {\n                    document.exitFullscreen();\n                }\n\n                // 画面の向きの固定を解除\n                if (screen.orientation) {\n                    screen.orientation.unlock();\n                }\n            }\n        },\n\n        // イベントハンドラーを初期化する\n        initEventHandler() {\n\n            // 必ず最初はローディング状態とする\n            this.is_loading = true;\n\n            // プレイヤーの背景を非表示にするイベントを登録\n            // 実際に再生可能になるのを待ってから実行する\n            const on_canplay = () => {\n\n                // 念のためさらに少しだけ待ってから\n                window.setTimeout(async () => {\n\n                    // 最初に同期しておく\n                    // 再生バッファが 1.1 秒を超えるまで 0.1 秒おきに実行する\n                    // 再生バッファが 1.1 秒を切ると再生が途切れやすくなるので (特に動きの激しい映像)、再生開始までの時間を若干犠牲にしてここの調整に時間を割く\n                    this.player.sync(true);\n                    let buffer = (Math.round((this.player.video.buffered.end(0) - this.player.video.currentTime) * 1000) / 1000);\n                    while (buffer < 1.1) {\n                        await Utils.sleep(0.1);\n                        this.player.sync(true);\n                        buffer = (Math.round((this.player.video.buffered.end(0) - this.player.video.currentTime) * 1000) / 1000);\n                    }\n\n                    // 同期が終わったのでミュートを解除\n                    this.player.video.muted = false;\n\n                    // ローディング状態を解除し、映像を表示する\n                    this.is_loading = false;\n\n                    if (this.channel.is_radiochannel) {\n                        // ラジオチャンネルでは引き続き映像の代わりとして背景画像を表示し続ける\n                        this.is_background_display = true;\n                    } else {\n                        // 背景画像をフェードアウト\n                        this.is_background_display = false;\n                    }\n\n                }, 100);\n\n                // イベントを登録解除\n                this.player.video.oncanplay = null;\n                this.player.video.oncanplaythrough = null;\n            }\n            this.player.video.oncanplay = on_canplay;\n            this.player.video.oncanplaythrough = on_canplay;\n\n            // EventSource を作成\n            // 1080p (60fps) とラジオチャンネルの場合は見かけ上の品質と API に渡す品質が異なるので、それに合わせる\n            let quality_name = this.player.quality.name;\n            if (quality_name === '1080p (60fps)') quality_name = '1080p-60fps';\n            if (this.channel.is_radiochannel) quality_name = '1080p';\n            this.eventsource = new EventSource(`${Utils.api_base_url}/streams/live/${this.channel_id}/${quality_name}/events`);\n\n            // 初回接続時のイベント\n            this.eventsource.addEventListener('initial_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n\n                // ステータスが Standby であれば、プレイヤーの背景を表示する\n                if (event.status === 'Standby') {\n                    this.is_background_display = true;\n                }\n            });\n\n            // ステータスが更新されたときのイベント\n            this.eventsource.addEventListener('status_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n                console.log(`Status: ${event.status} Detail:${event.detail}`);\n\n                // 視聴者数を更新\n                this.channel.viewers = event.clients_count;\n\n                // ステータスごとに処理を振り分け\n                switch (event.status) {\n\n                    // Status: Standby\n                    case 'Standby': {\n\n                        // ステータス詳細をプレイヤーに表示\n                        if (!this.player.template.notice.textContent.includes('画質を')) {  // 画質切り替えの表示を上書きしない\n                            this.player.notice(event.detail, -1);\n                        }\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n\n                        break;\n                    }\n\n                    // Status: ONAir\n                    case 'ONAir': {\n\n                        // ステータス詳細をプレイヤーから削除\n                        if (!this.player.template.notice.textContent.includes('画質を')) {  // 画質切り替えの表示を上書きしない\n                            this.player.notice(this.player.template.notice.textContent, 0.000001);\n                        }\n\n                        // 前のプレイヤーインスタンスの Picture-in-Picture ウインドウが残っている場合、終了させてからもう一度切り替える\n                        // チャンネル切り替えが完了しても前の Picture-in-Picture ウインドウは再利用されないため、一旦終了させるしかない\n                        if (document.pictureInPictureElement) {\n                            document.exitPictureInPicture();\n                            this.player.video.requestPictureInPicture();\n                        }\n\n                        break;\n                    }\n\n                    // Status: Restart\n                    case 'Restart': {\n\n                        // ステータス詳細をプレイヤーに表示\n                        this.player.notice(event.detail, -1);\n\n                        // プレイヤーを再起動する\n                        this.player.switchVideo({\n                            url: this.player.quality.url,\n                            type: this.player.quality.type,\n                        });\n\n                        // 再起動しただけでは自動再生されないので、明示的に\n                        this.player.play();\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n\n                        break;\n                    }\n\n                    // Status: Offline\n                    case 'Offline': {\n\n                        // ステータス詳細をプレイヤーに表示\n                        // 動画の読み込みエラーが送出された時にメッセージを上書きする\n                        this.player.notice(event.detail, -1);\n                        this.player.video.onerror = () => {\n                            this.player.notice(event.detail, -1);\n                            this.player.video.onerror = null;\n                        }\n\n                        // 描画されたコメントをクリア\n                        this.player.danmaku.clear()\n\n                        // 動画を停止する\n                        this.player.video.pause();\n\n                        // イベントソースを閉じる（復帰の見込みがないため）\n                        this.eventsource.close();\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n\n                        break;\n                    }\n                }\n            });\n\n            // ステータス詳細が更新されたときのイベント\n            this.eventsource.addEventListener('detail_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n                console.log(`Status: ${event.status} Detail:${event.detail}`);\n\n                // 視聴者数を更新\n                this.channel.viewers = event.clients_count;\n\n                // Standby のときだけプレイヤーに表示\n                if (event.status === 'Standby') {\n                    this.player.notice(event.detail, -1);\n\n                    // プレイヤーの背景を表示する\n                    if (!this.is_background_display) {\n                        this.is_background_display = true;\n                    }\n                }\n            });\n\n            // クライアント数（だけ）が更新されたときのイベント\n            this.eventsource.addEventListener('clients_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n\n                // 視聴者数を更新\n                this.channel.viewers = event.clients_count;\n            });\n        },\n\n        // ショートカットキーを初期化する\n        initShortcutKeyHandler() {\n\n            const twitter_component = (this.$refs.Twitter as InstanceType<typeof Twitter>);\n            const tweet_form_element = twitter_component.$el.querySelector<HTMLDivElement>('.tweet-form__textarea');\n\n            // IME 変換中の状態を保存する\n            for (const element of document.querySelectorAll('input[type=text],input[type=search],textarea')) {\n                element.addEventListener('compositionstart', () => this.is_ime_composing = true);\n                element.addEventListener('compositionend', () => this.is_ime_composing = false);\n            }\n\n            // ショートカットキーハンドラー\n            this.shortcut_key_handler = async (event: KeyboardEvent) => {\n\n                const tag = document.activeElement.tagName.toUpperCase();\n                const editable = document.activeElement.getAttribute('contenteditable');\n\n                // 矢印キーのデフォルトの挙動（スクロール）を抑制\n                // キーリピート周りで間引かれるイベントでも event.preventDefault() しないとスクロールしてしまうため、\n                // 一番最初のタイミングでやっておく\n                // input・textarea・contenteditable 状態の要素では実行しない\n                if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.code) &&\n                    (tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true')) {\n                    event.preventDefault();\n                }\n\n                // キーリピート（押しっぱなし）状態の場合は基本実行しない\n                // 押し続けると何度も同じ動作が実行されて大変な事になる…\n                // ただ、キーリピートを使いたい場合もあるので、リピート状態をフラグとして保存する\n                let is_repeat = false;\n                if (event.repeat) is_repeat = true;\n\n                // キーリピート状態は event.repeat を見る事でだいたい検知できるが、最初の何回かは検知できないこともある\n                // そこで、0.05 秒以内に連続して発火したキーイベントは間引きも兼ねて実行しない\n                const now = Date.now();\n                if (now - this.shortcut_key_pressed_at < (0.05 * 1000)) return;\n                this.shortcut_key_pressed_at = now;  // 最終押下時刻を更新\n\n                // 無名関数の中で実行する\n                const result = await (async (): Promise<boolean> => {\n\n                    // ***** ツイート入力フォームにフォーカスを当てる/フォーカスを外す *****\n\n                    // ツイート入力フォームにフォーカスしているときもこのショートカットが動くようにする\n                    // 以降の if 文で textarea フォーカス時のイベントをすべて弾いてしまっているため、前に持ってきている\n                    // Tab キーに割り当てている関係で、IME 変換中は実行しない（IME 変換中に実行すると文字変換ができなくなる）\n                    if (((tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') ||\n                        (document.activeElement === tweet_form_element)) && this.is_ime_composing === false) {\n                        if (event.code === 'Tab') {\n\n                            // ツイート入力フォームにフォーカスがすでに当たっていたら、フォーカスを外して終了\n                            if (document.activeElement === tweet_form_element) {\n                                tweet_form_element.blur();\n                                return true;\n                            }\n\n                            // パネルを開く\n                            this.is_panel_display = true;\n\n                            // どのタブを開いていたかに関係なく Twitter タブに切り替える\n                            this.tv_panel_active_tab = 'Twitter';\n\n                            // ツイート入力フォームの textarea 要素にフォーカスを当てる\n                            tweet_form_element.focus();\n\n                            // フォーカスを当てると勝手に横方向にスクロールされてしまうので、元に戻す\n                            this.$el.scrollLeft = 0;\n\n                            window.setTimeout(() => {\n\n                                // 他のタブから切り替えると一発でフォーカスが当たらないことがあるので、ちょっとだけ待ってから念押し\n                                // $nextTick() だと上手くいかなかった…\n                                tweet_form_element.focus();\n\n                                // フォーカスを当てると勝手に横方向にスクロールされてしまうので、元に戻す\n                                this.$el.scrollLeft = 0;\n\n                            }, 100);  // 0.1秒\n\n                            return true;\n                        }\n                    }\n\n                    // ***** ツイートを送信する *****\n\n                    // ツイート入力フォームにフォーカスしているときもこのショートカットが動くようにする\n                    // Twitter タブ以外を開いているときは実行しない\n                    // 以降の if 文で textarea フォーカス時のイベントをすべて弾いてしまっているため、前に持ってきている\n                    if (((tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') ||\n                        (document.activeElement === tweet_form_element)) &&\n                        this.tv_panel_active_tab === 'Twitter' &&\n                        this.is_ime_composing === false) {\n                        // (Ctrl or Cmd or Shift) + Enter\n                        // Shift + Enter は隠し機能（間違えたとき用）\n                        if ((event.ctrlKey || event.metaKey || event.shiftKey) && event.code === 'Enter') {\n                            twitter_component.$el.querySelector<HTMLDivElement>('.tweet-button').click();\n                            return true;\n                        }\n                    }\n\n                    // ***** コメント入力フォームを閉じる *****\n\n                    // プレイヤーが初期化されていない時・Shift / Alt キーが一緒に押された時に作動しないように\n                    if (this.player !== null && !event.shiftKey && !event.altKey) {\n\n                        // コメント入力フォームが表示されているときのみ\n                        if (this.player.template.controller.classList.contains('dplayer-controller-comment')) {\n                            // Ctrl or Cmd + M\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'KeyM') {\n                                this.player.comment.hide();\n                                return true;\n                            }\n                        }\n                    }\n\n                    // input・textarea・contenteditable 状態の要素でなければ\n                    // 文字入力中にショートカットキーが作動してしまわないように\n                    if (tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') {\n\n                        // キーリピートでない時・Ctrl / Cmd / Alt キーが一緒に押された時に作動しないように\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.altKey) {\n\n                            // ***** 数字キーでチャンネルを切り替える *****\n\n                            // チャンネルタイプを選択\n                            // Shift キーが押されていたらチャンネルタイプを地デジならBSに、BSなら地デジにする\n                            let switch_channel_type = this.channel.channel_type;\n                            if (event.shiftKey && this.channel.channel_type == 'GR') switch_channel_type = 'BS';\n                            if (event.shiftKey && this.channel.channel_type == 'BS') switch_channel_type = 'GR';\n\n                            // 1～9キー\n                            let switch_remocon_id = null;\n                            if (event.code === 'Digit1' || event.code === 'Digit2' || event.code === 'Digit3' ||\n                                event.code === 'Digit4' || event.code === 'Digit5' || event.code === 'Digit6' ||\n                                event.code === 'Digit7' || event.code === 'Digit8' || event.code === 'Digit9') {\n                                switch_remocon_id = Number(event.code.replace('Digit', ''));\n                            }\n                            // 0キー: 10に割り当て\n                            if (event.code === 'Digit0') switch_remocon_id = 10;\n                            // -キー: 11に割り当て\n                            if (event.code === 'Minus') switch_remocon_id = 11;\n                            // ^キー: 12に割り当て\n                            if (event.code === 'Equal') switch_remocon_id = 12;\n                            // 1～9キー (テンキー)\n                            if (event.code === 'Numpad1' || event.code === 'Numpad2' || event.code === 'Numpad3' ||\n                                event.code === 'Numpad4' || event.code === 'Numpad5' || event.code === 'Numpad6' ||\n                                event.code === 'Numpad7' || event.code === 'Numpad8' || event.code === 'Numpad9') {\n                                switch_remocon_id = Number(event.code.replace('Numpad', ''));\n                            }\n                            // 0キー (テンキー): 10に割り当て\n                            if (event.code === 'Numpad0') switch_remocon_id = 10;\n\n                            // この時点でリモコン番号が取得できていたら実行\n                            if (switch_remocon_id !== null) {\n\n                                // 切り替え先のチャンネルを取得する\n                                const switch_channel = TVUtils.getChannelFromRemoconID(this.channels_list, switch_channel_type, switch_remocon_id);\n\n                                // チャンネルが取得できていれば、ルーティングをそのチャンネルに置き換える\n                                // 押されたキーに対応するリモコン番号のチャンネルがない場合や、現在と同じチャンネル ID の場合は何も起こらない\n                                if (switch_channel !== null && switch_channel.channel_id !== this.channel_id) {\n                                    await this.$router.push({path: `/tv/watch/${switch_channel.channel_id}`});\n                                    return true;\n                                }\n                            }\n                        }\n\n                        // キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\n\n                            // ***** キーボードショートカットの一覧を表示する *****\n\n                            // /(?)キー: キーボードショートカットの一覧を表示する\n                            if (event.code === 'Slash') {\n                                this.shortcut_key_modal = !this.shortcut_key_modal;\n                                return true;\n                            }\n\n                            // ***** パネルのタブを切り替える *****\n\n                            // Pキー: パネルの表示切り替え\n                            if (event.code === 'KeyP') {\n                                this.is_panel_display = !this.is_panel_display;\n                                return true;\n                            }\n                            // Kキー: 番組情報タブ\n                            if (event.code === 'KeyK') {\n                                this.tv_panel_active_tab = 'Program';\n                                return true;\n                            }\n                            // Lキー: チャンネルタブ\n                            if (event.code === 'KeyL') {\n                                this.tv_panel_active_tab = 'Channel';\n                                return true;\n                            }\n                            // ;(+)キー: コメントタブ\n                            if (event.code === 'Semicolon') {\n                                this.tv_panel_active_tab = 'Comment';\n                                return true;\n                            }\n                            // :(*)キー: Twitterタブ\n                            if (event.code === 'Quote') {\n                                this.tv_panel_active_tab = 'Twitter';\n                                return true;\n                            }\n\n                            // ***** Twitter タブ内のタブを切り替える *****\n\n                            // [(「): ツイート検索タブ\n                            if (event.code === 'BracketRight') {\n                                twitter_component.twitter_active_tab = 'Search';\n                                return true;\n                            }\n                            // ](」): タイムラインタブ\n                            if (event.code === 'Backslash') {\n                                twitter_component.twitter_active_tab = 'Timeline';\n                                return true;\n                            }\n                            // \\(￥)キー: キャプチャタブ\n                            if (event.code === 'IntlRo') {\n                                twitter_component.twitter_active_tab = 'Capture';\n                                return true;\n                            }\n                        }\n\n                        // Twitter タブ内のキャプチャタブが表示されている & Ctrl / Cmd / Shift / Alt のいずれも押されていないときだけ\n                        // キャプチャタブが表示されている時は、プレイヤー操作側の矢印キー/スペースキーのショートカットは動作しない（キーが重複するため）\n                        if (this.tv_panel_active_tab === 'Twitter' && twitter_component.twitter_active_tab === 'Capture' &&\n                            (!event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey)) {\n\n                            // ***** キャプチャにフォーカスする *****\n\n                            if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.code)) {\n\n                                // キャプチャリストに一枚もキャプチャがない\n                                if (twitter_component.captures.length === 0) return false;\n\n                                // まだどのキャプチャにもフォーカスされていない場合は、一番新しいキャプチャにフォーカスして終了\n                                if (twitter_component.captures.some(capture => capture.focused === true) === false) {\n                                    twitter_component.captures[twitter_component.captures.length - 1].focused = true;\n                                    return true;\n                                }\n\n                                // 現在フォーカスされているキャプチャのインデックスを取得\n                                const focused_capture_index = twitter_component.captures.findIndex(capture => capture.focused === true);\n\n                                // ↑キー: 2つ前のキャプチャにフォーカスする\n                                // キャプチャリストは2列で並んでいるので、2つ後のキャプチャが現在フォーカスされているキャプチャの直上になる\n                                if (event.code === 'ArrowUp') {\n                                    // 2つ前のキャプチャがないなら実行しない\n                                    if (focused_capture_index - 2 < 0) return false;\n                                    twitter_component.captures[focused_capture_index - 2].focused = true;\n                                }\n\n                                // ↓キー: 2つ後のキャプチャにフォーカスする\n                                // キャプチャリストは2列で並んでいるので、2つ後のキャプチャが現在フォーカスされているキャプチャの直下になる\n                                if (event.code === 'ArrowDown') {\n                                    // 2つ後のキャプチャがないなら実行しない\n                                    if (focused_capture_index + 2 > (twitter_component.captures.length - 1)) return false;\n                                    twitter_component.captures[focused_capture_index + 2].focused = true;\n                                }\n\n                                // ←キー: 1つ前のキャプチャにフォーカスする\n                                if (event.code === 'ArrowLeft') {\n                                    // 1つ前のキャプチャがないなら実行しない\n                                    if (focused_capture_index - 1 < 0) return false;\n                                    twitter_component.captures[focused_capture_index - 1].focused = true;\n                                }\n\n                                // ←キー: 1つ後のキャプチャにフォーカスする\n                                if (event.code === 'ArrowRight') {\n                                    // 1つ後のキャプチャがないなら実行しない\n                                    if (focused_capture_index + 1 > (twitter_component.captures.length - 1)) return false;\n                                    twitter_component.captures[focused_capture_index + 1].focused = true;\n                                }\n\n                                // 現在フォーカスされているキャプチャのフォーカスを外す\n                                twitter_component.captures[focused_capture_index].focused = false;\n\n                                // 拡大表示のモーダルが開かれている場合は、フォーカスしたキャプチャをモーダルにセット\n                                // こうすることで、QuickLook みたいな挙動になる\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\n                                if (twitter_component.zoom_capture_modal === true) {\n                                    twitter_component.zoom_capture = focused_capture;\n                                }\n\n                                // 現在フォーカスされているキャプチャが見える位置までスクロール\n                                // block: 'nearest' の指定で、上下どちらにスクロールしてもフォーカスされているキャプチャが常に表示されるようになる\n                                const focused_capture_element =\n                                    twitter_component.$el.querySelector(`img[src=\"${focused_capture.image_url}\"]`).parentElement;\n                                if (is_repeat) {\n                                    // キーリピート状態ではスムーズスクロールがフォーカスの移動に追いつけずスクロールの挙動がおかしくなるため、\n                                    // スムーズスクロールは無効にしてある\n                                    focused_capture_element.scrollIntoView({block: 'nearest', inline: 'nearest', behavior: 'auto'});\n                                } else {\n                                    focused_capture_element.scrollIntoView({block: 'nearest', inline: 'nearest', behavior: 'smooth'});\n                                }\n                                return true;\n                            }\n\n                            // ***** キャプチャを拡大表示する/拡大表示を閉じる *****\n\n                            if (event.code === 'Enter') {\n\n                                // Enter キーの押下がプレイヤー側のコメント送信由来のイベントの場合は実行しない\n                                if (this.is_comment_send_just_did) return false;\n\n                                // すでにモーダルが開かれている場合は、どのキャプチャが拡大表示されているかに関わらず閉じる\n                                if (twitter_component.zoom_capture_modal === true) {\n                                    twitter_component.zoom_capture_modal = false;\n                                    return true;\n                                }\n\n                                // 現在フォーカスされているキャプチャを取得\n                                // まだどのキャプチャにもフォーカスされていない場合は実行しない\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\n                                if (focused_capture === undefined) return false;\n\n                                // モーダルを開き、モーダルで拡大表示するキャプチャとしてセット\n                                twitter_component.zoom_capture = focused_capture;\n                                twitter_component.zoom_capture_modal = true;\n                                return true;\n                            }\n\n                            // ***** キャプチャを選択する/選択を解除する *****\n\n                            if (event.code === 'Space') {\n\n                                // 現在フォーカスされているキャプチャを取得\n                                // まだどのキャプチャにもフォーカスされていない場合は実行しない\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\n                                if (focused_capture === undefined) return false;\n\n                                // 「キャプチャリスト内のキャプチャがクリックされたときのイベント」を呼ぶ\n                                // 選択されていなければ選択され、選択されていれば選択が解除される\n                                // キャプチャの枚数制限などはすべて clickCapture() の中で処理される\n                                twitter_component.clickCapture(focused_capture);\n                                return true;\n                            }\n                        }\n\n                        // ***** 上下キーでチャンネルを切り替える *****\n\n                        // キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\n\n                            // ↑キー: 前のチャンネルに切り替え\n                            if (event.code === 'ArrowUp') {\n                                await this.$router.push({path: `/tv/watch/${this.channel_previous.channel_id}`});\n                                return true;\n                            }\n                            // ↓キー: 次のチャンネルに切り替え\n                            if (event.code === 'ArrowDown') {\n                                await this.$router.push({path: `/tv/watch/${this.channel_next.channel_id}`});\n                                return true;\n                            }\n                        }\n\n                        // ***** プレイヤーのショートカットキー *****\n\n                        // プレイヤーが初期化されていない時・Ctrl / Cmd / Alt キーが一緒に押された時に作動しないように\n                        if (this.player !== null && !event.ctrlKey && !event.metaKey && !event.altKey) {\n\n                            // Shift + ↑キー: プレイヤーの音量を上げる\n                            if (event.shiftKey === true && event.code === 'ArrowUp') {\n                                this.player.volume(this.player.volume() + 0.05);\n                                return true;\n                            }\n                            // Shift + ↓キー: プレイヤーの音量を下げる\n                            if (event.shiftKey === true && event.code === 'ArrowDown') {\n                                this.player.volume(this.player.volume() - 0.05);\n                                return true;\n                            }\n                            // Shift + ←キー: 停止して0.5秒巻き戻し\n                            if (event.shiftKey === true && event.code === 'ArrowLeft') {\n                                if (this.player.video.paused === false) this.player.video.pause();\n                                this.player.video.currentTime = this.player.video.currentTime - 0.5;\n                                return true;\n                            }\n                            // Shift + →キー: 停止して0.5秒早送り\n                            if (event.shiftKey === true && event.code === 'ArrowRight') {\n                                if (this.player.video.paused === false) this.player.video.pause();\n                                this.player.video.currentTime = this.player.video.currentTime + 0.5;\n                                return true;\n                            }\n                            // Shift + Spaceキー + キーリピートでない時 + Twitter タブ表示時: 再生/停止\n                            if (event.shiftKey === true && event.code === 'Space' && is_repeat === false &&\n                                this.tv_panel_active_tab === 'Twitter' && twitter_component.twitter_active_tab === 'Capture') {\n                                this.player.toggle();\n                                return true;\n                            }\n                        }\n\n                        // プレイヤーが初期化されていない時・キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\n                        if (this.player !== null && is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\n\n                            // Spaceキー: 再生/停止\n                            if (event.code === 'Space') {\n                                this.player.toggle();\n                                return true;\n                            }\n                            // Fキー: フルスクリーンの切り替え\n                            if (event.code === 'KeyF') {\n                                this.player.fullScreen.toggle();\n                                return true;\n                            }\n                            // Wキー: ライブストリームの同期\n                            if (event.code === 'KeyW') {\n                                this.player.sync();\n                                return true;\n                            }\n                            // Eキー: Picture-in-Picture の表示切り替え\n                            if (event.code === 'KeyE') {\n                                if (document.pictureInPictureEnabled) {\n                                    this.player.template.pipButton.click();\n                                }\n                                return true;\n                            }\n                            // Sキー: 字幕の表示切り替え\n                            if (event.code === 'KeyS') {\n                                this.player.subtitle.toggle();\n                                if (!this.player.subtitle.container.classList.contains('dplayer-subtitle-hide')) {\n                                    this.player.notice(`${this.player.tran('Show subtitle')}`);\n                                } else {\n                                    this.player.notice(`${this.player.tran('Hide subtitle')}`);\n                                }\n                                return true;\n                            }\n                            // Dキー: コメントの表示切り替え\n                            if (event.code === 'KeyD') {\n                                this.player.template.showDanmaku.click();\n                                if (this.player.template.showDanmakuToggle.checked) {\n                                    this.player.notice(`${this.player.tran('Show comment')}`);\n                                } else {\n                                    this.player.notice(`${this.player.tran('Hide comment')}`);\n                                }\n                                return true;\n                            }\n                            // Cキー: 映像をキャプチャ\n                            if (event.code === 'KeyC') {\n                                this.captureAndSave();\n                                return true;\n                            }\n                            // Vキー: 映像を実況コメントを付けてキャプチャ\n                            if (event.code === 'KeyV') {\n                                this.captureAndSave(true);\n                                return true;\n                            }\n                            // Mキー: コメント入力フォームにフォーカス\n                            if (event.code === 'KeyM') {\n                                this.player.controller.show();\n                                this.player.comment.show();\n                                this.controlDisplayTimer();\n                                window.setTimeout(() => this.player.template.commentInput.focus(), 100);\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                })();\n\n                // 無名関数を実行した後の戻り値が true ならショートカットキーの操作を実行したことになるので、デフォルトのキー操作を封じる\n                if (result === true) {\n                    event.preventDefault();\n                }\n            };\n\n            // ページ上でキーが押されたときのイベントを登録\n            document.addEventListener('keydown', this.shortcut_key_handler);\n        },\n\n        // キャプチャ関連のイベントを初期化する\n        initCaptureHandler() {\n\n            // コメント付きキャプチャボタンの HTML を追加\n            // insertAdjacentHTML で .dplayer-icons-right の一番左側に配置する\n            // この後に通常のキャプチャボタンが insert されるので、実際は左から2番目\n            // TODO: ボタンのデザインをコメント付きだと分かるようなものに変更する\n            this.$el.querySelector('.dplayer-icons.dplayer-icons-right').insertAdjacentHTML('afterbegin', `\n                <div class=\"dplayer-icon dplayer-comment-capture-icon\" aria-label=\"コメントを付けてキャプチャ\"\n                    data-balloon-nofocus=\"\" data-balloon-pos=\"up\">\n                    <span class=\"dplayer-icon-content\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\"><path d=\"M16 23c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zM16 13c-2.206 0-4 1.794-4 4s1.794 4 4 4c2.206 0 4-1.794 4-4s-1.794-4-4-4zM27 28h-22c-1.654 0-3-1.346-3-3v-16c0-1.654 1.346-3 3-3h3c0.552 0 1 0.448 1 1s-0.448 1-1 1h-3c-0.551 0-1 0.449-1 1v16c0 0.552 0.449 1 1 1h22c0.552 0 1-0.448 1-1v-16c0-0.551-0.448-1-1-1h-11c-0.552 0-1-0.448-1-1s0.448-1 1-1h11c1.654 0 3 1.346 3 3v16c0 1.654-1.346 3-3 3zM24 10.5c0 0.828 0.672 1.5 1.5 1.5s1.5-0.672 1.5-1.5c0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5zM15 4c0 0.552-0.448 1-1 1h-4c-0.552 0-1-0.448-1-1v0c0-0.552 0.448-1 1-1h4c0.552 0 1 0.448 1 1v0z\"></path></svg>\n                    </span>\n                </div>\n            `);\n\n            // キャプチャボタンの HTML を追加\n            // 標準のスクリーンショット機能は貧弱なので、あえて独自に実装している（そのほうが自由度も高くてやりやすい）\n            // insertAdjacentHTML で .dplayer-icons-right の一番左側に配置する\n            this.$el.querySelector('.dplayer-icons.dplayer-icons-right').insertAdjacentHTML('afterbegin', `\n                <div class=\"dplayer-icon dplayer-capture-icon\" aria-label=\"キャプチャ\"\n                    data-balloon-nofocus=\"\" data-balloon-pos=\"up\">\n                    <span class=\"dplayer-icon-content\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\"><path d=\"M16 23c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zM16 13c-2.206 0-4 1.794-4 4s1.794 4 4 4c2.206 0 4-1.794 4-4s-1.794-4-4-4zM27 28h-22c-1.654 0-3-1.346-3-3v-16c0-1.654 1.346-3 3-3h3c0.552 0 1 0.448 1 1s-0.448 1-1 1h-3c-0.551 0-1 0.449-1 1v16c0 0.552 0.449 1 1 1h22c0.552 0 1-0.448 1-1v-16c0-0.551-0.448-1-1-1h-11c-0.552 0-1-0.448-1-1s0.448-1 1-1h11c1.654 0 3 1.346 3 3v16c0 1.654-1.346 3-3 3zM24 10.5c0 0.828 0.672 1.5 1.5 1.5s1.5-0.672 1.5-1.5c0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5zM15 4c0 0.552-0.448 1-1 1h-4c-0.552 0-1-0.448-1-1v0c0-0.552 0.448-1 1-1h4c0.552 0 1 0.448 1 1v0z\"></path></svg>\n                    </span>\n                </div>\n            `);\n\n            // キャプチャ用の Canvas を初期化\n            // パフォーマンス向上のため、一度作成した Canvas は使い回す\n            this.canvas = document.createElement('canvas');\n            this.canvas_context = this.canvas.getContext('2d');\n\n            // 映像の解像度を Canvas サイズとして設定\n            // 映像が読み込まれた / 画質が変わったときに映像側に Canvas サイズを合わせる\n            this.canvas.width = 0;\n            this.canvas.height = 0;\n            this.player.on('loadedmetadata', () => {\n                this.canvas.width = this.player.video.videoWidth;\n                this.canvas.height = this.player.video.videoHeight;\n            });\n\n            this.capture_button = this.$el.querySelector('.dplayer-icon.dplayer-capture-icon');\n            this.comment_capture_button = this.$el.querySelector('.dplayer-icon.dplayer-comment-capture-icon');\n\n            // キャプチャボタンがクリックされたときのイベント\n            // ショートカットからのキャプチャでも同じイベントがトリガーされる\n            this.capture_button.addEventListener('click', async () => {\n                await this.captureAndSave();\n            });\n\n            // コメント付きキャプチャボタンがクリックされたときのイベント\n            // ショートカットからのキャプチャでも同じイベントがトリガーされる\n            this.comment_capture_button.addEventListener('click', async () => {\n                await this.captureAndSave(true);\n            });\n        },\n\n        // キャプチャして保存するイベントハンドラー\n        // 通常のキャプチャもコメント付きキャプチャも途中まで処理は同じなので、共通化する\n        // 映像のみと字幕付き (字幕表示時のみ) の両方のキャプチャを生成できる\n        async captureAndSave(with_comments: boolean = false) {\n\n            // 表示されているニコニコ実況のコメントを Canvas に描画する関数\n            // ZenzaWatch のコードを参考にしている\n            // ref: https://github.com/segabito/ZenzaWatch/blob/master/packages/lib/src/dom/VideoCaptureUtil.js\n            const DrawComments = async () => {\n\n                // HTML を SVG 画像の Image に変換する\n                // ref: https://web.archive.org/web/2/https://developer.mozilla.org/ja/docs/Web/HTML/Canvas/Drawing_DOM_objects_into_a_canvas\n                const HTMLtoSVGImage = async (html: string, width: number, height: number): Promise<HTMLImageElement> => {\n\n                    // SVG の foreignObject を使い、HTML をそのまま SVG に埋め込む\n                    // SVG なので、CSS はインラインでないと適用されない…\n                    // DPlayer の danmaku.scss の内容のうち、描画に必要なプロパティのみを列挙 (追加変更したものもある)\n                    // ref: https://github.com/tsukumijima/DPlayer/blob/master/src/css/danmaku.scss\n                    const svg = (`\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\">\n                            <foreignObject width=\"100%\" height=\"100%\">\n                                <div xmlns=\"http://www.w3.org/1999/xhtml\">\n                                    <style>\n                                    .dplayer-danmaku {\n                                        position: absolute;\n                                        top: 0;\n                                        left: 0;\n                                        right: 0;\n                                        bottom: 0;\n                                        color: #fff;\n                                        font-size: 29px;\n                                        font-family: 'YakuHanJPs', 'Open Sans', 'Hiragino Sans', 'Noto Sans JP', sans-serif;\n                                    }\n                                    .dplayer-danmaku .dplayer-danmaku-item {\n                                        display: inline-block;\n                                        line-height: 1;\n                                        font-weight: bold;\n                                        font-size: var(--dplayer-danmaku-font-size);\n                                        opacity: var(--dplayer-danmaku-opacity);\n                                        text-shadow: 1.2px 1.2px 4px rgba(0, 0, 0, 0.9);\n                                        white-space: nowrap;\n                                    }\n                                    .dplayer-danmaku .dplayer-danmaku-item--demo {\n                                        position: absolute;\n                                        visibility: hidden;\n                                    }\n                                    .dplayer-danmaku .dplayer-danmaku-item span {\n                                        box-decoration-break: clone;\n                                        -webkit-box-decoration-break: clone;\n                                    }\n                                    .dplayer-danmaku .dplayer-danmaku-item.dplayer-danmaku-size-big {\n                                        font-size: calc(var(--dplayer-danmaku-font-size) * 1.25);\n                                    }\n                                    .dplayer-danmaku .dplayer-danmaku-item.dplayer-danmaku-size-small {\n                                        font-size: calc(var(--dplayer-danmaku-font-size) * 0.8);\n                                    }\n                                    .dplayer-danmaku .dplayer-danmaku-right {\n                                        position: absolute;\n                                        right: 0;\n                                    }\n                                    .dplayer-danmaku .dplayer-danmaku-top, .dplayer-danmaku .dplayer-danmaku-bottom {\n                                        position: absolute;\n                                        left: 50%;\n                                        transform: translateX(-50%);\n                                    }\n                                    </style>\n                                    ${html}\n                                </div>\n                            </foreignObject>\n                        </svg>\n                    `).trim();\n\n                    // Data URL 化して Image オブジェクトにする\n                    // わざわざ Blob にするよりこっちのほうが楽\n                    const image = new Image();\n                    image.src = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(svg)}`;\n\n                    // Image は onload を使わなくても await Image.decode() でロードできる\n                    await image.decode();\n                    return image;\n                };\n\n                // コメントが表示されている要素の HTML\n                let comments_html = (this.player.template.danmaku as HTMLDivElement).outerHTML;\n\n                // スクロール中のコメントは HTML だけでは現在の表示位置が特定できないため、HTML を修正する\n                for (const comment of this.$el.querySelectorAll('.dplayer-danmaku-move')) { // コメントの数だけ置換\n                    // スクロール中のコメントの表示座標を計算\n                    const position = comment.getBoundingClientRect().left - this.player.video.getBoundingClientRect().left;\n                    comments_html = comments_html.replace(/transform: translateX\\(.*?\\);/, `left: ${position}px;`)\n                                                 .replaceAll('border: 2px solid #E64F97;', '');\n                }\n\n                // HTML を画像として取得\n                // SVG のサイズはコメントが表示されている要素に合わせる (そうしないとプレイヤー側と一致しない)\n                // SVG はベクター画像なので、リサイズしても画質が変わらないはず\n                const comments_image = await HTMLtoSVGImage(\n                    comments_html,\n                    (this.player.template.danmaku as HTMLDivElement).offsetWidth,\n                    (this.player.template.danmaku as HTMLDivElement).offsetHeight,\n                );\n\n                // コメント描画領域がコントロールの表示によりリサイズされている (=16:9でない) 場合も考慮して、コメント要素の offsetWidth から高さを求める\n                // 映像の幅 (ex: 1920) がコメント描画領域の幅 (ex: 1280) の何倍かの割合 (ex: 1.5 (150%))\n                const draw_scale_ratio = this.canvas.width / (this.player.template.danmaku as HTMLDivElement).offsetWidth;\n                // コメント描画領域の高さを映像の幅に合わせて（コメント描画領域のアスペクト比を維持したまま）拡大した値\n                // 映像の高さが 1080 のとき、コントロールがコメント領域と被っていない or 表示されていないなら、この値は 1080 に近くなる\n                // 0.5625 (56.25%) = 16:9 の幅を 1 としたときの高さの割合\n                const draw_height = (this.player.template.danmaku as HTMLDivElement).offsetHeight * draw_scale_ratio;\n\n                this.canvas_context.drawImage(comments_image, 0, 0, this.canvas.width, draw_height);\n            };\n\n            // KonomiTV サーバーにキャプチャ画像をアップロードする関数\n            const UploadCaptureToServer = async (blob: Blob, filename: string) => {\n\n                // キャプチャ画像の File オブジェクト (= Blob) を FormData に入れる\n                // multipart/form-data で送るために必要\n                // ref: https://r17n.page/2020/02/04/nodejs-axios-file-upload-api/\n                const form_data = new FormData();\n                form_data.append('image', blob, filename);\n\n                // キャプチャ画像アップロード API にリクエスト\n                try {\n                    await Vue.axios.post('/captures', form_data, {headers: {'Content-Type': 'multipart/form-data'}});\n                } catch (error) {\n                    console.error(error);\n                    this.player.notice('キャプチャのアップロードに失敗しました。');\n                }\n            };\n\n            // まだ映像の表示準備が終わっていない (Canvas の幅/高さが 0 のまま)\n            if (this.canvas.width === 0 && this.canvas.height === 0) {\n                this.player.notice('読み込み中はキャプチャできません。');\n                return;\n            }\n\n            // コメントが表示されていないのにコメント付きキャプチャしようとした\n            if (with_comments === true && this.player.danmaku.showing === false) {\n                this.player.notice('コメントを付けてキャプチャするには、コメント表示をオンにしてください。');\n                return;\n            }\n\n            // キャプチャ中はキャプチャボタンをハイライトする\n            const button_elem = this.$el.querySelector(`.${with_comments ? 'dplayer-comment-capture-icon' : 'dplayer-capture-icon'}`);\n            button_elem.classList.add('dplayer-capturing');\n\n            // ファイル名（拡張子なし）\n            // TODO: ファイル名パターンを変更できるようにする\n            const filename = `Capture_${dayjs().format('YYYYMMDD-HHmmss')}`;\n\n            // 字幕・文字スーパーの Canvas を取得\n            // getRawCanvas() で映像と同じ解像度の Canvas が取得できる\n            const caption_canvas: HTMLCanvasElement = this.player.plugins.aribb24Caption.getRawCanvas();\n            const superimpose_canvas: HTMLCanvasElement = this.player.plugins.aribb24Superimpose.getRawCanvas();\n\n            // Canvas に映像を描画\n            this.canvas_context.drawImage(this.player.video, 0, 0, this.canvas.width, this.canvas.height);\n\n            // 文字スーパーを描画 (表示されている場合)\n            // 文字スーパー自体が稀だし、文字スーパーなしでキャプチャ撮りたいユースケースはない…はず\n            if (this.player.plugins.aribb24Superimpose.isShowing === true && this.player.plugins.aribb24Superimpose.isPresent()) {\n                this.canvas_context.drawImage(superimpose_canvas, 0, 0, this.canvas.width, this.canvas.height);\n            }\n\n            // コメント付きキャプチャ: 追加でニコニコ実況のコメントを描画\n            if (with_comments === true) {\n                await DrawComments();\n            }\n\n            // 字幕が表示されているか\n            const is_caption_showing = this.player.plugins.aribb24Caption.isShowing === true &&\n                                        this.player.plugins.aribb24Caption.isPresent();\n\n            // 字幕表示時のキャプチャの保存モード: 映像のみ or 両方\n            // 保存モードが「字幕キャプチャのみ」になっているが字幕が表示されていない場合も実行する\n            if (['VideoOnly', 'Both'].includes(Utils.getSettingsItem('capture_caption_mode')) || !is_caption_showing) {\n\n                // 通常のキャプチャ:  Canvas (映像のみ) を画像にエクスポート\n                // コメント付きキャプチャ:  Canvas (映像 + コメント) を画像にエクスポート\n                this.canvas.toBlob(async (blob) => {\n\n                    if (blob === null) {\n                        this.player.notice('キャプチャの保存に失敗しました…');\n                        return;\n                    }\n\n                    // ファイル名 (拡張子あり)\n                    // 保存モードが「字幕キャプチャのみ」のときは便宜上 _caption のサフィックスをつける\n                    let filename_ext = `${filename}.jpg`;\n                    if (Utils.getSettingsItem('capture_caption_mode') === 'CompositingCaption') {\n                        filename_ext = `${filename}_caption.jpg`;\n                    }\n\n                    // 撮ったキャプチャを Twitter タブのキャプチャリストに送る\n                    (this.$refs.Twitter as InstanceType<typeof Twitter>).addCaptureList(blob, filename_ext);\n\n                    // キャプチャに番組情報と撮影時刻のメタデータ (EXIF) をセット\n                    blob = await TVUtils.setEXIFDataToCapture(blob, this.channel.program_present);\n\n                    // キャプチャの保存先: ブラウザでダウンロード or 両方\n                    if (['Browser', 'Both'].includes(Utils.getSettingsItem('capture_save_mode'))) {\n                        Utils.downloadBlobData(blob, filename_ext);\n                    }\n\n                    // キャプチャの保存先: KonomiTV サーバーにアップロード or 両方\n                    if (['UploadServer', 'Both'].includes(Utils.getSettingsItem('capture_save_mode'))) {\n                        await UploadCaptureToServer(blob, filename_ext);\n                    }\n\n                    // 保存モードが「映像のみ」or 字幕が表示されていない時はここで処理終了なので、キャプチャボタンのハイライトを削除する\n                    if (Utils.getSettingsItem('capture_caption_mode') === 'VideoOnly' || !is_caption_showing) {\n                        button_elem.classList.remove('dplayer-capturing');\n                    }\n\n                }, 'image/jpeg', 1);\n            }\n\n            // 字幕表示時のキャプチャの保存モード: 字幕キャプチャのみ or 両方\n            // 字幕が表示されているときのみ実行（字幕が表示されていないのにやっても意味がない）\n            if (is_caption_showing && ['CompositingCaption', 'Both'].includes(Utils.getSettingsItem('capture_caption_mode'))) {\n\n                // コメント付きキャプチャ: 映像と文字スーパーの描画をやり直す\n                // すでに字幕なしキャプチャを生成する過程でコメントを描画してしまっているため、映像描画からやり直す必要がある\n                if (with_comments === true) {\n                    this.canvas_context.drawImage(this.player.video, 0, 0, this.canvas.width, this.canvas.height);\n                    this.canvas_context.drawImage(superimpose_canvas, 0, 0, this.canvas.width, this.canvas.height);\n                }\n\n                // 字幕を重ねて描画\n                this.canvas_context.drawImage(caption_canvas, 0, 0, this.canvas.width, this.canvas.height);\n\n                // コメント付きキャプチャ: 追加でニコニコ実況のコメントを描画\n                if (with_comments === true) {\n                    await DrawComments();\n                }\n\n                // 通常のキャプチャ:  Canvas (映像 + 字幕) を画像にエクスポート\n                // コメント付きキャプチャ:  Canvas (映像 + 字幕 + コメント) を画像にエクスポート\n                this.canvas.toBlob(async (blob) => {\n\n                    if (blob === null) {\n                        this.player.notice('キャプチャの保存に失敗しました…');\n                        return;\n                    }\n\n                    const filename_ext = `${filename}_caption.jpg`;\n\n                    // 撮ったキャプチャを Twitter タブのキャプチャリストに送る\n                    (this.$refs.Twitter as InstanceType<typeof Twitter>).addCaptureList(blob, filename_ext);\n\n                    // キャプチャに番組情報と撮影時刻のメタデータ (EXIF) をセット\n                    blob = await TVUtils.setEXIFDataToCapture(blob, this.channel.program_present);\n\n                    // キャプチャの保存先: ブラウザでダウンロード or 両方\n                    if (['Browser', 'Both'].includes(Utils.getSettingsItem('capture_save_mode'))) {\n                        Utils.downloadBlobData(blob, filename_ext);\n                    }\n\n                    // キャプチャの保存先: KonomiTV サーバーにアップロード or 両方\n                    if (['UploadServer', 'Both'].includes(Utils.getSettingsItem('capture_save_mode'))) {\n                        await UploadCaptureToServer(blob, filename_ext);\n                    }\n\n                    // キャプチャボタンのハイライトを削除する\n                    button_elem.classList.remove('dplayer-capturing');\n\n                }, 'image/jpeg', 1);\n            }\n        },\n\n        // 再生セッションを破棄する\n        // チャンネルを切り替える際に実行される\n        destroy(is_destroy_player = false) {\n\n            // clearInterval() ですべての setInterval(), setTimeout() の実行を止める\n            // clearInterval() と clearTimeout() は中身共通なので問題ない\n            for (const interval_id of this.interval_ids) {\n                window.clearInterval(interval_id);\n            }\n\n            // コントロール表示制御用タイマーを止める\n            window.clearTimeout(this.control_interval_id);\n\n            // interval_ids をクリア\n            this.interval_ids = [];\n\n            // 再びローディング状態にする\n            this.is_loading = true;\n\n            // プレイヤーの背景を隠す\n            this.is_background_display = false;\n\n            // プレイヤーに破棄が可能なフラグをつける\n            this.player.KonomiTVCanDestroy = true;\n\n            // イベントソースを閉じる\n            if (this.eventsource !== null) {\n                this.eventsource.close();\n                this.eventsource = null;\n            }\n\n            // アニメーション分待ってから実行\n            this.interval_ids.push(window.setTimeout(() => {\n\n                // プレイヤーを停止する\n                this.player.video.pause();\n\n                // is_destroy_player が true の時は、ここで DPlayer 自体を破棄する\n                // false の時は次の initPlayer() が実行されるまで破棄されない\n                if (is_destroy_player === true && this.player !== null) {\n                    try {\n                        this.player.destroy();\n                    } catch (error) {\n                        // mpegts.js をうまく破棄できない場合\n                        if (this.player.plugins.mpegts !== undefined) {\n                            this.player.plugins.mpegts.destroy();\n                        }\n                    }\n                    this.player = null;\n                }\n\n            }, 0.4 * 1000));  // 0.4 秒\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Watch.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Watch.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Watch.vue?vue&type=template&id=6063ae03&scoped=true&\"\nimport script from \"./Watch.vue?vue&type=script&lang=ts&\"\nexport * from \"./Watch.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Watch.vue?vue&type=style&index=0&id=6063ae03&prod&lang=scss&\"\nimport style1 from \"./Watch.vue?vue&type=style&index=1&id=6063ae03&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6063ae03\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"19px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"全般\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"テレビのストリーミング画質\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" テレビをライブストリーミングする際の既定の画質を設定します。\"),_c('br'),_vm._v(\" ストリーミング画質はプレイヤーの設定からいつでも切り替えられます。\"),_c('br')]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" [1080p (60fps)] は、通常 30fps (60i) の映像を補間することで、ほかの画質よりも滑らか（ぬるぬる）な映像で再生できます。ただし、再生負荷が少し高くなります。\"),_c('br'),_vm._v(\" [1080p (60fps)] で視聴するときは、QSVEncC / NVEncC / VCEEncC エンコーダーの利用をおすすめします。FFmpeg エンコーダーでは CPU 使用率が高くなり、再生に支障が出ることがあります。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"items\":_vm.tv_streaming_quality},model:{value:(_vm.settings.tv_streaming_quality),callback:function ($$v) {_vm.$set(_vm.settings, \"tv_streaming_quality\", $$v)},expression:\"settings.tv_streaming_quality\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"low_latency_mode\"}},[_vm._v(\"テレビを低遅延で視聴する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"low_latency_mode\"}},[_vm._v(\" テレビをライブストリーミングする際に、低遅延で視聴するかを設定します。\"),_c('br'),_vm._v(\" 低遅延ストリーミングがオンのときは、約 2.5 秒以上遅延したときに少しだけ再生速度を早める (1.1x) ことで、滑らかにストリーミングの遅れを取り戻します。\"),_c('br'),_vm._v(\" 宅外視聴などのネットワークが不安定になりがちな環境では、一度低遅延ストリーミングをオフにしてみると、映像のカクつきを改善できるかもしれません。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"low_latency_mode\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.low_latency_mode),callback:function ($$v) {_vm.$set(_vm.settings, \"low_latency_mode\", $$v)},expression:\"settings.low_latency_mode\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"show_superimpose_tv\"}},[_vm._v(\"テレビをみるときに文字スーパーを表示する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"show_superimpose_tv\"}},[_vm._v(\" テレビをライブストリーミングする際に、文字スーパーを表示するかを設定します。\"),_c('br'),_vm._v(\" 文字スーパーは、緊急地震速報の赤テロップや、NHK BS のニュース速報のテロップなどで利用されています。とくに理由がなければ、オンのままにしておくことをおすすめします。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"show_superimpose_tv\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.show_superimpose_tv),callback:function ($$v) {_vm.$set(_vm.settings, \"show_superimpose_tv\", $$v)},expression:\"settings.show_superimpose_tv\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"既定のパネルの表示状態\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 視聴画面を開いたときに、右側のパネルをどう表示するかを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"items\":_vm.panel_display_state},model:{value:(_vm.settings.panel_display_state),callback:function ($$v) {_vm.$set(_vm.settings, \"panel_display_state\", $$v)},expression:\"settings.panel_display_state\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"テレビをみるときに既定で表示されるパネルのタブ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" テレビの視聴画面を開いたときに、右側のパネルで最初に表示されるタブを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"items\":_vm.tv_panel_active_tab},model:{value:(_vm.settings.tv_panel_active_tab),callback:function ($$v) {_vm.$set(_vm.settings, \"tv_panel_active_tab\", $$v)},expression:\"settings.tv_panel_active_tab\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"キャプチャの保存先\")]),_c('div',{staticClass:\"settings__item-label\"},[_c('p',[_vm._v(\" キャプチャした画像をブラウザでダウンロードするか、KonomiTV サーバーにアップロードするかを設定します。\"),_c('br'),_vm._v(\" ブラウザでのダウンロードと、KonomiTV サーバーへのアップロードを両方同時に行うこともできます。\"),_c('br')]),_c('p',[_vm._v(\" ブラウザでダウンロードすると、視聴中のデバイスのダウンロードフォルダに保存されます。\"),_c('br'),_vm._v(\" 視聴中のデバイスにそのまま保存されるためシンプルですが、保存先のフォルダを変更できないこと、PC 版 Chrome では毎回ダウンロードバーが表示されてしまうことがデメリットです。\"),_c('br')]),_c('p',[_vm._v(\" KonomiTV サーバーにアップロードすると、環境設定で指定されたキャプチャ保存フォルダに保存されます。視聴したデバイスにかかわらず、今までに撮ったキャプチャをひとつのフォルダにまとめて保存できます。\"),_c('br'),_vm._v(\" 他のデバイスでキャプチャを見るにはキャプチャ保存フォルダをネットワークに共有する必要があること、スマホ・タブレットではネットワーク上のフォルダへのアクセスがやや面倒なことがデメリットです。\"),_c('br')])]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"items\":_vm.capture_save_mode},model:{value:(_vm.settings.capture_save_mode),callback:function ($$v) {_vm.$set(_vm.settings, \"capture_save_mode\", $$v)},expression:\"settings.capture_save_mode\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"字幕が表示されているときのキャプチャの保存モード\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 字幕が表示されているときに、キャプチャした画像に字幕を合成するかを設定します。\"),_c('br'),_vm._v(\" 映像のみのキャプチャと、字幕を合成したキャプチャを両方同時に保存することもできます。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"items\":_vm.capture_caption_mode},model:{value:(_vm.settings.capture_caption_mode),callback:function ($$v) {_vm.$set(_vm.settings, \"capture_caption_mode\", $$v)},expression:\"settings.capture_caption_mode\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item mt-6\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"設定をエクスポート\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" このデバイス（ブラウザ）に保存されている設定データをエクスポート（ダウンロード）できます。\"),_c('br'),_vm._v(\" ダウンロードした設定データ (KonomiTV-Settings.json) は、[設定をインポート] からインポートできます。異なるサーバーの KonomiTV を同じ設定で使いたいときなどに使ってください。\"),_c('br')])]),_c('v-btn',{staticClass:\"settings__save-button mt-4\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.exportSettings()}}},[_c('Icon',{staticClass:\"mr-3\",attrs:{\"icon\":\"fa6-solid:download\",\"height\":\"19px\"}}),_vm._v(\"設定をエクスポート \")],1),_c('div',{staticClass:\"settings__item mt-6\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"設定をインポート\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" [設定をエクスポート] でダウンロードした設定データを、このデバイス（ブラウザ）にインポートできます。\"),_c('br'),_vm._v(\" 設定をインポートすると、それまでこのデバイス（ブラウザ）に保存されていた設定が、すべてインポート先の設定データで上書きされます。元に戻すことはできません。 \")]),_c('v-file-input',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"設定データ (KonomiTV-Settings.json) を選択\",\"accept\":\"application/json\",\"prepend-icon\":\"\",\"prepend-inner-icon\":\"mdi-paperclip\"},model:{value:(_vm.import_settings_file),callback:function ($$v) {_vm.import_settings_file=$$v},expression:\"import_settings_file\"}})],1),_c('v-btn',{staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.importSettings()}}},[_c('Icon',{staticClass:\"mr-3\",attrs:{\"icon\":\"fa6-solid:upload\",\"height\":\"19px\"}}),_vm._v(\"設定をインポート \")],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('v-card',{staticClass:\"settings-container d-flex px-5 py-5 mx-auto background\",attrs:{\"elevation\":\"0\",\"width\":\"100%\",\"max-width\":\"1000\"}},[_c('div',[_c('v-navigation-drawer',{staticClass:\"settings-navigation flex-shrink-0 background\",attrs:{\"permanent\":\"\",\"width\":\"195\",\"height\":\"auto\"}},[_c('v-list-item',{staticClass:\"px-4\"},[_c('v-list-item-content',[_c('h1',[_vm._v(\"設定\")])])],1),_c('v-list',{staticClass:\"mt-2 px-0\",attrs:{\"nav\":\"\"}},[_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/general\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 3px\"},attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"全般\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/account\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"アカウント\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/jikkyo\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 2px\"},attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"ニコニコ実況\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/twitter\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 1px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"Twitter\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/environment\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:toolbox-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"環境設定\")])],1)],1)],1)],1)],1),_c('v-card',{staticClass:\"settings ml-5 px-7 py-7 background lighten-1\",attrs:{\"width\":\"100%\"}},[_vm._t(\"default\")],2)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\n\n// 設定のベース画面なので、ロジックは基本置かない\nexport default Vue.extend({\n    name: 'Settings-Base',\n    components: {\n        Header,\n        Navigation,\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Base.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Base.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Base.vue?vue&type=template&id=0989c600&scoped=true&\"\nimport script from \"./Base.vue?vue&type=script&lang=ts&\"\nexport * from \"./Base.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Base.vue?vue&type=style&index=0&id=0989c600&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0989c600\",\n  null\n  \n)\n\nexport default component.exports","\n\nimport Vue from 'vue';\n\nimport Base from '@/views/Settings/Base.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Settings-General',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // テレビのストリーミング画質の選択肢\n            tv_streaming_quality: [\n                {'text': '1080p (60fps) （1時間あたり約3.24GB / 7.2Mbps）', 'value': '1080p-60fps'},\n                {'text': '1080p （1時間あたり約2.31GB / 5.1Mbps）', 'value': '1080p'},\n                {'text': '810p （1時間あたり約1.92GB / 4.2Mbps）', 'value': '810p'},\n                {'text': '720p （1時間あたり約1.33GB / 3.0Mbps）', 'value': '720p'},\n                {'text': '540p （1時間あたり約1.00GB / 2.2Mbps）', 'value': '540p'},\n                {'text': '480p （1時間あたり約0.74GB / 1.6Mbps）', 'value': '480p'},\n                {'text': '360p （1時間あたり約0.40GB / 0.9Mbps）', 'value': '360p'},\n                {'text': '240p （1時間あたり約0.23GB / 0.5Mbps）', 'value': '240p'},\n            ],\n\n            // 既定のパネルの表示状態の選択肢\n            panel_display_state: [\n                {'text': '前回の状態を復元する', 'value': 'RestorePreviousState'},\n                {'text': '常に表示する', 'value': 'AlwaysDisplay'},\n                {'text': '常に折りたたむ', 'value': 'AlwaysFold'},\n            ],\n\n            // テレビをみるときに既定で表示されるパネルのタブの選択肢\n            tv_panel_active_tab: [\n                {'text': '番組情報タブ', 'value': 'Program'},\n                {'text': 'チャンネルタブ', 'value': 'Channel'},\n                {'text': 'コメントタブ', 'value': 'Comment'},\n                {'text': 'Twitter タブ', 'value': 'Twitter'},\n            ],\n\n            // キャプチャの保存先\n            capture_save_mode: [\n                {'text': 'ブラウザでダウンロード', 'value': 'Browser'},\n                {'text': 'KonomiTV サーバーにアップロード', 'value': 'UploadServer'},\n                {'text': 'ブラウザでのダウンロードと、KonomiTV サーバーへのアップロードを両方行う', 'value': 'Both'},\n            ],\n\n            // 字幕が表示されているときのキャプチャの保存モードの選択肢\n            capture_caption_mode: [\n                {'text': '映像のみのキャプチャを保存する', 'value': 'VideoOnly'},\n                {'text': '字幕を合成したキャプチャを保存する', 'value': 'CompositingCaption'},\n                {'text': '映像のみのキャプチャと、字幕を合成したキャプチャを両方保存する', 'value': 'Both'},\n            ],\n\n            // 選択された設定データ (KonomiTV-Settings.json) が入る\n            import_settings_file: null as File | null,\n\n            // 設定値が保存されるオブジェクト\n            // ここの値とフォームを v-model で binding する\n            settings: (() => {\n                // 現在の設定値を取得する\n                const settings = {}\n                const settings_keys = [\n                    'tv_streaming_quality',\n                    'low_latency_mode',\n                    'show_superimpose_tv',\n                    'panel_display_state',\n                    'tv_panel_active_tab',\n                    'capture_save_mode',\n                    'capture_caption_mode',\n                ];\n                for (const setting_key of settings_keys) {\n                    settings[setting_key] = Utils.getSettingsItem(setting_key);\n                }\n                return settings;\n            })(),\n        }\n    },\n    watch: {\n        // settings 内の値の変更を監視する\n        settings: {\n            deep: true,\n            handler() {\n                // settings 内の値を順に LocalStorage に保存する\n                for (const [setting_key, setting_value] of Object.entries(this.settings)) {\n                    Utils.setSettingsItem(setting_key, setting_value);\n                }\n            }\n        }\n    },\n    methods: {\n\n        // 設定データをエクスポートする\n        exportSettings() {\n\n            // JSON のままの設定データを LocalStorage から直に取得\n            // \"KonomiTV-Settings\" キーがないときはデフォルト設定を JSON 化したものを入れる\n            const settings_json = localStorage.getItem('KonomiTV-Settings') || JSON.stringify(Utils.default_settings);\n\n            // ダウンロードさせるために Blob にしてから、KonomiTV-Settings.json としてダウンロード\n            const settings_json_blob = new Blob([settings_json], {type: 'application/json'});\n            Utils.downloadBlobData(settings_json_blob, 'KonomiTV-Settings.json');\n            this.$message.success('設定をエクスポートしました。');\n        },\n\n        // 設定データをインポートする\n        async importSettings() {\n\n            // 設定データが選択されていないときは実行しない\n            if (this.import_settings_file === null) {\n                this.$message.error('インポートする設定データを選択してください！');\n                return;\n            }\n\n            try {\n\n                // 選択された設定データの JSON を取得してデコード\n                // そのまま突っ込んでもいいんだけど、念のため一度オブジェクトになおしておく\n                const settings = JSON.parse(await this.import_settings_file.text());\n\n                // LocalStorage に直に保存\n                // このとき、既存の設定データはすべて上書きされる\n                localStorage.setItem('KonomiTV-Settings', JSON.stringify(settings));\n\n                // 設定データをサーバーに同期する\n                await Utils.syncClientSettingsToServer();\n\n                // 設定を適用するためリロード\n                this.$message.success('設定をインポートしました。');\n                window.setTimeout(() => this.$router.go(0), 300);\n\n            } catch (error) {\n                this.$message.error('設定データが不正なため、インポートできませんでした。');\n                return;\n            }\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./General.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./General.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./General.vue?vue&type=template&id=07de9d45&\"\nimport script from \"./General.vue?vue&type=script&lang=ts&\"\nexport * from \"./General.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"25px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"アカウント\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[(_vm.user === null)?_c('div',{staticClass:\"account\"},[_c('img',{staticClass:\"account__icon\",attrs:{\"src\":\"/assets/images/account-icon-default.png\"}}),_c('div',{staticClass:\"account__info\"},[_c('div',{staticClass:\"account__info-name\"},[_c('span',{staticClass:\"account__info-name-text\"},[_vm._v(\"ログインしていません\")])]),_c('span',{staticClass:\"account__info-id\"},[_vm._v(\"Not logged in\")])]),_c('v-btn',{staticClass:\"account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"140\",\"height\":\"56\",\"depressed\":\"\",\"to\":\"/login/\"}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-in\"}}),_vm._v(\"ログイン \")],1)],1):_vm._e(),(_vm.user !== null)?_c('div',{staticClass:\"account\"},[_c('img',{staticClass:\"account__icon\",attrs:{\"src\":_vm.user_icon_blob}}),_c('div',{staticClass:\"account__info\"},[_c('div',{staticClass:\"account__info-name\"},[_c('span',{staticClass:\"account__info-name-text\"},[_vm._v(_vm._s(_vm.user.name))]),(_vm.user.is_admin)?_c('span',{staticClass:\"account__info-admin\"},[_vm._v(\"管理者\")]):_vm._e()]),_c('span',{staticClass:\"account__info-id\"},[_vm._v(\"User ID: \"+_vm._s(_vm.user.id))])]),_c('v-btn',{staticClass:\"account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"140\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.logout()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-out\"}}),_vm._v(\"ログアウト \")],1)],1):_vm._e(),(_vm.is_logged_in === false)?_c('div',{staticClass:\"account-register\"},[_c('div',{staticClass:\"account-register__heading\"},[_vm._v(\" KonomiTV アカウントにログインすると、\"),_c('br'),_vm._v(\"より便利な機能が使えます！ \")]),_c('div',{staticClass:\"account-register__feature\"},[_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"ニコニコ実況にコメントする\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"テレビを見ながらニコニコ実況にコメントできます。別途、ニコニコアカウントとの連携が必要です。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fa-brands:twitter\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"Twitter 連携機能\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"テレビを見ながら Twitter にツイートしたり、検索したツイートをリアルタイムで表示できます。別途、Twitter アカウントとの連携が必要です。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fluent:arrow-sync-20-filled\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"設定をデバイス間で同期\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"ピン留めしたチャンネルなど、ブラウザに保存されている各種設定をブラウザやデバイスをまたいで同期できます。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fa-solid:sliders-h\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"環境設定をブラウザから変更\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"管理者権限があれば、環境設定をブラウザから変更できます。一番最初に作成されたアカウントには、自動で管理者権限が付与されます。\")])])],1)]),_c('div',{staticClass:\"account-register__description\"},[_vm._v(\" KonomiTV アカウントの作成に必要なものはユーザー名とパスワードだけです。\"),_c('br'),_vm._v(\" アカウントはローカルにインストールした KonomiTV サーバーごとに保存されます。\"),_c('br'),_vm._v(\" 外部のサービスには保存されませんので、ご安心ください。\"),_c('br')]),_c('v-btn',{staticClass:\"account-register__button\",attrs:{\"color\":\"secondary\",\"width\":\"100%\",\"max-width\":\"250\",\"height\":\"50\",\"depressed\":\"\",\"to\":\"/register/\"}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-add-20-filled\",\"height\":\"24\"}}),_vm._v(\"アカウントを作成 \")],1)],1):_vm._e(),(_vm.is_logged_in === true)?_c('div',[_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"sync_settings\"}},[_vm._v(\"設定をデバイス間で同期する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"sync_settings\"}},[_vm._v(\" KonomiTV の設定を、同じアカウントにログインしているデバイス同士で同期するかを設定します。\"),_c('br'),_vm._v(\" 同期を有効にすると、同期が有効なデバイスすべてで同じ設定が使えます。ピン留めしたチャンネルやハッシュタグリストなども同期されます。\"),_c('br'),_vm._v(\" ストリーミング画質やコメントの遅延時間など、デバイスごとに最適な設定が異なるものは、同期を有効にしたあとも引き続きこのデバイス（ブラウザ）のみに反映されます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"sync_settings\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.sync_settings),callback:function ($$v) {_vm.sync_settings=$$v},expression:\"sync_settings\"}})],1),_c('v-dialog',{attrs:{\"max-width\":\"440\"},model:{value:(_vm.sync_settings_dialog),callback:function ($$v) {_vm.sync_settings_dialog=$$v},expression:\"sync_settings_dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"justify-center\"},[_vm._v(\"設定データの競合\")]),_c('v-card-text',[_vm._v(\" このデバイスの設定と、サーバーに保存されている設定データが競合しています。\"),_c('br')]),_c('div',{staticClass:\"d-flex flex-column px-4 pb-4\"},[_c('v-btn',{staticClass:\"settings__save-button\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.overrideServerSettingsFromClient()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:document-arrow-up-16-filled\",\"height\":\"22px\"}}),_vm._v(\" このデバイスの設定でサーバー上の設定データを上書き \")],1),_c('v-btn',{staticClass:\"settings__save-button mt-3\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.overrideClientSettingsFromServer()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:document-arrow-down-16-filled\",\"height\":\"22px\"}}),_vm._v(\" サーバー上の設定データでこのデバイスの設定を上書き \")],1),_c('v-btn',{staticClass:\"settings__save-button mt-3\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){_vm.sync_settings_dialog = false}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:dismiss-16-filled\",\"height\":\"22px\"}}),_vm._v(\" キャンセル \")],1)],1)],1)],1),_c('v-form',{ref:\"settings_username\",staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ユーザー名\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントのユーザー名を設定します。アルファベットだけでなく日本語や記号も使えます。\"),_c('br'),_vm._v(\" 同じ KonomiTV サーバー上の他のアカウントと同じユーザー名には変更できません。\"),_c('br')]),_c('v-text-field',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"rules\":[_vm.settings_username_validation]},model:{value:(_vm.settings_username),callback:function ($$v) {_vm.settings_username=$$v},expression:\"settings_username\"}})],1),_c('v-btn',{staticClass:\"settings__save-button\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountInfo('username')}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"ユーザー名を更新 \")],1),_c('v-form',{staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"アイコン画像\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントのアイコン画像を設定します。\"),_c('br'),_vm._v(\" アップロードされた画像は自動的に 400×400 の正方形にリサイズされます。\"),_c('br')]),_c('v-file-input',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"アイコン画像を選択\",\"accept\":\"image/jpeg, image/png\",\"prepend-icon\":\"\",\"prepend-inner-icon\":\"mdi-paperclip\"},model:{value:(_vm.settings_icon),callback:function ($$v) {_vm.settings_icon=$$v},expression:\"settings_icon\"}})],1),_c('v-btn',{staticClass:\"settings__save-button mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountIcon()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"アイコン画像を更新 \")],1),_c('v-form',{ref:\"settings_password\",staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"新しいパスワード\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントの新しいパスワードを設定します。\"),_c('br')]),_c('v-text-field',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"placeholder\":\"新しいパスワード\",\"type\":_vm.settings_password_showing ? 'text' : 'password',\"append-icon\":_vm.settings_password_showing ? 'mdi-eye' : 'mdi-eye-off',\"rules\":[_vm.settings_password_validation]},on:{\"click:append\":function($event){_vm.settings_password_showing = !_vm.settings_password_showing}},model:{value:(_vm.settings_password),callback:function ($$v) {_vm.settings_password=$$v},expression:\"settings_password\"}})],1),_c('v-btn',{staticClass:\"settings__save-button\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountInfo('password')}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"パスワードを更新 \")],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item mt-6\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"アカウントを削除\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 現在ログインしている KonomiTV アカウントを削除します。\"),_c('br'),_vm._v(\" アカウントに紐づくすべてのデータが削除されます。元に戻すことはできません。\"),_c('br')])]),_c('v-dialog',{attrs:{\"max-width\":\"385\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"}},'v-btn',attrs,false),on),[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:delete-16-filled\",\"height\":\"24px\"}}),_vm._v(\"アカウントを削除 \")],1)]}}],null,false,974850237),model:{value:(_vm.account_delete_confirm_dialog),callback:function ($$v) {_vm.account_delete_confirm_dialog=$$v},expression:\"account_delete_confirm_dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"justify-center\"},[_vm._v(\"本当にアカウントを削除しますか？\")]),_c('v-card-text',[_vm._v(\" アカウントに紐づくすべてのデータが削除されます。元に戻すことはできません。\"),_c('br'),_vm._v(\" 本当にアカウントを削除しますか？ \")]),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"text\",\"text\":\"\"},on:{\"click\":function($event){_vm.account_delete_confirm_dialog = false}}},[_vm._v(\"キャンセル\")]),_c('v-btn',{attrs:{\"color\":\"error\",\"text\":\"\"},on:{\"click\":function($event){return _vm.deleteAccount()}}},[_vm._v(\"削除\")])],1)],1)],1)],1):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport axios from 'axios';\nimport Vue from 'vue';\n\nimport { IUser } from '@/interface';\nimport Base from '@/views/Settings/Base.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Settings-Account',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n\n            // ローディング中かどうか\n            is_loading: true,\n\n            // ログイン中かどうか\n            is_logged_in: Utils.getAccessToken() !== null,\n\n            // ユーザーアカウントの情報\n            // ログインしていない場合は null になる\n            user: null as IUser | null,\n\n            // ユーザーアカウントのアイコンの Blob URL\n            user_icon_blob: '',\n\n            // ユーザー名とパスワード\n            // ログイン画面やアカウント作成画面の data と同一のもの\n            settings_username: null as string | null,\n            settings_username_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'ユーザー名を入力してください。';\n                if (/^.{2,}$/.test(value) === false) return 'ユーザー名は2文字以上で入力してください。';\n                return true;\n            },\n            settings_password: null as string | null,\n            settings_password_showing: true,  // アカウント情報変更時は既定でパスワードを表示する\n            settings_password_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'パスワードを入力してください。';\n                // 正規表現の参考: https://qiita.com/grrrr/items/0b35b5c1c98eebfa5128\n                if (/^[a-zA-Z0-9!-/:-@¥[-`{-~]{4,}$/.test(value) === false) return 'パスワードは4文字以上の半角英数記号を入力してください。';\n                return true;\n            },\n\n            // アイコン画像\n            settings_icon: null as File | null,\n\n            // アカウント削除確認ダイヤログ\n            account_delete_confirm_dialog: null,\n\n            // 設定を同期するかの設定値\n            sync_settings: Utils.getSettingsItem('sync_settings') as boolean,\n\n            // 設定を同期するときのダイヤログ\n            sync_settings_dialog: false,\n        }\n    },\n    async created() {\n\n        // 表示されているアカウント情報を更新\n        // アクセストークンが無効化されている可能性もあるので、アクセストークンの有無に関わらず実行する\n        await this.syncAccountInfo();\n\n        // ローディング状態を解除\n        this.is_loading = false;\n    },\n    watch: {\n        // sync_settings の値の変更を監視する\n        async sync_settings() {\n\n            // 同期がオンになった & ダイヤログが表示されていない\n            if (this.sync_settings === true && this.sync_settings_dialog === false) {\n\n                try {\n\n                    // もし KonomiTV-Settings キーがまだない場合、あらかじめデフォルトの設定値を保存しておく\n                    if (localStorage.getItem('KonomiTV-Settings') === null) {\n                        localStorage.setItem('KonomiTV-Settings', JSON.stringify(Utils.default_settings));\n                    }\n\n                    // LocalStorage から KonomiTV-Settings を取得\n                    const settings: {[key: string]: any} = JSON.parse(localStorage.getItem('KonomiTV-Settings'));\n\n                    // 同期対象の設定キーのみで設定データをまとめ直す\n                    // sync_settings には同期対象外の設定は含まれない\n                    const sync_settings: {[key: string]: any} = {};\n                    for (const sync_settings_key of Utils.sync_settings_keys) {\n                        if (sync_settings_key in settings) {\n                            sync_settings[sync_settings_key] = settings[sync_settings_key];\n                        } else {\n                            // 後から追加された設定キーなどの理由で設定キーが現状の KonomiTV-Settings に存在しない場合\n                            // その設定キーのデフォルト値を取得する\n                            sync_settings[sync_settings_key] = Utils.default_settings[sync_settings_key];\n                        }\n                    }\n\n                    // 同期対象のこのクライアントの設定を再度 JSON にする（文字列比較のため）\n                    const sync_settings_json = JSON.stringify(sync_settings);\n\n                    // サーバーから設定データ (生の JSON) をダウンロード\n                    // 一度オブジェクトにしたものを再度 JSON にする（文字列比較のため）\n                    const server_sync_settings_json: string = JSON.stringify((await Vue.axios.get('/settings/client')).data);\n\n                    // このクライアントの設定とサーバーに保存されている設定が一致しない（=競合している）\n                    if (sync_settings_json !== server_sync_settings_json) {\n\n                        // 一度同期をオフにして、クライアントとサーバーどちらの設定を使うのかを選択させるダイヤログを表示\n                        this.sync_settings_dialog = true;\n                        this.sync_settings = false;\n\n                    // このクライアントの設定とサーバーに保存されている設定が一致する\n                    } else {\n\n                        // 特に設定の同期をオンにしても問題ないので、そのまま有効にする\n                        Utils.setSettingsItem('sync_settings', true);\n                    }\n\n                } catch (error) {\n                    // 何らかの理由でエラーになったとき\n                    this.$message.error(`サーバーから設定データを取得できませんでした。(HTTP Error ${error.response.status})`);\n                }\n\n            // 同期がオフになった & ダイヤログが表示されていない\n            } else if (this.sync_settings === false && this.sync_settings_dialog === false) {\n                Utils.setSettingsItem('sync_settings', false);\n            }\n        }\n    },\n    methods: {\n\n        // このクライアントの設定でサーバー上の設定を上書きする\n        async overrideServerSettingsFromClient() {\n\n            // 強制的にこのクライアントの設定をサーバーに同期\n            await Utils.syncClientSettingsToServer(true);\n\n            // 設定の同期を有効化\n            this.sync_settings = true;\n            Utils.setSettingsItem('sync_settings', true);\n\n            // ダイヤログを閉じる\n            this.sync_settings_dialog = false;\n        },\n\n        // サーバー上の設定でこのクライアントの設定を上書きする\n        async overrideClientSettingsFromServer() {\n\n            // 強制的にサーバーに保存されている設定データをこのクライアントに同期する\n            // 設定の同期を有効化する前に実行しておくのが重要\n            await Utils.syncServerSettingsToClient(true);\n\n            // 設定の同期を有効化\n            // Utils.setSettingsItem() した段階で設定データがサーバーにアップロードされてしまうので、\n            // それよりも前に Utils.syncServerSettingsToClient(true) でサーバー上の設定データを同期させておく必要がある\n            // さもなければ、サーバー上の設定データがこのクライアントの設定で上書きされてしまい、overrideServerSettingsFromClient() と同じ挙動になってしまう\n            this.sync_settings = true;\n            Utils.setSettingsItem('sync_settings', true);\n\n            // ダイヤログを閉じる\n            this.sync_settings_dialog = false;\n        },\n\n        async syncAccountInfo() {\n\n            try {\n\n                // ユーザーアカウントの情報を取得する\n                const response = await Vue.axios.get('/users/me');\n                this.user = response.data;\n                this.settings_username = this.user.name;\n\n                // 表示中のアイコン画像を更新\n                await this.syncAccountIcon();\n\n            } catch (error) {\n\n                // ログインされていない\n                if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n                    console.log('Not logged in.');\n\n                    // 未ログイン状態に設定\n                    this.is_logged_in = false;\n                    this.user = null;\n                    this.user_icon_blob = '';\n\n                    // まだアクセストークンが残っているかもしれないので、明示的にログアウト\n                    Utils.deleteAccessToken();\n                }\n            }\n        },\n\n        async syncAccountIcon() {\n\n            // ユーザーアカウントのアイコンを取得する\n            // 認証が必要な URL は img タグからは直で読み込めないため\n            const icon_response = await Vue.axios.get('/users/me/icon', {\n                responseType: 'arraybuffer',\n            });\n\n            // Blob URL を生成\n            this.user_icon_blob = URL.createObjectURL(new Blob([icon_response.data], {type: 'image/png'}));\n        },\n\n        async updateAccountInfo(update_type: 'username' | 'password') {\n\n            // すべてのバリデーションが通過したときのみ\n            // ref: https://qiita.com/Hijiri_Ishi/items/56cac99c8f3806a6fa24\n            if (update_type === 'username') {\n                if ((this.$refs.settings_username as any).validate() === false) return;\n            } else {\n                if ((this.$refs.settings_password as any).validate() === false) return;\n            }\n\n            try {\n\n                // アカウント情報更新 API にリクエスト\n                // レスポンスは 204 No Content なので不要\n                if (update_type === 'username') {\n                    await Vue.axios.put('/users/me', {username: this.settings_username});\n                    this.$message.show('ユーザー名を更新しました。');\n                } else {\n                    await Vue.axios.put('/users/me', {password: this.settings_password});\n                    this.$message.show('パスワードを更新しました。');\n                }\n\n                // 表示中のアカウント情報を更新\n                await this.syncAccountInfo();\n\n            } catch (error) {\n\n                // アカウント情報の更新に失敗\n                // ref: https://dev.classmethod.jp/articles/typescript-typing-exception-objects-in-axios-trycatch/\n                if (axios.isAxiosError(error) && error.response && error.response.status === 422) {\n                    // エラーメッセージごとに Snackbar に表示\n                    switch ((error.response.data as any).detail) {\n                        case 'Specified username is duplicated': {\n                            this.$message.error('ユーザー名が重複しています。');\n                            break;\n                        }\n                        case 'Specified username is not accepted due to system limitations': {\n                            this.$message.error('ユーザー名に token と me は使えません。');\n                            break;\n                        }\n                        default: {\n                            this.$message.error(`アカウント情報を更新できませんでした。(HTTP Error ${error.response.status})`);\n                            break;\n                        }\n                    }\n                }\n            }\n        },\n\n        async updateAccountIcon() {\n\n            // アイコン画像が選択されていないなら更新しない\n            if (this.settings_icon === null) {\n                this.$message.error('アップロードする画像を選択してください！');\n                return;\n            }\n\n            // アイコン画像の File オブジェクト (= Blob) を FormData に入れる\n            // multipart/form-data で送るために必要\n            // ref: https://r17n.page/2020/02/04/nodejs-axios-file-upload-api/\n            const form_data = new FormData();\n            form_data.append('image', this.settings_icon);\n\n            try {\n\n                // アカウントアイコン画像更新 API にリクエスト\n                await Vue.axios.put('/users/me/icon', form_data, {headers: {'Content-Type': 'multipart/form-data'}});\n\n                // 表示中のアイコン画像を更新\n                await this.syncAccountIcon();\n\n            } catch (error) {\n\n                // アカウント情報の更新に失敗\n                // ref: https://dev.classmethod.jp/articles/typescript-typing-exception-objects-in-axios-trycatch/\n                if (axios.isAxiosError(error) && error.response && error.response.status === 422) {\n                    // エラーメッセージごとに Snackbar に表示\n                    switch ((error.response.data as any).detail) {\n                        case 'Please upload JPEG or PNG image': {\n                            this.$message.error('JPEG または PNG 画像をアップロードしてください。');\n                            break;\n                        }\n                        default: {\n                            this.$message.error(`アイコン画像を更新できませんでした。(HTTP Error ${error.response.status})`);\n                            break;\n                        }\n                    }\n                }\n            }\n        },\n\n        async deleteAccount() {\n\n            // ダイヤログを閉じる\n            this.account_delete_confirm_dialog = false;\n\n            // アカウント削除 API にリクエスト\n            await Vue.axios.delete('/users/me');\n\n            // ブラウザからアクセストークンを削除\n            Utils.deleteAccessToken();\n\n            // 未ログイン状態に設定\n            this.is_logged_in = false;\n            this.user = null;\n            this.user_icon_blob = '';\n\n            this.$message.show('アカウントを削除しました。');\n        },\n\n        logout() {\n\n            // ブラウザからアクセストークンを削除\n            // これをもってログアウトしたことになる（それ以降の Axios のリクエストにはアクセストークンが含まれなくなる）\n            Utils.deleteAccessToken();\n\n            // 未ログイン状態に設定\n            this.is_logged_in = false;\n            this.user = null;\n            this.user_icon_blob = '';\n\n            this.$message.success('ログアウトしました。');\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Account.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Account.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Account.vue?vue&type=template&id=03a4e7f2&scoped=true&\"\nimport script from \"./Account.vue?vue&type=script&lang=ts&\"\nexport * from \"./Account.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Account.vue?vue&type=style&index=0&id=03a4e7f2&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"03a4e7f2\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('Icon',{attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"19px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"ニコニコ実況\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[(_vm.user.niconico_user_id === null)?_c('div',{staticClass:\"niconico-account\"},[_c('Icon',{staticClass:\"flex-shrink-0\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"45px\"}}),_c('div',{staticClass:\"niconico-account__info ml-4\"},[_c('div',{staticClass:\"niconico-account__info-name\"},[_c('span',{staticClass:\"niconico-account__info-name-text\"},[_vm._v(\"ニコニコアカウントと連携していません\")])]),_c('span',{staticClass:\"niconico-account__info-description\"},[_vm._v(\" ニコニコアカウントと連携すると、テレビを見ながらニコニコ実況にコメントできるようになります。 \")])]),_c('v-btn',{staticClass:\"niconico-account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"130\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.loginNiconicoAccount()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-connected-20-filled\",\"height\":\"26\"}}),_vm._v(\"連携する \")],1)],1):_vm._e(),(_vm.user.niconico_user_id !== null)?_c('div',{staticClass:\"niconico-account\"},[_c('img',{staticClass:\"niconico-account__icon\",attrs:{\"src\":this.niconico_user_icon_url}}),_c('div',{staticClass:\"niconico-account__info\"},[_c('div',{staticClass:\"niconico-account__info-name\"},[_c('span',{staticClass:\"niconico-account__info-name-text\"},[_vm._v(_vm._s(_vm.user.niconico_user_name)+\" と連携しています\")])]),_c('span',{staticClass:\"niconico-account__info-description\"},[_c('span',{staticClass:\"mr-2\"},[_vm._v(\"Niconico User ID:\")]),_c('a',{staticClass:\"mr-2\",attrs:{\"href\":`https://www.nicovideo.jp/user/${_vm.user.niconico_user_id}`,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.user.niconico_user_id))]),(_vm.user.niconico_user_premium == true)?_c('span',{staticClass:\"secondary--text\"},[_vm._v(\"(Premium)\")]):_vm._e()])]),_c('v-btn',{staticClass:\"niconico-account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"130\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.logoutNiconicoAccount()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-disconnected-20-filled\",\"height\":\"26\"}}),_vm._v(\"連携解除 \")],1)],1):_vm._e(),_c('div',{staticClass:\"settings__item mt-7\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントの速さ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーに流れるコメントの速さを設定します。\"),_c('br'),_vm._v(\" たとえば 1.2 に設定すると、コメントが 1.2 倍速く流れます。\"),_c('br')]),_c('v-slider',{staticClass:\"settings__item-form\",attrs:{\"ticks\":\"always\",\"thumb-label\":\"\",\"hide-details\":\"\",\"step\":0.1,\"min\":0.5,\"max\":2},model:{value:(_vm.settings.comment_speed_rate),callback:function ($$v) {_vm.$set(_vm.settings, \"comment_speed_rate\", $$v)},expression:\"settings.comment_speed_rate\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントの文字サイズ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーに流れるコメントの文字サイズの基準値を設定します。\"),_c('br'),_vm._v(\" 実際の文字サイズは画面の大きさに合わせて調整されます。既定の文字サイズは 34px です。\"),_c('br')]),_c('v-slider',{staticClass:\"settings__item-form\",attrs:{\"ticks\":\"always\",\"thumb-label\":\"\",\"hide-details\":\"\",\"min\":20,\"max\":60},model:{value:(_vm.settings.comment_font_size),callback:function ($$v) {_vm.$set(_vm.settings, \"comment_font_size\", $$v)},expression:\"settings.comment_font_size\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントの遅延時間\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーやコメントリストに表示されるコメントを何秒遅らせて反映するかを設定します。\"),_c('br'),_vm._v(\" 通常は 1.75 秒程度で大丈夫です。ネットワークが遅いなどでタイムラグが大きいときだけ、映像の遅延に合わせて調整してください。\"),_c('br')]),_c('v-slider',{staticClass:\"settings__item-form\",attrs:{\"ticks\":\"always\",\"thumb-label\":\"\",\"hide-details\":\"\",\"step\":0.25,\"min\":0,\"max\":10},model:{value:(_vm.settings.comment_delay_time),callback:function ($$v) {_vm.$set(_vm.settings, \"comment_delay_time\", $$v)},expression:\"settings.comment_delay_time\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"close_comment_form_after_send\"}},[_vm._v(\"コメント送信後にコメント入力フォームを閉じる\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"close_comment_form_after_send\"}},[_vm._v(\" コメントを送信したあとに、コメント入力フォームを自動的に閉じるかを設定します。\"),_c('br'),_vm._v(\" 基本的にはオンのままにしておくことをおすすめします。コメント入力フォームが表示されたままだと、大部分のショートカットキーが文字入力と競合して使えないためです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"close_comment_form_after_send\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settings.close_comment_form_after_send),callback:function ($$v) {_vm.$set(_vm.settings, \"close_comment_form_after_send\", $$v)},expression:\"settings.close_comment_form_after_send\"}})],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport axios from 'axios';\nimport Vue from 'vue';\n\nimport { IUser } from '@/interface';\nimport Base from '@/views/Settings/Base.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Settings-Jikkyo',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n\n            // ローディング中かどうか\n            is_loading: true,\n\n            // ログイン中かどうか\n            is_logged_in: Utils.getAccessToken() !== null,\n\n            // ユーザーアカウントの情報\n            // ログインしていない場合は null になる\n            user: null as IUser | null,\n\n            // ニコニコアカウントのユーザーアイコンの URL\n            niconico_user_icon_url: '',\n\n            // 設定値が保存されるオブジェクト\n            // ここの値とフォームを v-model で binding する\n            settings: (() => {\n                // 現在の設定値を取得する\n                const settings = {}\n                for (const setting of [\n                        'comment_speed_rate',\n                        'comment_font_size',\n                        'comment_delay_time',\n                        'close_comment_form_after_send',\n                    ]) {\n                    settings[setting] = Utils.getSettingsItem(setting);\n                }\n                return settings;\n            })(),\n        }\n    },\n    async created() {\n\n        // ユーザーモデルの初期値\n        // 初回描画で niconico_user_id が null かを判定するだけのためにセットしている\n        this.user = {\n            id: 0,\n            name: '',\n            is_admin: true,\n            niconico_user_id: null,\n            niconico_user_name: null,\n            niconico_user_premium: null,\n            twitter_accounts: [],\n            created_at: '',\n            updated_at: '',\n        }\n\n        // 表示されているアカウント情報を更新 (ログイン時のみ)\n        if (this.is_logged_in === true) {\n            await this.syncAccountInfo();\n        }\n\n        // ローディング状態を解除\n        this.is_loading = false;\n    },\n    watch: {\n        // settings 内の値の変更を監視する\n        settings: {\n            deep: true,\n            handler() {\n                // settings 内の値を順に LocalStorage に保存する\n                for (const [setting_key, setting_value] of Object.entries(this.settings)) {\n                    Utils.setSettingsItem(setting_key, setting_value);\n                }\n            }\n        }\n    },\n    methods: {\n        async syncAccountInfo() {\n\n            try {\n\n                // ユーザーアカウントの情報を取得する\n                const response = await Vue.axios.get('/users/me');\n                this.user = response.data;\n\n                // ニコニコアカウントのユーザーアイコンの URL を生成 (ニコニコアカウントと連携されている場合のみ)\n                if (this.user.niconico_user_id !== null) {\n                    const user_id_slice = this.user.niconico_user_id.toString().slice(0, 4);\n                    this.niconico_user_icon_url =\n                        `https://secure-dcdn.cdn.nimg.jp/nicoaccount/usericon/${user_id_slice}/${this.user.niconico_user_id}.jpg`;\n                }\n\n            } catch (error) {\n\n                // ログインされていない\n                if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n\n                    // 未ログイン状態に設定\n                    this.is_logged_in = false;\n                    this.user = null;\n                }\n            }\n        },\n\n        async loginNiconicoAccount() {\n\n            // ログインしていない場合はエラーにする\n            if (this.is_logged_in === false) {\n                this.$message.warning('連携をはじめるには、KonomiTV アカウントにログインしてください。');\n                return;\n            }\n\n            // ニコニコアカウントと連携するための認証 URL を取得\n            const authorization_url = (await Vue.axios.get('/niconico/auth')).data.authorization_url;\n\n            // OAuth 連携のため、認証 URL をポップアップウインドウで開く\n            // window.open() の第2引数はユニークなものにしておくと良いらしい\n            // ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1 (大変参考になりました)\n            const popup_window = window.open(authorization_url, 'KonomiTV-OAuthPopup', Utils.getWindowFeatures());\n\n            // 認証完了 or 失敗後、ポップアップウインドウから送信される文字列を受信\n            const onMessage = async (event) => {\n\n                // すでにウインドウが閉じている場合は実行しない\n                if (popup_window.closed) return;\n\n                // 受け取ったオブジェクトに KonomiTV-OAuthPopup キーがない or そもそもオブジェクトではない際は実行しない\n                // ブラウザの拡張機能から結構余計な message が飛んでくるっぽい…。\n                if (Utils.typeof(event.data) !== 'object') return;\n                if (('KonomiTV-OAuthPopup' in event.data) === false) return;\n\n                // 認証は完了したので、ポップアップウインドウを閉じ、リスナーを解除する\n                if (popup_window) popup_window.close();\n                window.removeEventListener('message', onMessage);\n\n                // ステータスコードと詳細メッセージを取得\n                const authorization_status = event.data['KonomiTV-OAuthPopup']['status'] as number;\n                const authorization_detail = event.data['KonomiTV-OAuthPopup']['detail'] as string;\n                console.log(`NiconicoAuthCallbackAPI: Status: ${authorization_status} / Detail: ${authorization_detail}`);\n\n                // OAuth 連携に失敗した\n                if (authorization_status !== 200) {\n                    if (authorization_detail.startsWith('Authorization was denied (access_denied)')) {\n                        this.$message.error('ニコニコアカウントとの連携がキャンセルされました。');\n                    } else if (authorization_detail.startsWith('Failed to get access token (HTTP Error ')) {\n                        const error = authorization_detail.replace('Failed to get access token ', '');\n                        this.$message.error(`アクセストークンの取得に失敗しました。${error}`);\n                    } else if (authorization_detail.startsWith('Failed to get access token (Connection Timeout)')) {\n                        this.$message.error('アクセストークンの取得に失敗しました。ニコニコで障害が発生している可能性があります。');\n                    } else if (authorization_detail.startsWith('Failed to get user information (HTTP Error ')) {\n                        const error = authorization_detail.replace('Failed to get user information ', '');\n                        this.$message.error(`ニコニコアカウントのユーザー情報の取得に失敗しました。${error}`);\n                    } else if (authorization_detail.startsWith('Failed to get user information (Connection Timeout)')) {\n                        this.$message.error('ニコニコアカウントのユーザー情報の取得に失敗しました。ニコニコで障害が発生している可能性があります。');\n                    } else {\n                        this.$message.error(`ニコニコアカウントとの連携に失敗しました。(${authorization_detail})`);\n                    }\n                    return;\n                }\n\n                // 表示されているアカウント情報を更新\n                await this.syncAccountInfo();\n\n                this.$message.success('ニコニコアカウントと連携しました。');\n            };\n\n            // postMessage() を受信するリスナーを登録\n            window.addEventListener('message', onMessage);\n        },\n\n        async logoutNiconicoAccount() {\n\n            // ニコニコアカウント連携解除 API にリクエスト\n            await Vue.axios.delete('/niconico/logout');\n\n            // 表示されているアカウント情報を更新\n            await this.syncAccountInfo();\n\n            this.$message.success('ニコニコアカウントとの連携を解除しました。');\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Jikkyo.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Jikkyo.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Jikkyo.vue?vue&type=template&id=1cf388cb&scoped=true&\"\nimport script from \"./Jikkyo.vue?vue&type=script&lang=ts&\"\nexport * from \"./Jikkyo.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Jikkyo.vue?vue&type=style&index=0&id=1cf388cb&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1cf388cb\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('Icon',{attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"22px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"Twitter\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[_c('div',{staticClass:\"twitter-accounts\"},[(_vm.user.twitter_accounts.length > 0)?_c('div',{staticClass:\"twitter-accounts__heading\"},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-board-20-filled\",\"height\":\"30\"}}),_vm._v(\"連携中のアカウント \")],1):_vm._e(),(_vm.user.twitter_accounts.length === 0)?_c('div',{staticClass:\"twitter-accounts__guide\"},[_c('Icon',{staticClass:\"flex-shrink-0\",attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"45px\"}}),_c('div',{staticClass:\"ml-4\"},[_c('div',{staticClass:\"font-weight-bold text-h6\"},[_vm._v(\"Twitter アカウントと連携していません\")]),_c('div',{staticClass:\"text--text text--darken-1 text-subtitle-2 mt-1\"},[_vm._v(\" Twitter アカウントと連携すると、テレビを見ながら Twitter にツイートしたり、ほかの実況ツイートをリアルタイムで表示できるようになります。 \")])])],1):_vm._e(),_vm._l((_vm.user.twitter_accounts),function(twitter_account){return _c('div',{key:twitter_account.id,staticClass:\"twitter-account\"},[_c('img',{staticClass:\"twitter-account__icon\",attrs:{\"src\":twitter_account.icon_url}}),_c('div',{staticClass:\"twitter-account__info\"},[_c('div',{staticClass:\"twitter-account__info-name\"},[_c('span',{staticClass:\"twitter-account__info-name-text\"},[_vm._v(_vm._s(twitter_account.name))])]),_c('span',{staticClass:\"twitter-account__info-screen-name\"},[_vm._v(\"@\"+_vm._s(twitter_account.screen_name))])]),_c('v-btn',{staticClass:\"twitter-account__logout ml-auto\",attrs:{\"width\":\"124\",\"height\":\"52\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.logoutTwitterAccount(twitter_account.screen_name)}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-disconnected-20-filled\",\"height\":\"24\"}}),_vm._v(\"連携解除 \")],1)],1)}),_c('v-btn',{staticClass:\"twitter-account__login\",attrs:{\"color\":\"secondary\",\"max-width\":\"250\",\"height\":\"50\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.loginTwitterAccount()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-connected-20-filled\",\"height\":\"24\"}}),_vm._v(\"連携するアカウントを追加 \")],1)],2),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"既定で表示される Twitter タブ内のタブ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 視聴画面を開いたときに、パネルの Twitter タブの中で最初に表示されるタブを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"items\":_vm.twitter_active_tab},model:{value:(_vm.settings.twitter_active_tab),callback:function ($$v) {_vm.$set(_vm.settings, \"twitter_active_tab\", $$v)},expression:\"settings.twitter_active_tab\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ツイートにつけるハッシュタグの位置\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" ツイート本文から見て、ハッシュタグをどの位置につけてツイートするかを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"items\":_vm.tweet_hashtag_position},model:{value:(_vm.settings.tweet_hashtag_position),callback:function ($$v) {_vm.$set(_vm.settings, \"tweet_hashtag_position\", $$v)},expression:\"settings.tweet_hashtag_position\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ツイートするキャプチャに番組タイトルの透かしを描画する\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" ツイートするキャプチャに、視聴中の番組タイトルの透かしを描画するかを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"items\":_vm.tweet_capture_watermark_position},model:{value:(_vm.settings.tweet_capture_watermark_position),callback:function ($$v) {_vm.$set(_vm.settings, \"tweet_capture_watermark_position\", $$v)},expression:\"settings.tweet_capture_watermark_position\"}})],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport axios from 'axios';\nimport Vue from 'vue';\n\nimport { IUser } from '@/interface';\nimport Base from '@/views/Settings/Base.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Settings-Twitter',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // 既定で表示されるパネルのタブの選択肢\n            twitter_active_tab: [\n                {'text': 'ツイート検索タブ', 'value': 'Search'},\n                {'text': 'タイムラインタブ', 'value': 'Timeline'},\n                {'text': 'キャプチャタブ', 'value': 'Capture'},\n            ],\n\n            // ツイートにつけるハッシュタグの位置の選択肢\n            tweet_hashtag_position: [\n                {'text': 'ツイート本文の前に追加する', 'value': 'Prepend'},\n                {'text': 'ツイート本文の後に追加する', 'value': 'Append'},\n                {'text': 'ツイート本文の前に追加してから改行する', 'value': 'PrependWithLineBreak'},\n                {'text': 'ツイート本文の後に改行してから追加する', 'value': 'AppendWithLineBreak'},\n            ],\n\n            // ツイートするキャプチャに番組タイトルの透かしを描画する位置の選択肢\n            tweet_capture_watermark_position: [\n                {'text': '透かしを描画しない', 'value': 'None'},\n                {'text': '透かしをキャプチャの左上に描画する', 'value': 'TopLeft'},\n                {'text': '透かしをキャプチャの右上に描画する', 'value': 'TopRight'},\n                {'text': '透かしをキャプチャの左下に描画する', 'value': 'BottomLeft'},\n                {'text': '透かしをキャプチャの右下に描画する', 'value': 'BottomRight'},\n            ],\n\n            // ローディング中かどうか\n            is_loading: true,\n\n            // ログイン中かどうか\n            is_logged_in: Utils.getAccessToken() !== null,\n\n            // ユーザーアカウントの情報\n            // ログインしていない場合は null になる\n            user: null as IUser | null,\n\n            // 設定値が保存されるオブジェクト\n            // ここの値とフォームを v-model で binding する\n            settings: (() => {\n                // 現在の設定値を取得する\n                const settings = {}\n                for (const setting of ['twitter_active_tab', 'tweet_hashtag_position', 'tweet_capture_watermark_position']) {\n                    settings[setting] = Utils.getSettingsItem(setting);\n                }\n                return settings;\n            })(),\n        }\n    },\n    async created() {\n\n        // ユーザーモデルの初期値\n        this.user = {\n            id: 0,\n            name: '',\n            is_admin: true,\n            niconico_user_id: null,\n            niconico_user_name: null,\n            niconico_user_premium: null,\n            twitter_accounts: [],\n            created_at: '',\n            updated_at: '',\n        }\n\n        // 表示されているアカウント情報を更新 (ログイン時のみ)\n        if (this.is_logged_in === true) {\n            await this.syncAccountInfo();\n        }\n\n        // ローディング状態を解除\n        this.is_loading = false;\n    },\n    watch: {\n        // settings 内の値の変更を監視する\n        settings: {\n            deep: true,\n            handler() {\n                // settings 内の値を順に LocalStorage に保存する\n                for (const [setting_key, setting_value] of Object.entries(this.settings)) {\n                    Utils.setSettingsItem(setting_key, setting_value);\n                }\n            }\n        }\n    },\n    methods: {\n        async syncAccountInfo() {\n\n            try {\n\n                // ユーザーアカウントの情報を取得する\n                this.user = (await Vue.axios.get('/users/me')).data;\n\n            } catch (error) {\n\n                // ログインされていない\n                if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n\n                    // 未ログイン状態に設定\n                    this.is_logged_in = false;\n                    this.user = null;\n                }\n            }\n        },\n\n        async loginTwitterAccount() {\n\n            // ログインしていない場合はエラーにする\n            if (this.is_logged_in === false) {\n                this.$message.warning('連携をはじめるには、KonomiTV アカウントにログインしてください。');\n                return;\n            }\n\n            // Twitter アカウントと連携するための認証 URL を取得\n            const authorization_url = (await Vue.axios.get('/twitter/auth')).data.authorization_url;\n\n            // OAuth 連携のため、認証 URL をポップアップウインドウで開く\n            // window.open() の第2引数はユニークなものにしておくと良いらしい\n            // ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1 (大変参考になりました)\n            const popup_window = window.open(authorization_url, 'KonomiTV-OAuthPopup', Utils.getWindowFeatures());\n\n            // 認証完了 or 失敗後、ポップアップウインドウから送信される文字列を受信\n            const onMessage = async (event) => {\n\n                // すでにウインドウが閉じている場合は実行しない\n                if (popup_window.closed) return;\n\n                // 受け取ったオブジェクトに KonomiTV-OAuthPopup キーがない or そもそもオブジェクトではない際は実行しない\n                // ブラウザの拡張機能から結構余計な message が飛んでくるっぽい…。\n                if (Utils.typeof(event.data) !== 'object') return;\n                if (('KonomiTV-OAuthPopup' in event.data) === false) return;\n\n                // 認証は完了したので、ポップアップウインドウを閉じ、リスナーを解除する\n                if (popup_window) popup_window.close();\n                window.removeEventListener('message', onMessage);\n\n                // ステータスコードと詳細メッセージを取得\n                const authorization_status = event.data['KonomiTV-OAuthPopup']['status'] as number;\n                const authorization_detail = event.data['KonomiTV-OAuthPopup']['detail'] as string;\n                console.log(`TwitterAuthCallbackAPI: Status: ${authorization_status} / Detail: ${authorization_detail}`);\n\n                // OAuth 連携に失敗した\n                if (authorization_status !== 200) {\n                    if (authorization_detail.startsWith('Authorization was denied by user')) {\n                        this.$message.error('Twitter アカウントとの連携がキャンセルされました。');\n                    } else if (authorization_detail.startsWith('Failed to get access token')) {\n                        this.$message.error('アクセストークンの取得に失敗しました。');\n                    } else if (authorization_detail.startsWith('Failed to get user information')) {\n                        this.$message.error('Twitter アカウントのユーザー情報の取得に失敗しました。');\n                    } else {\n                        this.$message.error(`Twitter アカウントとの連携に失敗しました。(${authorization_detail})`);\n                    }\n                    return;\n                }\n\n                // 表示されているアカウント情報を更新\n                await this.syncAccountInfo();\n\n                // ログイン中のユーザーに紐づく Twitter アカウントのうち、一番 updated_at が新しいものを取得\n                // ログインすると updated_at が更新されるため、この時点で一番 updated_at が新しいアカウントが今回連携したものだと判断できる\n                // ref: https://stackoverflow.com/a/12192544/17124142 (ISO8601 のソートアルゴリズム)\n                const current_twitter_account = [...this.user.twitter_accounts].sort((a, b) => {\n                    return (a.updated_at < b.updated_at) ? 1 : ((a.updated_at > b.updated_at) ? -1 : 0);\n                })[0];\n\n                this.$message.success(`Twitter @${current_twitter_account.screen_name} と連携しました。`);\n            };\n\n            // postMessage() を受信するリスナーを登録\n            window.addEventListener('message', onMessage);\n        },\n\n        async logoutTwitterAccount(screen_name: string) {\n\n            // Twitter アカウント連携解除 API にリクエスト\n            await Vue.axios.delete(`/twitter/accounts/${screen_name}`);\n\n            // 表示されているアカウント情報を更新\n            await this.syncAccountInfo();\n\n            this.$message.success(`Twitter @${screen_name} との連携を解除しました。`);\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Twitter.vue?vue&type=template&id=758b9ab1&scoped=true&\"\nimport script from \"./Twitter.vue?vue&type=script&lang=ts&\"\nexport * from \"./Twitter.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Twitter.vue?vue&type=style&index=0&id=758b9ab1&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"758b9ab1\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('Icon',{attrs:{\"icon\":\"fluent:toolbox-20-filled\",\"width\":\"22px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"環境設定\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"鋭意開発中…\")])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport Base from '@/views/Settings/Base.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Settings-Environment',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // 設定値が保存されるオブジェクト\n            // ここの値とフォームを v-model で binding する\n            settings: (() => {\n                // 現在の設定値を取得する\n                const settings = {}\n                for (const setting of []) {\n                    settings[setting] = Utils.getSettingsItem(setting);\n                }\n                return settings;\n            })(),\n        }\n    },\n    watch: {\n        // settings 内の値の変更を監視する\n        settings: {\n            deep: true,\n            handler() {\n                // settings 内の値を順に LocalStorage に保存する\n                for (const [setting_key, setting_value] of Object.entries(this.settings)) {\n                    Utils.setSettingsItem(setting_key, setting_value);\n                }\n            }\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Environment.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Environment.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Environment.vue?vue&type=template&id=5d117523&\"\nimport script from \"./Environment.vue?vue&type=script&lang=ts&\"\nexport * from \"./Environment.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"d-flex align-center w-100 mb-13\"},[_c('v-card',{staticClass:\"login-container px-10 pt-8 pb-11 mx-auto background lighten-1\",attrs:{\"elevation\":\"10\",\"width\":\"100%\",\"max-width\":\"450\"}},[_c('v-card-title',{staticClass:\"justify-center pb-7\"},[_c('v-img',{attrs:{\"max-width\":\"250\",\"src\":\"/assets/images/logo.svg\"}})],1),_c('v-divider'),_c('v-form',{ref:\"login\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('v-text-field',{staticClass:\"mt-12\",attrs:{\"autofocus\":\"\",\"outlined\":\"\",\"placeholder\":\"ユーザー名\"},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}}),_c('v-text-field',{staticClass:\"mt-2\",attrs:{\"outlined\":\"\",\"placeholder\":\"パスワード\",\"type\":_vm.password_showing ? 'text' : 'password',\"append-icon\":_vm.password_showing ? 'mdi-eye' : 'mdi-eye-off'},on:{\"click:append\":function($event){_vm.password_showing = !_vm.password_showing}},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('v-btn',{staticClass:\"login-button mt-5\",attrs:{\"color\":\"secondary\",\"depressed\":\"\",\"width\":\"100%\",\"height\":\"56\"},on:{\"click\":function($event){return _vm.login()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-in\"}}),_vm._v(\"ログイン \")],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport axios from 'axios';\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Login',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n            username: '' as string,\n            password: '' as string,\n            password_showing: false,\n        }\n    },\n    methods: {\n        async login() {\n\n            // ユーザー名またはパスワードが空\n            if (this.username === '' || this.password === '') return;\n\n            try {\n\n                // ログインしてアクセストークンを取得する\n                const response = await Vue.axios.post('/users/token', new URLSearchParams({\n                    username: this.username,\n                    password: this.password,\n                }));\n\n                // 取得したアクセストークンを保存\n                console.log('Login successful.');\n                console.log(response.data);\n                Utils.saveAccessToken(response.data.access_token);\n\n                // アカウントページに遷移\n                this.$message.success('ログインしました。');\n                await this.$router.push({path: '/settings/account'});\n\n            } catch (error) {\n\n                // ログインに失敗\n                if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n\n                    console.log('Failed to login.');\n                    console.log(error.response.data);\n\n                    // エラーメッセージごとに Snackbar に表示\n                    switch ((error.response.data as any).detail) {\n                        case 'Incorrect username': {\n                            this.$message.error('ログインできませんでした。そのユーザー名のアカウントは存在しません。');\n                            break;\n                        }\n                        case 'Incorrect password': {\n                            this.$message.error('ログインできませんでした。パスワードを間違えていませんか？');\n                            break;\n                        }\n                        default: {\n                            this.$message.error(`ログインできませんでした。(HTTP Error ${error.response.status})`);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=2d430018&scoped=true&\"\nimport script from \"./Login.vue?vue&type=script&lang=ts&\"\nexport * from \"./Login.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Login.vue?vue&type=style&index=0&id=2d430018&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2d430018\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"d-flex align-center w-100 mb-13\"},[_c('v-card',{staticClass:\"register-container px-10 pt-8 pb-11 mx-auto background lighten-1\",attrs:{\"elevation\":\"10\",\"width\":\"100%\",\"max-width\":\"450\"}},[_c('v-card-title',{staticClass:\"flex-column justify-center\"},[_c('v-img',{attrs:{\"max-width\":\"250\",\"src\":\"/assets/images/logo.svg\"}}),_c('h4',{staticClass:\"mt-10\"},[_vm._v(\"アカウントを作成\")])],1),_c('v-divider'),_c('v-form',{ref:\"register\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('v-text-field',{staticClass:\"mt-10\",attrs:{\"autofocus\":\"\",\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"rules\":[_vm.username_validation]},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}}),_c('v-text-field',{staticClass:\"mt-2\",attrs:{\"outlined\":\"\",\"placeholder\":\"パスワード\",\"type\":_vm.password_showing ? 'text' : 'password',\"append-icon\":_vm.password_showing ? 'mdi-eye' : 'mdi-eye-off',\"rules\":[_vm.password_validation]},on:{\"click:append\":function($event){_vm.password_showing = !_vm.password_showing}},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('v-btn',{staticClass:\"register-button mt-5\",attrs:{\"color\":\"secondary\",\"depressed\":\"\",\"width\":\"100%\",\"height\":\"56\"},on:{\"click\":function($event){return _vm.register()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-add-20-filled\",\"height\":\"24\"}}),_vm._v(\"アカウントを作成 \")],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport axios from 'axios';\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Register',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n            username: null as string | null,\n            username_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'ユーザー名を入力してください。';\n                if (/^.{2,}$/.test(value) === false) return 'ユーザー名は2文字以上で入力してください。';\n                return true;\n            },\n            password: null as string | null,\n            password_showing: true,  // アカウント作成時は既定でパスワードを表示する\n            password_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'パスワードを入力してください。';\n                // 正規表現の参考: https://qiita.com/grrrr/items/0b35b5c1c98eebfa5128\n                if (/^[a-zA-Z0-9!-/:-@¥[-`{-~]{4,}$/.test(value) === false) return 'パスワードは4文字以上の半角英数記号を入力してください。';\n                return true;\n            },\n        }\n    },\n    methods: {\n        async register() {\n\n            // すべてのバリデーションが通過したときのみ\n            // ref: https://qiita.com/Hijiri_Ishi/items/56cac99c8f3806a6fa24\n            if ((this.$refs.register as any).validate() === false) return;\n\n            try {\n\n                // アカウント作成 API にリクエスト\n                const response = await Vue.axios.post('/users', {\n                    username: this.username,\n                    password: this.password,\n                });\n\n                console.log('Account created.')\n                console.log(response.data);\n\n            } catch (error) {\n\n                // アカウントの作成に失敗\n                // ref: https://dev.classmethod.jp/articles/typescript-typing-exception-objects-in-axios-trycatch/\n                if (axios.isAxiosError(error) && error.response && error.response.status === 422) {\n\n                    console.log('Failed to create account.');\n                    console.log(error.response.data);\n\n                    // エラーメッセージごとに Snackbar に表示\n                    switch (error.response.data.detail) {\n                        case 'Specified username is duplicated': {\n                            this.$message.error('ユーザー名が重複しています。');\n                            break;\n                        }\n                        case 'Specified username is not accepted due to system limitations': {\n                            this.$message.error('ユーザー名に token と me は使えません。');\n                            break;\n                        }\n                        default: {\n                            this.$message.error(`アカウントを作成できませんでした。(HTTP Error ${error.response.status})`);\n                            break;\n                        }\n                    }\n                }\n                return;  // 処理を中断\n            }\n\n            // ここから先の処理はログイン画面とほぼ同じ\n            try {\n\n                // アカウントを作成できたので、ログインしてアクセストークンを取得する\n                const response = await Vue.axios.post('/users/token', new URLSearchParams({\n                    username: this.username,\n                    password: this.password,\n                }));\n\n                // 取得したアクセストークンを保存\n                console.log('Login successful.');\n                console.log(response.data);\n                Utils.saveAccessToken(response.data.access_token);\n\n                // アカウントページに遷移\n                this.$message.success('アカウントを作成しました。');\n                await this.$router.push({path: '/settings/account'});\n\n            } catch (error) {\n\n                // ログインに失敗\n                if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n\n                    console.log('Failed to login.');\n                    console.log(error.response.data);\n\n                    // エラーメッセージごとに Snackbar に表示\n                    switch (error.response.data.detail) {\n                        case 'Incorrect username': {\n                            this.$message.error('ログインできませんでした。そのユーザー名のアカウントは存在しません。');\n                            break;\n                        }\n                        case 'Incorrect password': {\n                            this.$message.error('ログインできませんでした。パスワードを間違えていませんか？');\n                            break;\n                        }\n                        default: {\n                            this.$message.error(`ログインできませんでした。(HTTP Error ${error.response.status})`);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Register.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Register.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Register.vue?vue&type=template&id=1d9f0d11&scoped=true&\"\nimport script from \"./Register.vue?vue&type=script&lang=ts&\"\nexport * from \"./Register.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Register.vue?vue&type=style&index=0&id=1d9f0d11&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1d9f0d11\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_vm._m(0)],1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"d-flex justify-center align-center w-100\"},[_c('div',{staticClass:\"d-flex justify-center align-center flex-column\"},[_c('h1',[_vm._v(\"Not Found, or Under Development...\")]),_c('span',{staticClass:\"mt-4 text--text text--darken-1\"},[_vm._v(\"お探しのページは存在しないか、鋭意開発中です。\")])])])\n}]\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\n\nexport default Vue.extend({\n    name: 'NotFound',\n    components: {\n        Header,\n        Navigation,\n    },\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NotFound.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NotFound.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./NotFound.vue?vue&type=template&id=4756c1c8&\"\nimport script from \"./NotFound.vue?vue&type=script&lang=ts&\"\nexport * from \"./NotFound.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\n\nimport TVHome from '@/views/TV/Home.vue';\nimport TVWatch from '@/views/TV/Watch.vue';\nimport SettingsGeneral from '@/views/Settings/General.vue';\nimport SettingsAccount from '@/views/Settings/Account.vue';\nimport SettingsJikkyo from '@/views/Settings/Jikkyo.vue';\nimport SettingsTwitter from '@/views/Settings/Twitter.vue';\nimport SettingsEnvironment from '@/views/Settings/Environment.vue';\nimport Login from '@/views/Login.vue';\nimport Register from '@/views/Register.vue';\nimport NotFound from '@/views/NotFound.vue';\n\nVue.use(VueRouter);\n\nconst router = new VueRouter({\n\n    // History API モード\n    mode: 'history',\n\n    // ルーティングのベース URL\n    base: process.env.BASE_URL,\n\n    // ルーティング設定\n    routes: [\n        {\n            path: '/',\n            redirect: '/tv/',\n        },\n        {\n            path: '/tv/',\n            name: 'TV Home',\n            component: TVHome,\n        },\n        {\n            path: '/tv/watch/:channel_id',\n            name: 'TV Watch',\n            component: TVWatch,\n        },\n        {\n            path: '/settings/',\n            redirect: '/settings/general',\n        },\n        {\n            path: '/settings/general',\n            name: 'Settings General',\n            component: SettingsGeneral,\n        },\n        {\n            path: '/settings/account',\n            name: 'Settings Account',\n            component: SettingsAccount,\n        },\n        {\n            path: '/settings/jikkyo',\n            name: 'Settings Jikkyo',\n            component: SettingsJikkyo,\n        },\n        {\n            path: '/settings/twitter',\n            name: 'Settings Twitter',\n            component: SettingsTwitter,\n        },\n        {\n            path: '/settings/environment',\n            name: 'Settings Environment',\n            component: SettingsEnvironment,\n        },\n        {\n            path: '/login/',\n            name: 'Login',\n            component: Login,\n        },\n        {\n            path: '/register/',\n            name: 'Register',\n            component: Register,\n        },\n        {\n            path: '*',\n            name: 'NotFound',\n            component: NotFound,\n        },\n    ],\n\n    // ページ遷移時のスクロールの挙動の設定\n    // ref: https://v3.router.vuejs.org/ja/guide/advanced/scroll-behavior.html\n    scrollBehavior (to, from, savedPosition) {\n        if (savedPosition) {\n            // 戻る/進むボタンが押されたときは保存されたスクロール位置を使う\n            return savedPosition;\n        } else {\n            // それ以外は常に先頭にスクロールする\n            return {x: 0, y: 0};\n        }\n    }\n});\n\nexport default router;\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  });\n}\n","\nimport { Icon } from '@iconify/vue2';\nimport { polyfill as SeamlessScrollPolyfill } from \"seamless-scroll-polyfill\";\nimport Vue from 'vue';\nimport VueAxios from 'vue-axios';\nimport VueVirtualScroller from 'vue-virtual-scroller';\nimport 'vue-virtual-scroller/dist/vue-virtual-scroller.css';\nimport VuetifyMessageSnackbar from 'vuetify-message-snackbar';\nimport VTooltip from 'v-tooltip';\nimport 'v-tooltip/dist/v-tooltip.css';\n\nimport App from '@/App.vue';\nimport VTabItem from '@/components/VTabItem';\nimport VTabs from '@/components/VTabs';\nimport VTabsItems from '@/components/VTabsItems';\nimport axios from '@/plugins/axios';\nimport vuetify from '@/plugins/vuetify';\nimport router from '@/router';\nimport '@/service-worker';\nimport Utils from './utils';\n\n// スムーズスクロール周りの API の polyfill を適用\n// Element.scrollInfoView() のオプション指定を使うために必要\nSeamlessScrollPolyfill();\n\n// Production Tip を非表示に\nVue.config.productionTip = false;\n\n// Axios を使う\nVue.use(VueAxios, axios);\n\n// vue-virtual-scroller を使う\nVue.use(VueVirtualScroller);\n\n// vuetify-message-snackbar を使う\n// マイナーな OSS（しかも中国語…）だけど、Snackbar を関数で呼びたかったのでちょうどよかった\n// ref: https://github.com/thinkupp/vuetify-message-snackbar\nVue.use(VuetifyMessageSnackbar, {\n    // 画面上に配置しない\n    top: false,\n    // 画面下に配置する\n    bottom: true,\n    // デフォルトの背景色\n    color: '#433532',\n    // ダークテーマを適用する\n    dark: true,\n    // 影 (Elevation) の設定\n    elevation: 8,\n    // 2.5秒でタイムアウト\n    timeout: 2500,\n    // 要素が非表示になった後に DOM から要素を削除する\n\tautoRemove: true,\n    // 閉じるボタンのテキスト\n\tcloseButtonContent: '閉じる',\n\t// Vuetify のインスタンス\n\tvuetifyInstance: vuetify,\n});\n\n// VTooltip を使う\n// タッチデバイスでは無効化する\n// ref: https://v-tooltip.netlify.app/guide/config.html#default-values\nconst trigger = window.matchMedia('(hover: none)').matches ? [] : ['hover', 'focus', 'touch'];\nVTooltip.options.themes.tooltip.showTriggers = trigger;\nVTooltip.options.themes.tooltip.hideTriggers = trigger;\nVTooltip.options.themes.tooltip.delay.show = 0;\nVTooltip.options.offset = [0, 7];\nVue.use(VTooltip);\n\n// Iconify（アイコン）のグローバルコンポーネント\nVue.component('Icon', Icon);\n\n// VTabItem の挙動を改善するグローバルコンポーネント\nVue.component('v-tab-item-fix', VTabItem);\n\n// VTabs の挙動を改善するグローバルコンポーネント\nVue.component('v-tabs-fix', VTabs);\n\n// VTabsItems の挙動を改善するグローバルコンポーネント\nVue.component('v-tabs-items-fix', VTabsItems);\n\n// Vue を初期化\nnew Vue({\n    router,\n    vuetify,\n    render: h => h(App),\n}).$mount('#app');\n\n// ログイン時かつ設定の同期が有効なとき、ページ遷移に関わらず、常に3秒おきにサーバーから設定を取得する\n// 初回のページレンダリングに間に合わないのは想定内（同期の完了を待つこともできるが、それだと表示速度が遅くなるのでしょうがない）\nwindow.setInterval(async () => {\n    if (Utils.getAccessToken() !== null && Utils.getSettingsItem('sync_settings') === true) {\n        Utils.syncServerSettingsToClient();\n    }\n}, 3 * 1000);  // 3秒おき\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = function(module) {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: function() {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkKonomiTV\"] = self[\"webpackChunkKonomiTV\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(192); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_vm","_c","script","component","render","staticRenderFns","VTabItem","h","props","name","this","computedTransition","on","beforeEnter","onBeforeTransition","afterEnter","onAfterTransition","enterCancelled","onTransitionCancelled","beforeLeave","afterLeave","leaveCancelled","enter","onEnter","genWindowItem","VTabsBar","data","items","methods","register","item","activeItem","internalIndex","push","sort","a","b","index_a","$slots","default","findIndex","element","$vnode","key","index_b","$on","onClick","mandatory","selectedValues","length","updateMandatory","updateItem","indexOf","undefined","updateInternalValue","unregister","constructor","super","options","call","VTabs","genBar","slider","style","height","convertToUnit","activeClass","centerActive","dark","light","optional","mobileBreakpoint","nextIcon","prevIcon","showArrows","value","internalValue","callSlider","change","val","ref","setTextColor","computedColor","setBackgroundColor","backgroundColor","$createElement","genSlider","VTabsItems","updateReverse","oldVal","itemsLength","lastIndex","continuous","Utils","localStorage","getItem","setItem","JSON","stringify","default_settings","settings","parse","new_settings","default_settings_key","Object","keys","syncClientSettingsToServer","force","getAccessToken","sync_settings","uploading_settings","sleep","server_settings","Vue","server_settings_key","server_settings_value","entries","error","sync_settings_key","sync_settings_keys","access_token","test","navigator","userAgent","removeItem","blob","filename","blob_url","URL","createObjectURL","link","document","createElement","download","href","click","revokeObjectURL","content","html_escape_table","replace","match","popupSizeWidth","popupSizeHeight","window","screen","posTop","posLeft","width","seconds","Promise","resolve","setTimeout","prototype","toString","slice","toLowerCase","text","escapeHTML","pattern","process","location","protocol","host","pinned_channel_ids","showed_panel_last_time","selected_twitter_account_id","saved_twitter_hashtags","tv_streaming_quality","low_latency_mode","show_superimpose_tv","panel_display_state","tv_panel_active_tab","capture_save_mode","capture_caption_mode","comment_speed_rate","comment_font_size","comment_delay_time","close_comment_form_after_send","twitter_active_tab","tweet_hashtag_position","tweet_capture_watermark_position","TVUtils","program","mark","pattern1","RegExp","pattern2","dayjs","isSameOrAfter","isSameOrBefore","isBetween","now","pause_time_start","hour","minute","second","pause_time_end","pause_time_start_23","pause_time_end_23","background_count","random","Math","floor","padStart","default_value","channel_id","is_chideji","result","groups","channel_type","toUpperCase","channel_force","channels_list","remocon_id","channels","get","index","channel","getChannelType","previous_index","next_index","progress","diff","start_time","duration","is_short","end_time","format","json","network_id","service_id","event_id","title","description","datetime","exif","piexif","TagValues","ImageIFD","XResolution","YResolution","ResolutionUnit","YCbCrPositioning","DateTime","Software","version","XPComment","Buffer","ExifIFD","ExifVersion","ComponentsConfiguration","FlashpixVersion","ColorSpace","DateTimeOriginal","DateTimeDigitized","exif_string","dump","blob_string","reject","reader","FileReader","onload","onerror","readAsBinaryString","blob_string_new","insert","buffer","Uint8Array","charCodeAt","Blob","type","axios_instance","axios","interceptors","request","use","config","baseURL","headers","Vuetify","VSnackbar","VBtn","VIcon","theme","themes","primary","secondary","twitter","base","lighten1","lighten2","gray","black","background","lighten3","darken1","darken2","darken3","customProperties","staticClass","attrs","model","callback","expression","Array","from","channels_type","_v","tab","class","rawName","id","directives","preventDefault","$event","removePinnedChannel","stopPropagation","domProps","_s","staticStyle","components","Header","Navigation","is_loading","interval_ids","Map","created","update","residue_second","Date","getTime","setInterval","beforeDestroy","interval_id","clearInterval","async","channels_response","console","filter","is_display","GR","set","BS","CS","CATV","SKY","STARDIGIO","updatePinnedChannelList","addPinnedChannel","splice","is_update_tab","pinned_channels","pinned_channel_id","pinned_channel_type","pinned_channel","find","has","isPinnedChannel","includes","modifiers","getProgramTime","time","backgroundImage","is_panel_display","player","shortcut_key_modal","_l","shortcut_keys","key_name","shortcut","IProgramDefault","detail","is_free","genre","video_type","video_codec","video_resolution","primary_audio_type","primary_audio_language","primary_audio_sampling_rate","secondary_audio_type","secondary_audio_language","secondary_audio_sampling_rate","IChannelDefault","transport_stream_id","channel_number","channel_name","channel_comment","is_subchannel","is_radiochannel","viewers","program_present","program_following","getProgramProgress","required","_setup","comment_mute_settings_modal","scopedSlots","active","initialize_failed_message","is_manual_scroll","is_auto_scrolling","user","comment_list","comment_list_element","watch_session","comment_session","vpos_base_timestamp","keep_seat_interval_id","resize_observer","resize_observer_element","destroy","unobserve","watch","new_channel","old_channel","$el","querySelector","is_user_scrolling","onmousedown","event","x","clientX","getBoundingClientRect","left","clientWidth","onmouseup","on_user_scrolling","is_dragging","ontouchstart","ontouchend","ontouchmove","onwheel","onscroll","scrollTop","offsetHeight","scrollHeight","initReserveObserver","comment_session_info","initWatchSession","unix","initCommentSession","message","watch_session_info","Error","is_success","notice","WebSocket","audience_token","addEventListener","send","messageServer","uri","threadId","vposBaseTime","yourPostKey","readyState","keepIntervalSec","code","log","danmaku","showing","waitTimeSec","disconnect_reason","onclose","reason","comment_list_buffer","is_received_initial_comment","message_server","thread_id","your_post_key","event_raw","thread","resultcode","ping","scrollCommentList","comment","chat","yourpost","color","position","size","mail","commands","split","command","getCommentColor","getCommentPosition","shift","comment_dict","no","date","my_post","visibilityState","video","paused","draw","onvisibilitychange","niconico_user_id","niconico_user_premium","color_table","position_table","vpos","onmessage","success","animation_timeout_id","on_resize","video_element","comment_area_element","clientHeight","letter_box_height","threshold","matchMedia","matches","comment_area_vertical_margin","comment_area_width","comment_area_height","gcd","y","gcd_result","comment_area_height_aspect","transition","setProperty","clearTimeout","removeProperty","ResizeObserver","observe","smooth","scrollTo","top","behavior","close","_self","_setupProxy","api_base_url","$route","params","decorateProgramInfo","getAttribute","genre_index","major","middle","getChannelForceType","detail_text","detail_heading","URLtoLink","zoom_capture_modal","capture","clickCapture","tweet_hashtag","is_tweet_hashtag_form_focused","is_hashtag_list_display","tweet_text","is_tweet_text_form_focused","is_logged_in_twitter","tweet_letter_count","twitter_account","hashtag","editing","updateTweetLetterCount","is_logged_in","selected_twitter_account","is_twitter_account_list_display","map","zoom_capture","captures","captures_element","tweet_captures","is_admin","niconico_user_name","twitter_accounts","created_at","updated_at","syncAccountInfo","some","twitter_account_index","image_url","deep","handler","response","status","clickAccountButton","fullscreenElement","exitFullscreen","$router","path","updateSelectedTwitterAccount","selected","u","focused","$nextTick","image_bitmap","createImageBitmap","canvas","OffscreenCanvas","context","getContext","drawImage","font","fillStyle","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","textAlign","textBaseline","fillText","convertToBlob","quality","toBlob","tweet_hashtag_array","trim","replaceAll","startsWith","join","form_data","FormData","append","tweet_capture","drawProgramTitleOnCapture","screen_name","Channel","Comment","Program","Twitter","background_url","is_background_display","is_control_display","is_fullscreen","is_ime_composing","is_comment_send_just_did","control_interval_id","channel_previous","channel_next","romsounds_context","romsounds_buffers","eventsource","fullscreen_handler","capture_button","comment_capture_button","canvas_context","shortcut_key_handler","shortcut_key_pressed_at","shortcut_key_list","left_column","icon","icon_height","shortcuts","right_column","init","AudioContext","url","audio_data","responseType","decodeAudioData","beforeRouteUpdate","to","next","getPreviousAndCurrentAndNextChannel","generatePlayerBackgroundURL","controlDisplayTimer","channel_response","KonomiTVCanDestroy","initPlayer","initEventHandler","initCaptureHandler","removeEventListener","initShortcutKeyHandler","template","audioItem","classList","add","plugins","mpegts","remove","audioValue","textContent","tran","switchPrimaryAudio","delete","artwork","src","sizes","mediaSession","metadata","MediaMetadata","artist","setPositionState","playbackRate","setActionHandler","play","pause","is_player_event","is_touch_device","timeout","controller","contains","hide","setting","isShow","show","DPlayer","container","lang","live","liveSyncMinBufferSize","loop","airplay","autoplay","hotkey","screenshot","volume","defaultQuality","qualities","speedRate","fontSize","apiBackend","read","$refs","sendComment","pluginOptions","enableWorker","liveSync","liveSyncMaxLatency","liveSyncTargetLatency","liveSyncPlaybackRate","aribb24","normalFont","gaijiFont","forceStrokeColor","drcsReplacement","enableRawCanvas","useStrokeText","usePUA","PRACallback","state","resume","buffer_source_node","createBufferSource","gain_node","createGain","connect","destination","gain","start","subtitle","muted","commentInput","setAutoHide","blur","settingOriginPanel","insertAdjacentHTML","settingOriginPanelHeight","settingBox","clipPath","on_play_or_pause","aribb24Superimpose","buffered","end","currentTime","sync","fullscreen_container","fullScreen","isFullScreen","onfullscreenchange","webkitFullscreenElement","cancel","requestFullscreen","webkitRequestFullscreen","orientation","lock","catch","webkitExitFullscreen","unlock","on_canplay","round","oncanplay","oncanplaythrough","quality_name","EventSource","clients_count","pictureInPictureElement","exitPictureInPicture","requestPictureInPicture","switchVideo","clear","twitter_component","tweet_form_element","querySelectorAll","tag","activeElement","tagName","editable","is_repeat","repeat","focus","scrollLeft","ctrlKey","metaKey","shiftKey","altKey","switch_channel_type","switch_remocon_id","Number","switch_channel","getChannelFromRemoconID","focused_capture_index","focused_capture","focused_capture_element","parentElement","scrollIntoView","block","inline","toggle","pictureInPictureEnabled","pipButton","showDanmaku","showDanmakuToggle","checked","captureAndSave","videoWidth","videoHeight","with_comments","DrawComments","HTMLtoSVGImage","html","svg","image","Image","encodeURIComponent","decode","comments_html","outerHTML","comments_image","offsetWidth","draw_scale_ratio","draw_height","UploadCaptureToServer","button_elem","caption_canvas","aribb24Caption","getRawCanvas","superimpose_canvas","isShowing","isPresent","is_caption_showing","filename_ext","addCaptureList","setEXIFDataToCapture","is_destroy_player","$set","import_settings_file","Base","settings_keys","setting_key","setting_value","exportSettings","settings_json","settings_json_blob","$message","go","user_icon_blob","sync_settings_dialog","settings_username_validation","settings_username","settings_icon","settings_password_showing","settings_password","account_delete_confirm_dialog","settings_password_validation","sync_settings_json","server_sync_settings_json","syncAccountIcon","icon_response","update_type","validate","username","password","logout","loginNiconicoAccount","logoutNiconicoAccount","niconico_user_icon_url","user_id_slice","warning","authorization_url","popup_window","open","onMessage","closed","authorization_status","authorization_detail","current_twitter_account","password_showing","URLSearchParams","username_validation","password_validation","_m","VueRouter","router","mode","routes","redirect","TVHome","TVWatch","SettingsGeneral","SettingsAccount","SettingsJikkyo","SettingsTwitter","SettingsEnvironment","Login","Register","NotFound","scrollBehavior","savedPosition","ready","registered","cached","updatefound","updated","offline","SeamlessScrollPolyfill","VueAxios","VueVirtualScroller","VuetifyMessageSnackbar","bottom","elevation","autoRemove","closeButtonContent","vuetifyInstance","vuetify","trigger","VTooltip","Icon","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","hmd","create","children","obj","prop","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}