{"version":3,"file":"assets/js/app.421191fd.js","mappings":"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","sources":["webpack://KonomiTV/./src/App.vue","webpack://KonomiTV/./src/App.vue?74c6","webpack://KonomiTV/./src/components/Vuetify/VTabItem.ts","webpack://KonomiTV/./src/components/Vuetify/VTabsBar.ts","webpack://KonomiTV/./src/components/Vuetify/VTabs.ts","webpack://KonomiTV/./src/components/Vuetify/VTabsItems.ts","webpack://KonomiTV/./src/plugins/vuetify.ts","webpack://KonomiTV/./src/utils/Utils.ts","webpack://KonomiTV/./src/utils/ChannelUtils.ts","webpack://KonomiTV/./src/message.ts","webpack://KonomiTV/./src/plugins/axios.ts","webpack://KonomiTV/./src/services/Users.ts","webpack://KonomiTV/./src/store/UserStore.ts","webpack://KonomiTV/./src/services/APIClient.ts","webpack://KonomiTV/./src/services/Settings.ts","webpack://KonomiTV/./src/store/SettingsStore.ts","webpack://KonomiTV/./src/utils/CommentUtils.ts","webpack://KonomiTV/./src/utils/PlayerUtils.ts","webpack://KonomiTV/./src/utils/ProgramUtils.ts","webpack://KonomiTV/./src/utils/index.ts","webpack://KonomiTV/./src/views/Login.vue","webpack://KonomiTV/./src/components/Header.vue","webpack://KonomiTV/./src/components/Header.vue?5d06","webpack://KonomiTV/./src/components/Navigation.vue","webpack://KonomiTV/./src/components/BottomNavigation.vue","webpack://KonomiTV/./src/components/BottomNavigation.vue?ff7d","webpack://KonomiTV/./src/services/Version.ts","webpack://KonomiTV/./src/store/VersionStore.ts","webpack://KonomiTV/./src/components/Navigation.vue?e993","webpack://KonomiTV/./src/components/Navigation.vue?c328","webpack://KonomiTV/./src/components/Navigation.vue?bd43","webpack://KonomiTV/./src/views/Login.vue?21ac","webpack://KonomiTV/./src/views/Login.vue?ce3e","webpack://KonomiTV/./src/views/Login.vue?f5d0","webpack://KonomiTV/./src/views/NotFound.vue","webpack://KonomiTV/./src/views/NotFound.vue?5999","webpack://KonomiTV/./src/views/NotFound.vue?4637","webpack://KonomiTV/./src/views/NotFound.vue?dbe0","webpack://KonomiTV/./src/views/Register.vue","webpack://KonomiTV/./src/views/Register.vue?4c26","webpack://KonomiTV/./src/views/Register.vue?e763","webpack://KonomiTV/./src/views/Register.vue?709e","webpack://KonomiTV/./src/views/Settings/Account.vue","webpack://KonomiTV/./src/views/Settings/Base.vue","webpack://KonomiTV/./src/views/Settings/Base.vue?8f0e","webpack://KonomiTV/./src/views/Settings/Base.vue?b75f","webpack://KonomiTV/./src/views/Settings/Base.vue?13e1","webpack://KonomiTV/./src/views/Settings/Account.vue?a46e","webpack://KonomiTV/./src/views/Settings/Account.vue?c440","webpack://KonomiTV/./src/views/Settings/Account.vue?d79e","webpack://KonomiTV/./src/views/Settings/Caption.vue","webpack://KonomiTV/./src/views/Settings/Caption.vue?b49e","webpack://KonomiTV/./src/views/Settings/Caption.vue?c909","webpack://KonomiTV/./src/views/Settings/Caption.vue?3a40","webpack://KonomiTV/./src/views/Settings/Capture.vue","webpack://KonomiTV/./src/views/Settings/Capture.vue?91d0","webpack://KonomiTV/./src/views/Settings/Capture.vue?2770","webpack://KonomiTV/./src/views/Settings/Capture.vue?6493","webpack://KonomiTV/./src/views/Settings/General.vue","webpack://KonomiTV/./src/views/Settings/General.vue?5f9b","webpack://KonomiTV/./src/views/Settings/General.vue?6383","webpack://KonomiTV/./src/views/Settings/General.vue?1430","webpack://KonomiTV/./src/views/Settings/Index.vue","webpack://KonomiTV/./src/views/Settings/Index.vue?6033","webpack://KonomiTV/./src/views/Settings/Index.vue?c35a","webpack://KonomiTV/./src/views/Settings/Index.vue?ea37","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue?c072","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue?2b63","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue?5678","webpack://KonomiTV/./src/services/Niconico.ts","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?43de","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?dae2","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?e1ab","webpack://KonomiTV/./src/views/Settings/Server.vue","webpack://KonomiTV/./src/views/Settings/Server.vue?51f8","webpack://KonomiTV/./src/views/Settings/Server.vue?617c","webpack://KonomiTV/./src/views/Settings/Server.vue?c8b5","webpack://KonomiTV/./src/views/Settings/Twitter.vue","webpack://KonomiTV/./src/services/Twitter.ts","webpack://KonomiTV/./src/views/Settings/Twitter.vue?a501","webpack://KonomiTV/./src/views/Settings/Twitter.vue?c5a2","webpack://KonomiTV/./src/views/Settings/Twitter.vue?8f70","webpack://KonomiTV/./src/views/TV/Home.vue","webpack://KonomiTV/./src/services/Programs.ts","webpack://KonomiTV/./src/services/Channels.ts","webpack://KonomiTV/./src/store/ChannelsStore.ts","webpack://KonomiTV/./src/views/TV/Home.vue?bdd6","webpack://KonomiTV/./src/views/TV/Home.vue?8980","webpack://KonomiTV/./src/views/TV/Home.vue?6763","webpack://KonomiTV/./src/views/TV/Watch.vue","webpack://KonomiTV/./src/components/Panel/Channel.vue","webpack://KonomiTV/./src/components/Panel/Channel.vue?0e9d","webpack://KonomiTV/./src/components/Panel/Channel.vue?34fb","webpack://KonomiTV/./src/components/Panel/Channel.vue?d5d3","webpack://KonomiTV/./src/components/Panel/Comment.vue","webpack://KonomiTV/./src/services/player/LiveCommentManager.ts","webpack://KonomiTV/./src/components/Panel/Comment.vue?94d2","webpack://KonomiTV/./src/components/Panel/Comment.vue?31bb","webpack://KonomiTV/./src/components/Panel/Comment.vue?ffda","webpack://KonomiTV/./src/components/Panel/Program.vue","webpack://KonomiTV/./src/components/Panel/Program.vue?d838","webpack://KonomiTV/./src/components/Panel/Program.vue?f967","webpack://KonomiTV/./src/components/Panel/Program.vue?393d","webpack://KonomiTV/./src/components/Panel/Twitter.vue","webpack://KonomiTV/./src/components/Panel/Twitter.vue?d4d0","webpack://KonomiTV/./src/components/Panel/Twitter.vue?710e","webpack://KonomiTV/./src/components/Panel/Twitter.vue?82e1","webpack://KonomiTV/./src/services/Captures.ts","webpack://KonomiTV/./src/services/player/CaptureHandler.ts","webpack://KonomiTV/./src/views/TV/Watch.vue?a1ad","webpack://KonomiTV/./src/views/TV/Watch.vue?78bf","webpack://KonomiTV/./src/views/TV/Watch.vue?f307","webpack://KonomiTV/./src/router/index.ts","webpack://KonomiTV/./src/service-worker.ts","webpack://KonomiTV/./src/main.ts","webpack://KonomiTV/webpack/bootstrap","webpack://KonomiTV/webpack/runtime/chunk loaded","webpack://KonomiTV/webpack/runtime/compat get default export","webpack://KonomiTV/webpack/runtime/define property getters","webpack://KonomiTV/webpack/runtime/global","webpack://KonomiTV/webpack/runtime/hasOwnProperty shorthand","webpack://KonomiTV/webpack/runtime/make namespace object","webpack://KonomiTV/webpack/runtime/jsonp chunk loading","webpack://KonomiTV/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-app',{attrs:{\"id\":\"app\"}},[_c('transition',[_c('router-view')],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=4cb9d4dd&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&id=4cb9d4dd&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\nimport { VueConstructor, VNode } from 'vue';\nimport VTabItem from 'vuetify/lib/components/VTabs/VTabItem';\n\n// VTabItem は VWindowItem を extend() して実装されている\nexport default (VTabItem as VueConstructor).extend({\n    render (h): VNode {\n        return h('transition', {\n            props: {\n                name: (this as any).computedTransition,\n            },\n            on: {\n                // Handlers for enter windows.\n                beforeEnter: (this as any).onBeforeTransition,\n                afterEnter: (this as any).onAfterTransition,\n                enterCancelled: (this as any).onTransitionCancelled,\n\n                // Handlers for leave windows.\n                beforeLeave: (this as any).onBeforeTransition,\n                afterLeave: (this as any).onAfterTransition,\n                leaveCancelled: (this as any).onTransitionCancelled,\n\n                // Enter handler for height transition.\n                enter: (this as any).onEnter,\n            }\n        // this.showLazyContent() を通さずに常にレンダリングされるようにする\n        // 本来は実際に表示されている時だけレンダリングし、負荷を減らすための処理\n        // ただチャンネルリストのレンダリングは重いので、最初からレンダリングされていた方がタブの初回切り替えが早くなる\n        }, [(this as any).genWindowItem()]);\n    }\n});\n","\nimport { VueConstructor } from 'vue';\nimport { GroupableInstance } from 'vuetify/lib/components/VItemGroup/VItemGroup';\nimport VTabsBar from 'vuetify/lib/components/VTabs/VTabsBar';\n\n// VTabsBar は VItemGroup を extend() して実装されている\nexport default (VTabsBar as VueConstructor).extend({\n    data() {\n        return {\n            // 一応型定義をしておく\n            items: [] as GroupableInstance[],\n        };\n    },\n    methods: {\n\n        // タブのデータ配列の先頭に新しい要素が追加されるとそのタブのアニメーションの向きが逆になるバグがあるので、VItemGroup 側の挙動をオーバーライドする\n        // DOM 上も VNode 上も正しい順序で並んでいるが、this.items に関しては追加された順になっていてしまっていて齟齬が発生するのが原因\n        // ref: https://github.com/vuetifyjs/vuetify/issues/13862\n        register(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 要素を items に追加\n            this.items.push(item);\n\n            // this.$slots.default に VNode が、items には単に VueComponent が入っているので、事前に VNode の順番に合わせて並べ替える\n            // こうすることで、追加された順ではなく元のデータ配列通りの順番になる\n            this.items.sort((a, b) => {\n\n                // VueComponent の key が一致する this.$slots.default 内の VNode を探す\n                const index_a = this.$slots.default.findIndex((element) => {\n                    return a.$vnode.key === element.key;\n                });\n                const index_b = this.$slots.default.findIndex((element) => {\n                    return b.$vnode.key === element.key;\n                });\n\n                // index 順で並び替え\n                return index_a - index_b;\n            });\n\n            item.$on('change', () => (this as any).onClick(item));\n            if ((this as any).mandatory && !(this as any).selectedValues.length) {\n                (this as any).updateMandatory();\n            }\n\n            // 追加された要素のソート後のインデックスを取得して更新する\n            (this as any).updateItem(item, this.items.indexOf(item));\n\n            // ソート後の現在アクティブなタブのインデックスを取得し直し、設定する\n            // 配列の末尾以外に追加された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\n            }\n        },\n\n        unregister(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 継承元の unregister() の処理を呼び出す（いわゆる super() ）\n            // ref: https://github.com/vuejs/vue/issues/2977\n            (this.constructor as any).super.options.methods.unregister.call(this, item);\n\n            // 配列の末尾以外から削除された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\n            }\n        }\n    }\n});\n","\nimport { VueConstructor, VNode } from 'vue';\nimport VTabs from 'vuetify/lib/components/VTabs/VTabs';\nimport { convertToUnit } from 'vuetify/lib/util/helpers';\n\nimport VTabsBar from '@/components/Vuetify/VTabsBar';\n\nexport default (VTabs as VueConstructor).extend({\n    methods: {\n\n        // VTabsBar は VTabs から暗黙的に生成されるコンポーネントのため、直接上書きすることができない\n        // そこで VTabs 自体も上書きし、VTabs で $createElement() される時の VTabsBar を自前でオーバーライドしたものに差し替える\n        // ビルド済みのファイルには型定義が入っていないので any を多用せざるを得ない…\n        genBar(items: VNode[], slider: VNode | null) {\n            const data = {\n                style: {\n                    height: convertToUnit((this as any).height),\n                },\n                props: {\n                    activeClass: (this as any).activeClass,\n                    centerActive: (this as any).centerActive,\n                    dark: (this as any).dark,\n                    light: (this as any).light,\n                    mandatory: !(this as any).optional,\n                    mobileBreakpoint: (this as any).mobileBreakpoint,\n                    nextIcon: (this as any).nextIcon,\n                    prevIcon: (this as any).prevIcon,\n                    showArrows: (this as any).showArrows,\n                    value: (this as any).internalValue,\n                },\n                on: {\n                    'call:slider': (this as any).callSlider,\n                    change: (val: any) => {\n                        (this as any).internalValue = val;\n                    },\n                },\n                ref: 'items',\n            };\n\n            (this as any).setTextColor((this as any).computedColor, data);\n            (this as any).setBackgroundColor((this as any).backgroundColor, data);\n\n            // ここでオーバーライドした VTabsBar を使うのが最重要\n            // これをやるためだけにわざわざ VTabs に関してもオーバーライドする羽目になってる…\n            return (this as any).$createElement(VTabsBar, data, [\n                (this as any).genSlider(slider),\n                items,\n            ]);\n        }\n    }\n});\n","\nimport { VueConstructor } from 'vue';\nimport { GroupableInstance } from 'vuetify/lib/components/VItemGroup/VItemGroup';\nimport VTabsItems from 'vuetify/lib/components/VTabs/VTabsItems';\n\n// VTabsItems は VItemGroup と VWindow を extend() して実装されている\nexport default (VTabsItems as VueConstructor).extend({\n    data() {\n        return {\n            // 一応型定義をしておく\n            items: [] as GroupableInstance[],\n        };\n    },\n    methods: {\n\n        // タブのデータ配列の先頭に新しい要素が追加されるとそのタブのアニメーションの向きが逆になるバグがあるので、VItemGroup 側の挙動をオーバーライドする\n        // DOM 上も VNode 上も正しい順序で並んでいるが、this.items に関しては追加された順になっていてしまっていて齟齬が発生するのが原因\n        // ref: https://github.com/vuetifyjs/vuetify/issues/13862\n        register(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 要素を items に追加\n            this.items.push(item);\n\n            // this.$slots.default に VNode が、items には単に VueComponent が入っているので、事前に VNode の順番に合わせて並べ替える\n            // こうすることで、追加された順ではなく元のデータ配列通りの順番になる\n            this.items.sort((a, b) => {\n\n                // VueComponent の key が一致する this.$slots.default 内の VNode を探す\n                const index_a = this.$slots.default.findIndex((element) => {\n                    return a.$vnode.key === element.key;\n                });\n                const index_b = this.$slots.default.findIndex((element) => {\n                    return b.$vnode.key === element.key;\n                });\n\n                // index 順で並び替え\n                return index_a - index_b;\n            });\n\n            item.$on('change', () => (this as any).onClick(item));\n            if ((this as any).mandatory && !(this as any).selectedValues.length) {\n                (this as any).updateMandatory();\n            }\n\n            // 追加された要素のソート後のインデックスを取得して更新する\n            (this as any).updateItem(item, this.items.indexOf(item));\n\n            // ソート後の現在アクティブなタブのインデックスを取得し直し、設定する\n            // 配列の末尾以外に追加された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                // 値が異なるときだけ更新する\n                // こうしないと、Safari で変なアニメーションがついてしまう\n                if (this.items.indexOf(activeItem) !== (this as any).internalValue) {\n                    (this as any).updateInternalValue(this.items.indexOf(activeItem));\n                }\n            }\n        },\n\n        unregister(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 継承元の unregister() の処理を呼び出す（いわゆる super() ）\n            // ref: https://github.com/vuejs/vue/issues/2977\n            (this.constructor as any).super.options.methods.unregister.call(this, item);\n\n            // 配列の末尾以外から削除された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\n            }\n        },\n\n        // 最初のタブから最後のタブに遷移するとアニメーションの向きが逆になるバグがあるので、VWindow 側の挙動をオーバーライドする\n        // 本来は VCarousel 用の動作だが、VTabsItems も VWindow を継承しているので、それが適用されてしまっているらしい\n        // ref: https://github.com/yuwu9145/vuetify/blob/master/packages/vuetify/src/components/VWindow/VWindow.ts#L239-L252\n        updateReverse(val: number, oldVal: number) {\n\n            const itemsLength = this.items.length;\n            const lastIndex = itemsLength - 1;\n\n            if (itemsLength <= 2) return val < oldVal;\n\n            // continuous が false の時、常に val < oldVal の結果を返す\n            if (!(this as any).continuous) return val < oldVal;\n\n            if (val === lastIndex && oldVal === 0) {\n                return true;\n            } else if (val === 0 && oldVal === lastIndex) {\n                return false;\n            } else {\n                return val < oldVal;\n            }\n        }\n    }\n});\n","\nimport Vue from 'vue';\nimport { VSnackbar, VBtn, VIcon } from 'vuetify/lib';\nimport Vuetify from 'vuetify/lib/framework';\n\nVue.use(Vuetify);\n\n// vuetify-message-snackbar を使うのに必要\nVue.component('v-snackbar', VSnackbar);\nVue.component('v-btn', VBtn);\nVue.component('v-icon', VIcon);\n\nexport default new Vuetify({\n    theme: {\n        dark: true,\n        themes: {\n            dark: {\n                primary: '#E64F97',\n                secondary: '#E33157',\n                twitter: {\n                    base: '#4F82E6',\n                    lighten1: '#799FEC',\n                    lighten2: '#41A5F1',\n                },\n                gray: '#66514C',\n                black: '#110A09',\n                background: {\n                    base: '#1E1310',\n                    lighten1: '#2F221F',\n                    lighten2: '#433532',\n                    lighten3: '#4c3c38',\n                },\n                text: {\n                    base: '#FFEAEA',\n                    darken1: '#D9C7C7',\n                    darken2: '#8E7F7E',\n                    darken3: '#786968',\n                }\n            }\n        },\n        options: {\n            customProperties: true,\n        },\n    },\n});\n","\n/**\n * 共通ユーティリティ\n */\nexport default class Utils {\n\n    // バージョン情報\n    // ビルド時の環境変数 (vue.config.js に記載) から取得\n    static readonly version: string = process.env.VUE_APP_VERSION;\n\n    // バックエンドの API のベース URL\n    static readonly api_base_url = (() => {\n        if (process.env.NODE_ENV === 'development') {\n            // デバッグ時はポートを 7000 に強制する\n            return `${window.location.protocol}//${window.location.hostname}:7000/api`;\n        } else {\n            // ビルド後は同じポートを使う\n            return `${window.location.protocol}//${window.location.host}/api`;\n        }\n    })();\n\n\n    /**\n     * アクセストークンを LocalStorage から取得する\n     * @returns JWT アクセストークン（ログインしていない場合は null が返る）\n     */\n    static getAccessToken(): string | null {\n\n        // LocalStorage の取得結果をそのまま返す\n        // LocalStorage.getItem() はキーが存在しなければ（=ログインしていなければ）null を返す\n        return localStorage.getItem('KonomiTV-AccessToken');\n    }\n\n\n    /**\n     * アクセストークンを LocalStorage に保存する\n     * @param access_token 発行された JWT アクセストークン\n     */\n    static saveAccessToken(access_token: string): void {\n\n        // そのまま LocalStorage に保存\n        localStorage.setItem('KonomiTV-AccessToken', access_token);\n    }\n\n\n    /**\n     * アクセストークンを LocalStorage から削除する\n     * アクセストークンを削除することで、ログアウト相当になる\n     */\n    static deleteAccessToken(): void {\n\n        // LocalStorage に KonomiTV-AccessToken キーが存在しない\n        if (localStorage.getItem('KonomiTV-AccessToken') === null) return;\n\n        // KonomiTV-AccessToken キーを削除\n        localStorage.removeItem('KonomiTV-AccessToken');\n    }\n\n\n    /**\n     * ブラウザが実行されている OS に応じて、\"Ctrl\" または \"Cmd\" を返す\n     * キーボードショートカットのコンビネーションキーの説明を OS によって分けるために使う\n     * @returns ブラウザが実行されている OS が Mac なら Cmd を、それ以外なら Ctrl を返す\n     */\n    static CtrlOrCmd(): 'Ctrl' | 'Cmd' {\n        // iPhone・iPad で純正キーボードを接続した場合も一応想定して、iPhone・iPad も含める（動くかは未検証）\n        return /iPhone|iPad|Macintosh/i.test(navigator.userAgent) ? 'Cmd' : 'Ctrl';\n    }\n\n\n    /**\n     * Blob に格納されているデータをブラウザにダウンロードさせる\n     * @param blob Blob オブジェクト\n     * @param filename 保存するファイル名\n     */\n    static downloadBlobData(blob: Blob, filename: string): void {\n\n        // Blob URL を発行\n        const blob_url = URL.createObjectURL(blob);\n\n        // 画像をダウンロード\n        const link = document.createElement('a');\n        link.download = filename;\n        link.href = blob_url;\n        link.click();\n\n        // Blob URL を破棄\n        URL.revokeObjectURL(blob_url);\n    }\n\n\n    /**\n     * innerHTML しても問題ないように HTML の特殊文字をエスケープする\n     * PHP の htmlspecialchars() と似たようなもの\n     * @param content HTML エスケープされてないテキスト\n     * @returns HTML エスケープされたテキスト\n     */\n    static escapeHTML(content: string): string {\n\n        // HTML エスケープが必要な文字\n        // ref: https://www.php.net/manual/ja/function.htmlspecialchars.php\n        const html_escape_table = {\n            '&': '&amp;',\n            '\"': '&quot;',\n            '\\'': '&apos;',\n            '<': '&lt;',\n            '>': '&gt;',\n        };\n\n        // ref: https://qiita.com/noriaki/items/4bfef8d7cf85dc1035b3\n        return content.replace(/[&\"'<>]/g, (match) => {\n            return html_escape_table[match];\n        });\n    }\n\n\n    /**\n     * OAuth 連携時のポップアップを画面中央に表示するための windowFeatures 文字列を取得する\n     * ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1\n     * @returns window.open() で使う windowFeatures 文字列\n     */\n    static getWindowFeatures(): string {\n\n        // ポップアップウインドウのサイズ\n        const popupSizeWidth = 650;\n        const popupSizeHeight = window.screen.height >= 800 ? 800 : window.screen.height - 100;\n\n        // ポップアップウインドウの位置\n        const posTop = (window.screen.height - popupSizeHeight) / 2;\n        const posLeft = (window.screen.width - popupSizeWidth) / 2;\n\n        return `toolbar=0,status=0,top=${posTop},left=${posLeft},width=${popupSizeWidth},height=${popupSizeHeight},modal=yes,alwaysRaised=yes`;\n    }\n\n\n    /**\n     * 現在フォーカスを持っている要素に指定された CSS クラスが付与されているか\n     * @param class_name 存在を確認する CSS クラス名\n     * @returns document.activeElement が class_name で指定したクラスを持っているかどうか\n     */\n    static hasActiveElementClass(class_name: string): boolean {\n        if (document.activeElement === null) return false;\n        return document.activeElement.classList.contains(class_name);\n    }\n\n\n    /**\n     * ブラウザが Firefox かどうか\n     * @returns ブラウザが Firefox なら true を返す\n     */\n    static isFirefox(): boolean {\n        return /Firefox/i.test(navigator.userAgent);\n    }\n\n\n    /**\n     * モバイルデバイス（スマホ・タブレット）かどうか\n     * @returns モバイルデバイス (スマホ・タブレット) なら true を返す\n     */\n    static isMobileDevice(): boolean {\n        // Macintosh が入っているのは、iPadOS は既定でデスクトップ表示モードが有効になっていて、UA だけでは Mac と判別できないため\n        // Mac にタッチパネル付きの機種は存在しないので、'ontouchend' in document で判定できる\n        return /iPhone|iPad|iPod|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\n    }\n\n\n    /**\n     * 表示画面がスマホ横画面かどうか\n     * @returns スマホ横画面なら true を返す\n     */\n    static isSmartphoneHorizontal(): boolean {\n        return window.matchMedia('(max-width: 1000px) and (max-height: 450px)').matches;\n    }\n\n\n    /**\n     * 表示画面がスマホ縦画面かどうか\n     * @returns スマホ縦画面なら true を返す\n     */\n    static isSmartphoneVertical(): boolean {\n        return window.matchMedia('(max-width: 600px) and (min-height: 450.01px)').matches;\n    }\n\n\n    /**\n     * 表示画面がタブレット横画面かどうか\n     * @returns タブレット横画面なら true を返す\n     */\n    static isTabletHorizontal(): boolean {\n        return window.matchMedia('(max-width: 1264px) and (max-height: 850px)').matches;\n    }\n\n\n    /**\n     * 表示画面がタブレット縦画面かどうか\n     * @returns タブレット縦画面なら true を返す\n     */\n    static isTabletVertical(): boolean {\n        return window.matchMedia('(max-width: 850px) and (min-height: 850.01px)').matches;\n    }\n\n\n    /**\n     * 表示端末がタッチデバイスかどうか\n     * @returns タッチデバイスなら true を返す\n     */\n    static isTouchDevice(): boolean {\n        return window.matchMedia('(hover: none)').matches;\n    }\n\n\n    /**\n     * 任意の桁で切り捨てする\n     * ref: https://qiita.com/nagito25/items/0293bc317067d9e6c560#comment-87f0855f388953843037\n     * @param value 切り捨てする数値\n     * @param base どの桁で切り捨てするか (-1 → 10の位 / 3 → 小数第3位）\n     * @return 切り捨てした値\n     */\n    static mathFloor(value: number, base: number = 0): number {\n        return Math.floor(value * (10**base)) / (10**base);\n    }\n\n\n    /**\n     * async/await でスリープ的なもの\n     * @param seconds 待機する秒数 (ミリ秒単位ではないので注意)\n     * @returns Promise を返すので、await sleep(1); のように使う\n     */\n    static async sleep(seconds: number): Promise<number> {\n        return await new Promise(resolve => setTimeout(resolve, seconds * 1000));\n    }\n\n\n    /**\n     * 現在時刻の UNIX タイムスタンプ (秒単位) を取得する (デバッグ用)\n     * @returns 現在時刻の UNIX タイムスタンプ (秒単位)\n     */\n    static time(): number {\n        return Date.now() / 1000;\n    }\n\n\n    /**\n     * 指定された値の型の名前を取得する\n     * ref: https://qiita.com/amamamaou/items/ef0b797156b324bb4ef3\n     * @returns 指定された値の型の名前\n     */\n    static typeof(value: any): string {\n        return Object.prototype.toString.call(value).slice(8, -1).toLowerCase();\n    }\n\n\n    /**\n     * 文字列中に含まれる URL をリンクの HTML に置き換える\n     * @param text 置換対象の文字列\n     * @returns URL をリンクに置換した文字列\n     */\n    static URLtoLink(text: string): string {\n\n        // HTML の特殊文字で表示がバグらないように、事前に HTML エスケープしておく\n        text = Utils.escapeHTML(text);\n\n        // ref: https://www.softel.co.jp/blogs/tech/archives/6099\n        const pattern = /(https?:\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/ig;\n        return text.replace(pattern, '<a href=\"$1\" target=\"_blank\">$1</a>');\n    }\n}\n","\nimport { ChannelType } from '@/services/Channels';\n\n\n/**\n * チャンネル周りのユーティリティ\n */\nexport class ChannelUtils {\n\n    /**\n     * チャンネル ID からチャンネルタイプを取得する\n     * @param channel_id チャンネル ID\n     * @returns チャンネルタイプ\n     */\n    static getChannelType(channel_id: string): ChannelType {\n        try {\n            const result = channel_id.match('(?<channel_type>[a-z]+)[0-9]+').groups.channel_type.toUpperCase();\n            return result as ChannelType;\n        } catch (e) {\n            // 何かしらエラーが発生したということはチャンネル ID が不正\n            // とりあえずここではエラーにならないよう GR を返す  エラー処理はその後の段階で行われる\n            return 'GR';\n        }\n    }\n\n\n    /**\n     * チャンネルの実況勢いから「多」「激多」「祭」を取得する\n     * ref: https://ja.wikipedia.org/wiki/%E3%83%8B%E3%82%B3%E3%83%8B%E3%82%B3%E5%AE%9F%E6%B3%81\n     * @param channel_force チャンネルの実況勢い\n     * @returns normal（普通）or many（多）or so-many（激多）or festival（祭）\n     */\n    static getChannelForceType(channel_force: number | null): 'normal' | 'many' | 'so-many' | 'festival' {\n\n        // 実況勢いが null（=対応する実況チャンネルがない）\n        if (channel_force === null) return 'normal';\n\n        // 実況勢いが 500 コメント以上（祭）\n        if (channel_force >= 500) return 'festival';\n        // 実況勢いが 200 コメント以上（激多）\n        if (channel_force >= 200) return 'so-many';\n        // 実況勢いが 100 コメント以上（多）\n        if (channel_force >= 100) return 'many';\n\n        // それ以外\n        return 'normal';\n    }\n}\n","\nimport { MessageOption, MessageType } from 'vuetify-message-snackbar/src/message';\n\n\ninterface MessageReturnValue {\n    close(): void;\n    again(): void;\n}\n\n// Vue コンポーネント以外からも this.$message を使えるようにするための (強引な) ラッパー\nexport default {\n    success(message: MessageType | MessageOption): MessageReturnValue {\n        // @ts-ignore\n        return window.KonomiTVVueInstance.$message.success(message);\n    },\n    info(message: MessageType | MessageOption): MessageReturnValue {\n        // @ts-ignore\n        return window.KonomiTVVueInstance.$message.info(message);\n    },\n    warning(message: MessageType | MessageOption): MessageReturnValue {\n        // @ts-ignore\n        return window.KonomiTVVueInstance.$message.warning(message);\n    },\n    error(message: MessageType | MessageOption): MessageReturnValue {\n        // @ts-ignore\n        return window.KonomiTVVueInstance.$message.error(message);\n    },\n    show(message: MessageType | MessageOption): MessageReturnValue {\n        // @ts-ignore\n        return window.KonomiTVVueInstance.$message.show(message);\n    }\n};\n","\nimport axios from 'axios';\n\nimport Utils from '@/utils';\n\n// ref: https://note.com/quoizunda/n/nb62e13e73499\n\n// Axios のインスタンスを作成\nconst axios_instance = axios.create();\n\n// HTTP リクエスト前に割り込んで行われる処理\naxios_instance.interceptors.request.use((config) => {\n\n    // API のベース URL を設定 (config.baseURL が指定されていない場合のみ)\n    if (config.baseURL === undefined) {\n        config.baseURL = Utils.api_base_url;\n    }\n\n    // アクセストークンが取得できたら（=ログインされていれば）\n    // 取得したアクセストークンを Authorization ヘッダーに Bearer トークンとしてセット\n    // これを忘れると（当然ながら）ログインしていない扱いになる\n    const access_token = Utils.getAccessToken();\n    if (access_token !== null) {\n        config.headers['Authorization'] = `Bearer ${access_token}`;\n    }\n\n    // KonomiTV クライアントのバージョンを設定\n    // 今のところ使わないが、将来的にクライアントとサーバーを分離することを見据えて念のため\n    config.headers['X-KonomiTV-Version'] = Utils.version;\n\n    // タイムアウト時間を30秒に設定\n    config.timeout = 30 * 1000;\n\n    return config;\n});\n\nexport default axios_instance;\n","\nimport Message from '@/message';\nimport APIClient from '@/services/APIClient';\n\n\n/** ユーザーアカウントの情報を表すインターフェイス */\nexport interface IUser {\n    id: number;\n    name: string;\n    is_admin: boolean;\n    niconico_user_id: number | null;\n    niconico_user_name: string | null;\n    niconico_user_premium: boolean | null;\n    twitter_accounts: ITwitterAccount[];\n    created_at: string;\n    updated_at: string;\n}\n\n/** ユーザーアカウントに紐づく Twitter アカウントの情報を表すインターフェイス */\nexport interface ITwitterAccount {\n    id: number;\n    name: string;\n    screen_name: string;\n    icon_url: string;\n    is_oauth_session: boolean;\n    created_at: string;\n    updated_at: string;\n}\n\n/** ユーザーアカウントのアクセストークンを表すインターフェイス */\nexport interface IUserAccessToken {\n    access_token: string;\n    token_type: string;\n}\n\nexport interface IUserCreateRequest {\n    username: string;\n    password: string;\n}\nexport interface IUserUpdateRequest {\n    username?: string;\n    password?: string;\n}\nexport interface IUserUpdateRequestForAdmin {\n    username?: string;\n    password?: string;\n    is_admin?: boolean;\n}\n\n\nclass Users {\n\n    /**\n     * ユーザーアカウントを作成する\n     * @param user_create_request ユーザー名とパスワード\n     * @returns 作成したユーザーアカウントの情報 or アカウント作成に失敗した場合は null\n     */\n    static async createUser(user_create_request: IUserCreateRequest): Promise<IUser | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.post<IUser>('/users', user_create_request);\n\n        // エラー処理\n        if ('is_error' in response) {\n            switch (response.error.message) {\n                case 'Specified username is duplicated': {\n                    Message.error('ユーザー名が重複しています。');\n                    break;\n                }\n                case 'Specified username is not accepted due to system limitations': {\n                    Message.error('ユーザー名に token と me は使えません。');\n                    break;\n                }\n                default: {\n                    APIClient.showGenericError(response, 'アカウントを作成できませんでした。');\n                    break;\n                }\n            }\n            return null;\n        }\n\n        return response.data;\n    }\n\n\n    /**\n     * ユーザーアカウントのアクセストークンを発行する\n     * @param username ユーザー名\n     * @param password パスワード\n     * @returns 発行したアクセストークン or ログインに失敗した場合は null\n     */\n    static async createUserAccessToken(username: string, password: string): Promise<IUserAccessToken | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.post<IUserAccessToken>('/users/token', new URLSearchParams({username, password}));\n\n        // エラー処理\n        if ('is_error' in response) {\n            switch (response.error.message) {\n                case 'Incorrect username': {\n                    Message.error('ログインできませんでした。そのユーザー名のアカウントは存在しません。');\n                    break;\n                }\n                case 'Incorrect password': {\n                    Message.error('ログインできませんでした。パスワードを間違えていませんか？');\n                    break;\n                }\n                default: {\n                    APIClient.showGenericError(response, 'ログインできませんでした。');\n                    break;\n                }\n            }\n            return null;\n        }\n\n        return response.data;\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントの情報を取得する\n     * @returns ログイン中のユーザーアカウントの情報 or ログインしていない場合は null\n     */\n    static async fetchUser(): Promise<IUser | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<IUser>('/users/me');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'アカウント情報を取得できませんでした。');\n            return null;\n        }\n\n        return response.data;\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントのアイコンを取得する\n     * @returns ログイン中のユーザーアカウントのアイコンの Blob URL or ログインしていない場合は null\n     */\n    static async fetchUserIcon(): Promise<string | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get('/users/me/icon', {responseType: 'blob'});\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'アイコン画像を取得できませんでした。');\n            return null;\n        }\n\n        return URL.createObjectURL(response.data);\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントの情報を更新する\n     * @param user_update_request ユーザー名 or パスワード\n     */\n    static async updateUser(user_update_request: IUserUpdateRequest): Promise<void> {\n\n        // API リクエストを実行\n        const response = await APIClient.put('/users/me', user_update_request);\n\n        // エラー処理\n        if ('is_error' in response) {\n            switch (response.error.message) {\n                case 'Specified username is duplicated': {\n                    Message.error('ユーザー名が重複しています。');\n                    break;\n                }\n                case 'Specified username is not accepted due to system limitations': {\n                    Message.error('ユーザー名に token と me は使えません。');\n                    break;\n                }\n                default: {\n                    APIClient.showGenericError(response, 'アカウント情報を更新できませんでした。');\n                    break;\n                }\n            }\n            return;\n        }\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントのアイコン画像を更新する\n     * @param icon アイコンの File オブジェクト\n     */\n    static async updateUserIcon(icon: File): Promise<void> {\n\n        // アイコン画像の File オブジェクト (= Blob) を FormData に入れる\n        // multipart/form-data で送るために必要\n        // ref: https://r17n.page/2020/02/04/nodejs-axios-file-upload-api/\n        const form_data = new FormData();\n        form_data.append('image', icon);\n\n        // API リクエストを実行\n        const response = await APIClient.put('/users/me/icon', form_data, {headers: {'Content-Type': 'multipart/form-data'}});\n\n        // エラー処理\n        if ('is_error' in response) {\n            switch (response.error.message) {\n                case 'Please upload JPEG or PNG image': {\n                    Message.error('JPEG または PNG 画像をアップロードしてください。');\n                    break;\n                }\n                default: {\n                    APIClient.showGenericError(response, 'アイコン画像を更新できませんでした。');\n                    break;\n                }\n            }\n            return;\n        }\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントを削除する\n     */\n    static async deleteUser(): Promise<void> {\n\n        // API リクエストを実行\n        const response = await APIClient.delete('/users/me');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'アカウントを削除できませんでした。');\n            return;\n        }\n    }\n}\n\nexport default Users;\n","\nimport { defineStore } from 'pinia';\n\nimport Message from '@/message';\nimport Users, { IUser, IUserUpdateRequest } from '@/services/Users';\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils from '@/utils';\n\n\n/**\n * 現在ログイン中のユーザーアカウントの情報を共有するストア\n */\nconst useUserStore = defineStore('user', {\n    state: () => ({\n\n        // 現在ログイン中かどうか\n        is_logged_in: false as boolean,\n\n        // ログイン済みのユーザーの情報\n        user: null as IUser | null,\n\n        // ログイン済みのユーザーのアイコン画像の Blob URL\n        user_icon_url: null as string | null,\n    }),\n    getters: {\n\n        /**\n         * ログイン済みのユーザーのニコニコアカウントのユーザーアイコンの URL (ニコニコアカウントと連携されている場合のみ)\n         */\n        user_niconico_icon_url(): string | null {\n            if (this.user === null || this.user.niconico_user_id === null) {\n                return null;\n            }\n            const user_id_slice = this.user.niconico_user_id.toString().slice(0, 4);\n            return `https://secure-dcdn.cdn.nimg.jp/nicoaccount/usericon/${user_id_slice}/${this.user.niconico_user_id}.jpg`;\n        }\n    },\n    actions: {\n\n        /**\n         * アカウントを作成する\n         * @param username ユーザー名\n         * @param password パスワード\n         * @returns アカウント作成に成功した場合は true\n         */\n        async register(username: string, password: string): Promise<boolean> {\n\n            // アカウントを作成\n            const result = await Users.createUser({username, password});\n            if (result === null) {\n                console.log('Register failed.');\n                return false;  // アカウント作成失敗 (エラーハンドリングは services 層で行われる)\n            }\n\n            // 作成したアカウントでログイン\n            await this.login(username, password, true);\n            console.log('Register successful.');\n            Message.success('アカウントを作成しました。');\n            return true;\n        },\n\n        /**\n         * ログイン処理を行う\n         * @param username ユーザー名\n         * @param password パスワード\n         * @param silent ログインしたことをメッセージで通知しない場合は true\n         * @returns ログインに成功した場合は true\n         */\n        async login(username: string, password: string, silent: boolean = false): Promise<boolean> {\n\n            // アクセストークンを発行\n            const access_token = await Users.createUserAccessToken(username, password);\n            if (access_token === null) {\n                console.log('Login failed.');\n                this.logout(true);\n                return false;  // ログイン失敗 (エラーハンドリングは services 層で行われる)\n            }\n\n            // 取得したアクセストークンを保存\n            console.log('Login successful.');\n            Utils.saveAccessToken(access_token.access_token);\n            this.is_logged_in = true;\n\n            // ユーザーアカウントの情報を取得\n            await this.fetchUser(true);\n\n            if (silent === false) {\n                Message.success('ログインしました。');\n            }\n\n            return true;\n        },\n\n        /**\n         * ログアウト処理を行う\n         * @param silent ログアウトしたことをメッセージで通知しない場合は true\n         */\n        logout(silent: boolean = false): void {\n\n            // 設定の同期を無効化\n            const settings_store = useSettingsStore();\n            settings_store.settings.sync_settings = false;\n\n            // ブラウザからアクセストークンを削除\n            // これをもってログアウトしたことになる（それ以降の Axios のリクエストにはアクセストークンが含まれなくなる）\n            Utils.deleteAccessToken();\n\n            // 未ログイン状態に設定\n            this.is_logged_in = false;\n            this.user = null;\n            this.user_icon_url = '';\n\n            if (silent === false) {\n                Message.success('ログアウトしました。');\n            }\n        },\n\n        /**\n         * 現在ログイン中のユーザーアカウントの情報を取得する\n         * すでに取得済みの情報がある場合は API リクエストを行わずにそれを返す\n         * @param force 強制的に API リクエストを行う場合は true\n         * @returns ログイン中のユーザーアカウントの情報 or ログインしていない場合は null\n         */\n        async fetchUser(force: boolean = false): Promise<IUser | null> {\n\n            // LocalStorage にアクセストークンが保存されていない場合 (= 非ログイン状態) は常に null を返す\n            if (Utils.getAccessToken() === null) {\n                return null;\n            }\n\n            // すでにログイン済みのユーザーアカウントの情報がある場合はそれを返す\n            // force が true の場合は無視される\n            if (this.user !== null && force === false) {\n                return this.user;\n            }\n\n            // ユーザーアカウントの情報を取得する\n            const user = await Users.fetchUser();\n            if (user === null) {\n                // この時点で無効などの理由でアクセストークンが削除されている場合、ログアウトする\n                if (Utils.getAccessToken() === null) {\n                    this.logout(true);\n                }\n                return null;\n            }\n            this.is_logged_in = true;\n            this.user = user;\n\n            // ユーザーアカウントのアイコン画像の Blob URL を取得する\n            const user_icon_url = await Users.fetchUserIcon();\n            if (user_icon_url === null) {\n                return null;\n            }\n            this.user_icon_url = user_icon_url;\n\n            return this.user;\n        },\n\n        /**\n         * 現在ログイン中のユーザーアカウントの情報を更新する\n         * @param user_update_request ユーザー名 or パスワード\n         */\n        async updateUser(user_update_request: IUserUpdateRequest): Promise<void> {\n\n            // ユーザーアカウントの情報を更新する\n            await Users.updateUser(user_update_request);\n\n            // ユーザーアカウントの情報を再取得する\n            await this.fetchUser(true);\n\n            if (user_update_request.username !== undefined) {\n                Message.show('ユーザー名を更新しました。');\n            } else if (user_update_request.password !== undefined) {\n                Message.show('パスワードを更新しました。');\n            }\n        },\n\n        /**\n         * 現在ログイン中のユーザーアカウントのアイコン画像を更新する\n         * @param icon アイコンの File オブジェクト\n         */\n        async updateUserIcon(icon: File): Promise<void> {\n\n            // ユーザーアカウントのアイコン画像を更新する\n            await Users.updateUserIcon(icon);\n\n            // ユーザーアカウントの情報を再取得する\n            await this.fetchUser(true);\n\n            Message.show('アイコン画像を更新しました。');\n        },\n\n        /**\n         * 現在ログイン中のユーザーアカウントを削除する\n         */\n        async deleteUser(): Promise<void> {\n\n            // ユーザーアカウントを削除する\n            await Users.deleteUser();\n\n            // ログアウトする\n            this.logout(true);\n\n            Message.show('アカウントを削除しました。');\n        }\n    }\n});\n\nexport default useUserStore;\n","\n/**\n * services/ 以下の各クラスは、KonomiTV サーバーへの API リクエストを抽象化し、\n * API レスポンスの受け取りと、エラーが発生した際のエラーハンドリング (エラーメッセージ表示) までを責務として負う\n */\n\nimport { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\n\nimport Message from '@/message';\nimport axios from '@/plugins/axios';\nimport useUserStore from '@/store/UserStore';\n\n\n/** API のエラーレスポンスを表すインターフェイス */\nexport interface IError {\n    detail: string;\n}\n\n/** API リクエスト成功時のレスポンスを表すインターフェイス */\nexport type SuccessResponse<T> = {\n    status: number;\n    data: T;\n    error: null;\n    is_success: true;\n};\n\n/** API リクエスト失敗時のレスポンスを表すインターフェイス */\nexport type ErrorResponse<T extends Error = Error> = {\n    status: number;\n    data: null;\n    error: T;\n    is_error: true;\n};\n\n\n/**\n * services/ 以下の各クラスから呼び出される、Axios の薄いラッパー\n * エラーハンドリングを容易にするために、レスポンスを SuccessResponse と ErrorResponse に分けて返す\n * ref: https://zenn.dev/engineer_titan/articles/291c9fccb338e2\n */\nclass APIClient {\n\n    /**\n     * Axios で HTTP リクエストを送信し、レスポンスを受け取る\n     * @param request AxiosRequestConfig\n     * @returns 成功なら SuccessResponse 、失敗なら ErrorResponse を返す\n     */\n    static async request<T>(request: AxiosRequestConfig): Promise<SuccessResponse<T> | ErrorResponse> {\n\n        // Axios で HTTP リクエストを送信し、レスポンスを受け取る\n        const result: AxiosResponse<T> | AxiosError<IError> = await axios.request(request).catch((error: AxiosError<IError>) => error);\n\n        // エラーが発生した場合は ErrorResponse を返す\n        if (result instanceof AxiosError<IError>) {\n            console.error(result);\n\n            // エラーレスポンスがあれば、エラー内容を取得して返す\n            if (result.response) {\n                return {\n                    status: result.response.status,\n                    data: null,\n                    error: new Error(result.response.data.detail),\n                    is_error: true,\n                };\n\n            // エラーレスポンスがない場合は、AxiosError をそのまま返す\n            } else {\n                return {\n                    status: NaN,\n                    data: null,\n                    error: result,\n                    is_error: true,\n                };\n            }\n\n        // 正常にレスポンスが返ってきた場合は SuccessResponse を返す\n        } else {\n            return {\n                status: result.status,\n                data: result.data,\n                error: null,\n                is_success: true,\n            };\n        }\n    }\n\n\n    /**\n     * GET リクエストを送信する\n     * @param url リクエスト先の URL\n     * @returns 成功なら SuccessResponse 、失敗なら ErrorResponse を返す\n     */\n    static async get<T = any, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<SuccessResponse<T> | ErrorResponse> {\n        const request: AxiosRequestConfig = {\n            url: url,\n            method: 'GET',\n            ...config,\n        };\n        return await APIClient.request<T>(request);\n    }\n\n\n    /**\n     * POST リクエストを送信する\n     * @param url リクエスト先の URL\n     * @returns 成功なら SuccessResponse 、失敗なら ErrorResponse を返す\n     */\n    static async post<T = any, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<SuccessResponse<T> | ErrorResponse> {\n        const request: AxiosRequestConfig = {\n            url: url,\n            method: 'POST',\n            data: data,\n            ...config,\n        };\n        return await APIClient.request<T>(request);\n    }\n\n\n    /**\n     * PUT リクエストを送信する\n     * @param url リクエスト先の URL\n     * @returns 成功なら SuccessResponse 、失敗なら ErrorResponse を返す\n     */\n    static async put<T = any, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<SuccessResponse<T> | ErrorResponse> {\n        const request: AxiosRequestConfig = {\n            url: url,\n            method: 'PUT',\n            data: data,\n            ...config,\n        };\n        return await APIClient.request<T>(request);\n    }\n\n\n    /**\n     * DELETE リクエストを送信する\n     * @param url リクエスト先の URL\n     * @returns 成功なら SuccessResponse 、失敗なら ErrorResponse を返す\n     */\n    static async delete<T = any, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<SuccessResponse<T> | ErrorResponse> {\n        const request: AxiosRequestConfig = {\n            url: url,\n            method: 'DELETE',\n            ...config,\n        };\n        return await APIClient.request<T>(request);\n    }\n\n\n    /**\n     * 一般的なエラーメッセージの共通処理\n     * エラーメッセージを SnackBar で表示する\n     * @param response API から返されたエラーレスポンス\n     * @param template エラーメッセージのテンプレート（「アカウント情報を取得できませんでした。」など)\n     */\n    static showGenericError(response: ErrorResponse, template: string): void {\n        const user_store = useUserStore();\n        switch (response.error.message) {\n            case 'Not authenticated': {\n                user_store.logout(true);\n                Message.error(`${template}\\nログインし直してください。`);\n                return;\n            }\n            case 'Access token data is invalid': {\n                user_store.logout(true);\n                Message.error(`${template}\\nログインセッションが不正です。もう一度ログインし直してください。`);\n                return;\n            }\n            case 'Access token is invalid': {\n                user_store.logout(true);\n                Message.error(`${template}\\nログインセッションの有効期限が切れています。もう一度ログインし直してください。`);\n                return;\n            }\n            case 'User associated with access token does not exist': {\n                user_store.logout(true);\n                Message.error(`${template}\\nログインセッションに紐づくユーザーが存在しないか、削除されています。`);\n                return;\n            }\n            default: {\n                if (response.error.message) {\n                    if (Number.isNaN(response.status)) {\n                        Message.error(`${template}(${response.error.message})`);\n                    } else {\n                        Message.error(`${template}(HTTP Error ${response.status} / ${response.error.message})`);\n                    }\n                } else {\n                    Message.error(`${template}(HTTP Error ${response.status})`);\n                }\n                return;\n            }\n        }\n    }\n}\n\nexport default APIClient;\n","\nimport APIClient from '@/services/APIClient';\n\n\n/**\n * サーバーに保存されるクライアント設定を表すインターフェース\n * サーバー側の app.schemas.ClientSettings と\n * client/src/store/SettingsStore.ts 内の sync_settings_keys で定義されているものと同じ\n */\nexport interface IClientSettings {\n    pinned_channel_ids: string[];\n    // showed_panel_last_time: 同期無効\n    // selected_twitter_account_id: 同期無効\n    saved_twitter_hashtags: string[];\n    // tv_streaming_quality: 同期無効\n    // tv_data_saver_mode: 同期無効\n    // tv_low_latency_mode: 同期無効\n    panel_display_state: 'RestorePreviousState' | 'AlwaysDisplay' | 'AlwaysFold';\n    tv_panel_active_tab: 'Program' | 'Channel' | 'Comment' | 'Twitter';\n    caption_font: string;\n    always_border_caption_text: boolean;\n    specify_caption_background_color: boolean;\n    caption_background_color: string;\n    tv_show_superimpose: boolean;\n    // capture_copy_to_clipboard: 同期無効\n    capture_save_mode: 'Browser' | 'UploadServer' | 'Both';\n    capture_caption_mode: 'VideoOnly' | 'CompositingCaption' | 'Both';\n    // sync_settings: 同期無効\n    comment_speed_rate: number;\n    comment_font_size: number;\n    close_comment_form_after_sending: boolean;\n    muted_comment_keywords: IMutedCommentKeywords[];\n    muted_niconico_user_ids: string[];\n    mute_vulgar_comments: boolean;\n    mute_abusive_discriminatory_prejudiced_comments: boolean;\n    mute_big_size_comments: boolean;\n    mute_fixed_comments: boolean;\n    mute_colored_comments: boolean;\n    mute_consecutive_same_characters_comments: boolean;\n    fold_panel_after_sending_tweet: boolean;\n    reset_hashtag_when_program_switches: boolean;\n    auto_add_watching_channel_hashtag: boolean;\n    twitter_active_tab: 'Search' | 'Timeline' | 'Capture';\n    tweet_hashtag_position: 'Prepend' | 'Append' | 'PrependWithLineBreak' | 'AppendWithLineBreak';\n    tweet_capture_watermark_position: 'None' | 'TopLeft' | 'TopRight' | 'BottomLeft' | 'BottomRight';\n}\n\n/**\n * ミュート対象のコメントのキーワードのインターフェイス\n */\nexport interface IMutedCommentKeywords {\n    match: 'partial' | 'forward' | 'backward' | 'exact' | 'regex';\n    pattern: string;\n}\n\n\nclass Settings {\n\n    /**\n     * クライアント設定を取得する\n     * @return クライアント設定 (取得に失敗した場合は null)\n     */\n    static async fetchClientSettings(): Promise<IClientSettings | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<IClientSettings>('/settings/client');\n\n        // エラー処理 (基本起こらないはず & 実行できなくても後続の処理に影響しないため何もしない)\n        if ('is_error' in response) {\n            return null;\n        }\n\n        return response.data;\n    }\n\n\n    /**\n     * クライアント設定を更新する\n     * @param settings クライアント設定\n     */\n    static async updateClientSettings(settings: IClientSettings): Promise<void> {\n\n        // API リクエストを実行\n        // 正常時は 204 No Content が返るし、エラーは基本起こらないはずなので何もしない\n        await APIClient.put<IClientSettings>('/settings/client', settings);\n    }\n}\n\nexport default Settings;\n","\nimport { defineStore } from 'pinia';\n\nimport Settings, { IClientSettings, IMutedCommentKeywords } from '@/services/Settings';\nimport Utils from '@/utils';\n\n\n// LocalStorage に保存される KonomiTV の設定データ\ninterface ILocalClientSettings {\n    pinned_channel_ids: string[];\n    showed_panel_last_time: boolean;\n    selected_twitter_account_id: number | null;\n    saved_twitter_hashtags: string[];\n    tv_streaming_quality: '1080p-60fps' | '1080p' | '810p' | '720p' | '540p' | '480p' | '360p' | '240p';\n    tv_data_saver_mode: boolean;\n    tv_low_latency_mode: boolean;\n    panel_display_state: 'RestorePreviousState' | 'AlwaysDisplay' | 'AlwaysFold';\n    tv_panel_active_tab: 'Program' | 'Channel' | 'Comment' | 'Twitter';\n    caption_font: string;\n    always_border_caption_text: boolean;\n    specify_caption_background_color: boolean;\n    caption_background_color: string;\n    tv_show_superimpose: boolean;\n    capture_copy_to_clipboard: boolean;\n    capture_save_mode: 'Browser' | 'UploadServer' | 'Both';\n    capture_caption_mode: 'VideoOnly' | 'CompositingCaption' | 'Both';\n    sync_settings: boolean;\n    comment_speed_rate: number;\n    comment_font_size: number;\n    close_comment_form_after_sending: boolean;\n    muted_comment_keywords: IMutedCommentKeywords[];\n    muted_niconico_user_ids: string[];\n    mute_vulgar_comments: boolean;\n    mute_abusive_discriminatory_prejudiced_comments: boolean;\n    mute_big_size_comments: boolean;\n    mute_fixed_comments: boolean;\n    mute_colored_comments: boolean;\n    mute_consecutive_same_characters_comments: boolean;\n    fold_panel_after_sending_tweet: boolean;\n    reset_hashtag_when_program_switches: boolean;\n    auto_add_watching_channel_hashtag: boolean;\n    twitter_active_tab: 'Search' | 'Timeline' | 'Capture';\n    tweet_hashtag_position: 'Prepend' | 'Append' | 'PrependWithLineBreak' | 'AppendWithLineBreak';\n    tweet_capture_watermark_position: 'None' | 'TopLeft' | 'TopRight' | 'BottomLeft' | 'BottomRight';\n}\n\n// 設定データのうち、同期対象の設定キー\n// サーバー側の app.schemas.ClientSettings と\n// client/src/services/Settings.ts 内の IClientSettings で定義されているものと同じ\nconst sync_settings_keys = [\n    'pinned_channel_ids',\n    // showed_panel_last_time: 同期無効\n    // selected_twitter_account_id: 同期無効\n    'saved_twitter_hashtags',\n    // tv_streaming_quality: 同期無効\n    // tv_data_saver_mode: 同期無効\n    // tv_low_latency_mode: 同期無効\n    'panel_display_state',\n    'tv_panel_active_tab',\n    'caption_font',\n    'always_border_caption_text',\n    'specify_caption_background_color',\n    'caption_background_color',\n    'tv_show_superimpose',\n    // capture_copy_to_clipboard: 同期無効\n    'capture_save_mode',\n    'capture_caption_mode',\n    // sync_settings: 同期無効\n    'comment_speed_rate',\n    'comment_font_size',\n    'close_comment_form_after_sending',\n    'muted_comment_keywords',\n    'muted_niconico_user_ids',\n    'mute_vulgar_comments',\n    'mute_abusive_discriminatory_prejudiced_comments',\n    'mute_big_size_comments',\n    'mute_fixed_comments',\n    'mute_colored_comments',\n    'mute_consecutive_same_characters_comments',\n    'fold_panel_after_sending_tweet',\n    'reset_hashtag_when_program_switches',\n    'auto_add_watching_channel_hashtag',\n    'twitter_active_tab',\n    'tweet_hashtag_position',\n    'tweet_capture_watermark_position',\n];\n\n// LocalStorage に保存される KonomiTV の設定データのデフォルト値\nconst default_settings: ILocalClientSettings = {\n\n    // ***** 設定画面から直接変更できない設定値 *****\n\n    // ピン留めしているチャンネルの ID (ex: gr011) が入るリスト\n    pinned_channel_ids: [],\n    // 前回視聴画面を開いた際にパネルが表示されていたかどうか (同期無効)\n    showed_panel_last_time: true,\n    // 現在ツイート対象として選択されている Twitter アカウントの ID (同期無効)\n    selected_twitter_account_id: null,\n    // 保存している Twitter のハッシュタグが入るリスト\n    saved_twitter_hashtags: [],\n\n    // ***** 設定 → 全般 *****\n\n    // テレビのデフォルトのストリーミング画質 (Default: 1080p) (同期無効)\n    tv_streaming_quality: '1080p',\n    // テレビを通信節約モードで視聴する (Default: オフ) (同期無効)\n    tv_data_saver_mode: false,\n    // テレビを低遅延で視聴する (Default: 低遅延で視聴する) (同期無効)\n    tv_low_latency_mode: true,\n    // デフォルトのパネルの表示状態 (Default: 前回の状態を復元する)\n    panel_display_state: 'RestorePreviousState',\n    // テレビをみるときにデフォルトで表示されるパネルのタブ (Default: 番組情報タブ)\n    tv_panel_active_tab: 'Program',\n\n    // ***** 設定 → 字幕 *****\n\n    // 字幕のフォント (Default: Windows TV 丸ゴシック)\n    caption_font: 'Windows TV MaruGothic',\n    // 字幕の文字を常に縁取って描画する (Default: 常に縁取る)\n    always_border_caption_text: true,\n    // 字幕の背景色を指定する (Default: 指定しない)\n    specify_caption_background_color: false,\n    // 字幕の背景色 (Default: 不透明度が 50% の黒)\n    caption_background_color: '#00000080',\n    // テレビをみるときに文字スーパーを表示する (Default: 表示する)\n    tv_show_superimpose: true,\n\n    // ***** 設定 → キャプチャ *****\n\n    // キャプチャをクリップボードにコピーする (Default: 無効) (同期無効)\n    capture_copy_to_clipboard: false,\n    // キャプチャの保存先 (Default: KonomiTV サーバーにアップロード)\n    capture_save_mode: 'UploadServer',\n    // 字幕が表示されているときのキャプチャの保存モード (Default: 映像のみのキャプチャと、字幕を合成したキャプチャを両方保存する)\n    capture_caption_mode: 'Both',\n\n    // ***** 設定 → アカウント *****\n\n    // 設定を同期する (Default: 同期しない) (同期無効)\n    sync_settings: false,\n\n    // ***** 設定 → ニコニコ実況 *****\n\n    // コメントの速さ (Default: 1倍)\n    comment_speed_rate: 1,\n    // コメントのフォントサイズ (Default: 34px)\n    comment_font_size: 34,\n    // コメント送信後にコメント入力フォームを閉じる (Default: オン)\n    close_comment_form_after_sending: true,\n\n    // ***** 設定 → ニコニコ実況 (ミュート設定) *****\n\n    // ミュート済みのコメントのキーワードが入るリスト\n    muted_comment_keywords: [],\n    // ミュート済みのニコニコユーザー ID が入るリスト\n    muted_niconico_user_ids: [],\n    // 露骨な表現を含むコメントをミュートする (Default: ミュートする)\n    mute_vulgar_comments: true,\n    // 罵倒や誹謗中傷、差別的な表現、政治的に偏った表現を含むコメントをミュートする (Default: ミュートする)\n    mute_abusive_discriminatory_prejudiced_comments: true,\n    // 文字サイズが大きいコメントをミュートする (Default: ミュートする)\n    mute_big_size_comments: true,\n    // 映像の上下に固定表示されるコメントをミュートする (Default: ミュートしない)\n    mute_fixed_comments: false,\n    // 色付きのコメントをミュートする (Default: ミュートしない)\n    mute_colored_comments: false,\n    // 8文字以上同じ文字が連続しているコメントをミュートする (Default: ミュートしない)\n    mute_consecutive_same_characters_comments: false,\n\n    // ***** 設定 → Twitter *****\n\n    // ツイート送信後にパネルを折りたたむ (Default: オフ)\n    fold_panel_after_sending_tweet: false,\n    // 番組が切り替わったときにハッシュタグフォームをリセットする (Default: オン)\n    reset_hashtag_when_program_switches: true,\n    // 視聴中のチャンネルに対応する局タグを自動で追加する (Default: オン)\n    auto_add_watching_channel_hashtag: true,\n    // デフォルトで表示される Twitter タブ内のタブ (Default: キャプチャタブ)\n    twitter_active_tab: 'Capture',\n    // ツイートにつけるハッシュタグの位置 (Default: ツイート本文の後に追加する)\n    tweet_hashtag_position: 'Append',\n    // ツイートするキャプチャに番組名の透かしを描画する (Default: 透かしを描画しない)\n    tweet_capture_watermark_position: 'None',\n};\n\n/**\n * LocalStorage の KonomiTV-Settings キーから設定データを取得する\n * @returns 設定データ\n */\nexport function getLocalStorageSettings(): {[key: string]: any} {\n    const settings = localStorage.getItem('KonomiTV-Settings');\n    if (settings !== null) {\n        return JSON.parse(settings);\n    } else {\n        // もし LocalStorage に KonomiTV-Settings キーがまだない場合、あらかじめデフォルトの設定値を保存しておく\n        setLocalStorageSettings(default_settings);\n        return default_settings;\n    }\n}\n\n/**\n * LocalStorage の KonomiTV-Settings キーに設定データを保存する\n * @param settings 設定データ\n */\nexport function setLocalStorageSettings(settings: {[key: string]: any}): void {\n    localStorage.setItem('KonomiTV-Settings', JSON.stringify(settings));\n}\n\n/**\n * 与えられた設定データを並び替えたり足りない設定キーを補完したり不要な設定キーを削除したりと整形して返す\n * @param settings 設定データ\n */\nfunction getNormalizedSettings(settings: {[key: string]: any}): ILocalClientSettings {\n\n    // (名前が変わった、廃止されたなどの理由で) 現在の default_settings に存在しない設定キーを排除した上で並び替え\n    // 並び替えられていないと設定データの比較がうまくいかない\n    const new_settings: {[key: string]: any} = {};\n    for (const default_settings_key of Object.keys(default_settings)) {\n        if (default_settings_key in settings) {\n            new_settings[default_settings_key] = settings[default_settings_key];\n        } else {\n            // 後のバージョンで追加されたなどの理由で現状の KonomiTV-Settings に存在しない設定キーの場合\n            // その設定キーのデフォルト値を取得する\n            new_settings[default_settings_key] = default_settings[default_settings_key];\n        }\n    }\n\n    // この状態の新しい設定データを返す\n    return new_settings as ILocalClientSettings;\n}\n\n/**\n * 設定データを共有するストア\n */\nconst useSettingsStore = defineStore('settings', {\n    state: () => {\n\n        // ref: https://www.vuemastery.com/blog/refresh-proof-your-pinia-stores/\n\n        // LocalStorage から設定データを取得する\n        const settings = getLocalStorageSettings();\n\n        // (名前が変わった、廃止されたなどの理由で) 現在の default_settings に存在しない設定キーを排除した上で並び替え\n        const new_settings = getNormalizedSettings(settings);\n\n        // この状態の新しい設定データを LocalStorage に保存する\n        setLocalStorageSettings(new_settings);\n\n        // 設定データを Store の state のデフォルト値として返す\n        return {\n            settings: new_settings as ILocalClientSettings,\n        };\n    },\n    actions: {\n\n        /**\n         * エクスポートした JSON ファイルから設定データをインポートする (既存の設定はすべて上書きされる)\n         * @param file エクスポートした JSON ファイル\n         * @returns インポートに成功したかどうか\n         */\n        async importClientSettings(file: File): Promise<boolean> {\n\n            // JSON ファイルを読み込む\n            const settings_json = await file.text();\n\n            // JSON ファイルをパースする\n            let settings = {};\n            try {\n                settings = JSON.parse(settings_json);\n            } catch (error) {\n                return false;\n            }\n\n            // (名前が変わった、廃止されたなどの理由で) 現在の default_settings に存在しない設定キーを排除した上で並び替え\n            const new_settings = getNormalizedSettings(settings);\n\n            // この状態の新しい設定データを LocalStorage に保存し、Store の state に反映する\n            // このとき、既存の設定データはすべて上書きされる\n            setLocalStorageSettings(new_settings);\n            this.settings = new_settings;\n\n            // 設定データをサーバーに同期する\n            await this.syncClientSettingsToServer();\n\n            return true;\n        },\n\n        /**\n         * 設定データを初期状態にリセットする\n         */\n        async resetClientSettings(): Promise<void> {\n\n            // デフォルト値の設定データを LocalStorage に保存し、Store の state に反映する\n            setLocalStorageSettings(default_settings);\n            this.settings = default_settings;\n\n            // 設定データをサーバーに同期する\n            await this.syncClientSettingsToServer();\n        },\n\n        /**\n         * 設定データのうち、サーバーへの同期対象の設定キーのみで構成されたオブジェクト (IClientSettings と一致する) を返す\n         * @returns サーバーへの同期対象の設定キーのみで構成されたオブジェクト\n         */\n        getSyncableClientSettings(): IClientSettings {\n\n            // 同期対象の設定キーのみで設定データをまとめ直す\n            // sync_settings には同期対象外の設定は含まれない\n            const sync_settings: {[key: string]: any} = {};\n            for (const sync_settings_key of sync_settings_keys) {\n                if (sync_settings_key in this.settings) {\n                    sync_settings[sync_settings_key] = this.settings[sync_settings_key];\n                } else {\n                    // 後から追加された設定キーなどの理由で設定キーが現状の KonomiTV-Settings に存在しない場合\n                    // その設定キーのデフォルト値を取得する\n                    sync_settings[sync_settings_key] = default_settings[sync_settings_key];\n                }\n            }\n\n            return sync_settings as IClientSettings;\n        },\n\n        /**\n         * ログイン時かつ同期が有効な場合、サーバーに保存されている設定データをこのクライアントに同期する\n         * @param force ログイン中なら同期が有効かに関わらず実行する (デフォルト: false)\n         */\n        async syncClientSettingsFromServer(force: boolean = false): Promise<void> {\n\n            // ログインしていない時、同期が無効なときは実行しない\n            if (Utils.getAccessToken() === null || (this.settings.sync_settings === false && force === false)) {\n                return;\n            }\n\n            // サーバーから設定データをダウンロード\n            const settings_server = await Settings.fetchClientSettings();\n            if (settings_server === null) {\n                return;  // 取得できなくても後続の処理には影響しないので、サイレントに失敗する\n            }\n\n            // クライアントの設定データをサーバーからの設定データで上書き\n            for (const [settings_server_key, settings_server_value] of Object.entries(settings_server)) {\n                this.settings[settings_server_key] = settings_server_value;\n            }\n        },\n\n        /**\n         * ログイン時かつ同期が有効な場合、このクライアントの設定をサーバーに同期する\n         * @param force ログイン中なら同期が有効かに関わらず実行する (デフォルト: false)\n         */\n        async syncClientSettingsToServer(force: boolean = false): Promise<void> {\n\n            // ログインしていない時、同期が無効なときは実行しない\n            if (Utils.getAccessToken() === null || (this.settings.sync_settings === false && force === false)) {\n                return;\n            }\n\n            // 同期対象の設定キーのみで設定データをまとめ直す\n            const sync_settings = this.getSyncableClientSettings();\n\n            // サーバーに設定データをアップロード\n            await Settings.updateClientSettings(sync_settings);\n        }\n    }\n});\n\nexport default useSettingsStore;\n","\nimport { Buffer } from 'buffer';\n\nimport useSettingsStore from '@/store/SettingsStore';\n\n\n/**\n * コメント周りのユーティリティ\n */\nexport class CommentUtils {\n\n    // 「露骨な表現を含むコメントをミュートする」のフィルタ正規表現\n    static readonly mute_vulgar_comments_pattern = new RegExp(Buffer.from('cHJwcnzvvZDvvZLvvZDvvZJ8U0VYfFPjgIdYfFPil69YfFPil4tYfFPil49YfO+8s++8pe+8uHzvvLPjgIfvvLh877yz4pev77y4fO+8s+KXi++8uHzvvLPil4/vvLh844Ki44OA44Or44OIfOOCouODiuOCpXzjgqLjg4rjg6t844Kk44Kr6IetfOOCpOOBj3zjgYbjgpPjgZN844Km44Oz44KzfOOBhuOCk+OBoXzjgqbjg7Pjg4F844Ko44Kt44ObfOOBiOOBoeOBiOOBoXzjgYjjgaPjgaF844Ko44OD44OBfOOBiOOBo+OCjXzjgqjjg4Pjg61844GI44KNfOOCqOODrXzlt6Xlj6N844GK44GV44KP44KK44G+44KTfOOBiuOBl+OBo+OBk3zjgqrjgrfjg4PjgrN844Kq44OD44K144OzfOOBiuOBo+OBseOBhHzjgqrjg4Pjg5HjgqR844Kq44OK44OL44O8fOOBiuOBquOBu3zjgqrjg4rjg5t844GK44Gx44GEfOOCquODkeOCpHzjgYpwfOOBiu+9kHzjgqrjg5Xjg5HjgrN844Ks44Kk44K444OzfOOCreODs+OCv+ODnnzjgY/jgbHjgYJ844GP44Gx44GBfOOCr+ODquODiOODquOCuXzjgq/jg7Pjg4t844GU44GP44GU44GP44GU44GP44GU44GPfOOCs+ODs+ODieODvOODoHzjgrbjg7zjg6Hjg7N844K344KzfOOBl+OBk+OBl+OBk3zjgrfjgrPjgrfjgrN844GZ44GR44GZ44GRfOOBm+OBhOOBiOOBjXzjgZnjgYXjgYXjgYXjgYXjgYV844GZ44GG44GG44GG44GG44GGfOOCu+OCr+ODreOCuXzjgrvjg4Pjgq/jgrl844K744OV44OsfOOBoeOBo+OBseOBhHzjgaHjgaPjg5HjgqR844OB44OD44OR44KkfOOBoeOCk+OBk3zjgaHjgIfjgZN844Gh4pev44GTfOOBoeKXi+OBk3zjgaHil4/jgZN844OB44Oz44KzfOODgeOAh+OCs3zjg4Hil6/jgrN844OB4peL44KzfOODgeKXj+OCs3zjgaHjgpPjgb1844Gh44CH44G9fOOBoeKXr+OBvXzjgaHil4vjgb1844Gh4peP44G9fOODgeODs+ODnXzjg4HjgIfjg51844OB4pev44OdfOODgeKXi+ODnXzjg4Hil4/jg51844Gh44KT44Gh44KTfOODgeODs+ODgeODs3zjgabjgYPjgpPjgabjgYPjgpN844OG44Kj44Oz44OG44Kj44OzfOODhuOCo+ODs+ODnXzjg4fjgqvjgYR844OH44Oq44OY44OrfOiEseOBknzjgbHjgYTjgoLjgb9844OR44OR5rS7fOOBteOBhuODu3zjgbXjgYbigKZ844G144GFfO++jO+9qXzjgbXjgY/jgonjgb/jgYvjgZF844G144GP44KJ44KT44GnfOOBuuOBo+OBn3zjgbrjgo3jgbrjgo1844Oa44Ot44Oa44OtfO++je++n+++m+++je++n+++m3zjg5Xjgqfjg6l844G844Gj44GNfOODneODq+ODjnzjgbzjgo3jgpN844Oc44Ot44OzfO++ju++nu++m+++nXzjgb3jgo3jgop844Od44Ot44OqfO++ju++n+++m+++mHzjg57jg7PjgY3jgaR844Oe44Oz44Kt44OEfOOBvuOCk+OBk3zjgb7jgIfjgZN844G+4pev44GTfOOBvuKXi+OBk3zjgb7il4/jgZN844Oe44Oz44KzfOODnuOAh+OCs3zjg57il6/jgrN844Oe4peL44KzfOODnuKXj+OCs3zjgb7jgpPjgZXjgpN844KC44Gj44GT44KKfOODouODg+OCs+ODqnzjgoLjgb/jgoLjgb9844Oi44Of44Oi44OffOODpOOBo+OBn3zjg6TjgaPjgaZ844Ok44KJfOOChOOCieOBm+OCjXzjg6Tjgop844Ok44KLfOODpOOCjHzjg6Tjgo1844Op44OW44ObfOODr+ODrOODoXzllph86Zmw5qC4fOmZsOiMjnzpmbDllId85rer5aSifOmZsOavm3znlKPjgoHjgot85aWz44Gu5a2Q44Gu5pelfOaxmuOBo+OBleOCk3zlp6Z86aiO5LmX5L2NfOmHkeeOiXzmnIjntYx85b6M6IOM5L2NfOWtkOS9nOOCinzlsITnsr585L+h6ICFfOeyvua2snzpgI/jgZF85oCn5LqkfOeyvuWtkHzmraPluLjkvY185oCn5b60fOaAp+eahHznlJ/nkIZ85a+45q2i44KBfOe0oOadkHzmirHjgYR85oqx44GLfOaKseOBjXzmirHjgY985oqx44GRfOaKseOBk3zkubPpppZ85oGl5Z6ifOS4reOBoOOBl3zkuK3lh7rjgZd85bC/fOaKnOOBhHzmipzjgZHjgarjgYR85oqc44GR44KLfOaKnOOBkeOCjHzohqjjgol85YuD6LW3fOaPieOBvnzmj4njgb985o+J44KAfOaPieOCgXzmvKvmuZZ844CH772efOKXr++9nnzil4vvvZ584peP772efOOAh+ODg+OCr+OCuXzil6/jg4Pjgq/jgrl84peL44OD44Kv44K5fOKXj+ODg+OCr+OCuQ==', 'base64').toString());\n\n    // 「罵倒や差別的な表現を含むコメントをミュートする」のフィルタ正規表現\n    static readonly mute_abusive_discriminatory_prejudiced_comments_pattern = new RegExp(Buffer.from('44CCfOOCouOCueODmnzjgqTjgqvjgox844Kk44Op44Gk44GPfOOCpuOCuHzjgqbjg7zjg6h844Km44OofOOCpuODqOOCr3zjgqbjg7J844GN44KC44GEfOOCreODouOCpHzjgq3jg6LjgYR844KtL+ODoC/jg4F844Ks44Kk44K4fO+9tu++nu+9su+9vO++nnzjgqzjgq1844Kr44K5fOOCreODg+OCunzjgY3jgaHjgYzjgYR844Kt44OB44Ks44KkfOOCreODoOODgXzjg4Hjg6fjg7N85Y2D44On44OzfOOBpOOCk+OBvHzjg4Tjg7Pjg5x844ON44OI44Km44OofOOBq+OBoOOBguOBgnzjg4vjg4B8776G776A776efOODkeODvOODqHzjg5Hjg6h844OR44Oo44KvfOOBtuOBo+OBlXzjg5bjg4PjgrV844G244GV44GEfOODluOCteOCpHzjgb7jgazjgZF844Oh44Kv44OpfOODkOOCq3zjg6DjgqvjgaTjgY986bq755Sf44K744Oh44Oz44OIfOaFsOWuieWppnzlrrPlhZB85aSW5a2XfOWnpuWbvXzpn5Plm7186Z+T5LitfOmfk+aXpXzln7rlnLDlpJZ85rCX5oyB44Gh5oKqfOWbveS6pOaWree1tnzmrrp86aCD44GZfOWcqOaXpXzlj4LmlL/mqKl85q2744GtfOawj+OBrXzvvoDvvot85q255YyVfOatueODknzpmpzlrrN85pat5LqkfOS4remfk3zmnJ3prq585b6055So5belfOWjunzml6Xpn5N85pel5bidfOeymOedgHzlj43ml6V86aas6bm/fOeZuumBlHzmnLR85aOy5Zu9fOS4jeW/q3zplpPmipzjgZF86Z2W5Zu9', 'base64').toString());\n\n    // 「8文字以上同じ文字が連続しているコメントをミュートする」のフィルタ正規表現\n    static readonly mute_consecutive_same_characters_comments_pattern = /(.)\\1{7,}/;\n\n    // ニコ生の特殊コマンド付きコメントのフィルタ正規表現\n    static readonly special_command_comments_pattern = /\\/[a-z]+ /;\n\n    // 迷惑な統計コメントのフィルタ正規表現\n    static readonly annoying_statistical_comments_pattern = /最高\\d+米\\/|計\\d+ＩＤ|総\\d+米/;\n\n    // ニコニコの色指定を 16 進数カラーコードに置換するテーブル\n    static readonly color_table: {[key: string]: string} = {\n        'white': '#FFEAEA',\n        'red': '#F02840',\n        'pink': '#FD7E80',\n        'orange': '#FDA708',\n        'yellow': '#FFE133',\n        'green': '#64DD17',\n        'cyan': '#00D4F5',\n        'blue': '#4763FF',\n        'purple': '#D500F9',\n        'black': '#1E1310',\n        'white2': '#CCCC99',\n        'niconicowhite': '#CCCC99',\n        'red2': '#CC0033',\n        'truered': '#CC0033',\n        'pink2': '#FF33CC',\n        'orange2': '#FF6600',\n        'passionorange': '#FF6600',\n        'yellow2': '#999900',\n        'madyellow': '#999900',\n        'green2': '#00CC66',\n        'elementalgreen': '#00CC66',\n        'cyan2': '#00CCCC',\n        'blue2': '#3399FF',\n        'marineblue': '#3399FF',\n        'purple2': '#6633CC',\n        'nobleviolet': '#6633CC',\n        'black2': '#666666',\n    };\n\n\n    /**\n     * ニコニコの色指定を 16 進数カラーコードに置換する\n     * @param color ニコニコの色指定\n     * @return 16 進数カラーコード\n     */\n    static getCommentColor(color: string): string | null {\n        return this.color_table[color] || null;\n    }\n\n\n    /**\n     * ニコニコの位置指定を DPlayer の位置指定に置換する\n     * @param position ニコニコの位置指定\n     * @return DPlayer の位置指定\n     */\n    static getCommentPosition(position: string): 'top' | 'right' | 'bottom' | null {\n        switch (position) {\n            case 'ue':\n                return 'top';\n            case 'naka':\n                return 'right';\n            case 'shita':\n                return 'bottom';\n            default:\n                return null;\n        }\n    }\n\n\n    /**\n     * ニコニコのサイズ指定を DPlayer のサイズ指定に置換する\n     * @param size ニコニコのサイズ指定\n     * @returns DPlayer のサイズ指定\n     */\n    static getCommentSize(size: string): 'big' | 'medium' | 'small' | null {\n        switch (size) {\n            case 'big':\n            case 'medium':\n            case 'small':\n                return size;\n            default:\n                return null;\n        }\n    }\n\n\n    /**\n     * ニコニコのコメントコマンドを解析する\n     * @param comment_mail ニコニコのコメントコマンド\n     * @returns コメントの色、位置、サイズ\n     */\n    static parseCommentCommand(comment_mail: string): {\n        color: string;\n        position: 'top' | 'right' | 'bottom';\n        size: 'big' | 'medium' | 'small';\n    } {\n        let color = '#FFEAEA';\n        let position: 'top' | 'right' | 'bottom' = 'right';\n        let size: 'big' | 'medium' | 'small' = 'medium';\n\n        if (comment_mail !== undefined && comment_mail !== null) {\n            const commands = comment_mail.replace('184', '').split(' ');\n\n            for (const command of commands) {\n                const parsed_color = CommentUtils.getCommentColor(command);\n                const parsed_position = CommentUtils.getCommentPosition(command);\n                const parsed_size = CommentUtils.getCommentSize(command);\n                if (parsed_color !== null) {\n                    color = parsed_color;\n                }\n                if (parsed_position !== null) {\n                    position = parsed_position;\n                }\n                if (parsed_size !== null) {\n                    size = parsed_size;\n                }\n            }\n        }\n\n        return {color, position, size};\n    }\n\n\n    /**\n     * ミュート対象のコメントかどうかを判断する\n     * @param comment コメント\n     * @param user_id コメントを投稿したユーザーの ID\n     * @param color コメントの色\n     * @param position コメントの位置\n     * @param size コメントのサイズ\n     * @return ミュート対象のコメントなら true を返す\n     */\n    static isMutedComment(\n        comment: string,\n        user_id: string,\n        color?: string,\n        position?: 'top' | 'right' | 'bottom',\n        size?: 'big' | 'medium' | 'small',\n    ): boolean {\n\n        const settings_store = useSettingsStore();\n\n        // ユーザー ID ミュート処理\n        if (settings_store.settings.muted_niconico_user_ids.includes(user_id)) {\n            return true;\n        }\n\n        // ニコ生の特殊コマンド付きコメント (/nicoad, /emotion など) を一括で弾く\n        if (CommentUtils.special_command_comments_pattern.test(comment)) {\n            return true;\n        }\n\n        // 「映像の上下に固定表示されるコメントをミュートする」がオンの場合\n        // コメントの位置が top (上固定) もしくは bottom (下固定) のときは弾く\n        if (settings_store.settings.mute_fixed_comments === true && (position === 'top' || position === 'bottom')) {\n            console.log('[CommentUtils] Muted comment (fixed_comments): ' + comment);\n            return true;\n        }\n\n        // 「色付きのコメントをミュートする」がオンの場合\n        // コメントの色が #FFEAEA (デフォルト) 以外のときは弾く\n        if (settings_store.settings.mute_colored_comments === true && color !== '#FFEAEA') {\n            console.log('[CommentUtils] Muted comment (colored_comments): ' + comment);\n            return true;\n        }\n\n        // 「文字サイズが大きいコメントをミュートする」がオンの場合\n        // コメントのサイズが big のときは弾く\n        if (settings_store.settings.mute_big_size_comments === true && size === 'big') {\n            console.log('[CommentUtils] Muted comment (big_size_comments): ' + comment);\n            return true;\n        }\n\n        // 「露骨な表現を含むコメントをミュートする」がオンの場合\n        if ((settings_store.settings.mute_vulgar_comments === true) &&\n            (CommentUtils.mute_vulgar_comments_pattern.test(comment))) {\n            console.log('[CommentUtils] Muted comment (vulgar_comments): ' + comment);\n            return true;\n        }\n\n        // 「罵倒や差別的な表現を含むコメントをミュートする」がオンの場合\n        if ((settings_store.settings.mute_abusive_discriminatory_prejudiced_comments === true) &&\n            (CommentUtils.mute_abusive_discriminatory_prejudiced_comments_pattern.test(comment))) {\n            console.log('[CommentUtils] Muted comment (abusive_discriminatory_prejudiced_comments): ' + comment);\n            return true;\n        }\n\n        // 「8文字以上同じ文字が連続しているコメントをミュートする」がオンの場合\n        if ((settings_store.settings.mute_consecutive_same_characters_comments === true &&\n            (CommentUtils.mute_consecutive_same_characters_comments_pattern.test(comment)))) {\n            console.log('[CommentUtils] Muted comment (consecutive_same_characters_comments): ' + comment);\n            return true;\n        }\n\n        // キーワードミュート処理\n        for (const muted_comment_keyword of settings_store.settings.muted_comment_keywords) {\n            if (muted_comment_keyword.pattern === '') continue;  // キーワードが空文字のときは無視\n            switch (muted_comment_keyword.match) {\n                // 部分一致\n                case 'partial':\n                    if (comment.includes(muted_comment_keyword.pattern)) {\n                        console.log('[CommentUtils] Muted comment (partial): ' + comment);\n                        return true;\n                    }\n                    break;\n                // 前方一致\n                case 'forward':\n                    if (comment.startsWith(muted_comment_keyword.pattern)) {\n                        console.log('[CommentUtils] Muted comment (forward): ' + comment);\n                        return true;\n                    }\n                    break;\n                // 後方一致\n                case 'backward':\n                    if (comment.endsWith(muted_comment_keyword.pattern)) {\n                        console.log('[CommentUtils] Muted comment (backward): ' + comment);\n                        return true;\n                    }\n                    break;\n                // 完全一致\n                case 'exact':\n                    if (comment === muted_comment_keyword.pattern) {\n                        console.log('[CommentUtils] Muted comment (exact): ' + comment);\n                        return true;\n                    }\n                    break;\n                // 正規表現\n                case 'regex':\n                    if (new RegExp(muted_comment_keyword.pattern).test(comment)) {\n                        console.log('[CommentUtils] Muted comment (regex): ' + comment);\n                        return true;\n                    }\n                    break;\n            }\n        }\n\n        // 「ＮHK→計1447ＩＤ／内プレ425ＩＤ／総33372米 ◆ Ｅﾃﾚ → 計73ＩＤ／内プレ19ＩＤ／総941米」のような\n        // 迷惑コメントを一括で弾く (あえてミュートしたくないユースケースが思い浮かばないのでデフォルトで弾く)\n        // 一番最後なのは、この迷惑コメント自体の頻度が低いため\n        if (CommentUtils.annoying_statistical_comments_pattern.test(comment)) {\n            return true;\n        }\n\n        // いずれのミュート処理にも引っかからなかった (ミュート対象ではない)\n        return false;\n    }\n\n\n    /**\n     * ミュート済みキーワードリストに追加する (完全一致)\n     * @param comment コメント文字列\n     */\n    static addMutedKeywords(comment: string): void {\n\n        // すでにまったく同じミュート済みキーワードが追加済みの場合は何もしない\n        const settings_store = useSettingsStore();\n        for (const muted_comment_keyword of settings_store.settings.muted_comment_keywords) {\n            if (muted_comment_keyword.match === 'exact' && muted_comment_keyword.pattern === comment) {\n                return;\n            }\n        }\n\n        // ミュート済みキーワードリストに追加\n        settings_store.settings.muted_comment_keywords.push({\n            match: 'exact',\n            pattern: comment,\n        });\n    }\n\n\n    /**\n     * ミュート済みニコニコユーザー ID リストに追加する\n     * @param user_id ニコニコユーザー ID\n     */\n    static addMutedNiconicoUserIDs(user_id: string): void {\n\n        // すでに追加済みの場合は何もしない\n        const settings_store = useSettingsStore();\n        if (settings_store.settings.muted_niconico_user_ids.includes(user_id)) {\n            return;\n        }\n\n        // ミュート済みニコニコユーザー ID リストに追加\n        settings_store.settings.muted_niconico_user_ids.push(user_id);\n    }\n}\n","\n/**\n * プレイヤー周りのユーティリティ\n */\nexport class PlayerUtils {\n\n    /**\n     * プレイヤーの背景画像をランダムで取得し、その URL を返す\n     * @returns ランダムで設定されたプレイヤーの背景画像の URL\n     */\n    static generatePlayerBackgroundURL(): string {\n        const background_count = 12;  // 12種類から選択\n        const random = (Math.floor(Math.random() * background_count) + 1);\n        return `/assets/images/player-backgrounds/${random.toString().padStart(2, '0')}.jpg`;\n    }\n\n\n    /**\n     * 現在のブラウザで H.265 / HEVC 映像が再生できるかどうかを取得する\n     * ref: https://github.com/StaZhu/enable-chromium-hevc-hardware-decoding#mediacapabilities\n     * @returns 再生できるなら true、できないなら false\n     */\n    static isHEVCVideoSupported(): boolean {\n        // hvc1.1.6.L123.B0 の部分は呪文 (HEVC であることと、そのプロファイルを示す値らしい)\n        return document.createElement('video').canPlayType('video/mp4; codecs=\"hvc1.1.6.L123.B0\"') === 'probably';\n    }\n}\n","\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ja';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\n\nimport { IProgram } from '@/services/Programs';\nimport Utils from '@/utils';\n\n\n/**\n * 番組情報周りのユーティリティ\n */\nexport class ProgramUtils {\n\n    /**\n     * 番組情報中の[字]や[解]などの記号をいい感じに装飾する\n     * @param program 番組情報のオブジェクト\n     * @param key 番組情報のオブジェクトから取り出すプロパティのキー\n     * @returns 装飾した文字列\n     */\n    static decorateProgramInfo(program: IProgram | null, key: string): string {\n\n        // program が空でないかつ、program[key] が存在する\n        if (program !== null && program[key] !== null) {\n\n            // 番組情報に含まれる HTML の特殊文字で表示がバグらないように、事前に HTML エスケープしておく\n            const text = Utils.escapeHTML(program[key]);\n\n            // 本来 ARIB 外字である記号の一覧\n            // ref: https://ja.wikipedia.org/wiki/%E7%95%AA%E7%B5%84%E8%A1%A8\n            // ref: https://github.com/xtne6f/EDCB/blob/work-plus-s/EpgDataCap3/EpgDataCap3/ARIB8CharDecode.cpp#L1319\n            const mark = '新|終|再|交|映|手|声|多|副|字|文|CC|OP|二|S|B|SS|無|無料' +\n                'C|S1|S2|S3|MV|双|デ|D|N|W|P|H|HV|SD|天|解|料|前|後初|生|販|吹|PPV|' +\n                '演|移|他|収|・|英|韓|中|字/日|字/日英|3D|2K|4K|8K|5.1|7.1|22.2|60P|120P|d|HC|HDR|SHV|UHD|VOD|配|初';\n\n            // 正規表現を作成\n            const pattern1 = new RegExp('\\\\((二|字|再)\\\\)', 'g');  // 通常の括弧で囲まれている記号\n            const pattern2 = new RegExp(`\\\\[(${mark})\\\\]`, 'g');\n\n            // 正規表現で置換した結果を返す\n            return text.replace(pattern1, '<span class=\"decorate-symbol\">$1</span>')\n                .replace(pattern2, '<span class=\"decorate-symbol\">$1</span>');\n\n        // 番組情報がない時間帯\n        } else {\n\n            dayjs.extend(isSameOrAfter);\n            dayjs.extend(isSameOrBefore);\n            dayjs.extend(isBetween);\n\n            // 23時～翌7時 (0:00 ~ 06:59 or 23:00 ~ 23:59) の間なら放送を休止している可能性が高いので、放送休止と表示する\n            const now = dayjs();\n            const pause_time_start = dayjs().hour(0).minute(0).second(0);\n            const pause_time_end = dayjs().hour(6).minute(59).second(59);\n            const pause_time_start_23 = dayjs().hour(23).minute(0).second(0);\n            const pause_time_end_23 = dayjs().hour(23).minute(59).second(59);\n            if ((now.isSameOrAfter(pause_time_start) && now.isSameOrBefore(pause_time_end)) ||\n                (now.isSameOrAfter(pause_time_start_23) && now.isSameOrBefore(pause_time_end_23))) {\n                if (key === 'title') {\n                    return '放送休止';  // タイトル\n                } else {\n                    return 'この時間は放送を休止しています。';  // 番組概要\n                }\n\n            // それ以外の時間帯では、「番組情報がありません」と表示する\n            // 急な番組変更の影響で、一時的にその時間帯に対応する番組情報が消えることがある\n            // 特に Mirakurun バックエンドでは高頻度で収集した EIT[p/f] が比較的すぐ反映されるため、この現象が起こりやすい\n            // 日中に放送休止（停波）になることはまずあり得ないので、番組情報が取得できてないだけで視聴できるかも？というニュアンスを与える\n            } else {\n                if (key === 'title') {\n                    return '番組情報がありません';  // タイトル\n                } else {\n                    return 'この時間の番組情報を取得できませんでした。';  // 番組概要\n                }\n            }\n        }\n    }\n\n\n    /**\n     * オブジェクトからプロパティを取得し、もしプロパティが存在しなければ代替値を返す\n     * @param items 対象のオブジェクト\n     * @param key オブジェクトから取り出すプロパティのキー\n     * @param default_value 取得できなかった際の代替値\n     * @returns オブジェクト取得した値 or 代替値\n     */\n    static getAttribute(items: {[key: string]: any}, key: string, default_value: any): any {\n\n        // items が空でないかつ、items[key] が存在する\n        if (items !== null && items[key] !== undefined && items[key] !== null) {\n\n            // items[key] の内容を返す\n            return items[key];\n\n        // 指定された代替値を返す\n        } else {\n            return default_value;\n        }\n    }\n\n\n    /**\n     * 番組の進捗状況を取得する\n     * @param program 番組情報\n     * @returns 番組の進捗状況（%単位）\n     */\n    static getProgramProgress(program: IProgram): number {\n\n        // program が空でない\n        if (program !== null) {\n\n            // 番組開始時刻から何秒進んだか\n            const progress = dayjs(dayjs()).diff(program.start_time, 'second');\n\n            // %単位の割合を算出して返す\n            return progress / program.duration * 100;\n\n        // 放送休止中\n        } else {\n            return 0;\n        }\n    }\n\n\n    /**\n     * 番組の放送時刻を取得する\n     * @param program 番組情報\n     * @param is_short 時刻のみ返すかどうか\n     * @returns 番組の放送時刻\n     */\n    static getProgramTime(program: IProgram, is_short: boolean = false): string {\n\n        // program が空でなく、かつ番組時刻が初期値でない\n        if (program !== null && program.start_time !== '2000-01-01T00:00:00+09:00') {\n\n            // dayjs で日付を扱いやすく\n            dayjs.locale('ja');  // ロケールを日本に設定\n            const start_time = dayjs(program.start_time);\n            const end_time = dayjs(program.end_time);\n            const duration = program.duration / 60;  // 分換算\n\n            // 時刻のみ返す\n            if (is_short === true) {  // 時刻のみ\n                return `${start_time.format('HH:mm')} ～ ${end_time.format('HH:mm')}`;\n            // 通常\n            } else {\n                return `${start_time.format('YYYY/MM/DD (dd) HH:mm')} ～ ${end_time.format('HH:mm')} (${duration}分)`;\n            }\n\n        // 放送休止中\n        } else {\n\n            // 時刻のみ返す\n            if (is_short === true) {\n                return '--:-- ～ --:--';\n            // 通常\n            } else {\n                return '----/--/-- (-) --:-- ～ --:-- (--分)';\n            }\n        }\n    }\n}\n","\n// 共通ユーティリティをデフォルトとしてインポート\nimport Utils from '@/utils/Utils';\nexport default Utils;\n\n// Utils フォルダ配下のユーティリティを一括でインポートできるように\nexport * from '@/utils/ChannelUtils';\nexport * from '@/utils/CommentUtils';\nexport * from '@/utils/PlayerUtils';\nexport * from '@/utils/ProgramUtils';\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"login-container-wrapper d-flex align-center w-100 mb-13\"},[_c('v-card',{staticClass:\"login-container px-10 pt-8 pb-11 mx-auto background lighten-1\",attrs:{\"elevation\":\"10\",\"width\":\"100%\",\"max-width\":\"450\"}},[_c('v-card-title',{staticClass:\"login__logo flex-column justify-center\"},[_c('v-img',{attrs:{\"max-width\":\"250\",\"src\":\"/assets/images/logo.svg\"}}),_c('h4',{staticClass:\"mt-10\"},[_vm._v(\"ログイン\")])],1),_c('v-divider'),_c('v-form',{ref:\"login\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('v-text-field',{staticClass:\"mt-12\",attrs:{\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"hide-details\":\"\",\"autofocus\":\"\",\"dense\":_vm.is_form_dense},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}}),_c('v-text-field',{staticClass:\"mt-8\",attrs:{\"outlined\":\"\",\"placeholder\":\"パスワード\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"type\":_vm.password_showing ? 'text' : 'password',\"append-icon\":_vm.password_showing ? 'mdi-eye' : 'mdi-eye-off'},on:{\"click:append\":function($event){_vm.password_showing = !_vm.password_showing}},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('v-btn',{staticClass:\"login-button mt-5\",attrs:{\"color\":\"secondary\",\"depressed\":\"\",\"width\":\"100%\",\"height\":\"56\"},on:{\"click\":function($event){return _vm.login()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-in\"}}),_vm._v(\"ログイン \")],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('header',{staticClass:\"header\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"konomitv-logo ml-3 ml-md-6\",attrs:{\"to\":\"/tv/\"}},[_c('img',{staticClass:\"konomitv-logo__image\",attrs:{\"src\":\"/assets/images/logo.svg\",\"height\":\"21\"}})]),_c('v-spacer')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./Header.vue?vue&type=template&id=84897154&scoped=true&\"\nvar script = {}\nimport style0 from \"./Header.vue?vue&type=style&index=0&id=84897154&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"84897154\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_c('div',{staticClass:\"navigation-container elevation-8\"},[_c('nav',{staticClass:\"navigation\"},[_c('div',{staticClass:\"navigation-scroll\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/tv/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"テレビをみる\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/videos/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"ビデオをみる\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/timetable/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:calendar-ltr-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"番組表\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/reserves/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",staticStyle:{\"padding\":\"0.5px\"},attrs:{\"icon\":\"fluent:timer-16-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"録画予約\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/mylist/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"ic:round-playlist-play\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"マイリスト\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/captures/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:image-multiple-24-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"キャプチャ\")])],1),_c('v-spacer'),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/settings/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"設定\")])],1),_c('a',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.top\",value:(_vm.versionStore.is_update_available ?\n                        `アップデートがあります (version ${_vm.versionStore.latest_version})` : ''),expression:\"versionStore.is_update_available ?\\n                        `アップデートがあります (version ${versionStore.latest_version})` : ''\",modifiers:{\"top\":true}}],staticClass:\"navigation__link\",class:{\n                        'navigation__link--version': _vm.versionStore.is_client_develop_version,\n                        'navigation__link--highlight': _vm.versionStore.is_update_available,\n                    },attrs:{\"active-class\":\"navigation__link--active\",\"href\":\"https://github.com/tsukumijima/KonomiTV\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:info-16-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"version \"+_vm._s(_vm.versionStore.client_version))])],1)],1)])]),_c('BottomNavigation')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-bottom-navigation',{staticClass:\"bottom-navigation-container elevation-12\",attrs:{\"color\":\"primary\",\"grow\":\"\"}},[_c('v-btn',{staticClass:\"bottom-navigation-button\",attrs:{\"to\":\"/tv/\"}},[_c('span',{staticClass:\"mt-1\"},[_vm._v(\"テレビをみる\")]),_c('Icon',{attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"30px\"}})],1),_c('v-btn',{staticClass:\"bottom-navigation-button\",attrs:{\"to\":\"/videos/\"}},[_c('span',{staticClass:\"mt-1\"},[_vm._v(\"ビデオをみる\")]),_c('Icon',{attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"30px\"}})],1),_c('v-btn',{staticClass:\"bottom-navigation-button\",attrs:{\"to\":\"/settings/\"}},[_c('span',{staticClass:\"mt-1\"},[_vm._v(\"設定\")]),_c('Icon',{attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"30px\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./BottomNavigation.vue?vue&type=template&id=1e3ca16e&scoped=true&\"\nvar script = {}\nimport style0 from \"./BottomNavigation.vue?vue&type=style&index=0&id=1e3ca16e&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1e3ca16e\",\n  null\n  \n)\n\nexport default component.exports","\nimport APIClient from '@/services/APIClient';\n\n\n/** バージョン情報を表すインターフェイス */\nexport interface IVersionInformation {\n    version: string;\n    latest_version: string;\n    environment: 'Windows' | 'Linux' | 'Linux-Docker';\n    backend: 'EDCB' | 'Mirakurun';\n    encoder: 'FFmpeg' | 'QSVEncC' | 'NVEncC' | 'VCEEncC' | 'rkmppenc';\n}\n\n\nclass Version {\n\n    /**\n     * バージョン情報を取得する\n     * @returns バージョン情報 or バージョン情報の取得に失敗した場合は null\n     */\n    static async fetchServerVersion(): Promise<IVersionInformation | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<IVersionInformation>('/version');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'バージョン情報を取得できませんでした。');\n            return null;\n        }\n\n        return response.data;\n    }\n}\n\nexport default Version;\n","\nimport { defineStore } from 'pinia';\n\nimport Version, { IVersionInformation } from '@/services/Version';\nimport Utils from '@/utils';\n\n\n/**\n * 現在ログイン中のユーザーアカウントの情報を共有するストア\n */\nconst useVersionStore = defineStore('version', {\n    state: () => ({\n\n        // サーバーのバージョン情報\n        server_version_info: null as IVersionInformation | null,\n\n        // 最終更新日時 (UNIX タイムスタンプ、秒単位)\n        last_updated_at: 0,\n    }),\n    getters: {\n        client_version(): string {\n            return Utils.version;\n        },\n        server_version(): string | null {\n            return this.server_version_info?.version ?? null;\n        },\n        latest_version(): string | null {\n            return this.server_version_info?.latest_version ?? null;\n        },\n        is_client_develop_version(): boolean {\n            return this.client_version.includes('-dev');\n        },\n        is_server_develop_version(): boolean {\n            return this.server_version?.includes('-dev') ?? false;\n        },\n        is_update_available(): boolean {\n            // もし現在のサーバーバージョンと最新のバージョンが異なるなら、アップデートが利用できると判断する\n            // 現在のサーバーバージョンが開発版 (-dev あり) で、かつ最新のバージョンがリリース版 (-dev なし) の場合も同様に表示する\n            // つまり開発版だと同じバージョンのリリース版がリリースされたときにしかアップデート通知が表示されない事になるが、ひとまずこれで…\n            if (this.server_version === null || this.latest_version === null) return false;\n            if ((this.is_server_develop_version === false && this.server_version !== this.latest_version) ||\n                (this.is_server_develop_version === true && this.server_version.replace('-dev', '') === this.latest_version)) {\n                return true;\n            }\n            return false;\n        },\n        is_version_mismatch(): boolean {\n            if (this.server_version === null) return false;\n            return this.client_version !== this.server_version;\n        }\n    },\n    actions: {\n\n        /**\n         * バージョン情報を取得する\n         * すでに取得済みの情報がある場合は API リクエストを行わずにそれを返す\n         * @param force 強制的に API リクエストを行う場合は true\n         * @returns バージョン情報 or バージョン情報の取得に失敗した場合は null\n         */\n        async fetchServerVersion(force: boolean = false): Promise<IVersionInformation | null> {\n\n            // バージョン情報がある場合はそれを返す\n            // force が true の場合は無視される\n            if (this.server_version_info !== null && force === false) {\n                // ただし、最終更新日時が1分以上前の場合は非同期で更新する\n                if (Utils.time() - this.last_updated_at > 60) {\n                    this.fetchServerVersion(true);\n                }\n                return this.server_version_info;\n            }\n\n            // サーバーのバージョン情報を取得する\n            const version_info = await Version.fetchServerVersion();\n            if (version_info === null) {\n                return null;\n            }\n            this.server_version_info = version_info;\n            this.last_updated_at = Utils.time();\n\n            return this.server_version_info;\n        },\n    }\n});\n\nexport default useVersionStore;\n","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport BottomNavigation from '@/components/BottomNavigation.vue';\nimport useVersionStore from '@/store/VersionStore';\n\nexport default Vue.extend({\n    name: 'Navigation',\n    components: {\n        BottomNavigation,\n    },\n    computed: {\n        ...mapStores(useVersionStore),\n    },\n    async created() {\n        await this.versionStore.fetchServerVersion();\n    }\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Navigation.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Navigation.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Navigation.vue?vue&type=template&id=5b40940b&scoped=true&\"\nimport script from \"./Navigation.vue?vue&type=script&lang=ts&\"\nexport * from \"./Navigation.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Navigation.vue?vue&type=style&index=0&id=5b40940b&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5b40940b\",\n  null\n  \n)\n\nexport default component.exports","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport useUserStore from '@/store/UserStore';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Login',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            username: '' as string,\n            password: '' as string,\n            password_showing: false,\n        };\n    },\n    computed: {\n        // UserStore に this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useUserStore),\n    },\n    async created() {\n\n        // アカウント情報を更新\n        await this.userStore.fetchUser();\n\n        // 現在ログイン中の場合はアカウントページに遷移\n        if (this.userStore.is_logged_in) {\n            await this.$router.replace({path: '/settings/account'});\n        }\n    },\n    methods: {\n        async login() {\n\n            // ユーザー名またはパスワードが空\n            if (this.username === '' || this.password === '') {\n                this.$message.error('ユーザー名またはパスワードが空です。');\n                return;\n            }\n\n            // ログイン処理 (エラーハンドリング含む) を実行\n            const result = await this.userStore.login(this.username, this.password);\n            if (result === false) {\n                return;  // ログイン失敗\n            }\n\n            // アカウントページに遷移\n            // ブラウザバックでログインページに戻れないようにする\n            await this.$router.replace({path: '/settings/account'});\n        }\n    }\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=851c3dec&scoped=true&\"\nimport script from \"./Login.vue?vue&type=script&lang=ts&\"\nexport * from \"./Login.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Login.vue?vue&type=style&index=0&id=851c3dec&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"851c3dec\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_vm._m(0)],1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"d-flex justify-center align-center w-100\"},[_c('div',{staticClass:\"d-flex justify-center align-center flex-column\"},[_c('h1',[_vm._v(\"Not Found, or Under Development...\")]),_c('span',{staticClass:\"mt-4 text--text text--darken-1\"},[_vm._v(\"お探しのページは存在しないか、鋭意開発中です。\")])])])\n}]\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\n\nexport default Vue.extend({\n    name: 'NotFound',\n    components: {\n        Header,\n        Navigation,\n    },\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NotFound.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NotFound.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./NotFound.vue?vue&type=template&id=1310cfee&scoped=true&\"\nimport script from \"./NotFound.vue?vue&type=script&lang=ts&\"\nexport * from \"./NotFound.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./NotFound.vue?vue&type=style&index=0&id=1310cfee&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1310cfee\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"register-container-wrapper d-flex align-center w-100 mb-13\"},[_c('v-card',{staticClass:\"register-container px-10 pt-8 pb-11 mx-auto background lighten-1\",attrs:{\"elevation\":\"10\",\"width\":\"100%\",\"max-width\":\"450\"}},[_c('v-card-title',{staticClass:\"register__logo flex-column justify-center\"},[_c('v-img',{attrs:{\"max-width\":\"250\",\"src\":\"/assets/images/logo.svg\"}}),_c('h4',{staticClass:\"mt-10\"},[_vm._v(\"アカウントを作成\")])],1),_c('v-divider'),_c('v-form',{ref:\"register\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('v-text-field',{staticClass:\"mt-12\",attrs:{\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"autofocus\":\"\",\"dense\":_vm.is_form_dense,\"rules\":[_vm.username_validation]},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}}),_c('v-text-field',{staticStyle:{\"margin-top\":\"2px\"},attrs:{\"outlined\":\"\",\"placeholder\":\"パスワード\",\"dense\":_vm.is_form_dense,\"type\":_vm.password_showing ? 'text' : 'password',\"append-icon\":_vm.password_showing ? 'mdi-eye' : 'mdi-eye-off',\"rules\":[_vm.password_validation]},on:{\"click:append\":function($event){_vm.password_showing = !_vm.password_showing}},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('v-btn',{staticClass:\"register-button mt-5\",attrs:{\"color\":\"secondary\",\"depressed\":\"\",\"width\":\"100%\",\"height\":\"56\"},on:{\"click\":function($event){return _vm.register()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-add-20-filled\",\"height\":\"24\"}}),_vm._v(\"アカウントを作成 \")],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport useUserStore from '@/store/UserStore';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Register',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            username: null as string | null,\n            username_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'ユーザー名を入力してください。';\n                if (/^.{2,}$/.test(value) === false) return 'ユーザー名は2文字以上で入力してください。';\n                return true;\n            },\n            password: null as string | null,\n            password_showing: true,  // アカウント作成時はデフォルトでパスワードを表示する\n            password_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'パスワードを入力してください。';\n                // 正規表現の参考: https://qiita.com/grrrr/items/0b35b5c1c98eebfa5128\n                if (/^[a-zA-Z0-9!-/:-@¥[-`{-~]{4,}$/.test(value) === false) return 'パスワードは4文字以上の半角英数記号を入力してください。';\n                return true;\n            },\n        };\n    },\n    computed: {\n        // UserStore に this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useUserStore),\n    },\n    async created() {\n\n        // アカウント情報を更新\n        await this.userStore.fetchUser();\n\n        // 現在ログイン中の場合はアカウントページに遷移\n        if (this.userStore.is_logged_in) {\n            await this.$router.replace({path: '/settings/account'});\n        }\n    },\n    methods: {\n        async register() {\n\n            // すべてのバリデーションが通過したときのみ\n            // ref: https://qiita.com/Hijiri_Ishi/items/56cac99c8f3806a6fa24\n            if ((this.$refs.register as any).validate() === false) return;\n            if (this.username === null || this.password === null) return;\n\n            // アカウント作成 & ログイン処理 (エラーハンドリング含む) を実行\n            const result = await this.userStore.register(this.username, this.password);\n            if (result === false) {\n                return;  // ログイン失敗\n            }\n\n            // アカウントページに遷移\n            // ブラウザバックでアカウント作成画面に戻れないようにする\n            await this.$router.replace({path: '/settings/account'});\n        }\n    }\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Register.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Register.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Register.vue?vue&type=template&id=6533f3d0&scoped=true&\"\nimport script from \"./Register.vue?vue&type=script&lang=ts&\"\nexport * from \"./Register.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Register.vue?vue&type=style&index=0&id=6533f3d0&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6533f3d0\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"25px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"アカウント\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[(_vm.userStore.user === null)?_c('div',{staticClass:\"account\"},[_c('div',{staticClass:\"account-wrapper\"},[_c('img',{staticClass:\"account__icon\",attrs:{\"src\":\"/assets/images/account-icon-default.png\"}}),_c('div',{staticClass:\"account__info\"},[_c('div',{staticClass:\"account__info-name\"},[_c('span',{staticClass:\"account__info-name-text\"},[_vm._v(\"ログインしていません\")])]),_c('span',{staticClass:\"account__info-id\"},[_vm._v(\"Not logged in\")])])]),_c('v-btn',{staticClass:\"account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"140\",\"height\":\"56\",\"depressed\":\"\",\"to\":\"/login/\"}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-in\"}}),_vm._v(\"ログイン \")],1)],1):_vm._e(),(_vm.userStore.user !== null)?_c('div',{staticClass:\"account\"},[_c('div',{staticClass:\"account-wrapper\"},[_c('img',{staticClass:\"account__icon\",attrs:{\"src\":_vm.userStore.user_icon_url}}),_c('div',{staticClass:\"account__info\"},[_c('div',{staticClass:\"account__info-name\"},[_c('span',{staticClass:\"account__info-name-text\"},[_vm._v(_vm._s(_vm.userStore.user.name))]),(_vm.userStore.user.is_admin)?_c('span',{staticClass:\"account__info-admin\"},[_vm._v(\"管理者\")]):_vm._e()]),_c('span',{staticClass:\"account__info-id\"},[_vm._v(\"User ID: \"+_vm._s(_vm.userStore.user.id))])])]),_c('v-btn',{staticClass:\"account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"140\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.userStore.logout()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-out\"}}),_vm._v(\"ログアウト \")],1)],1):_vm._e(),(_vm.userStore.is_logged_in === false)?_c('div',{staticClass:\"account-register\"},[_c('div',{staticClass:\"account-register__heading\"},[_vm._v(\" KonomiTV アカウントにログインすると、\"),_c('br'),_vm._v(\"より便利な機能が使えます！ \")]),_c('div',{staticClass:\"account-register__feature\"},[_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"ニコニコ実況にコメントする\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"テレビを見ながらニコニコ実況にコメントできます。別途、ニコニコアカウントとの連携が必要です。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fa-brands:twitter\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"Twitter 連携機能\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"テレビを見ながら Twitter にツイートしたり、検索したツイートをリアルタイムで表示できます。別途、Twitter アカウントとの連携が必要です。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fluent:arrow-sync-20-filled\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"設定をデバイス間で同期\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"ピン留めしたチャンネルなど、ブラウザに保存されている各種設定をブラウザやデバイスをまたいで同期できます。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fa-solid:sliders-h\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"環境設定をブラウザから変更\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"管理者権限があれば、環境設定をブラウザから変更できます。一番最初に作成されたアカウントには、自動で管理者権限が付与されます。\")])])],1)]),_c('div',{staticClass:\"account-register__description\"},[_vm._v(\" KonomiTV アカウントの作成に必要なものは\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\"ユーザー名とパスワードだけです。\"),_c('br'),_vm._v(\" アカウントはローカルにインストールした\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\" KonomiTV サーバーごとに保存されます。\"),_c('br'),_vm._v(\" 外部のサービスには保存されませんので、ご安心ください。\"),_c('br')]),_c('v-btn',{staticClass:\"account-register__button\",attrs:{\"color\":\"secondary\",\"width\":\"100%\",\"max-width\":\"250\",\"height\":\"50\",\"depressed\":\"\",\"to\":\"/register/\"}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-add-20-filled\",\"height\":\"24\"}}),_vm._v(\"アカウントを作成 \")],1)],1):_vm._e(),(_vm.userStore.is_logged_in === true)?_c('div',[_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"sync_settings\"}},[_vm._v(\"設定をデバイス間で同期する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"sync_settings\"}},[_vm._v(\" KonomiTV では、設定を同じアカウントでログインしているデバイス間で同期できます！\"),_c('br'),_vm._v(\" 同期をオンにすると、同期をオンにしているすべてのデバイスで共通の設定が使えます。ピン留めチャンネルやハッシュタグリストなども同期されます。\"),_c('br'),_vm._v(\" なお、デバイス固有の設定（画質設定など）は、同期後も各デバイスで個別に反映されます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"sync_settings\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.sync_settings),callback:function ($$v) {_vm.sync_settings=$$v},expression:\"sync_settings\"}})],1),_c('v-dialog',{attrs:{\"max-width\":\"530\"},model:{value:(_vm.sync_settings_dialog),callback:function ($$v) {_vm.sync_settings_dialog=$$v},expression:\"sync_settings_dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"justify-center\"},[_vm._v(\"設定データの競合\")]),_c('v-card-text',[_vm._v(\" このデバイスの設定と、サーバーに保存されている設定が競合しています。\"),_c('br'),_vm._v(\" 一度上書きすると、元に戻すことはできません。慎重に選択してください。\"),_c('br')]),_c('div',{staticClass:\"d-flex flex-column px-4 pb-4 settings__conflict-dialog\"},[_c('v-btn',{staticClass:\"settings__save-button error--text text--lighten-1\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.overrideServerSettingsFromClient()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:document-arrow-up-16-filled\",\"height\":\"22px\"}}),_vm._v(\" サーバーに保存されている設定を、\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\"このデバイスの設定で上書きする \")],1),_c('v-btn',{staticClass:\"settings__save-button error--text text--lighten-1 mt-3\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.overrideClientSettingsFromServer()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:document-arrow-down-16-filled\",\"height\":\"22px\"}}),_vm._v(\" このデバイスの設定を、\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\"サーバーに保存されている設定で上書きする \")],1),_c('v-btn',{staticClass:\"settings__save-button mt-3\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){_vm.sync_settings_dialog = false}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:dismiss-16-filled\",\"height\":\"22px\"}}),_vm._v(\" キャンセル \")],1)],1)],1)],1),_c('v-form',{ref:\"settings_username\",staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ユーザー名\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントのユーザー名を設定します。アルファベットだけでなく日本語や記号も使えます。\"),_c('br'),_vm._v(\" 同じ KonomiTV サーバー上の他のアカウントと同じユーザー名には変更できません。\"),_c('br')]),_c('v-text-field',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"dense\":_vm.is_form_dense,\"rules\":[_vm.settings_username_validation]},model:{value:(_vm.settings_username),callback:function ($$v) {_vm.settings_username=$$v},expression:\"settings_username\"}})],1),_c('v-btn',{staticClass:\"settings__save-button\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountInfo('username')}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"ユーザー名を更新 \")],1),_c('v-form',{staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"アイコン画像\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントのアイコン画像を設定します。\"),_c('br'),_vm._v(\" アップロードされた画像は自動で 400×400 の正方形にリサイズされます。\"),_c('br')]),_c('v-file-input',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"アイコン画像を選択\",\"dense\":_vm.is_form_dense,\"accept\":\"image/jpeg, image/png\",\"prepend-icon\":\"\",\"prepend-inner-icon\":\"mdi-paperclip\"},model:{value:(_vm.settings_icon),callback:function ($$v) {_vm.settings_icon=$$v},expression:\"settings_icon\"}})],1),_c('v-btn',{staticClass:\"settings__save-button mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountIcon()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"アイコン画像を更新 \")],1),_c('v-form',{ref:\"settings_password\",staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"新しいパスワード\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントの新しいパスワードを設定します。\"),_c('br')]),_c('v-text-field',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"placeholder\":\"新しいパスワード\",\"dense\":_vm.is_form_dense,\"type\":_vm.settings_password_showing ? 'text' : 'password',\"append-icon\":_vm.settings_password_showing ? 'mdi-eye' : 'mdi-eye-off',\"rules\":[_vm.settings_password_validation]},on:{\"click:append\":function($event){_vm.settings_password_showing = !_vm.settings_password_showing}},model:{value:(_vm.settings_password),callback:function ($$v) {_vm.settings_password=$$v},expression:\"settings_password\"}})],1),_c('v-btn',{staticClass:\"settings__save-button\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountInfo('password')}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"パスワードを更新 \")],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item mt-6\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"アカウントを削除\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 現在ログインしている KonomiTV アカウントを削除します。\"),_c('br'),_c('b',[_vm._v(\"アカウントに紐づくすべてのデータが削除されます。\")]),_vm._v(\"元に戻すことはできません。\"),_c('br')])]),_c('v-dialog',{attrs:{\"max-width\":\"385\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on }){return [_c('v-btn',_vm._g({staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"}},on),[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:delete-16-filled\",\"height\":\"24px\"}}),_vm._v(\"アカウントを削除 \")],1)]}}],null,false,1849668703),model:{value:(_vm.account_delete_confirm_dialog),callback:function ($$v) {_vm.account_delete_confirm_dialog=$$v},expression:\"account_delete_confirm_dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"justify-center pt-6 font-weight-bold\"},[_vm._v(\"本当にアカウントを削除しますか？\")]),_c('v-card-text',{staticClass:\"pt-2 pb-0\"},[_vm._v(\" アカウントに紐づくすべてのデータが削除されます。元に戻すことはできません。\"),_c('br'),_vm._v(\" 本当にアカウントを削除しますか？ \")]),_c('v-card-actions',{staticClass:\"pt-4 px-6 pb-5\"},[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"text\",\"text\":\"\"},on:{\"click\":function($event){_vm.account_delete_confirm_dialog = false}}},[_vm._v(\"キャンセル\")]),_c('v-btn',{attrs:{\"color\":\"error\"},on:{\"click\":function($event){return _vm.deleteAccount()}}},[_vm._v(\"削除\")])],1)],1)],1)],1):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('v-card',{staticClass:\"settings-container d-flex px-5 py-5 mx-auto background\",attrs:{\"elevation\":\"0\",\"width\":\"100%\",\"max-width\":\"1000\"}},[_c('div',[_c('v-navigation-drawer',{staticClass:\"settings-navigation flex-shrink-0 background\",attrs:{\"permanent\":\"\",\"width\":\"195\",\"height\":\"auto\"}},[_c('v-list-item',{staticClass:\"px-4\"},[_c('v-list-item-content',[_c('h1',[_vm._v(\"設定\")])])],1),_c('v-list',{staticClass:\"mt-2 px-0\",attrs:{\"nav\":\"\"}},[_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/general\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 3px\"},attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"全般\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/caption\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:subtitles-16-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"字幕\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/capture\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:image-multiple-16-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"キャプチャ\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/account\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"アカウント\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/jikkyo\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 2px\"},attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"ニコニコ実況\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/twitter\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 1px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"Twitter\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/server\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:server-surface-16-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"サーバー設定\")])],1)],1)],1)],1)],1),_c('v-card',{staticClass:\"settings ml-5 px-7 py-7 lighten-1\",attrs:{\"width\":\"100%\"}},[_vm._t(\"default\")],2)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\n\n// 設定のベース画面なので、ロジックは基本置かない\nexport default Vue.extend({\n    name: 'Settings-Base',\n    components: {\n        Header,\n        Navigation,\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Base.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Base.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Base.vue?vue&type=template&id=d0f5a998&scoped=true&\"\nimport script from \"./Base.vue?vue&type=script&lang=ts&\"\nexport * from \"./Base.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Base.vue?vue&type=style&index=0&id=d0f5a998&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d0f5a998\",\n  null\n  \n)\n\nexport default component.exports","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport Settings from '@/services/Settings';\nimport useSettingsStore from '@/store/SettingsStore';\nimport useUserStore from '@/store/UserStore';\nimport Utils from '@/utils';\nimport SettingsBase from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-Account',\n    components: {\n        SettingsBase,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            // ローディング中かどうか\n            is_loading: true,\n\n            // ユーザー名とパスワード\n            // ログイン画面やアカウント作成画面の data と同一のもの\n            settings_username: null as string | null,\n            settings_username_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'ユーザー名を入力してください。';\n                if (/^.{2,}$/.test(value) === false) return 'ユーザー名は2文字以上で入力してください。';\n                return true;\n            },\n            settings_password: null as string | null,\n            settings_password_showing: false,\n            settings_password_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'パスワードを入力してください。';\n                // 正規表現の参考: https://qiita.com/grrrr/items/0b35b5c1c98eebfa5128\n                if (/^[a-zA-Z0-9!-/:-@¥[-`{-~]{4,}$/.test(value) === false) return 'パスワードは4文字以上の半角英数記号を入力してください。';\n                return true;\n            },\n\n            // アップロードするアイコン画像\n            settings_icon: null as File | null,\n\n            // アカウント削除確認ダイヤログ\n            account_delete_confirm_dialog: false,\n\n            // 設定を同期するかの設定値\n            sync_settings: useSettingsStore().settings.sync_settings as boolean,\n\n            // 設定を同期するときのダイヤログ\n            sync_settings_dialog: false,\n        };\n    },\n    computed: {\n        // SettingsStore / UserStore に this.settingsStore / this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore, useUserStore),\n    },\n    async created() {\n\n        // アカウント情報を更新\n        await this.userStore.fetchUser();\n\n        // ローディング状態を解除\n        this.is_loading = false;\n    },\n    watch: {\n        // sync_settings の値の変更を監視する\n        async sync_settings() {\n\n            // 同期がオンになった & ダイヤログが表示されていない\n            if (this.sync_settings === true && this.sync_settings_dialog === false) {\n\n                // 同期対象の設定キーのみで設定データをまとめ直す\n                const sync_settings = this.settingsStore.getSyncableClientSettings();\n\n                // 同期対象のこのクライアントの設定を再度 JSON にする（文字列比較のため）\n                const sync_settings_json = JSON.stringify(sync_settings);\n\n                // サーバーから設定データをダウンロード\n                // 一度オブジェクトに戻したものをを再度 JSON にする（文字列比較のため）\n                const server_sync_settings = await Settings.fetchClientSettings();\n                if (server_sync_settings === null) {\n                    this.$message.error('サーバーから設定データを取得できませんでした。');\n                    return;\n                }\n                const server_sync_settings_json = JSON.stringify(server_sync_settings);\n\n                // このクライアントの設定とサーバーに保存されている設定が一致しない（=競合している）\n                if (sync_settings_json !== server_sync_settings_json) {\n\n                    // 一度同期のスイッチをオフにして、クライアントとサーバーどちらの設定を使うのかを選択させるダイヤログを表示\n                    this.sync_settings_dialog = true;\n                    this.sync_settings = false;\n\n                // このクライアントの設定とサーバーに保存されている設定が一致する\n                } else {\n\n                    // 特に設定の同期をオンにしても問題ないので、そのまま有効にする\n                    this.settingsStore.settings.sync_settings = true;\n                }\n\n            // 同期がオフになった & ダイヤログが表示されていない\n            } else if (this.sync_settings === false && this.sync_settings_dialog === false) {\n                this.settingsStore.settings.sync_settings = false;\n            }\n        }\n    },\n    methods: {\n\n        // このクライアントの設定でサーバー上の設定を上書きする\n        async overrideServerSettingsFromClient() {\n\n            // 強制的にこのクライアントの設定をサーバーに同期\n            await this.settingsStore.syncClientSettingsToServer(true);\n\n            // 設定の同期を有効化\n            this.settingsStore.settings.sync_settings = true;\n            this.sync_settings = true;\n\n            // ダイヤログを閉じる\n            this.sync_settings_dialog = false;\n        },\n\n        // サーバー上の設定でこのクライアントの設定を上書きする\n        async overrideClientSettingsFromServer() {\n\n            // 強制的にサーバーに保存されている設定データをこのクライアントに同期する\n            // 設定の同期を有効化する前に実行しておくのが重要\n            await this.settingsStore.syncClientSettingsFromServer(true);\n\n            // 設定の同期を有効化\n            // 値を変更した時点で設定データがサーバーにアップロードされてしまうので、\n            // それよりも前に syncClientSettingsFromServer(true) でサーバー上の設定データを同期させておく必要がある\n            // さもなければ、サーバー上の設定データがこのクライアントの設定で上書きされてしまい、overrideServerSettingsFromClient() と同じ挙動になってしまう\n            this.settingsStore.settings.sync_settings = true;\n            this.sync_settings = true;\n\n            // ダイヤログを閉じる\n            this.sync_settings_dialog = false;\n        },\n\n        async updateAccountInfo(update_type: 'username' | 'password') {\n\n            // すべてのバリデーションが通過したときのみ\n            // ref: https://qiita.com/Hijiri_Ishi/items/56cac99c8f3806a6fa24\n            if (update_type === 'username') {\n                if ((this.$refs.settings_username as any).validate() === false) return;\n            } else {\n                if ((this.$refs.settings_password as any).validate() === false) return;\n            }\n\n            // アカウント情報の更新処理 (エラーハンドリングを含む) を実行\n            if (update_type === 'username') {\n                if (this.settings_username === null) return;\n                await this.userStore.updateUser({username: this.settings_username});\n            } else {\n                if (this.settings_password === null) return;\n                await this.userStore.updateUser({password: this.settings_password});\n            }\n        },\n\n        async updateAccountIcon() {\n\n            // アイコン画像が選択されていないなら更新しない\n            if (this.settings_icon === null) {\n                this.$message.error('アップロードする画像を選択してください！');\n                return;\n            }\n\n            // アイコン画像の更新処理 (エラーハンドリングを含む) を実行\n            await this.userStore.updateUserIcon(this.settings_icon);\n        },\n\n        async deleteAccount() {\n\n            // ダイヤログを閉じる\n            this.account_delete_confirm_dialog = false;\n\n            // アカウント削除処理 (エラーハンドリングを含む) を実行\n            await this.userStore.deleteUser();\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Account.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Account.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Account.vue?vue&type=template&id=7749b102&scoped=true&\"\nimport script from \"./Account.vue?vue&type=script&lang=ts&\"\nexport * from \"./Account.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Account.vue?vue&type=style&index=0&id=7749b102&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7749b102\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:subtitles-16-filled\",\"width\":\"25px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"字幕\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item\"},[_c('label',{staticClass:\"settings__item-heading\"},[_vm._v(\"字幕のフォント\")]),_c('label',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーで字幕表示をオンにしているときの、字幕のフォントを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.caption_font},model:{value:(_vm.settingsStore.settings.caption_font),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"caption_font\", $$v)},expression:\"settingsStore.settings.caption_font\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"always_border_caption_text\"}},[_vm._v(\"字幕の文字を常に縁取りする\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"always_border_caption_text\"}},[_vm._v(\" 字幕表示時、縁取りをオンにすると、字幕が見やすくきれいになります。とくに理由がなければ、オンにしておくのがおすすめです。\"),_c('br'),_vm._v(\" この設定がオフのときも、字幕データ側で縁取りが指定されていれば、オンのときと同様に縁取り付きで描画されます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"always_border_caption_text\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.always_border_caption_text),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"always_border_caption_text\", $$v)},expression:\"settingsStore.settings.always_border_caption_text\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"specify_caption_background_color\"}},[_vm._v(\"字幕の背景色を指定する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"specify_caption_background_color\"}},[_vm._v(\" 字幕表示時、背景色を自分で指定するか設定できます。\"),_c('br'),_vm._v(\" この設定をオフのときは、字幕データ側で指定されている背景色で描画します。とくに理由がなければ、オフにしておくのがおすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"specify_caption_background_color\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.specify_caption_background_color),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"specify_caption_background_color\", $$v)},expression:\"settingsStore.settings.specify_caption_background_color\"}})],1),_c('div',{staticClass:\"settings__item\",class:{'settings__item--disabled': _vm.settingsStore.settings.specify_caption_background_color === false}},[_c('label',{staticClass:\"settings__item-heading\"},[_vm._v(\"字幕の背景色\")]),_c('label',{staticClass:\"settings__item-label\"},[_vm._v(\" 上の [字幕の背景色を指定する] をオンにしているときのみ有効です。透明度 (アルファチャンネル) を 0 に設定すれば、字幕の背景を非表示にできます。\"),_c('br')]),_c('div',{ref:\"caption_background_color\",staticClass:\"settings__item-label\"},[_c('v-color-picker',{staticClass:\"settings__item-form\",attrs:{\"hide-details\":\"\",\"flat\":true,\"show-alpha\":true,\"show-swatches\":false,\"hide-inputs\":false,\"width\":690,\"canvas-height\":80,\"disabled\":_vm.settingsStore.settings.specify_caption_background_color === false},model:{value:(_vm.settingsStore.settings.caption_background_color),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"caption_background_color\", $$v)},expression:\"settingsStore.settings.caption_background_color\"}})],1)]),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_show_superimpose\"}},[_vm._v(\"テレビをみるときに文字スーパーを表示する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_show_superimpose\"}},[_vm._v(\" 文字スーパーは、緊急地震速報の赤テロップや、NHK BS のニュース速報のテロップなどで利用されています。とくに理由がなければ、オンにしておくのがおすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_show_superimpose\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.tv_show_superimpose),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_show_superimpose\", $$v)},expression:\"settingsStore.settings.tv_show_superimpose\"}})],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils from '@/utils';\nimport SettingsBase from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-Caption',\n    components: {\n        SettingsBase,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            // 字幕のフォントの選択肢\n            caption_font: [\n                {'text': 'Windows TV ゴシック', 'value': 'Windows TV Gothic'},\n                {'text': 'Windows TV 丸ゴシック', 'value': 'Windows TV MaruGothic'},\n                {'text': 'Windows TV 太丸ゴシック', 'value': 'Windows TV FutoMaruGothic'},\n                {'text': 'ヒラギノTV丸ゴ', 'value': 'Hiragino TV Sans Rd S'},\n                {'text': '新丸ゴ ARIB', 'value': 'TT-ShinMGo-regular'},\n                {'text': 'Rounded M+ 1m for ARIB', 'value': 'Rounded M+ 1m for ARIB'},\n                {'text': 'Noto Sans JP', 'value': 'Noto Sans JP Caption'},\n                {'text': 'デフォルトのフォント', 'value': 'sans-serif'},\n            ],\n        };\n    },\n    computed: {\n        // SettingsStore に this.settingsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore),\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Caption.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Caption.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Caption.vue?vue&type=template&id=7d8276f9&\"\nimport script from \"./Caption.vue?vue&type=script&lang=ts&\"\nexport * from \"./Caption.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:image-multiple-16-filled\",\"width\":\"26px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"キャプチャ\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item settings__item--switch settings__item--sync-disabled\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"capture_copy_to_clipboard\"}},[_vm._v(\"キャプチャをクリップボードにコピーする\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"capture_copy_to_clipboard\"}},[_vm._v(\" この設定をオンにすると、撮ったキャプチャ画像がクリップボードにもコピーされます。\"),_c('br'),_vm._v(\" クリップボードの履歴をサポートしていない OS では、この設定をオンにしてキャプチャを撮ると、以前のクリップボードが上書きされます。注意してください。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"capture_copy_to_clipboard\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.capture_copy_to_clipboard),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"capture_copy_to_clipboard\", $$v)},expression:\"settingsStore.settings.capture_copy_to_clipboard\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"キャプチャの保存先\")]),_c('div',{staticClass:\"settings__item-label\"},[_c('p',[_vm._v(\" キャプチャした画像をブラウザでダウンロードするか、KonomiTV サーバーにアップロードするかを設定します。\"),_c('br'),_vm._v(\" ブラウザでのダウンロードと、KonomiTV サーバーへのアップロードを両方同時に行うこともできます。\"),_c('br')]),_c('p',[_vm._v(\" ブラウザでダウンロードすると、視聴中のデバイスのダウンロードフォルダに保存されます。\"),_c('br'),_vm._v(\" 視聴中のデバイスにそのまま保存されるためシンプルですが、保存先のフォルダを変更できないこと、PC 版 Chrome では毎回ダウンロードバーが表示されてしまったり、iOS Safari (PWA モード) ではダウンロードするとファイル概要画面が表示され再生が中断してしまったりなど、視聴に支障することがデメリットです (将来的には、iOS / Android アプリ版や拡張機能などで解消される予定) 。\"),_c('br')]),_c('p',[_vm._v(\" KonomiTV サーバーにアップロードすると、環境設定で指定されたキャプチャ保存フォルダに保存されます。視聴したデバイスにかかわらず、今までに撮ったキャプチャをひとつのフォルダにまとめて保存できます。\"),_c('br'),_vm._v(\" 他のデバイスでキャプチャを見るにはキャプチャ保存フォルダをネットワークに共有する必要があること、スマホ・タブレットではネットワーク上のフォルダへのアクセスがやや面倒なことがデメリットです。(将来的には、保存フォルダ内のキャプチャを Google フォトのように表示する機能を追加予定)\"),_c('br')])]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.capture_save_mode},model:{value:(_vm.settingsStore.settings.capture_save_mode),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"capture_save_mode\", $$v)},expression:\"settingsStore.settings.capture_save_mode\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"字幕表示時のキャプチャの保存モード\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 字幕表示時、キャプチャした画像に字幕を合成するかを設定します。\"),_c('br'),_vm._v(\" 映像のみのキャプチャと、字幕を合成したキャプチャを両方同時に保存することもできます。\"),_c('br'),_vm._v(\" なお、字幕非表示時は、常に映像のみ (+コメント付きキャプチャではコメントを合成して) 保存されます。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.capture_caption_mode},model:{value:(_vm.settingsStore.settings.capture_caption_mode),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"capture_caption_mode\", $$v)},expression:\"settingsStore.settings.capture_caption_mode\"}})],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils from '@/utils';\nimport SettingsBase from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-Capture',\n    components: {\n        SettingsBase,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            // キャプチャの保存先の選択肢\n            capture_save_mode: [\n                {'text': 'ブラウザでダウンロード', 'value': 'Browser'},\n                {'text': 'KonomiTV サーバーにアップロード', 'value': 'UploadServer'},\n                {'text': 'ブラウザでのダウンロードと、KonomiTV サーバーへのアップロードを両方行う', 'value': 'Both'},\n            ],\n\n            // 字幕が表示されているときのキャプチャの保存モードの選択肢\n            capture_caption_mode: [\n                {'text': '映像のみのキャプチャを保存する', 'value': 'VideoOnly'},\n                {'text': '字幕を合成したキャプチャを保存する', 'value': 'CompositingCaption'},\n                {'text': '映像のみのキャプチャと、字幕を合成したキャプチャを両方保存する', 'value': 'Both'},\n            ],\n        };\n    },\n    computed: {\n        // SettingsStore に this.settingsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore),\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Capture.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Capture.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Capture.vue?vue&type=template&id=4c7cc684&\"\nimport script from \"./Capture.vue?vue&type=script&lang=ts&\"\nexport * from \"./Capture.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"19px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"全般\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item settings__item--sync-disabled\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"テレビのデフォルトのストリーミング画質\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" テレビをライブストリーミングするときのデフォルトの画質を設定します。\"),_c('br'),_vm._v(\" ストリーミング画質はプレイヤーの設定からいつでも切り替えられます。\"),_c('br')]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" [1080p (60fps)] は、通常 30fps (60i) の映像を補間し、より滑らか（ぬるぬる）な映像で視聴できます！\"),_c('br'),_vm._v(\" [1080p (60fps)] で視聴するときは、環境設定の [利用するエンコーダー] をハードウェアエンコーダーに設定してください。FFmpeg (ソフトウェアエンコーダー) では、再生に支障が出ることがあります。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tv_streaming_quality},model:{value:(_vm.settingsStore.settings.tv_streaming_quality),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_streaming_quality\", $$v)},expression:\"settingsStore.settings.tv_streaming_quality\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch settings__item--sync-disabled\",class:{'settings__item--disabled': _vm.PlayerUtils.isHEVCVideoSupported() === false}},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_data_saver_mode\"}},[_vm._v(\"テレビを通信節約モードで視聴する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_data_saver_mode\"}},[_vm._v(\" 通信節約モードでは、H.265 / HEVC という圧縮率の高いコーデックを使い、画質はほぼそのまま、通信量を通常の 2/3 程度に抑えながら視聴できます！\"),_c('br'),_vm._v(\" 通信節約モードで視聴するときは、環境設定の [利用するエンコーダー] をハードウェアエンコーダーに設定してください。FFmpeg (ソフトウェアエンコーダー) では、再生に支障が出る可能性が高いです。\"),_c('br'),(_vm.PlayerUtils.isHEVCVideoSupported() === false && _vm.Utils.isFirefox() === false)?_c('p',{staticClass:\"mt-1 mb-0 error--text lighten-1\"},[_vm._v(\" このデバイスでは通信節約モードがサポートされていません。 \")]):_vm._e(),(_vm.PlayerUtils.isHEVCVideoSupported() === false && _vm.Utils.isFirefox() === true)?_c('p',{staticClass:\"mt-1 mb-0 error--text lighten-1\"},[_vm._v(\" お使いの Firefox ブラウザでは通信節約モードがサポートされていません。 \")]):_vm._e()]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_data_saver_mode\",\"inset\":\"\",\"hide-details\":\"\",\"disabled\":_vm.PlayerUtils.isHEVCVideoSupported() === false},model:{value:(_vm.settingsStore.settings.tv_data_saver_mode),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_data_saver_mode\", $$v)},expression:\"settingsStore.settings.tv_data_saver_mode\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch settings__item--sync-disabled\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_low_latency_mode\"}},[_vm._v(\"テレビを低遅延で視聴する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_low_latency_mode\"}},[_vm._v(\" 低遅延ストリーミングをオンにすると、\"),_c('b',[_vm._v(\"放送波との遅延を最短 0.9 秒に抑えて視聴できます！\")]),_c('br'),_vm._v(\" また、約 3 秒以上遅延したときに少しだけ再生速度を早める (1.1x) ことで、滑らかにストリーミングの遅延を取り戻します。\"),_c('br'),_vm._v(\" 宅外視聴などのネットワークが不安定になりがちな環境では、低遅延ストリーミングをオフにしてみると、映像のカクつきを改善できるかもしれません。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_low_latency_mode\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.tv_low_latency_mode),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_low_latency_mode\", $$v)},expression:\"settingsStore.settings.tv_low_latency_mode\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"デフォルトのパネルの表示状態\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 視聴画面を開いたときに、右側のパネルをどう表示するかを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.panel_display_state},model:{value:(_vm.settingsStore.settings.panel_display_state),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"panel_display_state\", $$v)},expression:\"settingsStore.settings.panel_display_state\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"テレビをみるときにデフォルトで表示されるパネルのタブ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" テレビの視聴画面を開いたときに、右側のパネルで最初に表示されるタブを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tv_panel_active_tab},model:{value:(_vm.settingsStore.settings.tv_panel_active_tab),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_panel_active_tab\", $$v)},expression:\"settingsStore.settings.tv_panel_active_tab\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"設定をエクスポート\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" このデバイス（ブラウザ）に保存されている設定データを、エクスポート（ダウンロード）できます。\"),_c('br'),_vm._v(\" ダウンロードした設定データ (KonomiTV-Settings.json) は、[設定をインポート] からインポートできます。異なるサーバーの KonomiTV を同じ設定で使いたいときなどに使ってください。\"),_c('br')])]),_c('v-btn',{staticClass:\"settings__save-button mt-4\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.exportSettings()}}},[_c('Icon',{staticClass:\"mr-3\",attrs:{\"icon\":\"fa6-solid:download\",\"height\":\"19px\"}}),_vm._v(\"設定をエクスポート \")],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"設定をインポート\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" [設定をエクスポート] でダウンロードした設定データを、このデバイス（ブラウザ）にインポートできます。\"),_c('br'),_vm._v(\" 設定をインポートすると、\"),_c('b',[_vm._v(\"現在のデバイス設定はすべて上書きされます。\")]),_vm._v(\"元に戻すことはできません。\"),_c('br'),_vm._v(\" 設定のデバイス間同期がオンのときは、\"),_c('b',[_vm._v(\"同期が有効なすべてのデバイスに反映されます。\")]),_vm._v(\"十分ご注意ください。\"),_c('br')]),_c('v-file-input',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"設定データ (KonomiTV-Settings.json) を選択\",\"dense\":_vm.is_form_dense,\"accept\":\"application/json\",\"prepend-icon\":\"\",\"prepend-inner-icon\":\"mdi-paperclip\"},model:{value:(_vm.import_settings_file),callback:function ($$v) {_vm.import_settings_file=$$v},expression:\"import_settings_file\"}})],1),_c('v-btn',{staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.importSettings()}}},[_c('Icon',{staticClass:\"mr-3\",attrs:{\"icon\":\"fa6-solid:upload\",\"height\":\"19px\"}}),_vm._v(\"設定をインポート \")],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"設定を初期状態にリセット\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" このデバイス（ブラウザ）に保存されている設定データを、初期状態のデフォルト値にリセットできます。\"),_c('br'),_vm._v(\" 設定をリセットすると、元に戻すことはできません。\"),_c('br'),_vm._v(\" 設定のデバイス間同期がオンのときは、\"),_c('b',[_vm._v(\"同期が有効なすべてのデバイスに反映されます。\")]),_vm._v(\"十分ご注意ください。\"),_c('br')])]),_c('v-btn',{staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.resetSettings()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"material-symbols:device-reset-rounded\",\"height\":\"23px\"}}),_vm._v(\"設定をリセット \")],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils, { PlayerUtils } from '@/utils';\nimport SettingsBase from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-General',\n    components: {\n        SettingsBase,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            PlayerUtils: PlayerUtils,\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            // テレビのデフォルトのストリーミング画質の選択肢\n            tv_streaming_quality: [\n                {'text': '1080p (60fps) （約3.24GB/h / 平均7.2Mbps）', 'value': '1080p-60fps'},\n                {'text': '1080p （約2.31GB/h / 平均5.1Mbps）', 'value': '1080p'},\n                {'text': '810p （約1.92GB/h / 平均4.2Mbps）', 'value': '810p'},\n                {'text': '720p （約1.33GB/h / 平均3.0Mbps）', 'value': '720p'},\n                {'text': '540p （約1.00GB/h / 平均2.2Mbps）', 'value': '540p'},\n                {'text': '480p （約0.74GB/h / 平均1.6Mbps）', 'value': '480p'},\n                {'text': '360p （約0.40GB/h / 平均0.9Mbps）', 'value': '360p'},\n                {'text': '240p （約0.23GB/h / 平均0.5Mbps）', 'value': '240p'},\n            ],\n\n            // デフォルトのパネルの表示状態の選択肢\n            panel_display_state: [\n                {'text': '前回の状態を復元する', 'value': 'RestorePreviousState'},\n                {'text': '常に表示する', 'value': 'AlwaysDisplay'},\n                {'text': '常に折りたたむ', 'value': 'AlwaysFold'},\n            ],\n\n            // テレビをみるときにデフォルトで表示されるパネルのタブの選択肢\n            tv_panel_active_tab: [\n                {'text': '番組情報タブ', 'value': 'Program'},\n                {'text': 'チャンネルタブ', 'value': 'Channel'},\n                {'text': 'コメントタブ', 'value': 'Comment'},\n                {'text': 'Twitter タブ', 'value': 'Twitter'},\n            ],\n\n            // 選択された設定データ (KonomiTV-Settings.json) が入る\n            import_settings_file: null as File | null,\n        };\n    },\n    computed: {\n        // SettingsStore に this.settingsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore),\n    },\n    methods: {\n\n        // 設定データをエクスポートする\n        exportSettings() {\n\n            // 設定データを JSON 化して取得\n            const settings_json = JSON.stringify(this.settingsStore.settings, null, 4);\n\n            // ダウンロードさせるために一旦 Blob にしてから、KonomiTV-Settings.json としてダウンロード\n            const settings_json_blob = new Blob([settings_json], {type: 'application/json'});\n            Utils.downloadBlobData(settings_json_blob, 'KonomiTV-Settings.json');\n            this.$message.success('設定をエクスポートしました。');\n        },\n\n        // 設定データをインポートする\n        async importSettings() {\n\n            // 設定データが選択されていないときは実行しない\n            if (this.import_settings_file === null) {\n                this.$message.error('インポートする設定データを選択してください！');\n                return;\n            }\n\n            // 設定データのインポートを実行\n            const result = await this.settingsStore.importClientSettings(this.import_settings_file);\n            if (result === true) {\n                this.$message.success('設定をインポートしました。');\n                window.setTimeout(() => this.$router.go(0), 300);\n            } else {\n                this.$message.error('設定データが不正なため、インポートできませんでした。');\n            }\n        },\n\n        // 設定データをリセットする\n        async resetSettings() {\n            await this.settingsStore.resetClientSettings();\n            this.$message.success('設定をリセットしました。');\n            window.setTimeout(() => this.$router.go(0), 300);\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./General.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./General.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./General.vue?vue&type=template&id=1eb56f15&\"\nimport script from \"./General.vue?vue&type=script&lang=ts&\"\nexport * from \"./General.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('v-card',{staticClass:\"settings-container d-flex px-5 py-5 mx-auto background\",attrs:{\"elevation\":\"0\",\"width\":\"100%\",\"max-width\":\"1000\"}},[_c('v-navigation-drawer',{staticClass:\"settings-navigation flex-shrink-0 background\",attrs:{\"permanent\":\"\",\"width\":\"100%\",\"height\":\"auto\"}},[_c('v-list-item',{staticClass:\"px-1\"},[_c('v-list-item-content',[_c('h1',[_vm._v(\"設定\")])])],1),_c('v-list',{staticClass:\"mt-2 px-0\",attrs:{\"nav\":\"\"}},[_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/general\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 3px\"},attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"全般\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/caption\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:subtitles-16-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"字幕\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/capture\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:image-multiple-16-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"キャプチャ\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/account\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"アカウント\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/jikkyo\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 2px\"},attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"ニコニコ実況\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/twitter\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 1px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"Twitter\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/server\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:server-surface-16-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"サーバー設定\")])],1)],1),_c('v-list-item',{staticClass:\"px-4 settings-navigation-version\",class:{'settings-navigation-version--highlight': _vm.versionStore.is_update_available},attrs:{\"link\":\"\",\"color\":\"primary\",\"href\":\"https://github.com/tsukumijima/KonomiTV\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:info-16-regular\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\" version \"+_vm._s(_vm.versionStore.client_version)+_vm._s(_vm.versionStore.is_update_available ? ' (Update Available)' : '')+\" \")])],1)],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport useVersionStore from '@/store/VersionStore';\n\nexport default Vue.extend({\n    name: 'Settings-Index',\n    components: {\n        Header,\n        Navigation,\n    },\n    computed: {\n        ...mapStores(useVersionStore),\n    },\n    async created() {\n        await this.versionStore.fetchServerVersion();\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Index.vue?vue&type=template&id=48d089f3&scoped=true&\"\nimport script from \"./Index.vue?vue&type=script&lang=ts&\"\nexport * from \"./Index.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=48d089f3&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"48d089f3\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"19px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"ニコニコ実況\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[(_vm.userStore.user === null || _vm.userStore.user.niconico_user_id === null)?_c('div',{staticClass:\"niconico-account niconico-account--anonymous\"},[_c('div',{staticClass:\"niconico-account-wrapper\"},[_c('Icon',{staticClass:\"flex-shrink-0\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"45px\"}}),_c('div',{staticClass:\"niconico-account__info ml-4\"},[_c('div',{staticClass:\"niconico-account__info-name\"},[_c('span',{staticClass:\"niconico-account__info-name-text\"},[_vm._v(\"ニコニコアカウントと連携していません\")])]),_c('span',{staticClass:\"niconico-account__info-description\"},[_vm._v(\" ニコニコアカウントと連携すると、テレビを見ながらニコニコ実況にコメントできるようになります。 \")])])],1),_c('v-btn',{staticClass:\"niconico-account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"130\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.loginNiconicoAccount()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-connected-20-filled\",\"height\":\"26\"}}),_vm._v(\"連携する \")],1)],1):_vm._e(),(_vm.userStore.user !== null && _vm.userStore.user.niconico_user_id !== null)?_c('div',{staticClass:\"niconico-account\"},[_c('div',{staticClass:\"niconico-account-wrapper\"},[_c('img',{staticClass:\"niconico-account__icon\",attrs:{\"src\":_vm.userStore.user_niconico_icon_url}}),_c('div',{staticClass:\"niconico-account__info\"},[_c('div',{staticClass:\"niconico-account__info-name\"},[_c('span',{staticClass:\"niconico-account__info-name-text\"},[_vm._v(_vm._s(_vm.userStore.user.niconico_user_name)+\" と連携しています\")])]),_c('span',{staticClass:\"niconico-account__info-description\"},[_c('span',{staticClass:\"mr-2\",staticStyle:{\"white-space\":\"nowrap\"}},[_vm._v(\"Niconico User ID:\")]),_c('a',{staticClass:\"mr-2\",attrs:{\"href\":`https://www.nicovideo.jp/user/${_vm.userStore.user.niconico_user_id}`,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.userStore.user.niconico_user_id))]),(_vm.userStore.user.niconico_user_premium == true)?_c('span',{staticClass:\"secondary--text\"},[_vm._v(\"(Premium)\")]):_vm._e()])])]),_c('v-btn',{staticClass:\"niconico-account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"130\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.logoutNiconicoAccount()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-disconnected-20-filled\",\"height\":\"26\"}}),_vm._v(\"連携解除 \")],1)],1):_vm._e(),_c('div',{staticClass:\"settings__item mt-7\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントのミュート設定\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 表示したくないコメントを、映像上やコメントリストに表示しないようにミュートできます。\"),_c('br')])]),_c('v-btn',{staticClass:\"settings__save-button mt-4\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){_vm.comment_mute_settings_modal = !_vm.comment_mute_settings_modal}}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"19px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"コメントのミュート設定を開く\")])],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントの速さ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーに流れるコメントの速さを設定します。\"),_c('br'),_vm._v(\" たとえば 1.2 に設定すると、コメントが 1.2 倍速く流れます。\"),_c('br')]),_c('v-slider',{staticClass:\"settings__item-form\",attrs:{\"ticks\":\"always\",\"thumb-label\":\"\",\"hide-details\":\"\",\"step\":0.1,\"min\":0.5,\"max\":2},model:{value:(_vm.settingsStore.settings.comment_speed_rate),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"comment_speed_rate\", $$v)},expression:\"settingsStore.settings.comment_speed_rate\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントの文字サイズ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーに流れるコメントの文字サイズの基準値を設定します。\"),_c('br'),_vm._v(\" 実際の文字サイズは画面サイズに合わせて調整されます。デフォルトの文字サイズは 34px です。\"),_c('br')]),_c('v-slider',{staticClass:\"settings__item-form\",attrs:{\"ticks\":\"always\",\"thumb-label\":\"\",\"hide-details\":\"\",\"min\":20,\"max\":60},model:{value:(_vm.settingsStore.settings.comment_font_size),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"comment_font_size\", $$v)},expression:\"settingsStore.settings.comment_font_size\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"close_comment_form_after_sending\"}},[_vm._v(\"コメント送信後にコメント入力フォームを閉じる\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"close_comment_form_after_sending\"}},[_vm._v(\" この設定をオンにすると、コメントを送信した後に、コメント入力フォームが自動で閉じるようになります。\"),_c('br'),_vm._v(\" コメント入力フォームが表示されたままだと、大半のショートカットキーが文字入力と競合して使えなくなります。とくに理由がなければ、オンにしておくのがおすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"close_comment_form_after_sending\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.close_comment_form_after_sending),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"close_comment_form_after_sending\", $$v)},expression:\"settingsStore.settings.close_comment_form_after_sending\"}})],1)],1),_c('CommentMuteSettings',{model:{value:(_vm.comment_mute_settings_modal),callback:function ($$v) {_vm.comment_mute_settings_modal=$$v},expression:\"comment_mute_settings_modal\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('v-dialog',{attrs:{\"max-width\":\"770\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.comment_mute_settings_modal),callback:function ($$v) {_vm.comment_mute_settings_modal=$$v},expression:\"comment_mute_settings_modal\"}},[_c('v-card',{staticClass:\"comment-mute-settings\"},[_c('v-card-title',{staticClass:\"px-5 pt-5 pb-3 d-flex align-center font-weight-bold\",staticStyle:{\"height\":\"60px\"}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"26px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"コメントのミュート設定\")]),_c('v-spacer'),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"d-flex align-center rounded-circle cursor-pointer px-2 py-2\",on:{\"click\":function($event){_vm.comment_mute_settings_modal = false}}},[_c('Icon',{attrs:{\"icon\":\"fluent:dismiss-12-filled\",\"width\":\"23px\",\"height\":\"23px\"}})],1)],1),_c('div',{staticClass:\"px-5 pb-5\"},[_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"24px\",\"height\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"クイック設定\")])],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_vulgar_comments\"}},[_vm._v(\" 露骨な表現を含むコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_vulgar_comments\"}},[_vm._v(\" 性的な単語などの露骨・下品な表現を含むコメントを、一括でミュートするかを設定します。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_vulgar_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_vulgar_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_vulgar_comments\", $$v)},expression:\"settingsStore.settings.mute_vulgar_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_abusive_discriminatory_prejudiced_comments\"}},[_vm._v(\" ネガティブな表現、差別的な表現、政治的に偏った表現を含むコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_abusive_discriminatory_prejudiced_comments\"}},[_vm._v(\" 『死ね』『殺す』などのネガティブな表現、特定の国や人々への差別的な表現、政治的に偏った表現を含むコメントを、一括でミュートするかを設定します。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_abusive_discriminatory_prejudiced_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_abusive_discriminatory_prejudiced_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_abusive_discriminatory_prejudiced_comments\", $$v)},expression:\"settingsStore.settings.mute_abusive_discriminatory_prejudiced_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_big_size_comments\"}},[_vm._v(\" 文字サイズが大きいコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_big_size_comments\"}},[_vm._v(\" 通常より大きい文字サイズで表示されるコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" 文字サイズが大きいコメントには迷惑なコメントが多いです。基本的にはオンにしておくのがおすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_big_size_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_big_size_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_big_size_comments\", $$v)},expression:\"settingsStore.settings.mute_big_size_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_fixed_comments\"}},[_vm._v(\" 映像の上下に固定表示されるコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_fixed_comments\"}},[_vm._v(\" 映像の上下に固定された状態で表示されるコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" 固定表示されるコメントが煩わしい方におすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_fixed_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_fixed_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_fixed_comments\", $$v)},expression:\"settingsStore.settings.mute_fixed_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_colored_comments\"}},[_vm._v(\" 色付きのコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_colored_comments\"}},[_vm._v(\" 白以外の色で表示される色付きのコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" この設定をオンにしておくと、目立つ色のコメントを一掃できます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_colored_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_colored_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_colored_comments\", $$v)},expression:\"settingsStore.settings.mute_colored_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_consecutive_same_characters_comments\"}},[_vm._v(\" 8文字以上同じ文字が連続しているコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_consecutive_same_characters_comments\"}},[_vm._v(\" 『wwwwwwwwwww』『あばばばばばばばばば』など、8文字以上同じ文字が連続しているコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" しばしばあるテンプレコメントが煩わしい方におすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_consecutive_same_characters_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_consecutive_same_characters_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_consecutive_same_characters_comments\", $$v)},expression:\"settingsStore.settings.mute_consecutive_same_characters_comments\"}})],1),_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:comment-dismiss-20-filled\",\"width\":\"24px\"}}),_c('span',{staticClass:\"ml-2 mr-2\"},[_vm._v(\"ミュート済みのキーワード\")]),_c('v-btn',{staticClass:\"ml-auto\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.settingsStore.settings.muted_comment_keywords.push({match: 'partial', pattern: ''})}}},[_c('Icon',{attrs:{\"icon\":\"fluent:add-12-filled\",\"height\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"追加\")])],1)],1),_c('div',{staticClass:\"muted-comment-items\"},_vm._l((_vm.settingsStore.settings.muted_comment_keywords),function(muted_comment_keyword,index){return _c('div',{key:index,staticClass:\"muted-comment-item\"},[_c('v-text-field',{staticClass:\"muted-comment-item__input\",attrs:{\"type\":\"search\",\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"ミュートするキーワードを入力\"},model:{value:(_vm.settingsStore.settings.muted_comment_keywords[index].pattern),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings.muted_comment_keywords[index], \"pattern\", $$v)},expression:\"settingsStore.settings.muted_comment_keywords[index].pattern\"}}),_c('v-select',{staticClass:\"muted-comment-item__match-type\",attrs:{\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"items\":_vm.muted_comment_keyword_match_type},model:{value:(_vm.settingsStore.settings.muted_comment_keywords[index].match),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings.muted_comment_keywords[index], \"match\", $$v)},expression:\"settingsStore.settings.muted_comment_keywords[index].match\"}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"muted-comment-item__delete-button\",on:{\"click\":function($event){_vm.settingsStore.settings.muted_comment_keywords\n                            .splice(_vm.settingsStore.settings.muted_comment_keywords.indexOf(muted_comment_keyword), 1)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:delete-16-filled\",\"width\":\"20px\"}})],1)],1)}),0),_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-prohibited-20-filled\",\"width\":\"24px\"}}),_c('span',{staticClass:\"ml-2 mr-2\"},[_vm._v(\"ミュート済みのニコニコユーザー ID\")]),_c('v-btn',{staticClass:\"ml-auto\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.settingsStore.settings.muted_niconico_user_ids.push('')}}},[_c('Icon',{attrs:{\"icon\":\"fluent:add-12-filled\",\"height\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"追加\")])],1)],1),_c('div',{staticClass:\"muted-comment-items\"},_vm._l((_vm.settingsStore.settings.muted_niconico_user_ids),function(muted_niconico_user_id,index){return _c('div',{key:index,staticClass:\"muted-comment-item\"},[_c('v-text-field',{staticClass:\"muted-comment-item__input\",attrs:{\"type\":\"search\",\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"ミュートするニコニコユーザー ID を入力\"},model:{value:(_vm.settingsStore.settings.muted_niconico_user_ids[index]),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings.muted_niconico_user_ids, index, $$v)},expression:\"settingsStore.settings.muted_niconico_user_ids[index]\"}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"muted-comment-item__delete-button\",on:{\"click\":function($event){_vm.settingsStore.settings.muted_niconico_user_ids\n                            .splice(_vm.settingsStore.settings.muted_niconico_user_ids.indexOf(muted_niconico_user_id), 1)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:delete-16-filled\",\"width\":\"20px\"}})],1)],1)}),0)])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue, { PropType } from 'vue';\n\nimport useSettingsStore from '@/store/SettingsStore';\n\nexport default Vue.extend({\n    name: 'CommentMuteSettings',\n    // カスタム v-model を実装する\n    // ref: https://jp.vuejs.org/v2/guide/components-custom-events.html\n    model: {\n        prop: 'showing',  // v-model で渡された値が \"showing\" props に入る\n        event: 'change',  // \"change\" イベントで親コンポーネントに反映\n    },\n    props: {\n        // コメントのミュート設定のモーダルを表示するか\n        showing: {\n            type: Boolean as PropType<Boolean>,\n            required: true,\n        }\n    },\n    data() {\n        return {\n\n            // インターバルのタイマー ID\n            interval_timer_id: 0,\n\n            // コメントのミュート設定のモーダルを表示するか\n            comment_mute_settings_modal: false,\n\n            // ミュート済みのキーワードのマッチタイプ\n            muted_comment_keyword_match_type: [\n                {text: '部分一致', value: 'partial'},\n                {text: '前方一致', value: 'forward'},\n                {text: '後方一致', value: 'backward'},\n                {text: '完全一致', value: 'exact'},\n                {text: '正規表現', value: 'regex'},\n            ],\n        };\n    },\n    computed: {\n        // SettingsStore に this.settingsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore),\n    },\n    watch: {\n\n        // showing (親コンポーネント側) の変更を監視し、変更されたら comment_mute_settings_modal に反映する\n        showing() {\n            this.comment_mute_settings_modal = this.showing as boolean;\n        },\n\n        // comment_mute_settings_modal (子コンポーネント側) の変更を監視し、変更されたら this.$emit() で親コンポーネントに伝える\n        comment_mute_settings_modal() {\n            this.$emit('change', this.comment_mute_settings_modal);\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommentMuteSettings.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommentMuteSettings.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CommentMuteSettings.vue?vue&type=template&id=2cd59ba0&scoped=true&\"\nimport script from \"./CommentMuteSettings.vue?vue&type=script&lang=ts&\"\nexport * from \"./CommentMuteSettings.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CommentMuteSettings.vue?vue&type=style&index=0&id=2cd59ba0&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2cd59ba0\",\n  null\n  \n)\n\nexport default component.exports","\nimport APIClient from '@/services/APIClient';\n\n\n/** ニコニコアカウントと連携するための認証 URL を表すインターフェイス */\nexport interface INiconicoAuthURL {\n    authorization_url: string;\n}\n\n\nclass Niconico {\n\n    /**\n     * ニコニコアカウントと連携するための認証 URL を取得する\n     * @returns 認証 URL or 認証 URL の取得に失敗した場合は null\n     */\n    static async fetchAuthorizationURL(): Promise<string | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<INiconicoAuthURL>('/niconico/auth');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'ニコニコアカウントとの連携用の認証 URL を取得できませんでした。');\n            return null;\n        }\n\n        return response.data.authorization_url;\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントに紐づくニコニコアカウントとの連携を解除する\n     * @returns 連携解除に成功した場合は true, 失敗した場合は false\n     */\n    static async logoutAccount(): Promise<boolean> {\n\n        // API リクエストを実行\n        const response = await APIClient.delete('/niconico/logout');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'ニコニコアカウントとの連携を解除できませんでした。');\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport default Niconico;\n","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport CommentMuteSettings from '@/components/Settings/CommentMuteSettings.vue';\nimport Niconico from '@/services/Niconico';\nimport useSettingsStore from '@/store/SettingsStore';\nimport useUserStore from '@/store/UserStore';\nimport Utils from '@/utils';\nimport SettingsBase from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-Jikkyo',\n    components: {\n        SettingsBase,\n        CommentMuteSettings,\n    },\n    data() {\n        return {\n\n            // コメントのミュート設定のモーダルを表示するか\n            comment_mute_settings_modal: false,\n\n            // ローディング中かどうか\n            is_loading: true,\n        };\n    },\n    computed: {\n        // SettingsStore / UserStore に this.settingsStore / this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore, useUserStore),\n    },\n    async created() {\n\n        // アカウント情報を更新\n        await this.userStore.fetchUser();\n\n        // ローディング状態を解除\n        this.is_loading = false;\n\n        // もしハッシュ (# から始まるフラグメント) に何か指定されていたら、\n        // OAuth 連携のコールバックの結果が入っている可能性が高いので、パースを試みる\n        // アカウント情報更新より後にしないと Snackbar がうまく表示されない\n        if (location.hash !== '') {\n            const params = new URLSearchParams(location.hash.replace('#', ''));\n            if (params.get('status') !== null && params.get('detail') !== null) {\n                // コールバックの結果を取得できたので、OAuth 連携の結果を画面に通知する\n                const authorization_status = parseInt(params.get('status')!);\n                const authorization_detail = params.get('detail')!;\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\n                // URL からフラグメントを削除\n                // ref: https://stackoverflow.com/a/49373716/17124142\n                history.replaceState(null, '', ' ');\n            }\n        }\n    },\n    methods: {\n        async loginNiconicoAccount() {\n\n            // ログインしていない場合はエラーにする\n            if (this.userStore.is_logged_in === false) {\n                this.$message.warning('連携をはじめるには、KonomiTV アカウントにログインしてください。');\n                return;\n            }\n\n            // ニコニコアカウントと連携するための認証 URL を取得\n            const authorization_url = await Niconico.fetchAuthorizationURL();\n            if (authorization_url === null) {\n                return;\n            }\n\n            // モバイルデバイスではポップアップが事実上使えない (特に Safari ではブロックされてしまう) ので、素直にリダイレクトで実装する\n            if (Utils.isMobileDevice() === true) {\n                location.href = authorization_url;\n                return;\n            }\n\n            // OAuth 連携のため、認証 URL をポップアップウインドウで開く\n            // window.open() の第2引数はユニークなものにしておくと良いらしい\n            // ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1 (大変参考になりました)\n            const popup_window = window.open(authorization_url, 'KonomiTV-OAuthPopup', Utils.getWindowFeatures());\n            if (popup_window === null) {\n                this.$message.error('ポップアップウインドウを開けませんでした。');\n                return;\n            }\n\n            // 認証完了 or 失敗後、ポップアップウインドウから送信される文字列を受信\n            const onMessage = async (event) => {\n\n                // すでにウインドウが閉じている場合は実行しない\n                if (popup_window.closed) return;\n\n                // 受け取ったオブジェクトに KonomiTV-OAuthPopup キーがない or そもそもオブジェクトではない際は実行しない\n                // ブラウザの拡張機能から結構余計な message が飛んでくるっぽい…。\n                if (Utils.typeof(event.data) !== 'object') return;\n                if (('KonomiTV-OAuthPopup' in event.data) === false) return;\n\n                // 認証は完了したので、ポップアップウインドウを閉じ、リスナーを解除する\n                if (popup_window) popup_window.close();\n                window.removeEventListener('message', onMessage);\n\n                // ステータスコードと詳細メッセージを取得\n                const authorization_status = event.data['KonomiTV-OAuthPopup']['status'] as number;\n                const authorization_detail = event.data['KonomiTV-OAuthPopup']['detail'] as string;\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\n            };\n\n            // postMessage() を受信するリスナーを登録\n            window.addEventListener('message', onMessage);\n        },\n\n        async onOAuthCallbackReceived(authorization_status: number, authorization_detail: string) {\n            console.log(`NiconicoAuthCallbackAPI: Status: ${authorization_status} / Detail: ${authorization_detail}`);\n\n            // OAuth 連携に失敗した\n            if (authorization_status !== 200) {\n                if (authorization_detail.startsWith('Authorization was denied (access_denied)')) {\n                    this.$message.error('ニコニコアカウントとの連携がキャンセルされました。');\n                } else if (authorization_detail.startsWith('Failed to get access token (HTTP Error ')) {\n                    const error = authorization_detail.replace('Failed to get access token ', '');\n                    this.$message.error(`アクセストークンの取得に失敗しました。${error}`);\n                } else if (authorization_detail.startsWith('Failed to get access token (Connection Timeout)')) {\n                    this.$message.error('アクセストークンの取得に失敗しました。ニコニコで障害が発生している可能性があります。');\n                } else if (authorization_detail.startsWith('Failed to get user information (HTTP Error ')) {\n                    const error = authorization_detail.replace('Failed to get user information ', '');\n                    this.$message.error(`ニコニコアカウントのユーザー情報の取得に失敗しました。${error}`);\n                } else if (authorization_detail.startsWith('Failed to get user information (Connection Timeout)')) {\n                    this.$message.error('ニコニコアカウントのユーザー情報の取得に失敗しました。ニコニコで障害が発生している可能性があります。');\n                } else {\n                    this.$message.error(`ニコニコアカウントとの連携に失敗しました。(${authorization_detail})`);\n                }\n                return;\n            }\n\n            // アカウント情報を強制的に更新\n            await this.userStore.fetchUser(true);\n\n            this.$message.success('ニコニコアカウントと連携しました。');\n        },\n\n        async logoutNiconicoAccount() {\n\n            // ニコニコアカウント連携解除 API にリクエスト\n            const result = await Niconico.logoutAccount();\n            if (result === false) {\n                return;\n            }\n\n            // アカウント情報を強制的に更新\n            await this.userStore.fetchUser(true);\n\n            this.$message.success('ニコニコアカウントとの連携を解除しました。');\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Jikkyo.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Jikkyo.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Jikkyo.vue?vue&type=template&id=ac48731c&scoped=true&\"\nimport script from \"./Jikkyo.vue?vue&type=script&lang=ts&\"\nexport * from \"./Jikkyo.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Jikkyo.vue?vue&type=style&index=0&id=ac48731c&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ac48731c\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:server-surface-16-filled\",\"width\":\"22px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"サーバー設定\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"鋭意開発中…\")])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport SettingsBase from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-Server',\n    components: {\n        SettingsBase,\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Server.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Server.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Server.vue?vue&type=template&id=7cf86dbd&\"\nimport script from \"./Server.vue?vue&type=script&lang=ts&\"\nexport * from \"./Server.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('SettingsBase',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"22px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"Twitter\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[_c('div',{staticClass:\"twitter-accounts\"},[(_vm.userStore.user !== null && _vm.userStore.user.twitter_accounts.length > 0)?_c('div',{staticClass:\"twitter-accounts__heading\"},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-board-20-filled\",\"height\":\"30\"}}),_vm._v(\"連携中のアカウント \")],1):_vm._e(),(_vm.userStore.user === null || _vm.userStore.user.twitter_accounts.length === 0)?_c('div',{staticClass:\"twitter-accounts__guide\"},[_c('Icon',{staticClass:\"flex-shrink-0\",attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"45px\"}}),_c('div',{staticClass:\"ml-4\"},[_c('div',{staticClass:\"font-weight-bold text-h6\"},[_vm._v(\"Twitter アカウントと連携していません\")]),_c('div',{staticClass:\"text--text text--darken-1 text-subtitle-2 mt-1\"},[_vm._v(\" Twitter アカウントと連携すると、テレビを見ながら Twitter にツイートしたり、ほかの実況ツイートをリアルタイムで表示できるようになります。 \")])])],1):_vm._e(),_vm._l(((_vm.userStore.user !== null ? _vm.userStore.user.twitter_accounts: [])),function(twitter_account){return _c('div',{key:twitter_account.id,staticClass:\"twitter-account\"},[_c('img',{staticClass:\"twitter-account__icon\",attrs:{\"src\":twitter_account.icon_url}}),_c('div',{staticClass:\"twitter-account__info\"},[_c('div',{staticClass:\"twitter-account__info-name\"},[_c('span',{staticClass:\"twitter-account__info-name-text\"},[_vm._v(_vm._s(twitter_account.name))])]),_c('span',{staticClass:\"twitter-account__info-screen-name\"},[_vm._v(\" @\"+_vm._s(twitter_account.screen_name)+\" \"),(twitter_account.is_oauth_session === true)?_c('span',[_vm._v(\"(Legacy Session)\")]):_vm._e()])]),_c('v-btn',{staticClass:\"twitter-account__logout ml-auto\",attrs:{\"width\":\"124\",\"height\":\"52\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.logoutTwitterAccount(twitter_account.screen_name)}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-disconnected-20-filled\",\"height\":\"24\"}}),_vm._v(\"連携解除 \")],1)],1)}),_c('v-btn',{staticClass:\"twitter-account__login\",attrs:{\"color\":\"secondary\",\"max-width\":\"250\",\"height\":\"50\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.loginTwitterAccountWithPasswordForm()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-connected-20-filled\",\"height\":\"24\"}}),_vm._v(\"連携するアカウントを追加 \")],1),_c('v-dialog',{attrs:{\"max-width\":\"600\"},model:{value:(_vm.twitter_password_auth_dialog),callback:function ($$v) {_vm.twitter_password_auth_dialog=$$v},expression:\"twitter_password_auth_dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"justify-center pt-6 font-weight-bold\"},[_vm._v(\"Twitter にログイン\")]),_c('v-card-text',{staticClass:\"pt-2 pb-0\"},[_c('p',{staticClass:\"mb-1\"},[_vm._v(\"2023/4/30 以降、Twitter のサードパーティー API の事実上の廃止により、従来のアプリ連携では Twitter にアクセスできなくなりました。\")]),_c('p',{staticClass:\"mb-1\"},[_vm._v(\"そこで KonomiTV では、代わりにユーザー名とパスワードでログインすることで、これまで通り Twitter 連携ができるようにしています (2要素認証を設定しているアカウントには対応していません) 。\")]),_c('p',{staticClass:\"mb-1\"},[_vm._v(\"万全は期していますが、非公式な方法のため、使い方次第ではアカウントにペナルティが適用される可能性もあります。自己の責任のもとでご利用ください。\")]),_c('v-form',{ref:\"twitter_form\",staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('v-text-field',{ref:\"twitter_screen_name\",staticClass:\"settings__item-form mt-6\",attrs:{\"outlined\":\"\",\"label\":\"ユーザー名 (@ から始まる ID)\",\"placeholder\":\"screen_name\",\"dense\":_vm.is_form_dense,\"rules\":[(value) => !!value || 'ユーザー名を入力してください。']},model:{value:(_vm.twitter_screen_name),callback:function ($$v) {_vm.twitter_screen_name=$$v},expression:\"twitter_screen_name\"}}),_c('v-text-field',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"label\":\"パスワード\",\"dense\":_vm.is_form_dense,\"type\":_vm.twitter_password_showing ? 'text' : 'password',\"append-icon\":_vm.twitter_password_showing ? 'mdi-eye' : 'mdi-eye-off',\"rules\":[(value) => !!value || 'パスワードを入力してください。']},on:{\"click:append\":function($event){_vm.twitter_password_showing = !_vm.twitter_password_showing}},model:{value:(_vm.twitter_password),callback:function ($$v) {_vm.twitter_password=$$v},expression:\"twitter_password\"}})],1)],1),_c('v-card-actions',{staticClass:\"pt-0 px-6 pb-5\"},[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"text\",\"height\":\"40\",\"text\":\"\"},on:{\"click\":function($event){_vm.twitter_password_auth_dialog = false}}},[_vm._v(\"キャンセル\")]),_c('v-btn',{staticClass:\"px-4\",attrs:{\"color\":\"secondary\",\"height\":\"40\"},on:{\"click\":function($event){return _vm.loginTwitterAccountWithPassword()}}},[_vm._v(\"ログイン\")])],1)],1)],1),_c('v-btn',{staticClass:\"twitter-account__login\",attrs:{\"color\":\"secondary\",\"max-width\":\"310\",\"height\":\"50\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.loginTwitterAccountWithOAuth()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-connected-20-filled\",\"height\":\"24\"}}),_vm._v(\"連携するアカウントを追加 (Legacy) \")],1)],2),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"fold_panel_after_sending_tweet\"}},[_vm._v(\"ツイート送信後にパネルを折りたたむ\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"fold_panel_after_sending_tweet\"}},[_vm._v(\" この設定をオンにすると、ツイートを送信した後に、パネルが自動で折りたたまれます。\"),_c('br'),_vm._v(\" ツイートするとき以外はできるだけ映像を大きくして見たい方におすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"fold_panel_after_sending_tweet\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.fold_panel_after_sending_tweet),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"fold_panel_after_sending_tweet\", $$v)},expression:\"settingsStore.settings.fold_panel_after_sending_tweet\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"reset_hashtag_when_program_switches\"}},[_vm._v(\"番組が切り替わったときにハッシュタグフォームをリセットする\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"reset_hashtag_when_program_switches\"}},[_vm._v(\" チャンネルを切り替えたときや、視聴中の番組が終了し次の番組の放送が開始されたときに、ハッシュタグフォームをリセットするかを設定します。\"),_c('br'),_vm._v(\" この設定をオンにしておけば、「誤って前番組のハッシュタグをつけたまま次番組の実況ツイートをしてしまう」といったミスを回避できます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"reset_hashtag_when_program_switches\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.reset_hashtag_when_program_switches),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"reset_hashtag_when_program_switches\", $$v)},expression:\"settingsStore.settings.reset_hashtag_when_program_switches\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"auto_add_watching_channel_hashtag\"}},[_vm._v(\"視聴中のチャンネルに対応する局タグを自動で追加する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"auto_add_watching_channel_hashtag\"}},[_vm._v(\" この設定をオンにすると、視聴中のチャンネルに対応する局タグ (#nhk, #tokyomx など) がハッシュタグフォームに自動で追加されます。\"),_c('br'),_vm._v(\" 現時点で、局タグは三大首都圏の地上波・BS の一部チャンネル・AT-X にのみ対応しています。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"auto_add_watching_channel_hashtag\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.auto_add_watching_channel_hashtag),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"auto_add_watching_channel_hashtag\", $$v)},expression:\"settingsStore.settings.auto_add_watching_channel_hashtag\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"デフォルトで表示される Twitter タブ内のタブ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 視聴画面を開いたときに、パネルの Twitter タブの中で最初に表示されるタブを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.twitter_active_tab},model:{value:(_vm.settingsStore.settings.twitter_active_tab),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"twitter_active_tab\", $$v)},expression:\"settingsStore.settings.twitter_active_tab\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ツイートにつけるハッシュタグの位置\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" ツイート本文から見て、ハッシュタグをどの位置につけてツイートするかを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tweet_hashtag_position},model:{value:(_vm.settingsStore.settings.tweet_hashtag_position),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tweet_hashtag_position\", $$v)},expression:\"settingsStore.settings.tweet_hashtag_position\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ツイートするキャプチャに番組タイトルの透かしを描画する\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" ツイートするキャプチャに、透かしとして視聴中の番組タイトルを描画するかを設定します。\"),_c('br'),_vm._v(\" 透かしの描画位置は 左上・右上・左下・右下 から選択できます。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tweet_capture_watermark_position},model:{value:(_vm.settingsStore.settings.tweet_capture_watermark_position),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tweet_capture_watermark_position\", $$v)},expression:\"settingsStore.settings.tweet_capture_watermark_position\"}})],1)]),_c('v-overlay',{attrs:{\"value\":_vm.is_twitter_password_auth_sending,\"z-index\":\"300\"}},[_c('v-progress-circular',{attrs:{\"color\":\"secondary\",\"indeterminate\":\"\",\"size\":\"64\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nimport Message from '@/message';\nimport APIClient from '@/services/APIClient';\n\n\n/** Twitter アカウントと連携するための認証 URL を表すインターフェイス */\nexport interface ITwitterAuthURL {\n    authorization_url: string;\n}\n\n/** ツイートの送信結果を表すインターフェイス */\nexport interface ITweetResult {\n    is_success: boolean;\n    tweet_url?: string;\n    detail: string;\n}\n\nexport interface ITwitterPasswordAuthRequest {\n    screen_name: string;\n    password: string;\n}\n\n\nclass Twitter {\n\n    /**\n     * Twitter アカウントと連携するための認証 URL を取得する\n     * @returns 認証 URL or 認証 URL の取得に失敗した場合は null\n     */\n    static async fetchAuthorizationURL(): Promise<string | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<ITwitterAuthURL>('/twitter/auth');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'Twitter アカウントとの連携用の認証 URL を取得できませんでした。');\n            return null;\n        }\n\n        return response.data.authorization_url;\n    }\n\n\n    /**\n     * Twitter アカウントとパスワード認証で連携する\n     * @param twitter_password_auth_request スクリーンネームとパスワード\n     * @returns ログインできた場合は true, 失敗した場合は false\n     */\n    static async authWithPassword(twitter_password_auth_request: ITwitterPasswordAuthRequest): Promise<boolean> {\n\n        // API リクエストを実行\n        const response = await APIClient.post('/twitter/password-auth', twitter_password_auth_request);\n\n        // エラー処理\n        if ('is_error' in response) {\n            if (response.error.message.startsWith('Failed to authenticate with password')) {\n                const error = response.error.message.match(/Message: (.+)\\)/)[1];\n                Message.error(`ログインに失敗しました。${error}`);\n            } else if (response.error.message.startsWith('Unexpected error occurred while authenticate with password')) {\n                const error = response.error.message.match(/Message: (.+)\\)/)[1];\n                Message.error(`ログインフローの途中で予期せぬエラーが発生しました。${error}`);\n            } else if (response.error.message.startsWith('Failed to get user information')) {\n                Message.error('Twitter アカウントのユーザー情報の取得に失敗しました。');\n            } else {\n                APIClient.showGenericError(response, 'Twitter アカウントとの連携に失敗しました。');\n            }\n            return false;\n        }\n\n        return true;\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントに紐づく Twitter アカウントとの連携を解除する\n     * @param screen_name Twitter のスクリーンネーム\n     * @returns 連携解除に成功した場合は true, 失敗した場合は false\n     */\n    static async logoutAccount(screen_name: string): Promise<boolean> {\n\n        // API リクエストを実行\n        const response = await APIClient.delete(`/twitter/accounts/${screen_name}`);\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'Twitter アカウントとの連携を解除できませんでした。');\n            return false;\n        }\n\n        return true;\n    }\n\n\n    /**\n     * ツイートを送信する\n     * @param screen_name Twitter のスクリーンネーム\n     * @param text ツイート本文\n     * @param captures 添付するキャプチャ画像\n     */\n    static async sendTweet(screen_name: string, text: string, captures: Blob[]): Promise<{message: string; is_error: boolean;}> {\n\n        // multipart/form-data でツイート本文と画像（選択されている場合）を送る\n        const form_data = new FormData();\n        form_data.append('tweet', text);\n        for (const tweet_capture of captures) {\n            form_data.append('images', tweet_capture);\n        }\n\n        // API リクエストを実行\n        const response = await APIClient.post<ITweetResult>(`/twitter/accounts/${screen_name}/tweets`, form_data, {\n            headers: {'Content-Type': 'multipart/form-data'},\n        });\n\n        // エラー処理 (API リクエスト自体に失敗した場合)\n        if ('is_error' in response) {\n            if (response.error.message) {\n                if (Number.isNaN(response.status)) {\n                    return {message: `エラー: ツイートの送信に失敗しました。(${response.error.message})`, is_error: true};\n                } else {\n                    return {message: `エラー: ツイートの送信に失敗しました。(HTTP Error ${response.status} / ${response.error.message})`, is_error: true};\n                }\n            } else {\n                return {message: `エラー: ツイートの送信に失敗しました。(HTTP Error ${response.status})`, is_error: true};\n            }\n        }\n\n        // 成功 or 失敗に関わらず detail の内容をそのまま通知する\n        if (response.data.is_success === true) {\n            // ツイート成功\n            return {message: response.data.detail, is_error: false};\n        } else {\n            // ツイート失敗\n            return {message: `エラー: ${response.data.detail}`, is_error: true};\n        }\n    }\n}\n\nexport default Twitter;\n","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport Twitter from '@/services/Twitter';\nimport useSettingsStore from '@/store/SettingsStore';\nimport useUserStore from '@/store/UserStore';\nimport Utils from '@/utils';\nimport SettingsBase from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-Twitter',\n    components: {\n        SettingsBase,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            // デフォルトで表示されるパネルのタブの選択肢\n            twitter_active_tab: [\n                {'text': 'ツイート検索タブ', 'value': 'Search'},\n                {'text': 'タイムラインタブ', 'value': 'Timeline'},\n                {'text': 'キャプチャタブ', 'value': 'Capture'},\n            ],\n\n            // ツイートにつけるハッシュタグの位置の選択肢\n            tweet_hashtag_position: [\n                {'text': 'ツイート本文の前に追加する', 'value': 'Prepend'},\n                {'text': 'ツイート本文の後に追加する', 'value': 'Append'},\n                {'text': 'ツイート本文の前に追加してから改行する', 'value': 'PrependWithLineBreak'},\n                {'text': 'ツイート本文の後に改行してから追加する', 'value': 'AppendWithLineBreak'},\n            ],\n\n            // ツイートするキャプチャに番組タイトルの透かしを描画する位置の選択肢\n            tweet_capture_watermark_position: [\n                {'text': '透かしを描画しない', 'value': 'None'},\n                {'text': '透かしをキャプチャの左上に描画する', 'value': 'TopLeft'},\n                {'text': '透かしをキャプチャの右上に描画する', 'value': 'TopRight'},\n                {'text': '透かしをキャプチャの左下に描画する', 'value': 'BottomLeft'},\n                {'text': '透かしをキャプチャの右下に描画する', 'value': 'BottomRight'},\n            ],\n\n            // ローディング中かどうか\n            is_loading: true,\n\n            // パスワード認証実行中かどうか\n            is_twitter_password_auth_sending: false,\n\n            // パスワード認証用ダイヤログ\n            twitter_password_auth_dialog: false,\n\n            // Twitter のスクリーンネームとパスワード\n            twitter_screen_name: '',\n            twitter_password: '',\n            twitter_password_showing: false,\n        };\n    },\n    computed: {\n        // SettingsStore / UserStore に this.settingsStore / this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore, useUserStore),\n    },\n    async created() {\n\n        // アカウント情報を更新\n        await this.userStore.fetchUser();\n\n        // ローディング状態を解除\n        this.is_loading = false;\n\n        // もしハッシュ (# から始まるフラグメント) に何か指定されていたら、\n        // OAuth 連携のコールバックの結果が入っている可能性が高いので、パースを試みる\n        // アカウント情報更新より後にしないと Snackbar がうまく表示されない\n        if (location.hash !== '') {\n            const params = new URLSearchParams(location.hash.replace('#', ''));\n            if (params.get('status') !== null && params.get('detail') !== null) {\n                // コールバックの結果を取得できたので、OAuth 連携の結果を画面に通知する\n                const authorization_status = parseInt(params.get('status')!);\n                const authorization_detail = params.get('detail')!;\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\n                // URL からフラグメントを削除\n                // ref: https://stackoverflow.com/a/49373716/17124142\n                history.replaceState(null, '', ' ');\n            }\n        }\n    },\n    methods: {\n        async loginTwitterAccountWithPasswordForm() {\n            // ログインしていない場合はエラーにする\n            if (this.userStore.is_logged_in === false) {\n                this.$message.warning('連携をはじめるには、KonomiTV アカウントにログインしてください。');\n                await Utils.sleep(0.01);\n                this.twitter_password_auth_dialog = false;\n                return;\n            }\n            this.twitter_password_auth_dialog = true;\n        },\n\n        async loginTwitterAccountWithPassword() {\n\n            // バリデーションを実行\n            if ((this.$refs.twitter_form as any).validate() === false) {\n                return;\n            }\n\n            // Twitter パスワード認証 API にリクエスト\n            this.is_twitter_password_auth_sending = true;\n            const result = await Twitter.authWithPassword({\n                screen_name: this.twitter_screen_name,\n                password: this.twitter_password,\n            });\n            this.is_twitter_password_auth_sending = false;\n            if (result === false) {\n                return;\n            }\n\n            // アカウント情報を強制的に更新\n            await this.userStore.fetchUser(true);\n            if (this.userStore.user === null) {\n                this.$message.error('アカウント情報を取得できませんでした。');\n                return;\n            }\n\n            // ログイン中のユーザーに紐づく Twitter アカウントのうち、一番 updated_at が新しいものを取得\n            // ログインすると updated_at が更新されるため、この時点で一番 updated_at が新しいアカウントが今回連携したものだと判断できる\n            // ref: https://stackoverflow.com/a/12192544/17124142 (ISO8601 のソートアルゴリズム)\n            const current_twitter_account = [...this.userStore.user.twitter_accounts].sort((a, b) => {\n                return (a.updated_at < b.updated_at) ? 1 : ((a.updated_at > b.updated_at) ? -1 : 0);\n            })[0];\n\n            this.$message.success(`Twitter @${current_twitter_account.screen_name} と連携しました。`);\n\n            // フォームをリセットし、非表示にする\n            (this.$refs.twitter_form as any).reset();\n            this.twitter_password_auth_dialog = false;\n        },\n\n        async loginTwitterAccountWithOAuth() {\n\n            // ログインしていない場合はエラーにする\n            if (this.userStore.is_logged_in === false) {\n                this.$message.warning('連携をはじめるには、KonomiTV アカウントにログインしてください。');\n                return;\n            }\n\n            // Twitter アカウントと連携するための認証 URL を取得\n            const authorization_url = await Twitter.fetchAuthorizationURL();\n            if (authorization_url === null) {\n                return;\n            }\n\n            // モバイルデバイスではポップアップが事実上使えない (特に Safari ではブロックされてしまう) ので、素直にリダイレクトで実装する\n            if (Utils.isMobileDevice() === true) {\n                location.href = authorization_url;\n                return;\n            }\n\n            // OAuth 連携のため、認証 URL をポップアップウインドウで開く\n            // window.open() の第2引数はユニークなものにしておくと良いらしい\n            // ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1 (大変参考になりました)\n            const popup_window = window.open(authorization_url, 'KonomiTV-OAuthPopup', Utils.getWindowFeatures());\n            if (popup_window === null) {\n                this.$message.error('ポップアップウインドウを開けませんでした。');\n                return;\n            }\n\n            // 認証完了 or 失敗後、ポップアップウインドウから送信される文字列を受信\n            const onMessage = async (event) => {\n\n                // すでにウインドウが閉じている場合は実行しない\n                if (popup_window.closed) return;\n\n                // 受け取ったオブジェクトに KonomiTV-OAuthPopup キーがない or そもそもオブジェクトではない際は実行しない\n                // ブラウザの拡張機能から結構余計な message が飛んでくるっぽい…。\n                if (Utils.typeof(event.data) !== 'object') return;\n                if (('KonomiTV-OAuthPopup' in event.data) === false) return;\n\n                // 認証は完了したので、ポップアップウインドウを閉じ、リスナーを解除する\n                if (popup_window) popup_window.close();\n                window.removeEventListener('message', onMessage);\n\n                // ステータスコードと詳細メッセージを取得\n                const authorization_status = event.data['KonomiTV-OAuthPopup']['status'] as number;\n                const authorization_detail = event.data['KonomiTV-OAuthPopup']['detail'] as string;\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\n            };\n\n            // postMessage() を受信するリスナーを登録\n            window.addEventListener('message', onMessage);\n        },\n\n        async onOAuthCallbackReceived(authorization_status: number, authorization_detail: string) {\n            console.log(`TwitterAuthCallbackAPI: Status: ${authorization_status} / Detail: ${authorization_detail}`);\n\n            // OAuth 連携に失敗した\n            if (authorization_status !== 200) {\n                if (authorization_detail.startsWith('Authorization was denied by user')) {\n                    this.$message.error('Twitter アカウントとの連携がキャンセルされました。');\n                } else if (authorization_detail.startsWith('Failed to get access token')) {\n                    this.$message.error('アクセストークンの取得に失敗しました。');\n                } else if (authorization_detail.startsWith('Failed to get user information')) {\n                    this.$message.error('Twitter アカウントのユーザー情報の取得に失敗しました。');\n                } else {\n                    this.$message.error(`Twitter アカウントとの連携に失敗しました。(${authorization_detail})`);\n                }\n                return;\n            }\n\n            // アカウント情報を強制的に更新\n            await this.userStore.fetchUser(true);\n            if (this.userStore.user === null) {\n                this.$message.error('アカウント情報を取得できませんでした。');\n                return;\n            }\n\n            // ログイン中のユーザーに紐づく Twitter アカウントのうち、一番 updated_at が新しいものを取得\n            // ログインすると updated_at が更新されるため、この時点で一番 updated_at が新しいアカウントが今回連携したものだと判断できる\n            // ref: https://stackoverflow.com/a/12192544/17124142 (ISO8601 のソートアルゴリズム)\n            const current_twitter_account = [...this.userStore.user.twitter_accounts].sort((a, b) => {\n                return (a.updated_at < b.updated_at) ? 1 : ((a.updated_at > b.updated_at) ? -1 : 0);\n            })[0];\n\n            this.$message.success(`Twitter @${current_twitter_account.screen_name} と連携しました。`);\n        },\n\n        async logoutTwitterAccount(screen_name: string) {\n\n            // Twitter アカウント連携解除 API にリクエスト\n            const result = await Twitter.logoutAccount(screen_name);\n            if (result === false) {\n                return;\n            }\n\n            // アカウント情報を強制的に更新\n            await this.userStore.fetchUser(true);\n\n            this.$message.success(`Twitter @${screen_name} との連携を解除しました。`);\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Twitter.vue?vue&type=template&id=56a1ba3a&scoped=true&\"\nimport script from \"./Twitter.vue?vue&type=script&lang=ts&\"\nexport * from \"./Twitter.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Twitter.vue?vue&type=style&index=0&id=56a1ba3a&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"56a1ba3a\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"channels-container channels-container--home\",class:{'channels-container--loading': _vm.is_loading}},[_c('v-tabs-fix',{staticClass:\"channels-tab\",attrs:{\"centered\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channelsStore.channels_list_with_pinned)),function([channels_type,]){return _c('v-tab',{key:channels_type,staticClass:\"channels-tab__item\"},[_vm._v(\" \"+_vm._s(channels_type)+\" \")])}),1),_c('v-tabs-items-fix',{staticClass:\"channels-list\",model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channelsStore.channels_list_with_pinned)),function([channels_type, channels]){return _c('v-tab-item-fix',{key:channels_type,staticClass:\"channels-tabitem\"},[_c('div',{staticClass:\"channels\",class:`channels--tab-${channels_type} channels--length-${channels.length}`},[_vm._l((channels),function(channel){return _c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:channel.id,staticClass:\"channel\",attrs:{\"to\":`/tv/watch/${channel.channel_id}`}},[_c('div',{staticClass:\"channel__broadcaster\"},[_c('img',{staticClass:\"channel__broadcaster-icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${channel.channel_id}/logo`}}),_c('div',{staticClass:\"channel__broadcaster-content\"},[_c('span',{staticClass:\"channel__broadcaster-name\"},[_vm._v(\"Ch: \"+_vm._s(channel.channel_number)+\" \"+_vm._s(channel.channel_name))]),_c('div',{staticClass:\"channel__broadcaster-status\"},[_c('div',{staticClass:\"channel__broadcaster-status-force\",class:`channel__broadcaster-status-force--${_vm.ChannelUtils.getChannelForceType(channel.channel_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"12px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"勢い:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(_vm.ProgramUtils.getAttribute(channel, 'channel_force', '--')))]),_c('span',{staticStyle:{\"margin-left\":\"3px\"}},[_vm._v(\" コメ/分\")])],1),_c('div',{staticClass:\"channel__broadcaster-status-viewers ml-4\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:eye\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"視聴数:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(channel.viewers))])],1)])]),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip\",value:(_vm.isPinnedChannel(channel.channel_id) ? 'ピン留めを外す' : 'ピン留めする'),expression:\"isPinnedChannel(channel.channel_id) ? 'ピン留めを外す' : 'ピン留めする'\"}],staticClass:\"channel__broadcaster-pin\",class:{'channel__broadcaster-pin--pinned': _vm.isPinnedChannel(channel.channel_id)},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.isPinnedChannel(channel.channel_id) ? _vm.removePinnedChannel(channel.channel_id) : _vm.addPinnedChannel(channel.channel_id)},\"mousedown\":function($event){$event.preventDefault();$event.stopPropagation();/* 親要素の波紋が広がらないように */}}},[_c('Icon',{attrs:{\"icon\":\"fluent:pin-20-filled\",\"width\":\"24px\"}})],1)]),_c('div',{staticClass:\"channel__program-present\"},[_c('div',{staticClass:\"channel__program-present-title-wrapper\"},[_c('span',{staticClass:\"channel__program-present-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_present, 'title'))}}),_c('span',{staticClass:\"channel__program-present-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_present)))])]),_c('span',{staticClass:\"channel__program-present-description\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_present, 'description'))}})]),_c('v-spacer'),_c('div',{staticClass:\"channel__program-following\"},[_c('div',{staticClass:\"channel__program-following-title\"},[_c('span',{staticClass:\"channel__program-following-title-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"channel__program-following-title-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}}),_c('span',{staticClass:\"channel__program-following-title-text\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_following, 'title'))}})],1),_c('span',{staticClass:\"channel__program-following-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_following)))])]),_c('div',{staticClass:\"channel__progressbar\"},[_c('div',{staticClass:\"channel__progressbar-progress\",style:(`width:${_vm.ProgramUtils.getProgramProgress(channel.program_present)}%;`)})])],1)}),(channels_type === 'ピン留め' && channels.length === 0)?_c('div',{staticClass:\"pinned-container d-flex justify-center align-center w-100\"},[_c('div',{staticClass:\"d-flex justify-center align-center flex-column\"},[_c('h2',[_vm._v(\"ピン留めされているチャンネルが\"),_c('br'),_vm._v(\"ありません。\")]),_c('div',{staticClass:\"mt-4 text--text text--darken-1\"},[_vm._v(\"各チャンネルの \"),_c('Icon',{staticStyle:{\"position\":\"relative\",\"bottom\":\"-5px\"},attrs:{\"icon\":\"fluent:pin-20-filled\",\"width\":\"22px\"}}),_vm._v(\" アイコンから、よくみる\"),_c('br'),_vm._v(\"チャンネルをこのタブにピン留めできます。\")],1),_c('div',{staticClass:\"mt-2 text--text text--darken-1\"},[_vm._v(\"チャンネルをピン留めすると、\"),_c('br'),_vm._v(\"このタブが最初に表示されます。\")])])]):_vm._e()],2)])}),1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n/** 番組情報を表すインターフェイス */\nexport interface IProgram {\n    id: string;\n    network_id: number;\n    service_id: number;\n    event_id: number;\n    channel_id: string;\n    title: string;\n    description: string;\n    detail: {[key: string]: string};\n    start_time: string;\n    end_time: string;\n    duration: number;\n    is_free: boolean;\n    genre: {major: string; middle: string}[];\n    video_type: string;\n    video_codec: string;\n    video_resolution: string;\n    primary_audio_type: string;\n    primary_audio_language: string;\n    primary_audio_sampling_rate: string;\n    secondary_audio_type: string | null;\n    secondary_audio_language: string | null;\n    secondary_audio_sampling_rate: string | null;\n}\n\n/** 番組情報を表すインターフェイスのデフォルト値 */\nexport const IProgramDefault: IProgram = {\n    id: 'NID0-SID0-EID0',\n    network_id: 0,\n    service_id: 0,\n    event_id: 0,\n    channel_id: 'gr000',\n    title: '取得中…',\n    description: '取得中…',\n    detail: {},\n    start_time: '2000-01-01T00:00:00+09:00',\n    end_time: '2000-01-01T00:00:00+09:00',\n    duration: 0,\n    is_free: true,\n    genre: [],\n    video_type: '映像1080i(1125i)、アスペクト比16:9 パンベクトルなし',\n    video_codec: 'mpeg2',\n    video_resolution: '1080i',\n    primary_audio_type: '2/0モード(ステレオ)',\n    primary_audio_language: '日本語',\n    primary_audio_sampling_rate: '48kHz',\n    secondary_audio_type: null,\n    secondary_audio_language: null,\n    secondary_audio_sampling_rate: null,\n};\n\n// TODO: 番組情報 API が開発されたらここに API 定義を書く\n","\nimport APIClient from '@/services/APIClient';\nimport { IProgram, IProgramDefault } from '@/services/Programs';\n\n\n/** チャンネルタイプの型 */\nexport type ChannelType = 'GR' | 'BS' | 'CS' | 'CATV' | 'SKY' | 'STARDIGIO';\n\n// チャンネルタイプの型 (実際のチャンネルリストに表示される表現)\nexport type ChannelTypePretty = 'ピン留め' | '地デジ' | 'BS' | 'CS' | 'CATV' | 'SKY' | 'StarDigio';\n\n/** すべてのチャンネルタイプのチャンネルの情報を表すインターフェイス */\nexport interface IChannelsList {\n    GR: IChannel[];\n    BS: IChannel[];\n    CS: IChannel[];\n    CATV: IChannel[];\n    SKY: IChannel[];\n    STARDIGIO: IChannel[];\n}\n\n/** チャンネル情報を表すインターフェイス */\nexport interface IChannel {\n    id: string;\n    network_id: number;\n    service_id: number;\n    transport_stream_id: number | null;\n    remocon_id: number | null;\n    channel_id: string;\n    channel_number: string;\n    channel_name: string;\n    channel_type: ChannelType;\n    channel_force: number | null;\n    channel_comment: number | null;\n    is_subchannel: boolean;\n    is_radiochannel: boolean;\n    is_display: boolean;\n    viewers: number;\n    program_present: IProgram;\n    program_following: IProgram;\n}\n\n/** チャンネル情報を表すインターフェイスのデフォルト値 */\nexport const IChannelDefault: IChannel = {\n    id: 'NID0-SID0',\n    network_id: 0,\n    service_id: 0,\n    transport_stream_id: null,\n    remocon_id: null,\n    channel_id: 'gr000',\n    channel_number: '---',\n    channel_name: '取得中…',\n    channel_type: 'GR',\n    channel_force: null,\n    channel_comment: null,\n    is_subchannel: false,\n    is_radiochannel: false,\n    is_display: true,\n    viewers: 0,\n    program_present: IProgramDefault,\n    program_following: IProgramDefault,\n};\n\n/** ニコニコ実況のセッション情報を表すインターフェイス */\nexport interface IJikkyoSession {\n    is_success: boolean;\n    audience_token: string | null;\n    detail: string;\n}\n\n\nclass Channels {\n\n    /**\n     * すべてのチャンネルの情報を取得する\n     * @return すべてのチャンネルの情報\n     */\n    static async fetchAll(): Promise<IChannelsList | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<IChannelsList>('/channels');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'チャンネル情報を取得できませんでした。');\n            return null;\n        }\n\n        return response.data;\n    }\n\n\n    /**\n     * 指定したチャンネルの情報を取得する\n     * 現状、処理の見直しにより使用されていない\n     * @param channel_id チャンネル ID\n     * @return 指定したチャンネルの情報\n     */\n    static async fetch(channel_id: string): Promise<IChannel | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<IChannel>(`/channels/${channel_id}`);\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'チャンネル情報を取得できませんでした。');\n            return null;\n        }\n\n        return response.data;\n    }\n\n\n    /**\n     * 指定したチャンネルに紐づくニコニコ実況のセッション情報を取得する\n     * @param channel_id チャンネル ID\n     * @return 指定したチャンネルに紐づくニコニコ実況のセッション情報\n     */\n    static async fetchJikkyoSession(channel_id: string): Promise<IJikkyoSession | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<IJikkyoSession>(`/channels/${channel_id}/jikkyo`);\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'ニコニコ実況のセッション情報を取得できませんでした。');\n            return null;\n        }\n\n        return response.data;\n    }\n}\n\nexport default Channels;\n","\nimport { defineStore } from 'pinia';\nimport Vue from 'vue';\n\nimport Channels, { ChannelType, ChannelTypePretty, IChannelsList, IChannel, IChannelDefault } from '@/services/Channels';\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils, { ChannelUtils } from '@/utils';\n\n\n/**\n * TV ホーム画面と TV 視聴画面の両方のページでチャンネル情報を共有するためのストア\n * チャンネル情報の API からの取得はかなり重めなので、ページ遷移時に毎回 API リクエストを行うのはパフォーマンスが悪い\n * チャンネル情報をストアに格納しておくことで、TV ホーム画面から TV 視聴画面に遷移したときのパフォーマンスが向上する\n */\nconst useChannelsStore = defineStore('channels', {\n    state: () => ({\n\n        // 現在視聴中のチャンネルの ID (ex: gr011)\n        // 視聴画面のみ有効で、ホーム画面では利用されない\n        channel_id: 'gr000' as string,\n\n        // すべてのチャンネルタイプのチャンネルリスト\n        channels_list: {\n            GR: [],\n            BS: [],\n            CS: [],\n            CATV: [],\n            SKY: [],\n            STARDIGIO: [],\n        } as IChannelsList,\n\n        // 初回のチャンネル情報更新が実行された後かどうか\n        is_channels_list_initial_updated: false,\n\n        // 最終更新日時 (UNIX タイムスタンプ、秒単位)\n        last_updated_at: 0,\n    }),\n    getters: {\n\n        /**\n         * ライブ視聴画面を表示中かどうか\n         * チャンネル情報がセットされているかどうかで判定できる\n         */\n        is_showing_live(): boolean {\n            return this.channel_id !== 'gr000';\n        },\n\n        /**\n         * 前・現在・次のチャンネル情報 (視聴画面用)\n         * チャンネル情報はデータ量がかなり多いので、個別に取得するより一気に取得したほうがループ回数が少なくなりパフォーマンスが良い\n         */\n        channel(): {previous: IChannel; current: IChannel; next: IChannel;} {\n\n            // チャンネルタイプごとのチャンネル情報リストを取得する (すべてのチャンネルリストから探索するより効率的)\n            const channels: IChannel[] | undefined = this.channels_list[ChannelUtils.getChannelType(this.channel_id)];\n\n            // まだチャンネルリストの更新が終わっていないなどの場合で取得できなかった場合、\n            // null を返すと UI 側でのエラー処理が大変なので、暫定的なダミーのチャンネル情報を返す\n            if (channels === undefined || channels.length === 0) {\n                return {\n                    previous: IChannelDefault,\n                    current: IChannelDefault,\n                    next: IChannelDefault,\n                };\n            }\n\n            // 起点にするチャンネル情報があるインデックスを取得\n            const current_channel_index = channels.findIndex((channel) => channel.channel_id === this.channel_id);\n\n            // インデックスが取得できなかった場合も同様に、暫定的なダミーのチャンネル情報を返す\n            if (current_channel_index === -1) {\n                const IProgramError = {\n                    ...IChannelDefault.program_present,\n                    channel_id: 'gr999',\n                    title: 'チャンネル情報取得エラー',\n                    description: 'このチャンネル ID のチャンネル情報は存在しません。',\n                };\n                const IChannelError = {\n                    ...IChannelDefault,\n                    channel_id: 'gr999',  // チャンネル情報が存在しないことを示す特殊なチャンネル ID\n                    channel_name: 'ERROR',\n                    program_present: IProgramError,\n                    program_following: IProgramError,\n                };\n                return {\n                    previous: IChannelError,\n                    current: IChannelError,\n                    next: IChannelError,\n                };\n            }\n\n            // 前のインデックスを取得する\n            // インデックスがマイナスになった時は、最後のインデックスに巻き戻す\n            // channel.is_display が true のチャンネルに到達するまで続ける\n            const previous_channel_index = ((): number => {\n                let index = current_channel_index - 1;\n                while (channels.length) {\n                    if (index <= -1) {\n                        index = channels.length - 1;  // 最後のインデックス\n                    }\n                    if (channels[index].is_display) {\n                        return index;\n                    }\n                    index--;\n                }\n                return 0;\n            })();\n\n            // 次のインデックスを取得する\n            // インデックスが配列の長さを超えた時は、最初のインデックスに巻き戻す\n            // channel.is_display が true のチャンネルに到達するまで続ける\n            const next_channel_index = ((): number => {\n                let index = current_channel_index + 1;\n                while (channels.length) {\n                    if (index >= channels.length) {\n                        index = 0;  // 最初のインデックス\n                    }\n                    if (channels[index].is_display) {\n                        return index;\n                    }\n                    index++;\n                }\n                return 0;\n            })();\n\n            // 前・現在・次のチャンネル情報を返す\n            return {\n                previous: channels[previous_channel_index],\n                current: channels[current_channel_index],\n                next: channels[next_channel_index],\n            };\n        },\n\n        /**\n         * 実際に表示されるチャンネルリストを表すデータ\n         * ピン留めチャンネルのタブを追加するほか、放送していないサブチャンネルはピン留めタブを含めて表示から除外される\n         * また、チャンネルが1つもないチャンネルタイプのタブも表示から除外される\n         * (たとえば SKY (スカパー！プレミアムサービス) のタブは、SKY に属すチャンネルが1つもない（=受信できない）なら表示されない)\n         */\n        channels_list_with_pinned(): Map<ChannelTypePretty, IChannel[]> {\n\n            const settings_store = useSettingsStore();\n\n            // 事前に Map を定義しておく\n            // Map にしていたのは、確か連想配列の順序を保証してくれるからだったはず\n            const channels_list_with_pinned = new Map<ChannelTypePretty, IChannel[]>();\n            channels_list_with_pinned.set('ピン留め', []);\n            channels_list_with_pinned.set('地デジ', []);\n\n            // 初回のチャンネル情報更新がまだ実行されていない or 実行中のときは最低限のこの2つだけで返す\n            if (this.is_channels_list_initial_updated === false) {\n                return channels_list_with_pinned;\n            }\n\n            channels_list_with_pinned.set('BS', []);\n            channels_list_with_pinned.set('CS', []);\n            channels_list_with_pinned.set('CATV', []);\n            channels_list_with_pinned.set('SKY', []);\n            channels_list_with_pinned.set('StarDigio', []);\n\n            // channels_list に格納されているすべてのチャンネルに対しループを回し、\n            // 順次 channels_list_with_pinned に追加していく\n            // 1つのチャンネルに対するループ回数が少なくなる分、毎回 filter() や find() するよりも高速になるはず\n            for (const [channel_type, channels] of Object.entries(this.channels_list)) {\n                for (const channel of channels) {\n\n                    // 放送していないサブチャンネルは除外\n                    if (channel.is_display === false) {\n                        continue;\n                    }\n\n                    // ピン留めしているチャンネルの ID (ex: gr011) が入るリストに含まれていたら、ピン留めタブに追加\n                    if (settings_store.settings.pinned_channel_ids.includes(channel.channel_id)) {\n                        channels_list_with_pinned.get('ピン留め')?.push(channel);\n                    }\n\n                    // チャンネルタイプごとに分類\n                    switch (channel.channel_type) {\n                        case 'GR': {\n                            channels_list_with_pinned.get('地デジ')?.push(channel);\n                            break;\n                        }\n                        case 'BS': {\n                            channels_list_with_pinned.get('BS')?.push(channel);\n                            break;\n                        }\n                        case 'CS': {\n                            channels_list_with_pinned.get('CS')?.push(channel);\n                            break;\n                        }\n                        case 'CATV': {\n                            channels_list_with_pinned.get('CATV')?.push(channel);\n                            break;\n                        }\n                        case 'SKY': {\n                            channels_list_with_pinned.get('SKY')?.push(channel);\n                            break;\n                        }\n                        case 'STARDIGIO': {\n                            channels_list_with_pinned.get('StarDigio')?.push(channel);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            // ピン留めチャンネルを追加順に並び替える\n            for (const channel of [...channels_list_with_pinned.get('ピン留め')!]) {\n                const index = settings_store.settings.pinned_channel_ids.indexOf(channel.channel_id);\n                channels_list_with_pinned.get('ピン留め')![index] = channel;\n            }\n\n            // 最後に、チャンネルが1つもないチャンネルタイプのタブを除外する (ピン留めタブを除く)\n            for (const [channel_type, channels] of channels_list_with_pinned) {\n                if (channel_type === 'ピン留め') {\n                    continue;\n                }\n                if (channels.length === 0) {\n                    channels_list_with_pinned.delete(channel_type);\n                }\n            }\n\n            // ただし、this.channels_list_with_pinned 全体が空でもうピン留めタブしか残っていない場合は、ピン留めタブも削除する\n            if (channels_list_with_pinned.size === 1 && channels_list_with_pinned.has('ピン留め')) {\n                channels_list_with_pinned.delete('ピン留め');\n            }\n\n            return channels_list_with_pinned;\n        },\n\n        /**\n         * 視聴画面向けの channels_list_with_pinned\n         * 視聴画面ではピン留めされているチャンネルが1つもないときは、ピン留めタブを表示する必要性がないため削除される\n         */\n        channels_list_with_pinned_for_watch(): Map<ChannelTypePretty, IChannel[]> {\n            const channels_list_with_pinned = new Map([...this.channels_list_with_pinned]);\n            if (channels_list_with_pinned.get('ピン留め')?.length === 0) {\n                channels_list_with_pinned.delete('ピン留め');\n            }\n            return channels_list_with_pinned;\n        }\n    },\n    actions: {\n\n        /**\n         * 指定されたチャンネル ID のチャンネル情報を取得する\n         * @param channel_id 取得するチャンネル ID (ex: gr011)\n         * @returns チャンネル情報\n         */\n        getChannel(channel_id: string): IChannel | null {\n\n            // チャンネルタイプごとのチャンネル情報リストを取得する (すべてのチャンネルリストから探索するより効率的)\n            const channels = this.channels_list[ChannelUtils.getChannelType(channel_id)];\n            if (channels === undefined) {\n                return null;\n            }\n\n            // チャンネル ID が一致するチャンネル情報を返す\n            return channels.find(channel => channel.channel_id === channel_id) ?? null;\n        },\n\n        /**\n         * チャンネルタイプとリモコン番号からチャンネル情報を取得する\n         * @param channel_type チャンネルタイプ\n         * @param remocon_id リモコン番号\n         * @returns チャンネル情報 (見つからなかった場合は null)\n         */\n        getChannelByRemoconID(channel_type: ChannelType, remocon_id: number): IChannel | null {\n\n            // 指定されたチャンネルタイプのチャンネルを取得\n            const channels = this.channels_list[channel_type];\n\n            // リモコン番号が一致するチャンネルを取得\n            const channel = channels.find((channel) => channel.remocon_id === remocon_id);\n\n            // リモコン番号が一致するチャンネルを見つけられなかった場合は null を返す\n            return channel ?? null;\n        },\n\n        /**\n         * 指定されたチャンネル ID のチャンネル情報を更新する\n         * 今のところ viewers (視聴者数) を更新する目的でしか使っていない\n         * @param channel_id 更新するチャンネル ID (ex: gr011)\n         * @param channel 更新後のチャンネル情報\n         */\n        updateChannel(channel_id: string, channel: IChannel): void {\n\n            // チャンネルタイプごとのチャンネル情報リストを取得する (すべてのチャンネルリストから探索するより効率的)\n            const channel_type = ChannelUtils.getChannelType(channel_id);\n            if (this.channels_list[channel_type] === undefined) {\n                return null;\n            }\n\n            // チャンネル ID が一致するチャンネル情報を更新する\n            const index = this.channels_list[channel_type].findIndex(channel => channel.channel_id === channel_id);\n            if (index === -1) {\n                return;\n            }\n            // リアクティブにするために Vue.set を使う\n            Vue.set(this.channels_list[channel_type], index, channel);\n        },\n\n        /**\n         * チャンネルリストを更新する\n         * @param force 強制的に更新するかどうか\n         */\n        async update(force: boolean = false): Promise<void> {\n\n            const update = async () => {\n\n                // 最新のすべてのチャンネルの情報を取得\n                const channels_list = await Channels.fetchAll();\n                if (channels_list === null) {\n                    return;\n                }\n\n                this.channels_list = channels_list;\n                this.is_channels_list_initial_updated = true;\n                this.last_updated_at = Utils.time();\n            };\n\n            // すでに取得されている場合は更新しない\n            if (this.is_channels_list_initial_updated === true && force === false) {\n\n                // ただし、最終更新日時が1分以上前の場合は非同期で更新する\n                if (Utils.time() - this.last_updated_at > 60) {\n                    update();\n                }\n\n                return;\n            }\n\n            // チャンネルリストの更新を行う\n            await update();\n        }\n    }\n});\n\nexport default useChannelsStore;\n","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport useChannelsStore from '@/store/ChannelsStore';\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils, { ChannelUtils, ProgramUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'TV-Home',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            ChannelUtils: ChannelUtils,\n            ProgramUtils: ProgramUtils,\n\n            // タブの状態管理\n            tab: null as number | null,\n\n            // ローディング中かどうか\n            is_loading: true,\n\n            // インターバル ID\n            // ページ遷移時に setInterval(), setTimeout() の実行を止めるのに使う\n            // setInterval(), setTimeout() の返り値を登録する\n            interval_ids: [] as number[],\n        };\n    },\n    computed: {\n        // ChannelsStore / SettingsStore に this.channelsStore / this.settingsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useChannelsStore, useSettingsStore),\n    },\n    // 開始時に実行\n    async created() {\n\n        // ピン留めされているチャンネルの ID が空なら、タブを地デジタブに切り替える\n        // ピン留めができる事を示唆するためにピン留めタブ自体は残す\n        if (this.settingsStore.settings.pinned_channel_ids.length === 0) {\n            this.tab = 1;\n        }\n\n        // 00秒までの残り秒数を取得\n        // 現在 16:01:34 なら 26 (秒) になる\n        const residue_second = 60 - new Date().getSeconds();\n\n        // 00秒になるまで待ってから実行するタイマー\n        // 番組は基本1分単位で組まれているため、20秒や45秒など中途半端な秒数で更新してしまうと番組情報の反映が遅れてしまう\n        this.interval_ids.push(window.setTimeout(() => {\n\n            // この時点で00秒なので、チャンネル情報を更新\n            this.channelsStore.update(true);\n\n            // 以降、30秒おきにチャンネル情報を更新\n            this.interval_ids.push(window.setInterval(() => this.channelsStore.update(true), 30 * 1000));\n\n        }, residue_second * 1000));\n\n        // チャンネル情報を更新 (初回)\n        await this.channelsStore.update();\n\n        // 少しだけ待つ\n        // v-tabs-slider-wrapper をアニメーションさせないために必要\n        await Utils.sleep(0.01);\n\n        // この時点でピン留めされているチャンネルがないなら、タブを地デジタブに切り替える\n        // ピン留めされているチャンネル自体はあるが、現在放送されていないため表示できない場合に備える\n        if (this.channelsStore.channels_list_with_pinned.get('ピン留め').length === 0) {\n            this.tab = 1;\n        }\n\n        // チャンネル情報の更新が終わったタイミングでローディング状態を解除する\n        this.is_loading = false;\n    },\n    // 終了前に実行\n    beforeDestroy() {\n\n        // clearInterval() ですべての setInterval(), setTimeout() の実行を止める\n        // clearInterval() と clearTimeout() は中身共通なので問題ない\n        for (const interval_id of this.interval_ids) {\n            window.clearInterval(interval_id);\n        }\n    },\n    methods: {\n\n        // チャンネルをピン留めする\n        addPinnedChannel(channel_id: string) {\n\n            // ピン留めするチャンネルの ID を追加 (保存は自動で行われる)\n            this.settingsStore.settings.pinned_channel_ids.push(channel_id);\n\n            const channel = this.channelsStore.getChannel(channel_id);\n            this.$message.show(`${channel.channel_name}をピン留めしました。`);\n        },\n\n        // チャンネルをピン留めから外す\n        removePinnedChannel(channel_id: string) {\n\n            // ピン留めを外すチャンネルの ID を削除 (保存は自動で行われる)\n            this.settingsStore.settings.pinned_channel_ids.splice(this.settingsStore.settings.pinned_channel_ids.indexOf(channel_id), 1);\n\n            // この時点でピン留めされているチャンネルがないなら、タブを地デジタブに切り替える\n            if (this.channelsStore.channels_list_with_pinned.get('ピン留め').length === 0) {\n                this.tab = 1;\n            }\n\n            const channel = this.channelsStore.getChannel(channel_id);\n            this.$message.show(`${channel.channel_name}のピン留めを外しました。`);\n        },\n\n        // チャンネルがピン留めされているか\n        isPinnedChannel(channel_id: string): boolean {\n\n            // 引数のチャンネルがピン留めリストに存在するかを返す\n            return this.settingsStore.settings.pinned_channel_ids.includes(channel_id);\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=5395b00e&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=ts&\"\nexport * from \"./Home.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=5395b00e&prod&lang=scss&\"\nimport style1 from \"./Home.vue?vue&type=style&index=1&id=5395b00e&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5395b00e\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('main',{staticClass:\"watch-container\",class:{\n            'watch-container--control-display': _vm.is_control_display,\n            'watch-container--panel-display': _vm.Utils.isSmartphoneVertical() ? true : _vm.is_panel_display,\n            'watch-container--fullscreen': _vm.is_fullscreen,\n        }},[_c('nav',{staticClass:\"watch-navigation\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event)},\"click\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"watch-navigation__icon\",attrs:{\"to\":\"/tv/\"}},[_c('img',{staticClass:\"watch-navigation__icon-image\",attrs:{\"src\":\"/assets/images/icon.svg\",\"width\":\"23px\"}})]),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('テレビをみる'),expression:\"'テレビをみる'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/tv/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('ビデオをみる'),expression:\"'ビデオをみる'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/videos/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('番組表'),expression:\"'番組表'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/timetable/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:calendar-ltr-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('録画予約'),expression:\"'録画予約'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/reserves/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",staticStyle:{\"padding\":\"0.5px\"},attrs:{\"icon\":\"fluent:timer-16-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('マイリスト'),expression:\"'マイリスト'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/mylist/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"ic:round-playlist-play\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('キャプチャ'),expression:\"'キャプチャ'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/captures/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:image-multiple-24-regular\",\"width\":\"26px\"}})],1),_c('v-spacer'),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('設定'),expression:\"'設定'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/settings/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"26px\"}})],1)],1),_c('div',{staticClass:\"watch-content\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event, true)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event, true)},\"click\":function($event){return _vm.controlDisplayTimer($event, true)}}},[_c('header',{staticClass:\"watch-header\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"watch-header__back-icon\",attrs:{\"to\":\"/tv/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('img',{staticClass:\"watch-header__broadcaster\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.channelsStore.channel_id)}/logo`}}),_c('span',{staticClass:\"watch-header__program-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channelsStore.channel.current.program_present, 'title'))}}),_c('span',{staticClass:\"watch-header__program-time\"},[_vm._v(\" \"+_vm._s(_vm.ProgramUtils.getProgramTime(_vm.channelsStore.channel.current.program_present, true))+\" \")]),_c('v-spacer'),_c('span',{staticClass:\"watch-header__now\"},[_vm._v(_vm._s(_vm.time))])],1),_c('div',{staticClass:\"watch-player\",class:{\n                'watch-player--loading': _vm.is_loading,\n                'watch-player--virtual-keyboard-display': _vm.is_virtual_keyboard_display && _vm.Utils.hasActiveElementClass('dplayer-comment-input'),\n            }},[_c('div',{staticClass:\"watch-player__background-wrapper\"},[_c('div',{staticClass:\"watch-player__background\",class:{'watch-player__background--display': _vm.is_background_display},style:({backgroundImage: `url(${_vm.background_url})`})},[_c('img',{staticClass:\"watch-player__background-logo\",attrs:{\"src\":\"/assets/images/logo.svg\"}})])]),_c('v-progress-circular',{staticClass:\"watch-player__buffering\",class:{'watch-player__buffering--display': _vm.is_video_buffering && (_vm.is_loading || (_vm.player !== null && !_vm.player.video.paused))},attrs:{\"indeterminate\":\"\",\"size\":\"60\",\"width\":\"6\"}}),_c('div',{staticClass:\"watch-player__dplayer\"}),_c('div',{staticClass:\"watch-player__button\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event)},\"click\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.top\",value:('前のチャンネル'),expression:\"'前のチャンネル'\",modifiers:{\"top\":true}}],staticClass:\"switch-button switch-button-up\",on:{\"click\":function($event){_vm.is_zapping = true; _vm.$router.push({path: `/tv/watch/${_vm.channelsStore.channel.previous.channel_id}`})}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:ios-arrow-left-24-filled\",\"width\":\"32px\",\"rotate\":\"1\"}})],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"switch-button switch-button-panel switch-button-panel--open\",on:{\"click\":function($event){_vm.is_panel_display = !_vm.is_panel_display}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:navigation-16-filled\",\"width\":\"32px\"}})],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.bottom\",value:('次のチャンネル'),expression:\"'次のチャンネル'\",modifiers:{\"bottom\":true}}],staticClass:\"switch-button switch-button-down\",on:{\"click\":function($event){_vm.is_zapping = true; _vm.$router.push({path: `/tv/watch/${_vm.channelsStore.channel.next.channel_id}`})}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:ios-arrow-right-24-filled\",\"width\":\"33px\",\"rotate\":\"1\"}})],1)])],1)]),_c('div',{staticClass:\"watch-panel\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('div',{staticClass:\"watch-panel__header\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-close-button\",on:{\"click\":function($event){_vm.is_panel_display = false}}},[_c('Icon',{staticClass:\"panel-close-button__icon\",attrs:{\"icon\":\"akar-icons:chevron-right\",\"width\":\"25px\"}}),_c('span',{staticClass:\"panel-close-button__text\"},[_vm._v(\"閉じる\")])],1),_c('v-spacer'),_c('div',{staticClass:\"panel-broadcaster\"},[_c('img',{staticClass:\"panel-broadcaster__icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.channelsStore.channel_id)}/logo`}}),_c('div',{staticClass:\"panel-broadcaster__number\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.channel_number))]),_c('div',{staticClass:\"panel-broadcaster__name\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.channel_name))])])],1),_c('div',{staticClass:\"watch-panel__content-container\"},[_c('Program',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Program'}}),_c('Channel',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Channel'}}),_c('Comment',{ref:\"Comment\",staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Comment'},attrs:{\"channel\":_vm.channelsStore.channel.current,\"player\":_vm.player}}),_c('Twitter',{ref:\"Twitter\",staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Twitter'},attrs:{\"player\":_vm.player,\"is_virtual_keyboard_display\":_vm.is_virtual_keyboard_display},on:{\"panel_folding_requested\":function($event){_vm.is_panel_display = false}}})],1),_c('div',{staticClass:\"watch-panel__navigation\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Program'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Program'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-solid:info-circle\",\"width\":\"33px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"番組情報\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Channel'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Channel'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-solid:broadcast-tower\",\"width\":\"34px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"チャンネル\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Comment'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Comment'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"29px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"コメント\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Twitter'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Twitter'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"34px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"Twitter\")])],1)])])]),_c('v-dialog',{attrs:{\"max-width\":\"1000\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.shortcut_key_modal),callback:function ($$v) {_vm.shortcut_key_modal=$$v},expression:\"shortcut_key_modal\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"px-5 pt-4 pb-3 d-flex align-center font-weight-bold\"},[_c('Icon',{attrs:{\"icon\":\"fluent:keyboard-20-filled\",\"height\":\"28px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"キーボードショートカット\")]),_c('v-spacer'),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"d-flex align-center rounded-circle cursor-pointer px-2 py-2\",on:{\"click\":function($event){_vm.shortcut_key_modal = false}}},[_c('Icon',{attrs:{\"icon\":\"fluent:dismiss-12-filled\",\"width\":\"23px\",\"height\":\"23px\"}})],1)],1),_c('div',{staticClass:\"px-5 pb-4\"},[_c('v-row',_vm._l((_vm.shortcut_key_list),function(shortcut_key_column,shortcut_key_column_name){return _c('v-col',{key:shortcut_key_column_name,attrs:{\"cols\":\"6\"}},_vm._l((shortcut_key_column),function(shortcut_keys){return _c('div',{key:shortcut_keys.name,staticClass:\"mt-3\"},[_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold\"},[_c('Icon',{attrs:{\"icon\":shortcut_keys.icon,\"height\":shortcut_keys.icon_height}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(_vm._s(shortcut_keys.name))])],1),_vm._l((shortcut_keys.shortcuts),function(shortcut){return _c('div',{key:shortcut.name,staticClass:\"mt-3\"},[_c('div',{staticClass:\"text-subtitle-2 mt-2 d-flex align-center font-weight-medium\"},[_c('span',{staticClass:\"mr-2\",domProps:{\"innerHTML\":_vm._s(shortcut.name)}}),_c('div',{staticClass:\"ml-auto d-flex align-center flex-shrink-0\"},_vm._l((shortcut.keys),function(key,index){return _c('div',{key:key.name,staticClass:\"ml-auto d-flex align-center\"},[_c('span',{staticClass:\"shortcut-key\"},[_vm._l((key.name.split(';')),function(key_name){return _c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(key.icon === true),expression:\"key.icon === true\"}],key:key_name,attrs:{\"icon\":key_name,\"height\":\"18px\"}})}),(key.icon === false)?_c('span',{domProps:{\"innerHTML\":_vm._s(key.name)}}):_vm._e()],2),(index < (shortcut.keys.length - 1))?_c('span',{staticClass:\"shortcut-key-plus\"},[_vm._v(\"+\")]):_vm._e()])}),0)])])})],2)}),0)}),1)],1)],1)],1),_c('BottomNavigation')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"channels-container channels-container--watch\"},[_c('v-tabs-fix',{staticClass:\"channels-tab\",attrs:{\"centered\":\"\",\"show-arrows\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channelsStore.channels_list_with_pinned_for_watch)),function([channels_type,]){return _c('v-tab',{key:channels_type,staticClass:\"channels-tab__item\"},[_vm._v(\" \"+_vm._s(channels_type)+\" \")])}),1),_c('div',{staticClass:\"channels-list-container\"},[_c('v-tabs-items-fix',{staticClass:\"channels-list\",model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channelsStore.channels_list_with_pinned_for_watch)),function([channels_type, channels]){return _c('v-tab-item-fix',{key:channels_type,staticClass:\"channels\"},_vm._l((channels),function(channel){return _c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:channel.id,staticClass:\"channel\",attrs:{\"to\":`/tv/watch/${channel.channel_id}`}},[_c('div',{staticClass:\"channel__broadcaster\"},[_c('img',{staticClass:\"channel__broadcaster-icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${channel.channel_id}/logo`}}),_c('div',{staticClass:\"channel__broadcaster-content\"},[_c('span',{staticClass:\"channel__broadcaster-name\"},[_vm._v(\"Ch: \"+_vm._s(channel.channel_number)+\" \"+_vm._s(channel.channel_name))]),_c('div',{staticClass:\"channel__broadcaster-force\",class:`channel__broadcaster-force--${_vm.ChannelUtils.getChannelForceType(channel.channel_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"11px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(_vm.ProgramUtils.getAttribute(channel, 'channel_force', '-')))])],1)])]),_c('div',{staticClass:\"channel__program-present\"},[_c('span',{staticClass:\"channel__program-present-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_present, 'title'))}}),_c('span',{staticClass:\"channel__program-present-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_present)))])]),_c('div',{staticClass:\"channel__program-following\"},[_c('div',{staticClass:\"channel__program-following-title\"},[_c('span',{staticClass:\"channel__program-following-title-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"channel__program-following-title-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}}),_c('span',{staticClass:\"channel__program-following-title-text\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_following, 'title'))}})],1),_c('span',{staticClass:\"channel__program-following-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_following)))])]),_c('div',{staticClass:\"channel__progressbar\"},[_c('div',{staticClass:\"channel__progressbar-progress\",style:(`width:${_vm.ProgramUtils.getProgramProgress(channel.program_present)}%;`)})])])}),1)}),1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport useChannelsStore from '@/store/ChannelsStore';\nimport Utils, { ChannelUtils, ProgramUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'Panel-ChannelTab',\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            ChannelUtils: ChannelUtils,\n            ProgramUtils: ProgramUtils,\n\n            // タブの状態管理\n            tab: null,\n        };\n    },\n    computed: {\n        // ChannelsStore に this.channelsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useChannelsStore),\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Channel.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Channel.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Channel.vue?vue&type=template&id=3b3e1928&scoped=true&\"\nimport script from \"./Channel.vue?vue&type=script&lang=ts&\"\nexport * from \"./Channel.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Channel.vue?vue&type=style&index=0&id=3b3e1928&prod&lang=scss&\"\nimport style1 from \"./Channel.vue?vue&type=style&index=1&id=3b3e1928&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3b3e1928\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"comment-container\"},[_c('section',{staticClass:\"comment-header\"},[_c('h2',{staticClass:\"comment-header__title\"},[_c('Icon',{staticClass:\"comment-header__title-icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"height\":\"18.5px\"}}),_c('span',{staticClass:\"comment-header__title-text\"},[_vm._v(\"コメント\")])],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"comment-header__button ml-auto\",on:{\"click\":function($event){_vm.comment_mute_settings_modal = !_vm.comment_mute_settings_modal}}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"11px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ミュート設定\")])],1)]),_c('section',{ref:\"comment_list_wrapper\",staticClass:\"comment-list-wrapper\"},[_c('div',{staticClass:\"comment-list-dropdown\",class:{'comment-list-dropdown--display': _vm.is_comment_list_dropdown_display},style:({'--comment-list-dropdown-top': `${_vm.comment_list_dropdown_top}px`})},[_c('v-list',{staticStyle:{\"background\":\"var(--v-background-lighten1)\"}},[_c('v-list-item',{staticStyle:{\"min-height\":\"30px\"},attrs:{\"dense\":\"\"},on:{\"click\":function($event){return _vm.addMutedKeywords()}}},[_c('v-list-item-title',{staticClass:\"d-flex align-center\"},[_c('Icon',{attrs:{\"icon\":\"fluent:comment-dismiss-20-filled\",\"width\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"このコメントをミュート\")])],1)],1),_c('v-list-item',{staticStyle:{\"min-height\":\"30px\"},attrs:{\"dense\":\"\"},on:{\"click\":function($event){return _vm.addMutedNiconicoUserIds()}}},[_c('v-list-item-title',{staticClass:\"d-flex align-center\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-prohibited-20-filled\",\"width\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"このコメントの投稿者をミュート\")])],1)],1)],1)],1),_c('div',{staticClass:\"comment-list-cover\",class:{'comment-list-cover--display': _vm.is_comment_list_dropdown_display},on:{\"click\":function($event){return _vm.hideCommentListDropdown()}}}),_c('DynamicScroller',{staticClass:\"comment-list\",attrs:{\"direction\":'vertical',\"items\":_vm.comment_list,\"min-item-size\":34},scopedSlots:_vm._u([{key:\"default\",fn:function({item, active}){return [_c('DynamicScrollerItem',{attrs:{\"item\":item,\"active\":active,\"size-dependencies\":[item.text]}},[_c('div',{staticClass:\"comment\",class:{'comment--my-post': item.my_post}},[_c('span',{staticClass:\"comment__text\"},[_vm._v(_vm._s(item.text))]),_c('span',{staticClass:\"comment__time\"},[_vm._v(_vm._s(item.time))]),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\",value:(!_vm.Utils.isTouchDevice()),expression:\"!Utils.isTouchDevice()\"}],staticClass:\"comment__icon\",on:{\"mouseup\":function($event){return _vm.showCommentListDropdown($event, item)},\"touchend\":function($event){return _vm.showCommentListDropdown($event, item)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:more-vertical-20-filled\",\"width\":\"20px\"}})],1)])])]}}])}),(_vm.initialize_failed_message === null && _vm.comment_list.length === 0)?_c('div',{staticClass:\"comment-announce\"},[_c('div',{staticClass:\"comment-announce__heading\"},[_vm._v(\"まだコメントがありません。\")]),_vm._m(0)]):_vm._e(),(_vm.initialize_failed_message !== null && _vm.comment_list.length === 0)?_c('div',{staticClass:\"comment-announce\"},[_c('div',{staticClass:\"comment-announce__heading\"},[_vm._v(\"コメントがありません。\")]),_c('div',{staticClass:\"comment-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(_vm._s(_vm.initialize_failed_message))])])]):_vm._e()],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"comment-scroll-button elevation-5\",class:{'comment-scroll-button--display': _vm.is_manual_scroll},on:{\"click\":function($event){_vm.is_manual_scroll = false; _vm.scrollCommentList(true);}}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-down-12-filled\",\"height\":\"29px\"}})],1),_c('CommentMuteSettings',{model:{value:(_vm.comment_mute_settings_modal),callback:function ($$v) {_vm.comment_mute_settings_modal=$$v},expression:\"comment_mute_settings_modal\"}})],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"comment-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(\"このチャンネルに対応するニコニコ実況のコメントが、リアルタイムで表示されます。\")])])\n}]\n\nexport { render, staticRenderFns }","\nimport dayjs from 'dayjs';\nimport DPlayer from 'dplayer';\nimport * as DPlayerType from 'dplayer/dist/d.ts/types/DPlayer';\n\nimport Channels from '@/services/Channels';\nimport Utils, { CommentUtils } from '@/utils';\n\n\nexport interface ICommentData {\n    id: number;\n    text: string;\n    time: string;\n    user_id: string;\n    my_post: boolean;\n}\n\ninterface IWatchSessionResult {\n    is_success: boolean;\n    detail: string;\n    message_server_url?: string;\n    thread_id?: string;\n    your_post_key?: string;\n}\n\n\nclass LiveCommentManager {\n\n    // 視聴セッションの WebSocket のインスタンス\n    private watch_session: WebSocket | null = null;\n    // コメントセッションの WebSocket のインスタンス\n    private comment_session: WebSocket | null = null;\n    // vpos を計算する基準となる時刻のタイムスタンプ\n    private vpos_base_timestamp: number = 0;\n    // 座席維持用のタイマーのインターバル ID\n    private keep_seat_interval_id: number | null = null;\n    // destroy() 時に EventListener を全解除するための AbortController\n    private abort_controller: AbortController = new AbortController();\n\n    private player: DPlayer;\n    private channel_id: string;\n    private on_initial_comments_received: (initial_comments: ICommentData[]) => void;\n    private on_comment_received: (comment: ICommentData) => void;\n\n    constructor(\n        player: DPlayer,\n        channel_id: string,\n        on_initial_comments_received: (initial_comments: ICommentData[]) => void,\n        on_comment_received: (comment: ICommentData) => void,\n    ) {\n        this.player = player;\n        this.channel_id = channel_id;\n        this.on_initial_comments_received = on_initial_comments_received;\n        this.on_comment_received = on_comment_received;\n    }\n\n\n    /**\n     * ニコニコ実況に接続し、セッションを初期化する\n     * 初期化に成功した場合は、随時コールバックにニコニコ実況から受信したコメントが渡される\n     * @returns セッションの初期化に成功したかどうか\n     */\n    public async initSession(): Promise<{\n        is_success: boolean;\n        detail: string;\n    }> {\n\n        // 視聴セッションを初期化\n        const watch_session_result = await this.initWatchSession();\n        if (watch_session_result.is_success === false) {\n            return {\n                is_success: false,\n                detail: watch_session_result.detail,\n            };\n        }\n\n        // 視聴セッションを初期化できた場合のみ、\n        // 取得したコメントサーバーへの接続情報を使い、非同期でコメントセッションを初期化\n        this.initCommentSession(watch_session_result);\n\n        return {\n            is_success: true,\n            detail: '視聴セッションを初期化しました。',\n        };\n    }\n\n\n    /**\n     * 視聴セッションを初期化する\n     * @returns コメントサーバーへの接続情報 or エラー情報\n     */\n    private async initWatchSession(): Promise<IWatchSessionResult> {\n\n        // サーバーから disconnect メッセージが送られてきた際のフラグ\n        let is_disconnect_message_received = false;\n\n        // セッション情報を取得\n        const watch_session_info = await Channels.fetchJikkyoSession(this.channel_id);\n        if (watch_session_info === null) {\n            return {\n                is_success: false,\n                detail: 'ニコニコ実況のセッション情報を取得できませんでした。',\n            };\n        }\n        if (watch_session_info.is_success === false) {\n            console.error(`[LiveCommentManager][WatchSession] Error: ${watch_session_info.detail}`);\n            // 通常発生しないエラーメッセージ (サーバーエラーなど) はプレイヤー側にも通知する\n            if ((watch_session_info.detail !== 'このチャンネルはニコニコ実況に対応していません。') &&\n                (watch_session_info.detail !== '現在放送中のニコニコ実況がありません。')) {\n                this.player.notice(watch_session_info.detail);\n            }\n            return {\n                is_success: false,\n                detail: watch_session_info.detail,\n            };\n        }\n\n        // 視聴セッション WebSocket を開く\n        this.watch_session = new WebSocket(watch_session_info.audience_token);\n\n        // 視聴セッションの接続が開かれたとき\n        this.watch_session.addEventListener('open', () => {\n\n            // 視聴セッションをリクエスト\n            // 公式ドキュメントいわく、stream フィールドは Optional らしい\n            // サーバー負荷軽減のため、映像が不要な場合は必ず省略してくださいとのこと\n            this.watch_session?.send(JSON.stringify({\n                type: 'startWatching',\n                data: {\n                    'reconnect': false,\n                },\n            }));\n\n        }, { signal: this.abort_controller.signal });\n\n        // 視聴セッションの接続が閉じられたとき（ネットワークが切断された場合など）\n        this.watch_session.addEventListener('close', async (event) => {\n\n            // すでに disconnect メッセージが送られてきている場合は何もしない\n            if (is_disconnect_message_received === true) {\n                return;\n            }\n\n            // 接続切断の理由を表示\n            console.error(`[LiveCommentManager][WatchSession] Connection closed. (Code: ${event.code})`);\n            this.player.notice(`ニコニコ実況との接続が切断されました。(Code: ${event.code})`);\n\n            // 10 秒ほど待ってから再接続する\n            // ニコ生側から切断された場合と異なりネットワークが切断された可能性が高いので、間を多めに取る\n            await Utils.sleep(10);\n            await this.reconnect();\n\n        }, { signal: this.abort_controller.signal });\n\n        // 視聴セッション WebSocket からメッセージを受信したとき\n        // 視聴セッションはコメント送信時のために維持し続ける必要がある\n        // 以下はいずれも視聴セッションを維持し続けたり、エラーが発生した際に再接続するための処理\n        this.watch_session.addEventListener('message', async (event) => {\n\n            // 各メッセージタイプに対応する処理を実行\n            const message = JSON.parse(event.data);\n            switch (message.type) {\n\n                // 座席情報\n                case 'seat': {\n                    // すでにタイマーが設定されている場合は何もしない\n                    if (this.keep_seat_interval_id !== null) {\n                        break;\n                    }\n                    // keepIntervalSec の秒数ごとに keepSeat を送信して座席を維持する\n                    this.keep_seat_interval_id = window.setInterval(() => {\n                        if (this.watch_session && this.watch_session.readyState === WebSocket.OPEN) {\n                            // セッションがまだ開いていれば、座席を維持する\n                            this.watch_session.send(JSON.stringify({type: 'keepSeat'}));\n                        } else {\n                            // セッションが閉じられている場合は、タイマーを停止する\n                            window.clearInterval(this.keep_seat_interval_id ?? 0);\n                        }\n                    }, message.data.keepIntervalSec * 1000);\n                    break;\n                }\n\n                // ping-pong\n                case 'ping': {\n                    // pong を返してセッションを維持する\n                    // 送り返さなかった場合、勝手にセッションが閉じられてしまう\n                    this.watch_session.send(JSON.stringify({type: 'pong'}));\n                    break;\n                }\n\n                // エラー情報\n                case 'error': {\n                    // COMMENT_POST_NOT_ALLOWED と INVALID_MESSAGE に関しては sendComment() の方で処理するので、ここでは何もしない\n                    if (message.data.code === 'COMMENT_POST_NOT_ALLOWED' || message.data.code === 'INVALID_MESSAGE') {\n                        break;\n                    }\n\n                    let error = `ニコニコ実況でエラーが発生しています。(Code: ${message.data.code})`;\n                    switch (message.data.code) {\n                        case 'CONNECT_ERROR':\n                            error = 'ニコニコ実況のコメントサーバーに接続できません。';\n                            break;\n                        case 'CONTENT_NOT_READY':\n                            error = 'ニコニコ実況が配信できない状態です。';\n                            break;\n                        case 'NO_THREAD_AVAILABLE':\n                            error = 'ニコニコ実況のコメントスレッドを取得できません。';\n                            break;\n                        case 'NO_ROOM_AVAILABLE':\n                            error = 'ニコニコ実況のコメント部屋を取得できません。';\n                            break;\n                        case 'NO_PERMISSION':\n                            error = 'ニコニコ実況の API にアクセスする権限がありません。';\n                            break;\n                        case 'NOT_ON_AIR':\n                            error = 'ニコニコ実況が放送中ではありません。';\n                            break;\n                        case 'BROADCAST_NOT_FOUND':\n                            error = 'ニコニコ実況の配信情報を取得できません。';\n                            break;\n                        case 'INTERNAL_SERVERERROR':\n                            error = 'ニコニコ実況でサーバーエラーが発生しています。';\n                            break;\n                    }\n\n                    // エラー情報を表示\n                    console.error(`[LiveCommentManager][WatchSession] Error occurred. (Code: ${message.data.code})`);\n                    this.player.notice(error);\n\n                    // 5 秒ほど待ってから再接続する\n                    await Utils.sleep(5);\n                    await this.reconnect();\n                    break;\n                }\n\n                // 再接続を求められた\n                case 'reconnect': {\n                    // waitTimeSec に記載の秒数だけ待ってから再接続する\n                    // 公式ドキュメントには reconnect で送られてくる audienceToken で再接続しろと書いてあるんだけど、\n                    // 確実性的な面で実装が面倒なので当面このままにしておく\n                    await this.reconnect();\n                    break;\n                }\n\n                // 視聴セッションが閉じられた（4時のリセットなど）\n                case 'disconnect': {\n                    // 実際に接続が閉じられる前に disconnect メッセージが送られてきたので、\n                    // WebSocket の close メッセージを実行させないようにする\n                    is_disconnect_message_received = true;\n\n                    // 接続切断の理由\n                    let disconnect_reason = `ニコニコ実況との接続が切断されました。(${message.data.reason})`;\n                    switch (message.data.reason) {\n                        case 'TAKEOVER':\n                            disconnect_reason = 'ニコニコ実況の番組から追い出されました。';\n                            break;\n                        case 'NO_PERMISSION':\n                            disconnect_reason = 'ニコニコ実況の番組の座席を取得できませんでした。';\n                            break;\n                        case 'END_PROGRAM':\n                            disconnect_reason = 'ニコニコ実況がリセットされたか、コミュニティの番組が終了しました。';\n                            break;\n                        case 'PING_TIMEOUT':\n                            disconnect_reason = 'コメントサーバーとの接続生存確認に失敗しました。';\n                            break;\n                        case 'TOO_MANY_CONNECTIONS':\n                            disconnect_reason = 'ニコニコ実況の同一ユーザからの接続数上限を越えています。';\n                            break;\n                        case 'TOO_MANY_WATCHINGS':\n                            disconnect_reason = 'ニコニコ実況の同一ユーザからの視聴番組数上限を越えています。';\n                            break;\n                        case 'CROWDED':\n                            disconnect_reason = 'ニコニコ実況の番組が満席です。';\n                            break;\n                        case 'MAINTENANCE_IN':\n                            disconnect_reason = 'ニコニコ実況はメンテナンス中です。';\n                            break;\n                        case 'SERVICE_TEMPORARILY_UNAVAILABLE':\n                            disconnect_reason = 'ニコニコ実況で一時的にサーバーエラーが発生しています。';\n                            break;\n                    }\n\n                    // 接続切断の理由を表示\n                    console.error(`[LiveCommentManager][WatchSession] Disconnected. (Reason: ${message.data.reason})`);\n                    this.player.notice(disconnect_reason);\n\n                    // 5 秒ほど待ってから再接続する\n                    await Utils.sleep(5);\n                    await this.reconnect();\n                    break;\n                }\n            }\n\n        }, { signal: this.abort_controller.signal });\n\n        // コメントサーバーへの接続情報を返す\n        // イベント内で値を返すため、Promise で包む\n        return new Promise((resolve) => {\n            this.watch_session.addEventListener('message', async (event) => {\n                const message = JSON.parse(event.data);\n                if (message.type === 'room') {\n\n                    // vpos の基準時刻のタイムスタンプを取得 (ミリ秒単位)\n                    // vpos は番組開始時間からの累計秒数\n                    this.vpos_base_timestamp = dayjs(message.data.vposBaseTime).valueOf();\n\n                    // コメントサーバーへの接続情報を返す\n                    console.log(`[LiveCommentManager][WatchSession] Connected.\\nThread ID: ${message.data.threadId}\\n`);\n                    return resolve({\n                        is_success: true,\n                        detail: '視聴セッションを取得しました。',\n                        // コメントサーバーへの接続情報\n                        message_server_url: message.data.messageServer.uri,\n                        // コメントサーバー上のスレッド ID\n                        thread_id: message.data.threadId,\n                        // メッセージサーバーから受信するコメント (chat メッセージ) に yourpost フラグを付けるためのキー\n                        your_post_key: (message.data.yourPostKey ? message.data.yourPostKey : null),\n                    });\n                }\n            }, { signal: this.abort_controller.signal });\n        });\n    }\n\n\n    /**\n     * コメントセッションを初期化する\n     * @param comment_session_info コメントサーバーへの接続情報\n     */\n    private initCommentSession(comment_session_info: IWatchSessionResult): void {\n\n        // 初回にドカッと送信されてくる過去コメントを受信し終えるまで格納するバッファ\n        const initial_comments_buffer: ICommentData[] = [];\n\n        // 初回にドカッと送信されてくる過去コメントを受信し終えたかどうかのフラグ\n        let initial_comments_received = false;\n\n        // コメントセッション WebSocket を開く\n        this.comment_session = new WebSocket(comment_session_info.message_server_url);\n\n        // コメントセッション WebSocket を開いたとき\n        this.comment_session.addEventListener('open', () => {\n\n            // コメント送信をリクエスト\n            // このコマンドを送らないとコメントが送信されてこない\n            this.comment_session.send(JSON.stringify([\n                {ping: {content: 'rs:0'}},\n                {ping: {content: 'ps:0'}},\n                {\n                    thread: {\n                        version: '20061206',  // 設定必須\n                        thread: comment_session_info.thread_id,  // スレッド ID\n                        threadkey: comment_session_info.your_post_key,  // スレッドキー\n                        user_id: '',  // ユーザー ID（設定不要らしい）\n                        res_from: -50,  // 最初にコメントを 50 個送信する\n                    }\n                },\n                {ping: {content: 'pf:0'}},\n                {ping: {content: 'rf:0'}},\n            ]));\n\n        }, { signal: this.abort_controller.signal });\n\n        // コメントセッション WebSocket からメッセージを受信したとき\n        this.comment_session.addEventListener('message', async (event) => {\n\n            // メッセージを取得\n            const message = JSON.parse(event.data);\n\n            // 接続失敗\n            if (message.thread !== undefined) {\n                if (message.thread.resultcode !== 0) {\n                    console.error(`[LiveCommentManager][CommentSession] Connection failed. (Code: ${message.thread.resultcode})`);\n                    return;\n                }\n            }\n\n            // ping メッセージのみ\n            // rf:0 が送られてきたら初回にドカッと送信されてくる過去コメントの受信は完了\n            // この時点で初回コメントを一気にコールバックに送る\n            if (message.ping !== undefined && message.ping.content === 'rf:0') {\n                initial_comments_received = true;\n                this.on_initial_comments_received(initial_comments_buffer);\n                return;\n            }\n\n            // コメントデータを取得\n            const comment = message.chat;\n\n            // コメントデータが不正な場合 or 自分のコメントの場合は弾く\n            if ((comment === undefined || comment.content === undefined || comment.content === '') ||\n                (comment.yourpost && comment.yourpost === 1)) {\n                return;\n            }\n\n            // コメントコマンドをパース\n            const { color, position, size } = CommentUtils.parseCommentCommand(comment.mail);\n\n            // ミュート対象のコメントかどうかを判定し、もしそうならここで弾く\n            if (CommentUtils.isMutedComment(comment.content, comment.user_id, color, position, size)) {\n                return;\n            }\n\n            // コメントリストへ追加するオブジェクト\n            const comment_data: ICommentData = {\n                id: comment.no,\n                text: comment.content,\n                time: dayjs(comment.date * 1000).format('HH:mm:ss'),\n                user_id: comment.user_id,\n                my_post: false,\n            };\n\n            // もしまだ初回コメントを受信し終えていないなら、バッファに格納して終了\n            // 初回コメントはプレイヤーには描画しないため問題ない\n            if (initial_comments_received === false) {\n                initial_comments_buffer.push(comment_data);\n                return;\n            }\n\n            // 配信で発生する遅延分待ってから\n            // おおよその遅延時間は video.buffered.end(0) - video.currentTime で取得できる\n            let buffered_end = 0;\n            if (this.player.video.buffered.length >= 1) {\n                buffered_end = this.player.video.buffered.end(0);\n            }\n            const comment_delay_time = buffered_end - this.player.video.currentTime;\n            // console.log(`[LiveCommentManager][CommentSession] Delay: ${comment_delay_time} sec.`)\n            await Utils.sleep(comment_delay_time);\n\n            // コールバック関数を実行\n            this.on_comment_received(comment_data);\n\n            // プレイヤーにコメントを描画する (映像再生時のみ)\n            if (this.player.video.paused === false) {\n                this.player.danmaku.draw({\n                    text: comment.content,\n                    color: color,\n                    type: position,\n                    size: size,\n                });\n            }\n\n        }, { signal: this.abort_controller.signal });\n    }\n\n\n    /**\n     * ニコニコ実況にコメントを送信する\n     * @param options DPlayer のコメントオプション\n     */\n    public sendComment(options: DPlayerType.APIBackendSendOptions): void {\n\n        // DPlayer 上のコメント色（カラーコード）とニコニコの色コマンド定義のマッピング\n        const color_table = {\n            '#FFEAEA': 'white',\n            '#F02840': 'red',\n            '#FD7E80': 'pink',\n            '#FDA708': 'orange',\n            '#FFE133': 'yellow',\n            '#64DD17': 'green',\n            '#00D4F5': 'cyan',\n            '#4763FF': 'blue',\n        };\n\n        // DPlayer 上のコメント位置を表す値とニコニコの位置コマンド定義のマッピング\n        const position_table = {\n            'top': 'ue',\n            'right': 'naka',\n            'bottom': 'shita',\n        };\n\n        // vpos を計算 (10ミリ秒単位)\n        // 番組開始時間からの累計秒らしいけど、なぜ指定しないといけないのかは不明\n        // 小数点以下は丸めないとコメントサーバー側で投稿エラーになる\n        const vpos = Math.round((dayjs().valueOf() - this.vpos_base_timestamp) / 10);\n\n        // 視聴セッションが null か、接続が切れている場合は弾く\n        if (this.watch_session === null || this.watch_session.readyState !== WebSocket.OPEN) {\n            console.error('[LiveCommentManager][WatchSession] Comment sending failed. (Connection is not established.)');\n            options.error('コメントの送信に失敗しました。WebSocket 接続が確立されていません。');\n            return;\n        }\n\n        // コメントを送信\n        this.watch_session.send(JSON.stringify({\n            'type': 'postComment',\n            'data': {\n                // コメント本文\n                'text': options.data.text,\n                // コメントの色\n                'color': color_table[options.data.color.toUpperCase()],\n                // コメント位置\n                'position': position_table[options.data.type],\n                // コメントサイズ (DPlayer とニコニコで表現が共通なため、変換不要)\n                'size': options.data.size,\n                // 番組開始時間からの累計秒 (10ミリ秒単位)\n                'vpos': vpos,\n                // 匿名コメント (184) にするかどうか\n                'isAnonymous': true,\n            }\n        }));\n\n        // コメント送信のレスポンスを取得\n        const abort_controller = new AbortController();\n        this.watch_session.addEventListener('message', (event) => {\n            const message = JSON.parse(event.data);\n            switch (message.type) {\n\n                // postCommentResult が送られてきた → コメント送信に成功している\n                case 'postCommentResult': {\n                    // コメント成功を DPlayer にコールバックで通知\n                    options.success();\n\n                    // イベントリスナーを削除\n                    abort_controller.abort();\n                    break;\n                }\n\n                // コメント送信直後に error が送られてきた → コメント送信に失敗している\n                case 'error': {\n                    // コメント失敗を DPlayer にコールバックで通知\n                    let error = `コメントの送信に失敗しました。(${message.data.code})`;\n                    switch (message.data.code) {\n                        case 'COMMENT_POST_NOT_ALLOWED':\n                            error = 'コメントが許可されていません。';\n                            break;\n                        case 'INVALID_MESSAGE':\n                            error = 'コメント内容が無効です。';\n                            break;\n                    }\n                    console.error(`[LiveCommentManager][WatchSession] Comment sending failed. (Code: ${message.data.code})`);\n                    options.error(error);\n\n                    // イベントリスナーを解除\n                    abort_controller.abort();\n                    break;\n                }\n            }\n        }, { signal: abort_controller.signal });\n    }\n\n\n    /**\n     * 同じ設定でニコニコ実況に再接続する\n     */\n    private async reconnect(): Promise<void> {\n        console.warn('[LiveCommentManager][WatchSession] Reconnecting...');\n        this.player.notice('ニコニコ実況に再接続しています…');\n\n        // 前のセッションを破棄\n        this.destroy();\n\n        // セッションを再初期化\n        const result = await this.initSession();\n        if (result.is_success === false) {\n            console.error('[LiveCommentManager][WatchSession] Reconnection failed.');\n            this.player.notice(result.detail);\n        }\n    }\n\n\n    /**\n     * 視聴セッションとコメントセッションをそれぞれ閉じる\n     */\n    public destroy(): void {\n\n        // セッションに紐いているすべての EventListener を解除\n        // 再接続する場合に備えて AbortController を作り直す\n        this.abort_controller.abort();\n        this.abort_controller = new AbortController();\n\n        // 視聴セッションを閉じる\n        if (this.watch_session !== null) {\n            this.watch_session.close();  // WebSocket を閉じる\n            this.watch_session = null;  // null に戻す\n        }\n\n        // コメントセッションを閉じる\n        if (this.comment_session !== null) {\n            this.comment_session.close();  // WebSocket を閉じる\n            this.comment_session = null;  // null に戻す\n        }\n\n        // 座席保持用のタイマーをクリア\n        window.clearInterval(this.keep_seat_interval_id);\n        this.keep_seat_interval_id = null;\n        this.vpos_base_timestamp = 0;\n\n        console.log('[LiveCommentManager][WatchSession] Destroyed.');\n    }\n}\n\nexport default LiveCommentManager;\n","\n\nimport DPlayer from 'dplayer';\nimport * as DPlayerType from 'dplayer/dist/d.ts/types/DPlayer';\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport CommentMuteSettings from '@/components/Settings/CommentMuteSettings.vue';\nimport LiveCommentManager, { ICommentData } from '@/services/player/LiveCommentManager';\nimport useUserStore from '@/store/UserStore';\nimport Utils, { CommentUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'Panel-CommentTab',\n    components: {\n        CommentMuteSettings,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n\n            // 手動スクロール状態かどうか\n            is_manual_scroll: false,\n\n            // 自動スクロール中かどうか\n            // 自動スクロール中の場合、scroll イベントが発火しても無視する\n            is_auto_scrolling: false,\n\n            // コメントリストの配列\n            comment_list: [] as ICommentData[],\n\n            // コメントリストの要素\n            comment_list_element: null as HTMLElement | null,\n\n            // コメントリストのドロップダウン関連\n            is_comment_list_dropdown_display: false as boolean,\n            comment_list_dropdown_top: 0 as number,\n            comment_list_dropdown_comment: null as ICommentData | null,\n\n            // LiveCommentManager のインスタンス\n            live_comment_manager: null as LiveCommentManager | null,\n\n            // ニコニコ実況セッションの初期化に失敗した際のエラーメッセージ\n            // 視聴中チャンネルのニコニコ実況がないときなどに発生する\n            initialize_failed_message: null as string | null,\n\n            // visibilitychange イベントのリスナー\n            visibilitychange_listener: null as (() => void) | null,\n\n            // ResizeObserver のインスタンス\n            resize_observer: null as ResizeObserver | null,\n\n            // ResizeObserver の監視対象の要素\n            resize_observer_element: null as HTMLElement | null,\n\n            // コメントのミュート設定のモーダルを表示するか\n            comment_mute_settings_modal: false,\n        };\n    },\n    computed: {\n        // UserStore に this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useUserStore),\n    },\n    created() {\n\n        // アカウント情報を更新\n        this.userStore.fetchUser();\n    },\n    mounted() {\n\n        // コメントリストの要素を取得\n        if (this.comment_list_element === null) {\n            this.comment_list_element = this.$el.querySelector('.comment-list');\n        }\n\n        // 現在コメントリストがユーザーイベントでスクロールされているかどうか\n        let is_user_scrolling = false;\n\n        // mousedown → mouseup 中: スクロールバーをマウスでドラッグ\n        // 残念ながらスクロールバーのドラッグ中は mousemove のイベントが発火しないため、直接 is_user_scrolling を設定する\n        this.comment_list_element.onmousedown = (event: MouseEvent) => {\n            // コメントリストの要素の左上を起点としたカーソルのX座標を求める\n            const x = event.clientX - this.comment_list_element.getBoundingClientRect().left;\n            // 座標が clientWidth 以上であれば、スクロールバー上で mousedown されたものとする\n            if (x > this.comment_list_element.clientWidth) is_user_scrolling = true;\n        };\n        this.comment_list_element.onmouseup = (event: MouseEvent) => {\n            // コメントリストの要素の左上を起点としたカーソルのX座標を求める\n            const x = event.clientX - this.comment_list_element.getBoundingClientRect().left;\n            // 座標が clientWidth 以上であれば、スクロールバー上で mouseup されたものとする\n            if (x > this.comment_list_element.clientWidth) is_user_scrolling = false;\n        };\n\n        // ユーザーによるスクロールイベントで is_user_scrolling を true にする\n        // 0.1 秒後に false にする（継続してイベントが発火すれば再び true になる）\n        const on_user_scrolling = () => {\n            is_user_scrolling = true;\n            window.setTimeout(() => is_user_scrolling = false, 100);\n        };\n\n        // 現在コメントリストがドラッグされているかどうか\n        let is_dragging = false;\n        // touchstart → touchend 中: スクロールバーをタップでドラッグ\n        this.comment_list_element.ontouchstart = () => is_dragging = true;\n        this.comment_list_element.ontouchend = () => is_dragging = false;\n        // touchmove + is_dragging 中: コメントリストをタップでドラッグしてスクロール\n        this.comment_list_element.ontouchmove = () => is_dragging === true ? on_user_scrolling(): '';\n\n        // wheel 中: マウスホイールの回転\n        this.comment_list_element.onwheel = on_user_scrolling;\n\n        // コメントリストがスクロールされた際、自動スクロール中でない&ユーザーイベントで操作されていれば、手動スクロールモードに設定\n        // 手動スクロールモードでは自動スクロールを行わず、ユーザーがコメントリストをスクロールできるようにする\n        this.comment_list_element.onscroll = async () => {\n\n            // scroll イベントは自動スクロールでも発火してしまうので、ユーザーイベントによるスクロールかを確認しないといけない\n            // 自動スクロール中かどうかは is_auto_scrolling が true のときで判定できるはずだが、\n            // コメントが多くなると is_auto_scrolling が false なのに scroll イベントが遅れて発火してしまうことがある\n            if (this.is_auto_scrolling === false && is_user_scrolling === true) {\n\n                // 手動スクロールを有効化\n                this.is_manual_scroll = true;\n\n                // イベント発火時点では scrollTop の値が完全に下にスクロールされていない場合があるため、0.1秒だけ待つ\n                await Utils.sleep(0.1);\n\n                // 一番下までスクロールされていたら自動スクロールに戻す\n                if ((this.comment_list_element.scrollTop + this.comment_list_element.offsetHeight) >\n                    (this.comment_list_element.scrollHeight - 10)) {  // 一番下から 10px 以内\n                    this.is_manual_scroll = false;  // 手動スクロールを無効化\n                }\n            }\n        };\n    },\n    // 終了前に実行\n    beforeDestroy() {\n\n        // ニコニコ実況セッションを破棄\n        this.destroy();\n\n        // ResizeObserver を終了\n        if (this.resize_observer !== null) {\n            this.resize_observer.unobserve(this.resize_observer_element);\n        }\n    },\n    methods: {\n\n        // ドロップダウンメニューを表示する\n        showCommentListDropdown(event: Event, comment: ICommentData) {\n            const comment_list_wrapper_rect = (this.$refs.comment_list_wrapper as HTMLDivElement).getBoundingClientRect();\n            const comment_list_dropdown_height = 76;  // 76px はドロップダウンメニューの高さ\n            const comment_button_rect = (event.currentTarget as HTMLElement).getBoundingClientRect();\n            // メニューの表示位置をクリックされたコメントに合わせる\n            this.comment_list_dropdown_top = comment_button_rect.top - comment_list_wrapper_rect.top;\n            // メニューがコメントリストからはみ出るときだけ、表示位置を上側に調整\n            if ((this.comment_list_dropdown_top + comment_list_dropdown_height) > comment_list_wrapper_rect.height) {\n                this.comment_list_dropdown_top = this.comment_list_dropdown_top - comment_list_dropdown_height + comment_button_rect.height;\n            }\n            // 表示位置を調整できたので、メニューを表示\n            this.comment_list_dropdown_comment = comment;\n            this.is_comment_list_dropdown_display = true;\n        },\n\n        // ドロップダウンメニューを非表示にする\n        hideCommentListDropdown() {\n            this.is_comment_list_dropdown_display = false;\n            this.comment_list = this.comment_list.filter((comment) => {\n                return CommentUtils.isMutedComment(comment.text, comment.user_id) === false;\n            });\n        },\n\n        // ミュートするキーワードを追加する\n        addMutedKeywords() {\n            CommentUtils.addMutedKeywords(this.comment_list_dropdown_comment.text);\n            this.hideCommentListDropdown();\n        },\n\n        // ミュートするニコニコユーザー ID を追加する\n        addMutedNiconicoUserIds() {\n            CommentUtils.addMutedNiconicoUserIDs(this.comment_list_dropdown_comment.user_id);\n            this.hideCommentListDropdown();\n        },\n\n        // コメントリストを一番下までスクロールする\n        async scrollCommentList(smooth: boolean = false) {\n\n            // ドロップダウンメニュー表示中なら手動スクロールモードに設定\n            if (this.is_comment_list_dropdown_display === true) {\n                this.is_manual_scroll = true;\n            }\n\n            // 手動スクロールモードの時は実行しない\n            if (this.is_manual_scroll === true) return;\n\n            // 自動スクロール中のフラグを立てる\n            this.is_auto_scrolling = true;\n\n            // 0.01 秒待って実行し、念押しで2回実行しないと完全に最下部までスクロールされない…（ブラウザの描画バグ？）\n            // this.$nextTick() は効かなかった\n            for (let index = 0; index < 3; index++) {\n                await Utils.sleep(0.01);\n                if (smooth === true) {  // スムーズスクロール\n                    this.comment_list_element.scrollTo({top: this.comment_list_element.scrollHeight, left: 0, behavior: 'smooth'});\n                } else {\n                    this.comment_list_element.scrollTo(0, this.comment_list_element.scrollHeight);\n                }\n            }\n\n            // 0.1 秒待つ（重要）\n            await Utils.sleep(0.1);\n\n            // 自動スクロール中のフラグを降ろす\n            this.is_auto_scrolling = false;\n        },\n\n        // リサイズ時のイベントを初期化\n        // プレイヤーが初期化される毎に実行する必要がある\n        initReserveObserver() {\n\n            // 以前に初期化された ResizeObserver を終了\n            if (this.resize_observer !== null) {\n                this.resize_observer.unobserve(this.resize_observer_element);\n            }\n\n            // 監視対象の要素\n            this.resize_observer_element = document.querySelector('.watch-player');\n\n            // タイムアウト ID\n            // 一時的に無効にした transition を有効化する際に利用する\n            let animation_timeout_id = null;\n\n            // プレイヤーの要素がリサイズされた際に発火するイベント\n            const on_resize = () => {\n\n                // 映像の要素\n                const video_element = document.querySelector('.dplayer-video-wrap-aspect');\n\n                // コメント描画領域の要素\n                const comment_area_element = document.querySelector<HTMLElement>('.dplayer-danmaku');\n\n                // プレイヤー全体と映像の高さの差（レターボックス）から、コメント描画領域の高さを狭める必要があるかを判定する\n                // 2で割っているのは単体の差を測るため\n                if (this.resize_observer_element === null || this.resize_observer_element.clientHeight === null) return;\n                if (video_element === null || video_element.clientHeight === null) return;\n                const letter_box_height = (this.resize_observer_element.clientHeight - video_element.clientHeight) / 2;\n\n                const threshold = Utils.isSmartphoneVertical() ? 0 : window.matchMedia('(max-height: 450px)').matches ? 50 : 66;\n                if (letter_box_height < threshold) {\n\n                    // コメント描画領域に必要な上下マージン\n                    const comment_area_vertical_margin = (threshold - letter_box_height) * 2;\n\n                    // 狭めるコメント描画領域の幅\n                    // 映像の要素の幅をそのまま利用する\n                    const comment_area_width = video_element.clientWidth;\n\n                    // 狭めるコメント描画領域の高さ\n                    const comment_area_height = video_element.clientHeight - comment_area_vertical_margin;\n\n                    // 狭めるコメント描画領域のアスペクト比を求める\n                    // https://tech.arc-one.jp/asepct-ratio/\n                    const gcd = (x: number, y: number) => {  // 最大公約数を求める関数\n                        if (y === 0) return x;\n                        return gcd(y, x % y);\n                    };\n                    // 幅と高さの最大公約数を求める\n                    const gcd_result = gcd(comment_area_width, comment_area_height);\n                    // 幅と高さをそれぞれ最大公約数で割ってアスペクト比を算出\n                    const comment_area_height_aspect = `${comment_area_width / gcd_result} / ${comment_area_height / gcd_result}`;\n\n                    // 一時的に transition を無効化する\n                    // アスペクト比の設定は連続して行われるが、その際に transition が適用されるとワンテンポ遅れたアニメーションになってしまう\n                    comment_area_element.style.transition = 'none';\n\n                    // コメント描画領域に算出したアスペクト比を設定する\n                    comment_area_element.style.setProperty('--comment-area-aspect-ratio', comment_area_height_aspect);\n\n                    // コメント描画領域に必要な上下マージンを設定する\n                    comment_area_element.style.setProperty('--comment-area-vertical-margin', `${comment_area_vertical_margin}px`);\n\n                    // 以前セットされた setTimeout() を止める\n                    window.clearTimeout(animation_timeout_id);\n\n                    // 0.2秒後に実行する\n                    // 0.2秒より前にもう一度リサイズイベントが来た場合はタイマーがクリアされるため実行されない\n                    window.setTimeout(() => {\n\n                        // 再び transition を有効化する\n                        comment_area_element.style.transition = '';\n\n                    }, 0.2 * 1000);\n\n                } else {\n\n                    // コメント描画領域に設定したアスペクト比・上下マージンを削除する\n                    comment_area_element.style.removeProperty('--comment-area-aspect-ratio');\n                    comment_area_element.style.removeProperty('--comment-area-vertical-margin');\n                }\n            };\n\n            // 要素の監視を開始\n            this.resize_observer = new ResizeObserver(on_resize);\n            this.resize_observer.observe(this.resize_observer_element);\n\n            // 0.6 秒待ってから初回実行\n            // チャンネル切り替え後、再初期化されたプレイヤーに適用するため（早いと再初期化前のプレイヤーに適用されてしまう）\n            window.setTimeout(on_resize, 0.6 * 1000);\n        },\n\n        // ニコニコ実況に接続し、セッションを初期化する\n        async initSession(player: DPlayer, channel_id: string) {\n\n            // リサイズ時のイベントを初期化\n            // イベントはプレイヤーの DOM に紐づいているため、プレイヤーが破棄→再初期化される毎に実行する必要がある\n            this.initReserveObserver();\n\n            // タブが非表示状態のときにコメントを格納する配列\n            // タブが表示状態になったらコメントリストにのみ表示する（遅れているのでプレイヤーには表示しない）\n            const comment_list_buffer: ICommentData[] = [];\n\n            // コメントの最大保持数\n            const max_comment_count = 500;\n\n            // LiveCommentManager を初期化\n            this.live_comment_manager = new LiveCommentManager(\n                // DPlayer のインスタンス\n                player,\n                // チャンネル ID\n                channel_id,\n\n                // 初回の過去コメント (最大50件) を受信したときのコールバック\n                async (initial_comments) => {\n\n                    // コメントリストに一括で追加\n                    this.comment_list.push(...initial_comments);\n\n                    // コメントリストを一番下までスクロール\n                    this.scrollCommentList();\n                },\n\n                // コメントを受信したときのコールバック\n                // プレイヤーへの描画は LiveCommentManager が行う\n                async (comment) => {\n\n                    // タブが非表示状態のときは、バッファにコメントを追加するだけで終了する\n                    // ここで追加すると、タブが表示状態になったときに一斉に描画されて大変なことになる\n                    if (document.visibilityState === 'hidden') {\n                        comment_list_buffer.push(comment);\n                        return;\n                    }\n\n                    // コメントリストのコメント数が max_comment_count 件を超えたら、古いものから順に削除する\n                    // 仮想スクロールとはいえ、さすがに max_comment_count 件を超えると重くなりそう\n                    // 手動スクロール時は実行しない\n                    if (this.comment_list.length >= max_comment_count && this.is_manual_scroll === false) {\n                        this.comment_list.splice(0, Math.max(0, this.comment_list.length - max_comment_count));\n                    }\n\n                    // コメントリストに追加\n                    this.comment_list.push(comment);\n\n                    // コメントリストを一番下までスクロール\n                    this.scrollCommentList();\n                },\n            );\n\n            // タブが表示状態になったときのイベント\n            this.visibilitychange_listener = () => {\n                if (document.visibilityState === 'visible') {\n\n                    // コメントリスト + バッファの合計コメント数が max_comment_count 件を超えたら、\n                    // コメントリスト内のコメントを古いものから順に削除し、max_comment_count 件になるようにする\n                    const comment_list_and_buffer_length = this.comment_list.length + comment_list_buffer.length;\n                    if (comment_list_and_buffer_length >= max_comment_count && this.is_manual_scroll === false) {\n                        this.comment_list.splice(0, Math.max(0, comment_list_and_buffer_length - max_comment_count));\n                    }\n\n                    // バッファ内のコメントをコメントリストに一括で追加する\n                    this.comment_list.push(...comment_list_buffer);\n                    comment_list_buffer.length = 0;  // バッファを空にする\n\n                    // コメントリストを一番下までスクロール\n                    this.scrollCommentList();\n                }\n            };\n            document.addEventListener('visibilitychange', this.visibilitychange_listener);\n\n            // ニコニコ実況セッションを初期化する\n            const result = await this.live_comment_manager.initSession();\n\n            // ニコニコ実況セッションの初期化に失敗した\n            // 初期化に失敗した際のエラーメッセージを保存しておく (エラー表示などで利用する)\n            // プレイヤーへのエラー表示はすでに LiveCommentManager の方で行われているので、ここでは何もしない\n            if (result.is_success === false) {\n                this.initialize_failed_message = result.detail;\n            }\n        },\n\n        // コメントを送信する\n        sendComment(options: DPlayerType.APIBackendSendOptions) {\n\n            // 初期化に失敗しているときは実行せず、保存しておいたエラーメッセージを表示する\n            if (this.initialize_failed_message !== null) {\n                options.error(this.initialize_failed_message);\n                return;\n            }\n\n            // バリデーション\n            if (this.userStore.user === null) {\n                options.error('コメントするには、KonomiTV アカウントにログインしてください。');\n                return;\n            }\n            if (this.userStore.user.niconico_user_id === null) {\n                options.error('コメントするには、ニコニコアカウントと連携してください。');\n                return;\n            }\n            if (this.userStore.user.niconico_user_premium === false && (options.data.type === 'top' || options.data.type === 'bottom')) {\n                options.error('コメントを上下に固定するには、ニコニコアカウントのプレミアム会員登録が必要です。');\n                return;\n            }\n            if (this.userStore.user.niconico_user_premium === false && options.data.size === 'big') {\n                options.error('コメントサイズを大きめに設定するには、ニコニコアカウントのプレミアム会員登録が必要です。');\n                return;\n            }\n\n            // ニコニコ実況のコメントサーバーにコメントを送信\n            this.live_comment_manager.sendComment(options);\n        },\n\n        // ニコニコ実況セッションを破棄する\n        destroy() {\n\n            // タブの表示/非表示の状態が切り替わったときのイベントを削除\n            if (this.visibilitychange_listener !== null) {\n                document.removeEventListener('visibilitychange', this.visibilitychange_listener);\n                this.visibilitychange_listener = null;\n            }\n\n            // LiveCommentManager を破棄\n            if (this.live_comment_manager !== null) {\n                this.live_comment_manager.destroy();\n                this.live_comment_manager = null;\n            }\n\n            this.initialize_failed_message = null;\n            this.comment_list = [];\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Comment.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Comment.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Comment.vue?vue&type=template&id=6f8c784f&scoped=true&\"\nimport script from \"./Comment.vue?vue&type=script&lang=ts&\"\nexport * from \"./Comment.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Comment.vue?vue&type=style&index=0&id=6f8c784f&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6f8c784f\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"program-container\"},[_c('section',{staticClass:\"program-broadcaster\"},[_c('img',{staticClass:\"program-broadcaster__icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.channelsStore.channel_id)}/logo`}}),_c('div',{staticClass:\"program-broadcaster__number\"},[_vm._v(\"Ch: \"+_vm._s(_vm.channelsStore.channel.current.channel_number))]),_c('div',{staticClass:\"program-broadcaster__name\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.channel_name))])]),_c('section',{staticClass:\"program-info\"},[_c('h1',{staticClass:\"program-info__title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channelsStore.channel.current.program_present, 'title'))}}),_c('div',{staticClass:\"program-info__time\"},[_vm._v(\" \"+_vm._s(_vm.ProgramUtils.getProgramTime(_vm.channelsStore.channel.current.program_present))+\" \")]),_c('div',{staticClass:\"program-info__description\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channelsStore.channel.current.program_present, 'description'))}}),_c('div',{staticClass:\"program-info__genre-container\"},_vm._l((_vm.ProgramUtils.getAttribute(_vm.channelsStore.channel.current.program_present, 'genre', [])),function(genre,genre_index){return _c('div',{key:genre_index,staticClass:\"program-info__genre\"},[_vm._v(\" \"+_vm._s(genre.major)+\" / \"+_vm._s(genre.middle)+\" \")])}),0),_c('div',{staticClass:\"program-info__next\"},[_c('span',{staticClass:\"program-info__next-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"program-info__next-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}})],1),_c('span',{staticClass:\"program-info__next-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channelsStore.channel.current.program_following, 'title'))}}),_c('div',{staticClass:\"program-info__next-time\"},[_vm._v(\" \"+_vm._s(_vm.ProgramUtils.getProgramTime(_vm.channelsStore.channel.current.program_following))+\" \")]),_c('div',{staticClass:\"program-info__status\"},[_c('div',{staticClass:\"program-info__status-force\",class:`program-info__status-force--${_vm.ChannelUtils.getChannelForceType(_vm.channelsStore.channel.current.channel_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"勢い:\")]),_c('span',{staticClass:\"ml-2\"},[_vm._v(_vm._s(_vm.ProgramUtils.getAttribute(_vm.channelsStore.channel.current, 'channel_force', '--'))+\" コメ/分\")])],1),_c('div',{staticClass:\"program-info__status-viewers ml-5\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:eye\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"視聴数:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.viewers))])],1)])]),_c('section',{staticClass:\"program-detail-container\"},_vm._l((_vm.ProgramUtils.getAttribute(_vm.channelsStore.channel.current.program_present, 'detail', {})),function(detail_text,detail_heading){return _c('div',{key:detail_heading,staticClass:\"program-detail\"},[_c('h2',{staticClass:\"program-detail__heading\"},[_vm._v(_vm._s(detail_heading))]),_c('div',{staticClass:\"program-detail__text\",domProps:{\"innerHTML\":_vm._s(_vm.Utils.URLtoLink(detail_text))}})])}),0)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport useChannelsStore from '@/store/ChannelsStore';\nimport Utils, { ChannelUtils, ProgramUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'Panel-ProgramTab',\n    data() {\n        return {\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            ChannelUtils: ChannelUtils,\n            ProgramUtils: ProgramUtils,\n        };\n    },\n    computed: {\n        // ChannelsStore に this.channelsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useChannelsStore),\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Program.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Program.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Program.vue?vue&type=template&id=12609bdf&scoped=true&\"\nimport script from \"./Program.vue?vue&type=script&lang=ts&\"\nexport * from \"./Program.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Program.vue?vue&type=style&index=0&id=12609bdf&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"12609bdf\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"twitter-container\"},[_c('v-dialog',{attrs:{\"content-class\":\"zoom-capture-modal-container\",\"max-width\":\"980\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.zoom_capture_modal),callback:function ($$v) {_vm.zoom_capture_modal=$$v},expression:\"zoom_capture_modal\"}},[_c('div',{staticClass:\"zoom-capture-modal\"},[_c('img',{staticClass:\"zoom-capture-modal__image\",attrs:{\"src\":_vm.zoom_capture ? _vm.zoom_capture.image_url: ''}}),_c('a',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"zoom-capture-modal__download\",attrs:{\"href\":_vm.zoom_capture ? _vm.zoom_capture.image_url : '',\"download\":_vm.zoom_capture ? _vm.zoom_capture.filename : ''}},[_c('Icon',{attrs:{\"icon\":\"fa6-solid:download\",\"width\":\"45px\"}})],1)])]),_c('div',{staticClass:\"tab-container\"},[_c('div',{staticClass:\"tab-content\",class:{'tab-content--active': _vm.twitter_active_tab === 'Search'}},[_c('div',{staticClass:\"search px-4\"},[_vm._v(\" リアルタイム検索機能は鋭意開発中です。 \")])]),_c('div',{staticClass:\"tab-content\",class:{'tab-content--active': _vm.twitter_active_tab === 'Timeline'}},[_c('div',{staticClass:\"search px-4\"},[_vm._v(\" タイムライン機能は鋭意開発中です。 \")])]),_c('div',{staticClass:\"tab-content\",class:{'tab-content--active': _vm.twitter_active_tab === 'Capture'}},[_c('div',{staticClass:\"captures\"},_vm._l((_vm.captures),function(capture){return _c('div',{key:capture.image_url,staticClass:\"capture\",class:{\n                        'capture--selected': capture.selected,\n                        'capture--focused': capture.focused,\n                        'capture--disabled': !capture.selected && _vm.tweet_captures.length >= 4,\n                    },on:{\"click\":function($event){return _vm.clickCapture(capture)}}},[_c('img',{staticClass:\"capture__image\",attrs:{\"src\":capture.image_url}}),_c('div',{staticClass:\"capture__disabled-cover\"}),_c('div',{staticClass:\"capture__selected-number\"},[_vm._v(_vm._s(_vm.tweet_captures.findIndex(blob => blob === capture.blob) + 1))]),_c('Icon',{staticClass:\"capture__selected-checkmark\",attrs:{\"icon\":\"fluent:checkmark-circle-16-filled\"}}),_c('div',{staticClass:\"capture__selected-border\"}),_c('div',{staticClass:\"capture__focused-border\"}),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"capture__zoom\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.zoom_capture_modal = true; _vm.zoom_capture = capture},\"mousedown\":function($event){$event.preventDefault();$event.stopPropagation();/* 親要素の波紋が広がらないように */}}},[_c('Icon',{attrs:{\"icon\":\"fluent:zoom-in-16-regular\",\"width\":\"32px\"}})],1)],1)}),0),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.captures.length === 0),expression:\"captures.length === 0\"}],staticClass:\"capture-announce\"},[_c('div',{staticClass:\"capture-announce__heading\"},[_vm._v(\"まだキャプチャがありません。\")]),_vm._m(0)])])]),_c('div',{staticClass:\"tab-button-container\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Search'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Search'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:search-16-filled\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"ツイート検索\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Timeline'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Timeline'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:home-16-regular\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"タイムライン\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Capture'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Capture'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:image-copy-20-regular\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"キャプチャ\")])],1)]),_c('div',{staticClass:\"tweet-form\",class:{\n        'tweet-form--focused': _vm.is_tweet_hashtag_form_focused || _vm.is_tweet_text_form_focused,\n        'tweet-form--virtual-keyboard-display': _vm.is_virtual_keyboard_display &&\n            (_vm.Utils.hasActiveElementClass('tweet-form__hashtag-form') || _vm.Utils.hasActiveElementClass('tweet-form__textarea')) &&\n            (() => {_vm.is_hashtag_list_display = false; return true;})(),\n    }},[_c('div',{staticClass:\"tweet-form__hashtag\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.tweet_hashtag),expression:\"tweet_hashtag\"}],staticClass:\"tweet-form__hashtag-form\",attrs:{\"type\":\"search\",\"placeholder\":\"#ハッシュタグ\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.tweet_hashtag)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.tweet_hashtag=$event.target.value},function($event){return _vm.updateTweetLetterCount()}],\"focus\":function($event){_vm.is_tweet_hashtag_form_focused = true},\"blur\":function($event){_vm.is_tweet_hashtag_form_focused = false},\"change\":function($event){_vm.tweet_hashtag = _vm.formatHashtag(_vm.tweet_hashtag); _vm.updateTweetLetterCount()}}}),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tweet-form__hashtag-list-button\",on:{\"click\":function($event){return _vm.clickHashtagListButton()}}},[_c('Icon',{attrs:{\"icon\":\"fluent:clipboard-text-ltr-32-regular\",\"height\":\"22px\"}})],1)]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.tweet_text),expression:\"tweet_text\"}],ref:\"tweet_text\",staticClass:\"tweet-form__textarea\",attrs:{\"placeholder\":\"ツイート\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.tweet_text)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.tweet_text=$event.target.value},function($event){return _vm.updateTweetLetterCount()}],\"paste\":function($event){return _vm.pasteClipboardData($event)},\"focus\":function($event){_vm.is_tweet_text_form_focused = true},\"blur\":function($event){_vm.is_tweet_text_form_focused = false}}}),_c('div',{staticClass:\"tweet-form__control\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"account-button\",class:{'account-button--no-login': !_vm.is_logged_in_twitter},on:{\"click\":function($event){return _vm.clickAccountButton()}}},[_c('img',{staticClass:\"account-button__icon\",attrs:{\"src\":_vm.is_logged_in_twitter ? _vm.selected_twitter_account.icon_url : '/assets/images/account-icon-default.png'}}),_c('span',{staticClass:\"account-button__screen-name\"},[_vm._v(\" \"+_vm._s(_vm.is_logged_in_twitter ? `@${_vm.selected_twitter_account.screen_name}` : '連携されていません')+\" \")]),_c('Icon',{staticClass:\"account-button__menu\",attrs:{\"icon\":\"fluent:more-circle-20-regular\",\"width\":\"22px\"}})],1),_c('div',{staticClass:\"limit-meter\"},[_c('div',{staticClass:\"limit-meter__content\",class:{\n                    'limit-meter__content--yellow': _vm.tweet_letter_count <= 20,\n                    'limit-meter__content--red': _vm.tweet_letter_count <= 0,\n                }},[_c('Icon',{staticStyle:{\"margin-right\":\"-2px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"12px\"}}),_c('span',[_vm._v(_vm._s(_vm.tweet_letter_count))])],1),_c('div',{staticClass:\"limit-meter__content\"},[_c('Icon',{attrs:{\"icon\":\"fluent:image-16-filled\",\"width\":\"14px\"}}),_c('span',[_vm._v(_vm._s(_vm.tweet_captures.length)+\"/4\")])],1)]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tweet-button\",attrs:{\"disabled\":!_vm.is_logged_in_twitter || _vm.tweet_letter_count < 0 ||\n                    (_vm.tweet_letter_count === 140 && _vm.tweet_captures.length === 0)},on:{\"click\":function($event){return _vm.sendTweet()},\"touchstart\":function($event){return _vm.sendTweet()}}},[_c('Icon',{attrs:{\"icon\":\"fa-brands:twitter\",\"height\":\"16px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ツイート\")])],1)])]),_c('div',{staticClass:\"hashtag-list\",class:{\n        'hashtag-list--display': _vm.is_hashtag_list_display,\n        'hashtag-list--virtual-keyboard-display': _vm.is_virtual_keyboard_display && _vm.Utils.hasActiveElementClass('hashtag__input'),\n    }},[_c('div',{staticClass:\"hashtag-heading\"},[_c('div',{staticClass:\"hashtag-heading__text\"},[_c('Icon',{attrs:{\"icon\":\"charm:hash\",\"width\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ハッシュタグリスト\")])],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag-heading__add-button\",on:{\"click\":function($event){_vm.saved_twitter_hashtags.push({id: _vm.Utils.time(), text: '#ここにハッシュタグを入力', editing: false})}}},[_c('Icon',{attrs:{\"icon\":\"fluent:add-12-filled\",\"width\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"追加\")])],1)]),_c('draggable',{staticClass:\"hashtag-container\",attrs:{\"handle\":\".hashtag__sort-handle\"},model:{value:(_vm.saved_twitter_hashtags),callback:function ($$v) {_vm.saved_twitter_hashtags=$$v},expression:\"saved_twitter_hashtags\"}},_vm._l((_vm.saved_twitter_hashtags),function(hashtag){return _c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\",value:(!hashtag.editing),expression:\"!hashtag.editing\"}],key:hashtag.id,staticClass:\"hashtag\",class:{'hashtag--editing': hashtag.editing},on:{\"click\":function($event){return _vm.clickHashtag(hashtag)}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(hashtag.text),expression:\"hashtag.text\"}],staticClass:\"hashtag__input\",attrs:{\"type\":\"search\",\"spellcheck\":\"false\",\"disabled\":!hashtag.editing},domProps:{\"value\":(hashtag.text)},on:{\"click\":function($event){$event.stopPropagation();},\"input\":function($event){if($event.target.composing)return;_vm.$set(hashtag, \"text\", $event.target.value)}}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag__edit-button\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();hashtag.editing = !hashtag.editing;\n                        hashtag.text = _vm.formatHashtag(hashtag.text, true); _vm.updateTweetLetterCount()}}},[_c('Icon',{attrs:{\"icon\":hashtag.editing ? 'fluent:checkmark-16-filled': 'fluent:edit-16-filled',\"width\":\"17px\"}})],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag__delete-button\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.saved_twitter_hashtags.splice(_vm.saved_twitter_hashtags.indexOf(hashtag), 1)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:delete-16-filled\",\"width\":\"17px\"}})],1),_c('div',{staticClass:\"hashtag__sort-handle\"},[_c('Icon',{attrs:{\"icon\":\"material-symbols:drag-handle-rounded\",\"width\":\"17px\"}})],1)])}),0)],1),_c('div',{staticClass:\"twitter-account-list\",class:{'twitter-account-list--display': _vm.is_twitter_account_list_display}},_vm._l((_vm.userStore.user ? _vm.userStore.user.twitter_accounts : []),function(twitter_account){return _c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:twitter_account.id,staticClass:\"twitter-account\",on:{\"click\":function($event){return _vm.updateSelectedTwitterAccount(twitter_account)}}},[_c('img',{staticClass:\"twitter-account__icon\",attrs:{\"src\":twitter_account.icon_url}}),_c('div',{staticClass:\"twitter-account__info\"},[_c('div',{staticClass:\"twitter-account__name\"},[_vm._v(_vm._s(twitter_account.name))]),_c('div',{staticClass:\"twitter-account__screen-name\"},[_vm._v(\"@\"+_vm._s(twitter_account.screen_name))])]),_c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(twitter_account.id === _vm.settingsStore.settings.selected_twitter_account_id),expression:\"twitter_account.id === settingsStore.settings.selected_twitter_account_id\"}],staticClass:\"twitter-account__check\",attrs:{\"icon\":\"fluent:checkmark-16-filled\",\"width\":\"24px\"}})],1)}),0)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"capture-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(\"プレイヤーのキャプチャボタンやショートカットキーでキャプチャを撮ると、ここに表示されます。\")]),_c('p',{staticClass:\"mt-2 mb-0\"},[_vm._v(\"表示されたキャプチャを選択してからツイートすると、キャプチャを付けてツイートできます。\")])])\n}]\n\nexport { render, staticRenderFns }","\n\nimport DPlayer from 'dplayer';\nimport { mapStores } from 'pinia';\nimport Vue, { PropType } from 'vue';\nimport draggable from 'vuedraggable';\n\nimport Twitter from '@/services/Twitter';\nimport { ITwitterAccount } from '@/services/Users';\nimport useChannelsStore from '@/store/ChannelsStore';\nimport useSettingsStore from '@/store/SettingsStore';\nimport useUserStore from '@/store/UserStore';\nimport Utils from '@/utils';\n\n// このコンポーネント内でのキャプチャのインターフェイス\ninterface ITweetCapture {\n    blob: Blob;\n    filename: string;\n    image_url: string;\n    selected: boolean;\n    focused: boolean;\n}\n\n// このコンポーネント内でのハッシュタグのインターフェイス\ninterface IHashtag {\n    id: number;\n    text: string;\n    editing: boolean;\n}\n\nexport default Vue.extend({\n    name: 'Panel-TwitterTab',\n    components: {\n        draggable,\n    },\n    props: {\n        // プレイヤーのインスタンス\n        player: {\n            type: null as PropType<DPlayer>,  // 代入当初は null になるため苦肉の策\n            required: true,\n        },\n        // 仮想キーボードが表示されているかどうか\n        is_virtual_keyboard_display: {\n            type: Boolean as PropType<boolean>,\n            required: true,\n        },\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n\n            // Twitter アカウントを1つでも連携しているかどうか\n            is_logged_in_twitter: false,\n\n            // 現在ツイート対象として選択されている Twitter アカウント\n            selected_twitter_account: null as ITwitterAccount | null,\n\n            // 連携している Twitter アカウントリストを表示しているか\n            is_twitter_account_list_display: false,\n\n            // 保存している Twitter のハッシュタグが入るリスト\n            saved_twitter_hashtags: useSettingsStore().settings.saved_twitter_hashtags.map((hashtag, index) => {\n                // id プロパティは :key=\"\" に指定するためにつける ID (ミリ秒単位のタイムスタンプ + index で適当に一意になるように)\n                return {id: Utils.time() + index, text: hashtag, editing: false} as IHashtag;\n            }),\n\n            // ハッシュタグリストを表示しているか\n            is_hashtag_list_display: false,\n\n            // デフォルトで表示される Twitter タブ内のタブ\n            twitter_active_tab: useSettingsStore().settings.twitter_active_tab,\n\n            // キャプチャを拡大表示するモーダルの表示状態\n            zoom_capture_modal: false,\n\n            // 現在モーダルで拡大表示中のキャプチャのオブジェクト\n            zoom_capture: null as ITweetCapture | null,\n\n            // キャプチャリスト\n            captures: [] as ITweetCapture[],\n\n            // キャプチャリストの要素\n            captures_element: null as HTMLDivElement | null,\n\n            // ツイートハッシュタグフォームにフォーカスしているか\n            is_tweet_hashtag_form_focused: false,\n\n            // ツイート本文フォームにフォーカスしているか\n            is_tweet_text_form_focused: false,\n\n            // ツイートのハッシュタグ\n            tweet_hashtag: '',\n\n            // ツイート本文\n            tweet_text: '',\n\n            // ツイートに添付するキャプチャの Blob のリスト\n            tweet_captures: [] as Blob[],\n\n            // 文字数カウント\n            tweet_letter_count: 140,\n\n            // ツイートを送信中か (API リクエストを実行するまで)\n            is_tweet_sending: false,\n        };\n    },\n    computed: {\n        // ChannelsStore / SettingsStore / UserStore に this.channelsStore / this.settingsStore / this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useChannelsStore, useSettingsStore, useUserStore),\n    },\n    async created() {\n\n        // アカウント情報を更新\n        await this.userStore.fetchUser();\n\n        // ログイン時のみ\n        if (this.userStore.is_logged_in === true) {\n\n            // 連携している Twitter アカウントがあれば true に設定\n            if (this.userStore.user.twitter_accounts.length > 0) {\n                this.is_logged_in_twitter = true;\n\n                // 現在ツイート対象として選択されている Twitter アカウントの ID が設定されていない or ID に紐づく Twitter アカウントがない\n                // 連携している Twitter アカウントのうち、一番最初のものを自動選択する\n                // ここで言う Twitter アカウントの ID は DB 上で連番で振られるもので、Twitter アカウントそのものの固有 ID ではない\n                if (this.settingsStore.settings.selected_twitter_account_id === null ||\n                    !this.userStore.user.twitter_accounts.some((twitter_account) => {\n                        return twitter_account.id === this.settingsStore.settings.selected_twitter_account_id;\n                    })) {\n                    this.settingsStore.settings.selected_twitter_account_id = this.userStore.user.twitter_accounts[0].id;\n                }\n\n                // 現在ツイート対象として選択されている Twitter アカウントを取得・設定\n                const twitter_account_index = this.userStore.user.twitter_accounts.findIndex((twitter_account) => {\n                    // Twitter アカウントの ID が選択されているものと一致する\n                    return twitter_account.id === this.settingsStore.settings.selected_twitter_account_id;\n                });\n                this.selected_twitter_account = this.userStore.user.twitter_accounts[twitter_account_index];\n            }\n        }\n\n        // 局タグ追加処理を走らせる (ハッシュタグフォームのフォーマット処理も同時に行われるが、元々空なので無意味)\n        this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag);\n        this.updateTweetLetterCount();\n    },\n    beforeDestroy() {\n        // 終了前にすべてのキャプチャの Blob URL を revoke してリソースを解放する\n        for (const capture of this.captures) {\n            URL.revokeObjectURL(capture.image_url);\n        }\n    },\n    watch: {\n\n        // 保存しているハッシュタグが変更されたら随時 LocalStorage に保存する\n        saved_twitter_hashtags: {\n            deep: true,\n            handler() {\n                this.settingsStore.settings.saved_twitter_hashtags = this.saved_twitter_hashtags.map(hashtag => hashtag.text);\n            }\n        }\n    },\n    methods: {\n\n        // 文字数カウントを変更するイベント\n        updateTweetLetterCount() {\n\n            // サロゲートペアを考慮し、スプレッド演算子で一度配列化してから数えている\n            // ref: https://qiita.com/suin/items/3da4fb016728c024eaca\n            this.tweet_letter_count = 140 - [...this.tweet_hashtag].length - [...this.tweet_text].length;\n        },\n\n        // クリップボード内のデータがペーストされたときのイベント\n        pasteClipboardData(event: ClipboardEvent) {\n\n            // 一応配列になっているので回しているが、基本1回のペーストにつき DataTransferItem は1個しか入らない\n            for (const clipboard_item of event.clipboardData.items) {\n\n                // 画像のみを対象にする (DataTransferItem.type には MIME タイプが入る)\n                if (clipboard_item.type.startsWith('image/')) {\n\n                    // クリップボード内の画像データを File オブジェクトとして取得し、キャプチャリストに追加\n                    const file = clipboard_item.getAsFile();\n                    this.addCaptureList(file, file.name);\n                }\n            }\n        },\n\n        // ハッシュタグリストボタンが押されたときのイベント\n        clickHashtagListButton() {\n            this.is_hashtag_list_display = !this.is_hashtag_list_display;\n            // すべてのハッシュタグの編集状態を解除する\n            for (const hashtag of this.saved_twitter_hashtags) {\n                hashtag.editing = false;\n            }\n        },\n\n        // ハッシュタグがクリックされたときのイベント\n        clickHashtag(hashtag: IHashtag) {\n            this.tweet_hashtag = hashtag.text;\n            this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag);\n            this.updateTweetLetterCount();\n            window.setTimeout(() => this.is_hashtag_list_display = false, 150);\n        },\n\n        // アカウントボタンが押されたときのイベント\n        clickAccountButton() {\n\n            // Twitter アカウントが連携されていない場合は Twitter 設定画面に飛ばす\n            if (!this.is_logged_in_twitter) {\n\n                // 視聴画面以外に遷移するため、フルスクリーンを解除しないと画面が崩れる\n                if (document.fullscreenElement) {\n                    document.exitFullscreen();\n                }\n\n                this.$router.push({path: '/settings/twitter'});\n                return;\n            }\n\n            // アカウントリストの表示/非表示を切り替え\n            this.is_twitter_account_list_display = !this.is_twitter_account_list_display;\n\n            // アカウントリストが表示されているなら、ハッシュタグリストを非表示にする\n            if (this.is_twitter_account_list_display === true) {\n                this.is_hashtag_list_display = false;\n            }\n        },\n\n        // 選択されている Twitter アカウントを更新する\n        updateSelectedTwitterAccount(twitter_account: ITwitterAccount) {\n            this.settingsStore.settings.selected_twitter_account_id = twitter_account.id;\n            this.selected_twitter_account = twitter_account;\n\n            // Twitter アカウントリストのオーバーレイを閉じる (少し待ってから閉じたほうが体感が良い)\n            window.setTimeout(() => this.is_twitter_account_list_display = false, 150);\n        },\n\n        // キャプチャリスト内のキャプチャがクリックされたときのイベント\n        clickCapture(capture: ITweetCapture) {\n\n            // 選択されたキャプチャが3枚まで & まだ選択されていないならキャプチャをツイート対象に追加する\n            if (this.tweet_captures.length < 4 && capture.selected === false) {\n                capture.selected = true;\n                this.tweet_captures.push(capture.blob);\n            } else {\n                // ツイート対象のキャプチャになっていたら取り除く\n                const index = this.tweet_captures.findIndex(blob => blob === capture.blob);\n                if (index > -1) {\n                    this.tweet_captures.splice(index, 1);\n                }\n                // キャプチャの選択を解除\n                capture.selected = false;\n            }\n        },\n\n        // 撮ったキャプチャを親コンポーネントから受け取り、キャプチャリストに追加する\n        async addCaptureList(blob: Blob, filename: string) {\n\n            if (this.captures_element === null) {\n                this.captures_element = this.$el.querySelector('.tab-content');\n            }\n\n            // 撮ったキャプチャが50件を超えていたら、重くなるので古いものから削除する\n            // 削除する前に Blob URL を revoke してリソースを解放するのがポイント\n            if (this.captures.length > 50) {\n                URL.revokeObjectURL(this.captures[0].image_url);\n                this.captures.shift();\n            }\n\n            // キャプチャリストにキャプチャを追加\n            const blob_url = URL.createObjectURL(blob);\n            this.captures.push({\n                blob: blob,\n                filename: filename,\n                image_url: blob_url,\n                selected: false,\n                focused: false,\n            });\n\n            // キャプチャリストを下にスクロール\n            // this.$nextTick() のコールバックで DOM の更新を待つ\n            this.$nextTick(() => {\n                this.captures_element.scrollTo({\n                    top: this.captures_element.scrollHeight,\n                    behavior: 'smooth',\n                });\n            });\n        },\n\n        // 撮ったキャプチャに番組タイトルの透かしを描画する\n        async drawProgramTitleOnCapture(capture: Blob): Promise<Blob> {\n\n            // キャプチャの Blob を createImageBitmap() で Canvas に描ける ImageBitmap に変換\n            const image_bitmap = await createImageBitmap(capture);\n\n            // OffscreenCanvas が使えるなら使う (OffscreenCanvas の方がパフォーマンスが良い)\n            const canvas = ('OffscreenCanvas' in window) ?\n                new OffscreenCanvas(image_bitmap.width, image_bitmap.height) : document.createElement('canvas');\n\n            // Canvas にキャプチャを描画\n            const context = canvas.getContext('2d', {\n                alpha: false,\n                desynchronized: true,\n                willReadFrequently: false,\n            }) as OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\n            context.drawImage(image_bitmap, 0, 0);\n            image_bitmap.close();\n\n            // 描画設定\n            context.font = 'bold 22px \"YakuHanJPs\", \"Open Sans\", \"Hiragino Sans\", \"Noto Sans JP\", sans-serif'; // フォント\n            context.fillStyle = 'rgba(255, 255, 255, 70%)';  // 半透明の白\n            context.shadowColor = 'rgba(0, 0, 0, 100%)';  // 影の色\n            context.shadowBlur = 4;  // 影をぼかすしきい値\n            context.shadowOffsetX = 0;  // 影のX座標\n            context.shadowOffsetY = 0;  // 影のY座標\n\n            // 番組タイトルの透かしを描画\n            const title = this.channelsStore.channel.current.program_present.title;\n            switch (this.settingsStore.settings.tweet_capture_watermark_position) {\n                case 'TopLeft': {\n                    context.textAlign = 'left'; // 左寄せ\n                    context.textBaseline = 'top'; // ベースラインを上寄せ\n                    context.fillText(title, 16, 12);\n                    break;\n                }\n                case 'TopRight': {\n                    context.textAlign = 'right'; // 右寄せ\n                    context.textBaseline = 'top'; // ベースラインを上寄せ\n                    context.fillText(title, canvas.width - 16, 12);\n                    break;\n                }\n                case 'BottomLeft': {\n                    context.textAlign = 'left'; // 左寄せ\n                    context.textBaseline = 'bottom'; // ベースラインを下寄せ\n                    context.fillText(title, 16, canvas.height - 12);\n                    break;\n                }\n                case 'BottomRight': {\n                    context.textAlign = 'right'; // 右寄せ\n                    context.textBaseline = 'bottom'; // ベースラインを下寄せ\n                    context.fillText(title, canvas.width - 16, canvas.height - 12);\n                    break;\n                }\n            }\n\n            // Blob にして返す\n            if (canvas instanceof OffscreenCanvas) {\n                return await canvas.convertToBlob({type: 'image/jpeg', quality: 1});\n            } else {\n                return new Promise(resolve => canvas.toBlob(blob => resolve(blob), 'image/jpeg', 1));\n            }\n        },\n\n        // チャンネル名から対応する局タグを取得する\n        // とりあえず三大首都圏 + BS のみ対応\n        getChannelHashtag(channel_name: string): string | null {\n            // NHK\n            if (channel_name.startsWith('NHK総合')) {\n                return '#nhk';\n            } else if (channel_name.startsWith('NHKEテレ')) {\n                return '#etv';\n            // 民放\n            } else if (channel_name.startsWith('日テレ')) {\n                return '#ntv';\n            } else if (channel_name.startsWith('読売テレビ')) {\n                return '#ytv';\n            } else if (channel_name.startsWith('中京テレビ')) {\n                return '#chukyotv';\n            } else if (channel_name.startsWith('テレビ朝日')) {\n                return '#tvasahi';\n            } else if (channel_name.startsWith('ABCテレビ')) {\n                return '#abc';\n            } else if (channel_name.startsWith('メ~テレ')) {\n                return '#nagoyatv';\n            } else if (channel_name.startsWith('TBS') && !channel_name.includes('TBSチャンネル')) {\n                return '#tbs';\n            } else if (channel_name.startsWith('MBS')) {\n                return '#mbs';\n            } else if (channel_name.startsWith('CBC')) {\n                return '#cbc';\n            } else if (channel_name.startsWith('テレビ東京')) {\n                return '#tvtokyo';\n            } else if (channel_name.startsWith('テレビ大阪')) {\n                return '#tvo';\n            } else if (channel_name.startsWith('テレビ愛知')) {\n                return '#tva';\n            } else if (channel_name.startsWith('フジテレビ')) {\n                return '#fujitv';\n            } else if (channel_name.startsWith('関西テレビ')) {\n                return '#kantele';\n            } else if (channel_name.startsWith('東海テレビ')) {\n                return '#tokaitv';\n            // 独立局\n            } else if (channel_name.startsWith('TOKYO MX')) {\n                return '#tokyomx';\n            } else if (channel_name.startsWith('tvk')) {\n                return '#tvk';\n            } else if (channel_name.startsWith('チバテレ')) {\n                return '#chibatv';\n            } else if (channel_name.startsWith('テレ玉')) {\n                return '#teletama';\n            } else if (channel_name.startsWith('サンテレビ')) {\n                return '#suntv';\n            } else if (channel_name.startsWith('KBS京都')) {\n                return '#kbs';\n            // BS・CS\n            } else if (channel_name.startsWith('NHKBS1')) {\n                return '#nhkbs1';\n            } else if (channel_name.startsWith('NHKBSプレミアム')) {\n                return '#nhkbsp';\n            } else if (channel_name.startsWith('BS日テレ')) {\n                return '#bsntv';\n            } else if (channel_name.startsWith('BS朝日')) {\n                return '#bsasahi';\n            } else if (channel_name.startsWith('BS-TBS')) {\n                return '#bstbs';\n            } else if (channel_name.startsWith('BSテレ東')) {\n                return '#bstvtokyo';\n            } else if (channel_name.startsWith('BSフジ')) {\n                return '#bsfuji';\n            } else if (channel_name.startsWith('BS11イレブン')) {\n                return '#bs11';\n            } else if (channel_name.startsWith('BS12トゥエルビ')) {\n                return '#bs12';\n            } else if (channel_name.startsWith('AT-X')) {\n                return '#at_x';\n            }\n\n            return null;\n        },\n\n        // ハッシュタグを整形（余計なスペースなどを削り、全角ハッシュを半角ハッシュへ、全角スペースを半角スペースに置換）\n        formatHashtag(tweet_hashtag: string, from_hashtag_list: boolean = false): string {\n\n            // ハッシュとスペースの表記ゆれを統一し、連続するハッシュやスペースを1つにする\n            const tweet_hashtag_array = tweet_hashtag.trim()\n                .replaceAll('♯', '#').replaceAll('＃', '#').replace(/#{2,}/g, '#').replaceAll('　', ' ').replaceAll(/ +/g,' ').split(' ')\n                .filter(hashtag => hashtag !== '');\n\n            // ハッシュタグがついてない場合にハッシュタグを付与\n            for (let index in tweet_hashtag_array) {\n                if (!tweet_hashtag_array[index].startsWith('#')) {\n                    tweet_hashtag_array[index] = `#${tweet_hashtag_array[index]}`;\n                }\n            }\n\n            // 設定でオンになっている場合のみ、視聴中チャンネルの局タグを自動で追加する (ハッシュタグリスト内のハッシュタグは除外)\n            if (this.settingsStore.settings.auto_add_watching_channel_hashtag === true && from_hashtag_list === false) {\n                const channel_hashtag = this.getChannelHashtag(this.channelsStore.channel.current.channel_name);\n                if (channel_hashtag !== null) {\n                    if (tweet_hashtag_array.includes(channel_hashtag) === false) {\n                        tweet_hashtag_array.push(channel_hashtag);\n                    }\n                }\n            }\n\n            return tweet_hashtag_array.join(' ');\n        },\n\n        // ツイートを送信する\n        async sendTweet() {\n\n            // 送信中フラグを立てる (重複送信防止)\n            if (this.is_tweet_sending === true) {\n                return;\n            }\n            this.is_tweet_sending = true;\n\n            // ハッシュタグを整形\n            this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag);\n            this.updateTweetLetterCount();\n            const tweet_hashtag = this.tweet_hashtag;\n\n            // 実際に送るツイート本文を作成\n            let tweet_text = this.tweet_text;\n            if (tweet_hashtag !== '') {  // ハッシュタグが入力されているときのみ\n                switch (this.settingsStore.settings.tweet_hashtag_position) {\n                    // ツイート本文の前に追加する\n                    case 'Prepend': {\n                        tweet_text = `${tweet_hashtag} ${this.tweet_text}`;\n                        break;\n                    }\n                    // ツイート本文の後に追加する\n                    case 'Append': {\n                        tweet_text = `${this.tweet_text} ${tweet_hashtag}`;\n                        break;\n                    }\n                    // ツイート本文の前に追加してから改行する\n                    case 'PrependWithLineBreak': {\n                        tweet_text = `${tweet_hashtag}\\n${this.tweet_text}`;\n                        break;\n                    }\n                    // ツイート本文の後に改行してから追加する\n                    case 'AppendWithLineBreak': {\n                        tweet_text = `${this.tweet_text}\\n${tweet_hashtag}`;\n                        break;\n                    }\n                }\n            }\n\n            // キャプチャへの透かしの描画がオンの場合、キャプチャの Blob を透かし付きのものに差し替える\n            const new_tweet_captures: Blob[] = [];\n            for (let tweet_capture of this.tweet_captures) {\n                if (this.settingsStore.settings.tweet_capture_watermark_position !== 'None') {\n                    tweet_capture = await this.drawProgramTitleOnCapture(tweet_capture);\n                }\n                new_tweet_captures.push(tweet_capture);\n            }\n\n            // ツイート送信 API にリクエスト\n            // レスポンスは待たない\n            Twitter.sendTweet(this.selected_twitter_account.screen_name, tweet_text, new_tweet_captures).then((result) => {\n                this.player.notice(result.message);\n            });\n\n            // 連投防止のため、フォーム上のツイート本文・キャプチャの選択・キャプチャのフォーカスを消去\n            // 送信した感を出す意味合いもある\n            for (const capture of this.captures) {\n                capture.selected = false;\n                capture.focused = false;\n            }\n            this.tweet_captures = [];\n            this.tweet_text = '';\n\n            // 送信中フラグを下ろす\n            this.is_tweet_sending = false;\n\n            // パネルを閉じるように親コンポーネントに伝える\n            if (this.settingsStore.settings.fold_panel_after_sending_tweet === true) {\n                this.$emit('panel_folding_requested');\n                (this.$refs.tweet_text as HTMLTextAreaElement).blur();  // フォーカスを外す\n            }\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Twitter.vue?vue&type=template&id=5f394091&scoped=true&\"\nimport script from \"./Twitter.vue?vue&type=script&lang=ts&\"\nexport * from \"./Twitter.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Twitter.vue?vue&type=style&index=0&id=5f394091&prod&lang=scss&\"\nimport style1 from \"./Twitter.vue?vue&type=style&index=1&id=5f394091&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5f394091\",\n  null\n  \n)\n\nexport default component.exports","\nimport APIClient from '@/services/APIClient';\n\n\nclass Captures {\n\n    /**\n     * キャプチャをサーバーにアップロードし保存する\n     * @param blob キャプチャ画像の Blob\n     * @param filename サーバーに保存するときのファイル名\n     */\n    static async uploadCapture(blob: Blob, filename: string): Promise<void> {\n\n        // キャプチャ画像の File オブジェクト (= Blob) を FormData に入れる\n        // multipart/form-data で送るために必要\n        // ref: https://r17n.page/2020/02/04/nodejs-axios-file-upload-api/\n        const form_data = new FormData();\n        form_data.append('image', blob, filename);\n\n        // API リクエストを実行\n        const response = await APIClient.post('/captures', form_data, {headers: {'Content-Type': 'multipart/form-data'}});\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'キャプチャのアップロードに失敗しました。');\n            return;\n        }\n    }\n\n    // TODO: キャプチャリスト機能の実装時にいろいろ追加する\n}\n\nexport default Captures;\n","\nimport { Buffer } from 'buffer';\n\nimport { convertBlobToPng, copyBlobToClipboard } from 'copy-image-clipboard';\nimport dayjs from 'dayjs';\nimport DPlayer from 'dplayer';\nimport 'dayjs/locale/ja';\nimport * as piexif from 'piexifjs';\n\nimport Captures from '@/services/Captures';\nimport useChannelsStore from '@/store/ChannelsStore';\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils from '@/utils';\n\n\n// キャプチャに書き込む EXIF メタデータのインターフェイス\ninterface ICaptureExifData {\n    captured_at: string;\n    captured_playback_position: number;\n    network_id: number;\n    service_id: number;\n    event_id: number;\n    title: string;\n    description: string;\n    start_time: string;\n    end_time: string;\n    duration: number;\n    caption_text: string | null;\n    is_caption_composited: boolean;\n    is_comment_composited: boolean;\n}\n\n// CaptureHandler.setEXIFDataToCapture() のオプションのインターフェイス\ninterface ISetEXIFDataToCaptureOptions {\n    network_id: number;\n    service_id: number;\n    event_id: number;\n    title: string;\n    description: string;\n    start_time: string;\n    end_time: string;\n    duration: number;\n    caption_text: string | null;\n    is_caption_composited: boolean;\n    is_comment_composited: boolean;\n}\n\n\nclass CaptureHandler {\n\n    private player: DPlayer;\n    private player_container: HTMLElement;\n    private captured_callback: (blob: Blob, filename: string) => void;\n    private capture_button: HTMLDivElement;\n    private comment_capture_button: HTMLDivElement;\n    private canvas: OffscreenCanvas | HTMLCanvasElement;\n    private canvas_context: OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\n    private settings_store = useSettingsStore();\n\n    constructor(player: DPlayer, captured_callback: (blob: Blob, filename: string) => void) {\n\n        this.player = player;\n        this.player_container = this.player.container;\n        this.captured_callback = captured_callback;\n\n        // コメント付きキャプチャボタンの HTML を追加\n        // insertAdjacentHTML で .dplayer-icons-right の一番左側に配置する\n        // この後に通常のキャプチャボタンが insert されるので、実際は左から2番目\n        // TODO: ボタンのデザインをコメント付きだと分かるようなものに変更する\n        this.player_container.querySelector('.dplayer-icons.dplayer-icons-right').insertAdjacentHTML('afterbegin', `\n            <div class=\"dplayer-icon dplayer-comment-capture-icon\" aria-label=\"コメントを付けてキャプチャ\"\n                data-balloon-nofocus=\"\" data-balloon-pos=\"up\">\n                <span class=\"dplayer-icon-content\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\"><path d=\"M16 23c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zM16 13c-2.206 0-4 1.794-4 4s1.794 4 4 4c2.206 0 4-1.794 4-4s-1.794-4-4-4zM27 28h-22c-1.654 0-3-1.346-3-3v-16c0-1.654 1.346-3 3-3h3c0.552 0 1 0.448 1 1s-0.448 1-1 1h-3c-0.551 0-1 0.449-1 1v16c0 0.552 0.449 1 1 1h22c0.552 0 1-0.448 1-1v-16c0-0.551-0.448-1-1-1h-11c-0.552 0-1-0.448-1-1s0.448-1 1-1h11c1.654 0 3 1.346 3 3v16c0 1.654-1.346 3-3 3zM24 10.5c0 0.828 0.672 1.5 1.5 1.5s1.5-0.672 1.5-1.5c0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5zM15 4c0 0.552-0.448 1-1 1h-4c-0.552 0-1-0.448-1-1v0c0-0.552 0.448-1 1-1h4c0.552 0 1 0.448 1 1v0z\"></path></svg>\n                </span>\n            </div>\n        `);\n\n        // キャプチャボタンの HTML を追加\n        // 標準のスクリーンショット機能は貧弱なので、あえて独自に実装している（そのほうが自由度も高くてやりやすい）\n        // insertAdjacentHTML で .dplayer-icons-right の一番左側に配置する\n        this.player_container.querySelector('.dplayer-icons.dplayer-icons-right').insertAdjacentHTML('afterbegin', `\n            <div class=\"dplayer-icon dplayer-capture-icon\" aria-label=\"キャプチャ\"\n                data-balloon-nofocus=\"\" data-balloon-pos=\"up\">\n                <span class=\"dplayer-icon-content\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\"><path d=\"M16 23c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zM16 13c-2.206 0-4 1.794-4 4s1.794 4 4 4c2.206 0 4-1.794 4-4s-1.794-4-4-4zM27 28h-22c-1.654 0-3-1.346-3-3v-16c0-1.654 1.346-3 3-3h3c0.552 0 1 0.448 1 1s-0.448 1-1 1h-3c-0.551 0-1 0.449-1 1v16c0 0.552 0.449 1 1 1h22c0.552 0 1-0.448 1-1v-16c0-0.551-0.448-1-1-1h-11c-0.552 0-1-0.448-1-1s0.448-1 1-1h11c1.654 0 3 1.346 3 3v16c0 1.654-1.346 3-3 3zM24 10.5c0 0.828 0.672 1.5 1.5 1.5s1.5-0.672 1.5-1.5c0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5zM15 4c0 0.552-0.448 1-1 1h-4c-0.552 0-1-0.448-1-1v0c0-0.552 0.448-1 1-1h4c0.552 0 1 0.448 1 1v0z\"></path></svg>\n                </span>\n            </div>\n        `);\n\n        this.comment_capture_button = this.player_container.querySelector('.dplayer-comment-capture-icon');\n        this.capture_button = this.player_container.querySelector('.dplayer-capture-icon');\n\n        // キャプチャ用の Canvas を初期化\n        // パフォーマンス向上のため、一度作成した Canvas は使い回す\n        // OffscreenCanvas が使えるなら使う (OffscreenCanvas の方がパフォーマンスが良い)\n        this.canvas = ('OffscreenCanvas' in window) ? new OffscreenCanvas(0, 0) : document.createElement('canvas');\n        this.canvas_context = this.canvas.getContext('2d', {\n            alpha: false,\n            desynchronized: true,\n            willReadFrequently: false,\n        }) as OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\n\n        // 映像の解像度を Canvas サイズとして設定\n        // 映像が読み込まれた / 画質が変わった際に Canvas のサイズを映像のサイズに合わせる\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        player.on('loadedmetadata', async () => {\n            this.canvas.width = player.video.videoWidth;\n            this.canvas.height = player.video.videoHeight;\n            // 映像サイズがちゃんと設定されるまで繰り返す (Safari 対策)\n            while (this.canvas.width === 0 && this.canvas.height === 0) {\n                await Utils.sleep(0.1);\n                this.canvas.width = player.video.videoWidth;\n                this.canvas.height = player.video.videoHeight;\n            }\n        });\n    }\n\n\n    /**\n     * 映像をキャプチャして保存する\n     * 映像のみと字幕付き (字幕表示時のみ) の両方のキャプチャを生成できる\n     * @param with_comments キャプチャにコメントを合成するかどうか\n     */\n    public async captureAndSave(with_comments: boolean): Promise<void> {\n\n        const total_time = Utils.time();\n\n        // チャンネル情報を取得 (ライブ視聴画面のみ、ビデオ視聴画面では null になる)\n        const channels_store = useChannelsStore();\n        const channel = channels_store.is_showing_live ? channels_store.channel.current : null;\n\n        // ***** バリデーション *****\n\n        // ラジオチャンネルを視聴している場合 (当然映像がないのでキャプチャできない)\n        if (channel !== null && channel.is_radiochannel === true) {\n            this.player.notice('ラジオチャンネルはキャプチャできません。');\n            return;\n        }\n\n        // まだ映像の表示準備が終わっていない (Canvas の幅/高さが 0 のまま)\n        if (this.canvas.width === 0 && this.canvas.height === 0) {\n            this.player.notice('読み込み中はキャプチャできません。');\n            return;\n        }\n\n        // コメントが表示されていないのにコメント付きキャプチャしようとした\n        if (with_comments === true && this.player.danmaku.showing === false) {\n            this.player.notice('コメントを付けてキャプチャするには、コメント表示をオンにしてください。');\n            return;\n        }\n\n        // ***** キャプチャの下準備 *****\n\n        // キャプチャ中はキャプチャボタンをハイライトする\n        this.addHighlight(with_comments);\n\n        // ファイル名（拡張子なし）\n        // TODO: ファイル名パターンを変更できるようにする\n        const filename_base = `Capture_${dayjs().format('YYYYMMDD-HHmmss')}`;\n        const filename = `${filename_base}.jpg`;  // 字幕なしキャプチャ\n        const filename_caption = `${filename_base}_caption.jpg`;  // 字幕ありキャプチャ\n\n        // 字幕・文字スーパーの Canvas を取得\n        // getRawCanvas() で映像と同じ解像度の Canvas が取得できる\n        const caption_canvas: HTMLCanvasElement = this.player.plugins.aribb24Caption.getRawCanvas();\n        const superimpose_canvas: HTMLCanvasElement = this.player.plugins.aribb24Superimpose.getRawCanvas();\n\n        // 字幕が表示されているか\n        // @ts-ignore\n        const is_caption_showing = (this.player.plugins.aribb24Caption.isShowing === true &&\n                                    this.player.plugins.aribb24Caption.isPresent());\n\n        // 文字スーパーが表示されているか\n        // @ts-ignore\n        const is_superimpose_showing = (this.player.plugins.aribb24Superimpose.isShowing === true &&\n                                        this.player.plugins.aribb24Superimpose.isPresent());\n\n        // 字幕が表示されている場合、表示中の字幕のテキストを取得\n        // 取得した字幕のテキストは、キャプチャに字幕が合成されているかに関わらず、常に EXIF メタデータに書き込まれる\n        // 字幕が表示されていない場合は null を入れ、キャプチャしたシーンで字幕が表示されていなかったことを明示する\n        const caption_text = is_caption_showing ? this.player.plugins.aribb24Caption.getTextContent() : null;\n\n        // EXIF に書き込むメタデータを取得する\n        // ライブ視聴画面では、番組情報から EXIF に書き込むメタデータを取得する\n        let exif_options: ISetEXIFDataToCaptureOptions;\n        if (channel !== null) {\n            exif_options = {\n                network_id: channel.program_present.network_id,\n                service_id: channel.program_present.service_id,\n                event_id: channel.program_present.event_id,\n                title: channel.program_present.title,\n                description: channel.program_present.description,\n                start_time: channel.program_present.start_time,\n                end_time: channel.program_present.end_time,\n                duration: channel.program_present.duration,\n                caption_text: caption_text,\n                is_caption_composited: false,  // 後で上書きされる\n                is_comment_composited: false,  // 後で上書きされる\n            };\n        // ビデオ視聴画面では、録画番組情報から EXIF に書き込むメタデータを取得する\n        } else {\n            // TODO\n        }\n\n        // エクスポートして保存する共通処理\n        const export_and_save = async (\n            canvas: OffscreenCanvas | HTMLCanvasElement,\n            filename: string,\n            exif_options: ISetEXIFDataToCaptureOptions,\n        ): Promise<Blob | false> => {\n\n            // Canvas を Blob にエクスポート\n            const time = Utils.time();\n            let blob: Blob;\n            try {\n                blob = await this.exportToBlob(canvas);\n            } catch (error) {\n                console.log(error);\n                this.player.notice('キャプチャの保存に失敗しました…');\n                return false;\n            }\n            console.log('[CaptureHandler] Export to Blob:', Utils.mathFloor(Utils.time() - time, 3), 'sec');\n\n            // キャプチャに番組情報などのメタデータ (EXIF) をセット\n            blob = await this.setEXIFDataToCapture(blob, exif_options);\n\n            // キャプチャの保存先: ブラウザでダウンロード or 両方\n            if (['Browser', 'Both'].includes(this.settings_store.settings.capture_save_mode)) {\n                Utils.downloadBlobData(blob, filename);\n            }\n\n            // キャプチャの保存先: KonomiTV サーバーにアップロード or 両方\n            // 時間がかかるし完了を待つ必要がないので非同期\n            if (['UploadServer', 'Both'].includes(this.settings_store.settings.capture_save_mode)) {\n                Captures.uploadCapture(blob, filename);\n            }\n\n            return blob;\n        };\n\n        // ***** 映像のキャプチャ *****\n\n        // null はまだキャプチャしていないことを、false はキャプチャに失敗したことを表す\n        let capture_normal: {blob: Blob, filename: string} | null | false = null;\n        let capture_caption: {blob: Blob, filename: string} | null | false = null;\n\n        // 映像の ImageBitmap を取得\n        const image_bitmap = await createImageBitmap(this.player.video);\n\n        // もし映像以外に追加で合成するものがないなら、処理の高速化のために ImageBitmap をそのまま Canvas に転送して Blob 化する\n        // コメントキャプチャではない & 文字スーパーが表示されていない (=合成処理を行う必要がない) &\n        // (字幕が表示されていない or 字幕が表示されているが合成しないように設定されている) 場合\n        // コメント付きキャプチャではなく、かつ字幕のない番組では大半がここの処理を通ることになる\n        if (with_comments === false && is_superimpose_showing === false &&\n            (is_caption_showing === false || this.settings_store.settings.capture_caption_mode === 'VideoOnly')) {\n\n            // OffscreenCanvas が使えるなら使う (OffscreenCanvas の方がパフォーマンスが良い)\n            const bitmap_canvas = ('OffscreenCanvas' in window) ?\n                new OffscreenCanvas(image_bitmap.width, image_bitmap.height) : document.createElement('canvas');\n            bitmap_canvas.width = image_bitmap.width;\n            bitmap_canvas.height = image_bitmap.height;\n            const canvas_context = bitmap_canvas.getContext('bitmaprenderer', {alpha: false}) as ImageBitmapRenderingContext;\n\n            // Canvas に映像がキャプチャされた ImageBitmap を転送\n            // 描画ではなくゼロコピーで転送しているらしい…？\n            canvas_context.transferFromImageBitmap(image_bitmap);\n            image_bitmap.close();  // 今後使うことはないので明示的に閉じる\n\n            // ファイル名\n            // 保存モードが「字幕キャプチャのみ」のとき (=字幕キャプチャのみをキャプチャする設定にしていたが、字幕がそもそもないとき) は、\n            // 便宜上字幕ありキャプチャと同じファイル名で保存する\n            const filename_real =\n                (this.settings_store.settings.capture_caption_mode === 'CompositingCaption') ? filename_caption : filename;\n\n            // Blob にエクスポートして保存\n            // false が返ってきた場合は失敗を意味する\n            const blob = await export_and_save(bitmap_canvas, filename_real, {\n                ...exif_options,\n                is_caption_composited: false,\n                is_comment_composited: false,\n            });\n            if (blob !== false) {\n                capture_normal = {blob: blob, filename: filename_real};\n            } else {\n                capture_normal = false;  // キャプチャのエクスポートに失敗\n            }\n\n            // キャプチャの Blob をコールバック関数に渡す\n            // ここでコールバック関数に渡した Blob が Twitter タブのキャプチャリストに送られる\n            if (capture_normal !== false) {\n                this.captured_callback(capture_normal.blob, capture_normal.filename);\n            }\n\n        // ***** 通常実行 (Canvas にキャプチャ以外のデータを重ねて描画する必要があるケース) *****\n        } else {\n\n            const promises: Promise<void>[] = [];\n\n            // Canvas に映像がキャプチャされた ImageBitmap を描画\n            this.canvas_context.drawImage(image_bitmap, 0, 0, this.canvas.width, this.canvas.height);\n\n            // 文字スーパーを描画 (表示されている場合)\n            // 文字スーパー自体が稀だし、文字スーパーなしでキャプチャ撮りたいユースケースはない…はず\n            if (is_superimpose_showing === true) {\n                this.canvas_context.drawImage(superimpose_canvas, 0, 0, this.canvas.width, this.canvas.height);\n            }\n\n            // コメント付きキャプチャ: 追加でニコニコ実況のコメントを描画\n            let comments_image: HTMLImageElement | null = null;\n            if (with_comments === true) {\n                comments_image = await this.createCommentsImage();\n                await this.drawComments(comments_image);\n            }\n\n            // ***** 映像のみのキャプチャを保存 *****\n\n            // 字幕表示時のキャプチャの保存モード: 映像のみ or 両方\n            // 保存モードが「字幕キャプチャのみ」になっているが字幕が表示されていない場合も実行する\n            if (['VideoOnly', 'Both'].includes(this.settings_store.settings.capture_caption_mode) || is_caption_showing === false) {\n\n                promises.push((async () => {\n\n                    // ファイル名\n                    // 保存モードが「字幕キャプチャのみ」のとき (=字幕キャプチャのみをキャプチャする設定にしていたが、字幕がそもそもないとき) は、\n                    // 便宜上字幕ありキャプチャと同じファイル名で保存する\n                    const filename_real =\n                        (this.settings_store.settings.capture_caption_mode === 'CompositingCaption') ? filename_caption : filename;\n\n                    // Blob にエクスポートして保存\n                    const blob = await export_and_save(this.canvas, filename_real, {\n                        ...exif_options,\n                        is_caption_composited: false,\n                        is_comment_composited: with_comments,\n                    });\n                    if (blob !== false) {\n                        capture_normal = {blob: blob, filename: filename_real};\n                    } else {\n                        capture_normal = false;  // キャプチャのエクスポートに失敗\n                    }\n\n                    // キャプチャの Blob をコールバック関数に渡す\n                    // ここでコールバック関数に渡した Blob が Twitter タブのキャプチャリストに送られる\n                    if (capture_normal !== false) {\n                        this.captured_callback(capture_normal.blob, capture_normal.filename);\n                    }\n\n                })());\n            }\n\n            // ***** 字幕付きのキャプチャを保存 *****\n\n            // 字幕表示時のキャプチャの保存モード: 字幕キャプチャのみ or 両方\n            // 字幕が表示されているときのみ実行（字幕が表示されていないのにやっても意味がない）\n            if (['CompositingCaption', 'Both'].includes(this.settings_store.settings.capture_caption_mode) && is_caption_showing === true) {\n\n                promises.push((async () => {\n\n                    // コメント付きキャプチャ: 映像と文字スーパーの描画をやり直す\n                    // すでに字幕なしキャプチャを生成する過程でコメントを描画してしまっているため、映像描画からやり直す必要がある\n                    if (with_comments === true) {\n                        this.canvas_context.drawImage(image_bitmap, 0, 0, this.canvas.width, this.canvas.height);\n                        if (is_superimpose_showing === true) {\n                            this.canvas_context.drawImage(superimpose_canvas, 0, 0, this.canvas.width, this.canvas.height);\n                        }\n                    }\n                    image_bitmap.close();  // 今後使うことはないので明示的に閉じる\n\n                    // 字幕を重ねて描画\n                    this.canvas_context.drawImage(caption_canvas, 0, 0, this.canvas.width, this.canvas.height);\n\n                    // コメント付きキャプチャ: 追加でニコニコ実況のコメントを描画\n                    if (with_comments === true) {\n                        await this.drawComments(comments_image);\n                    }\n\n                    // Blob にエクスポートして保存\n                    const blob = await export_and_save(this.canvas, filename_caption, {\n                        ...exif_options,\n                        is_caption_composited: true,\n                        is_comment_composited: with_comments,\n                    });\n                    if (blob !== false) {\n                        capture_caption = {blob: blob, filename: filename_caption};\n                    } else {\n                        capture_caption = false;  // キャプチャのエクスポートに失敗\n                    }\n\n                    // キャプチャの Blob をコールバック関数に渡す\n                    // ここでコールバック関数に渡した Blob が Twitter タブのキャプチャリストに送られる\n                    if (capture_caption !== false) {\n                        // 字幕表示時のキャプチャの保存モードが「両方 (Both)」のときのみ、映像のみのキャプチャの生成が終わるまで待ってから実行\n                        // 必ずキャプチャリストへの追加が [映像のみ] → [字幕付き] の順序で行われるようにする\n                        if (this.settings_store.settings.capture_caption_mode === 'Both') {\n                            while (capture_normal === null) {\n                                // Blob (成功) か false (失敗) が capture_normal に入るまでループ\n                                await Utils.sleep(0.01);\n                            }\n                        }\n                        this.captured_callback(capture_caption.blob, capture_caption.filename);\n                    }\n\n                })());\n            }\n\n            // すべてのキャプチャ処理が終わるまで待つ\n            await Promise.all(promises);\n        }\n\n        console.log('[CaptureHandler] Total:', Utils.mathFloor(Utils.time() - total_time, 3), 'sec');\n\n        // キャプチャボタンのハイライトを削除する\n        this.removeHighlight(with_comments);\n\n        // Twitter タブのキャプチャリストに送る処理が最優先なので、コールバックを実行しきった後に時間のかかるクリップボードへのコピーを行う\n        for (const capture of [capture_normal, capture_caption]) {\n\n            // クリップボードへのコピーが有効なら、キャプチャの Blob をクリップボードにコピー\n            // PNG 以外は受け付けないそうなので、JPEG を PNG に変換してからコピーしている\n            if (this.settings_store.settings.capture_copy_to_clipboard && capture !== null && capture !== false) {\n                try {\n                    await copyBlobToClipboard(await convertBlobToPng(capture.blob));\n                } catch (error) {\n                    this.player.notice('クリップボードへのキャプチャのコピーに失敗しました…');\n                    console.error(error);\n                }\n            }\n        }\n    }\n\n\n    /**\n     * キャプチャボタンをハイライトする\n     * @param with_comments コメント付きキャプチャボタンをハイライトするか\n     */\n    private addHighlight(with_comments: boolean = false): void {\n        if (with_comments) {\n            this.comment_capture_button.classList.add('dplayer-capturing');\n        } else {\n            this.capture_button.classList.add('dplayer-capturing');\n        }\n    }\n\n\n    /**\n     * キャプチャボタンのハイライトを外す\n     * @param with_comments コメント付きキャプチャボタンのハイライトを外すか\n     */\n    private removeHighlight(with_comments: boolean = false): void {\n        if (with_comments) {\n            this.comment_capture_button.classList.remove('dplayer-capturing');\n        } else {\n            this.capture_button.classList.remove('dplayer-capturing');\n        }\n    }\n\n\n    /**\n     * DPlayer から取得したコメント HTML を SVG 画像の HTMLImageElement に変換する\n     * ZenzaWatch のコードを参考にしている\n     * ref: https://github.com/segabito/ZenzaWatch/blob/master/packages/lib/src/dom/VideoCaptureUtil.js\n     * ref: https://web.archive.org/web/2/https://developer.mozilla.org/ja/docs/Web/HTML/Canvas/Drawing_DOM_objects_into_a_canvas\n     * @param html DPlayer から取得したコメント HTML\n     * @param width SVG 画像の幅\n     * @param height SVG 画像の高さ\n     * @returns SVG 画像の HTMLImageElement\n     */\n    private async commentsHTMLtoSVGImage(html: string, width: number, height: number): Promise<HTMLImageElement> {\n\n        // SVG の foreignObject を使い、HTML をそのまま SVG に埋め込む\n        // SVG なので、CSS はインラインでないと適用されない…\n        // DPlayer の danmaku.scss の内容のうち、描画に必要なプロパティのみを列挙 (追加変更したものもある)\n        // ref: https://github.com/tsukumijima/DPlayer/blob/master/src/css/danmaku.scss\n        const svg = (`\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\">\n                <foreignObject width=\"100%\" height=\"100%\">\n                    <div xmlns=\"http://www.w3.org/1999/xhtml\">\n                        <style>\n                        .dplayer-danmaku {\n                            position: absolute;\n                            top: 0;\n                            left: 0;\n                            right: 0;\n                            bottom: 0;\n                            color: #fff;\n                            font-size: 29px;\n                            font-family: 'YakuHanJPs', 'Open Sans', 'Hiragino Sans', 'Noto Sans JP', sans-serif;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item {\n                            display: inline-block;\n                            line-height: 1;\n                            font-weight: bold;\n                            font-size: var(--dplayer-danmaku-font-size);\n                            opacity: var(--dplayer-danmaku-opacity);\n                            text-shadow: 1.2px 1.2px 4px rgba(0, 0, 0, 0.9);\n                            white-space: nowrap;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item--demo {\n                            position: absolute;\n                            visibility: hidden;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item span {\n                            box-decoration-break: clone;\n                            -webkit-box-decoration-break: clone;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item.dplayer-danmaku-size-big {\n                            font-size: calc(var(--dplayer-danmaku-font-size) * 1.25);\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item.dplayer-danmaku-size-small {\n                            font-size: calc(var(--dplayer-danmaku-font-size) * 0.8);\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-right {\n                            position: absolute;\n                            right: 0;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-top, .dplayer-danmaku .dplayer-danmaku-bottom {\n                            position: absolute;\n                            left: 50%;\n                            transform: translateX(-50%);\n                        }\n                        </style>\n                        ${html}\n                    </div>\n                </foreignObject>\n            </svg>\n        `).trim();\n\n        // Data URL 化して Image オブジェクトにする\n        // わざわざ Blob にするよりこっちのほうが楽\n        const image = new Image();\n        image.src = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(svg)}`;\n\n        // Image は onload を使わなくても await Image.decode() でロードできる\n        await image.decode();\n        return image;\n    }\n\n\n    /**\n     * DPlayer から表示中のコメントを取得し、SVG 画像の HTMLImageElement を作成する\n     * @returns 表示されているコメントが描画された HTMLImageElement\n     */\n    private async createCommentsImage(): Promise<HTMLImageElement> {\n\n        // コメントが表示されている要素の HTML を取得する\n        let comments_html = this.player.template.danmaku.outerHTML;\n\n        // HTML を取得するだけではスクロール中コメントの表示位置が特定できないため、HTML を修正する\n        for (const comment of this.player_container.querySelectorAll('.dplayer-danmaku-move')) { // コメントの数だけ置換\n            // スクロール中のコメントの表示座標を計算\n            const position = comment.getBoundingClientRect().left - this.player.video.getBoundingClientRect().left;\n            comments_html = comments_html.replace(/transform: translateX\\(.*?\\);/, `left: ${position}px;`)\n                .replaceAll('border: 2px solid #E64F97;', '');\n        }\n\n        // HTML を画像として取得\n        // SVG のサイズはコメントが表示されている要素に合わせる (そうしないとプレイヤー側と一致しない)\n        // SVG はベクター画像なので、リサイズしても画質が変わらないはず\n        return await this.commentsHTMLtoSVGImage(\n            comments_html,\n            this.player.template.danmaku.offsetWidth,\n            this.player.template.danmaku.offsetHeight,\n        );\n    }\n\n\n    /**\n     * 現在表示されているニコニコ実況のコメントを Canvas に描画する\n     */\n    private async drawComments(comments_image: HTMLImageElement): Promise<void> {\n\n        // コメント描画領域がコントロールの表示によりリサイズされている (=16:9でない) 場合も考慮して、コメント要素の offsetWidth から高さを求める\n        // 映像の横解像度 (ex: 1920) がコメント描画領域の幅 (ex: 1280) の何倍かの割合 (ex: 1.5 (150%))\n        const draw_scale_ratio = this.canvas.width / this.player.template.danmaku.offsetWidth;\n\n        // コメント描画領域の高さを映像の横解像度に合わせて（コメント描画領域のアスペクト比を維持したまま）拡大した値\n        // 映像の縦解像度が 1080 のとき、コントロールがコメント領域と被っていない or 表示されていないなら、この値は 1080 に近くなる\n        const draw_height = this.player.template.danmaku.offsetHeight * draw_scale_ratio;\n\n        this.canvas_context.drawImage(comments_image, 0, 0, this.canvas.width, draw_height);\n    }\n\n\n    /**\n     * Canvas もしくは OffscreenCanvas に描画されている画像を Blob に変換する\n     * JPEG 画像の品質は 99% にした方が若干 Blob 変換までの速度が速い (？)\n     * @param canvas Canvas もしくは OffscreenCanvas\n     * @returns Blob 化した画像\n     */\n    private async exportToBlob(canvas: HTMLCanvasElement | OffscreenCanvas): Promise<Blob> {\n        if ('OffscreenCanvas' in window && canvas instanceof OffscreenCanvas) {\n            return await canvas.convertToBlob({type: 'image/jpeg', quality: 0.99});\n        } else if (canvas instanceof HTMLCanvasElement) {\n            return new Promise((resolve, reject) => {\n                canvas.toBlob((blob) => {\n                    if (blob !== null) {\n                        resolve(blob);\n                    } else {\n                        reject(new Error('Failed to convert canvas to blob'));\n                    }\n                }, 'image/jpeg', 0.99);\n            });\n        }\n    }\n\n\n    /**\n     * キャプチャ画像に番組情報と撮影時刻、字幕やコメントが合成されているかどうかのメタデータ (EXIF) をセットする\n     * @param blob キャプチャ画像の Blob オブジェクト\n     * @param options EXIF にセットする番組情報データ・字幕テキスト・字幕が合成されているかどうか・コメントが合成されているかどうか\n     * @returns EXIF が追加されたキャプチャ画像の Blob オブジェクト\n     */\n    private async setEXIFDataToCapture(blob: Blob, options: ISetEXIFDataToCaptureOptions): Promise<Blob> {\n\n        // 番組開始時刻換算のキャプチャ時刻 (秒)\n        const captured_playback_position = dayjs().diff(dayjs(options.start_time), 'second', true);\n\n        // EXIF の XPComment 領域に入れるメタデータの JSON オブジェクト\n        // 撮影時刻とチャンネル・番組を一意に特定できる情報を入れる\n        const json: ICaptureExifData = {\n            captured_at: dayjs().format('YYYY-MM-DDTHH:mm:ss+09:00'),  // ISO8601 フォーマットのキャプチャ時刻\n            captured_playback_position: captured_playback_position,  // 番組開始時刻換算のキャプチャ時刻 (秒)\n            network_id: options.network_id,    // 番組が放送されたチャンネルのネットワーク ID\n            service_id: options.service_id,    // 番組が放送されたチャンネルのサービス ID\n            event_id: options.event_id,        // 番組のイベント ID\n            title: options.title,              // 番組タイトル\n            description: options.description,  // 番組概要\n            start_time: options.start_time,    // 番組開始時刻 (ISO8601 フォーマット)\n            end_time: options.end_time,        // 番組終了時刻 (ISO8601 フォーマット)\n            duration: options.duration,        // 番組長 (秒)\n            caption_text: options.caption_text,        // 字幕のテキスト (キャプチャした瞬間に字幕が表示されていなかったときは null)\n            is_caption_composited: options.is_caption_composited,  // 字幕が合成されているか\n            is_comment_composited: options.is_comment_composited,  // コメントが合成されているか\n        };\n\n        // 保存する EXIF メタデータを構築\n        // ref: 「カメラアプリで体感するWeb App」4.2\n        const datetime = dayjs().format('YYYY:MM:DD HH:mm:ss');  // すべてコロンで区切るのがポイント\n        const exif: piexif.IExif = {\n            '0th': {\n                // 必須らしいプロパティ\n                // とりあえずデフォルト値 (?) を設定しておく\n                [piexif.TagValues.ImageIFD.XResolution]: [72, 1],\n                [piexif.TagValues.ImageIFD.YResolution]: [72, 1],\n                [piexif.TagValues.ImageIFD.ResolutionUnit]: 2,\n                [piexif.TagValues.ImageIFD.YCbCrPositioning]: 1,\n                // 撮影時刻\n                [piexif.TagValues.ImageIFD.DateTime]: datetime,\n                // ソフトウェア名\n                [piexif.TagValues.ImageIFD.Software]: `KonomiTV version ${Utils.version}`,\n                // Microsoft 拡張のコメント領域（エクスプローラーで出てくるコメント欄と同じもの）\n                // ref: https://stackoverflow.com/a/66186660/17124142\n                [piexif.TagValues.ImageIFD.XPComment]: [...Buffer.from(JSON.stringify(json), 'ucs2')],\n            },\n            'Exif': {\n                // 必須らしいプロパティ\n                // とりあえずデフォルト値 (?) を設定しておく\n                [piexif.TagValues.ExifIFD.ExifVersion]: '0230',\n                [piexif.TagValues.ExifIFD.ComponentsConfiguration]: '\\x01\\x02\\x03\\x00',\n                [piexif.TagValues.ExifIFD.FlashpixVersion]: '0100',\n                [piexif.TagValues.ExifIFD.ColorSpace]: 1,\n                // 撮影時刻\n                [piexif.TagValues.ExifIFD.DateTimeOriginal]: datetime,\n                [piexif.TagValues.ExifIFD.DateTimeDigitized]: datetime,\n            },\n        };\n        const exif_string = piexif.dump(exif);  // バイナリ文字列に変換した EXIF データ\n\n        // piexifjs はバイナリ文字列か DataURL しか受け付けないので、Blob をバイナリ文字列に変換\n        const blob_string: string = await new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result as string);\n            reader.onerror = reject;\n            reader.readAsBinaryString(blob);  // バイナリ文字列で読み込む\n        });\n\n        // 画像に EXIF を挿入\n        // 戻り値は EXIF が追加された画像のバイナリ文字列 (なぜ未だにバイナリ文字列で実装してるんだ…)\n        const blob_string_new = piexif.insert(exif_string, blob_string);\n\n        // 画像のバイナリ文字列を ArrayBuffer に変換\n        // ref: 「カメラアプリで体感するWeb App」4.2\n        const buffer = new Uint8Array(blob_string_new.length);\n        for (let index = 0; index < buffer.length; index++) {\n            buffer[index] = blob_string_new.charCodeAt(index) & 0xff;\n        }\n\n        // 新しい Blob を返す\n        return new Blob([buffer], {type: blob.type});\n    }\n}\n\nexport default CaptureHandler;\n","\n\nimport dayjs from 'dayjs';\nimport DPlayer from 'dplayer';\nimport * as DPlayerType from 'dplayer/dist/d.ts/types/DPlayer';\nimport mpegts from 'mpegts.js';\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport BottomNavigation from '@/components/BottomNavigation.vue';\nimport Channel from '@/components/Panel/Channel.vue';\nimport Comment from '@/components/Panel/Comment.vue';\nimport Program from '@/components/Panel/Program.vue';\nimport Twitter from '@/components/Panel/Twitter.vue';\nimport APIClient from '@/services/APIClient';\nimport { IChannel } from '@/services/Channels';\nimport CaptureHandler from '@/services/player/CaptureHandler';\nimport useChannelsStore from '@/store/ChannelsStore';\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils, { PlayerUtils, ProgramUtils } from '@/utils';\n\n// 低遅延モードオン時の再生バッファ (秒単位)\n// 0.7 秒程度余裕を持たせる\nconst PLAYBACK_BUFFER_SEC_LOW_LATENCY = 0.7;\n\n// 低遅延モードオフ時の再生バッファ (秒単位)\n// 5秒程度の遅延を許容する\nconst PLAYBACK_BUFFER_SEC = 5.0;\n\nexport default Vue.extend({\n    name: 'TV-Watch',\n    components: {\n        BottomNavigation,\n        Channel,\n        Comment,\n        Program,\n        Twitter,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            ProgramUtils: ProgramUtils,\n\n            // 現在時刻\n            time: dayjs().format('YYYY/MM/DD HH:mm:ss'),\n\n            // 表示されるパネルのタブ\n            tv_panel_active_tab: useSettingsStore().settings.tv_panel_active_tab,\n\n            // 背景の URL\n            background_url: '',\n\n            // プレイヤーのローディング状態\n            // 既定でローディングとする\n            is_loading: true,\n\n            // プレイヤーが映像の再生をバッファリングしているか\n            // 視聴開始時以外にも、ネットワークが遅くて再生が一時的に途切れたときなどで表示される\n            // 既定でバッファリング中とする\n            is_video_buffering: true,\n\n            // プレイヤーの背景を表示するか\n            // 既定で表示しない\n            is_background_display: false,\n\n            // コントロールを表示するか\n            // 既定で表示する\n            is_control_display: true,\n\n            // パネルを表示するか\n            // panel_display_state が 'AlwaysDisplay' なら常に表示し、'AlwaysFold' なら常に折りたたむ\n            // 'RestorePreviousState' なら showed_panel_last_time の値を使い､前回の状態を復元する\n            is_panel_display: (() => {\n                const settings_store = useSettingsStore();\n                switch (settings_store.settings.panel_display_state) {\n                    case 'AlwaysDisplay':\n                        return true;\n                    case 'AlwaysFold':\n                        return false;\n                    case 'RestorePreviousState':\n                        return settings_store.settings.showed_panel_last_time;\n                }\n            })() as boolean,\n\n            // フルスクリーン状態かどうか\n            is_fullscreen: false,\n\n            // IME 変換中かどうか\n            is_ime_composing: false,\n\n            // 仮想キーボードが表示されているか\n            is_virtual_keyboard_display: false,\n\n            // プレイヤーからのコメント送信から間もないかどうか\n            is_comment_send_just_did: false,\n\n            // インターバル ID\n            // ページ遷移時に setInterval(), setTimeout() の実行を止めるのに使う\n            // setInterval(), setTimeout() の返り値を登録する\n            interval_ids: [] as number[],\n\n            // コントロール表示切り替え用のインターバル ID\n            // 混ぜるとダメなので独立させる\n            control_interval_id: 0,\n\n            // ***** チャンネル *****\n\n            // ザッピング（「前/次のチャンネル」ボタン or 上下キーショートカット）によるチャンネル移動かどうか\n            is_zapping: false,\n\n            // ザッピングで連続してチャンネルを切り替えている最中かどうか\n            // 「連続して」とは、切り替える間隔が 0.5 秒以下で、再生セッションが初期化される前に次のチャンネルに切り替えたときのこと\n            is_zapping_continuously: false,\n\n            // ***** プレイヤー *****\n\n            // プレイヤー (DPlayer) のインスタンス\n            player: null as DPlayer | null,\n\n            // プレイヤーの破棄を許可するかどうか\n            player_can_be_destroyed: false,\n\n            // mpegts.js がサポートされているかどうか\n            // mpegts.js がサポートされていない場合は LL-HLS にフォールバックする (基本 iPhone Safari 向け)\n            is_mpegts_supported: mpegts.isSupported() === true,\n\n            // RomSound の AudioContext\n            romsounds_context: null as AudioContext | null,\n\n            // RomSound の AudioBuffer（音声データ）が入るリスト\n            romsounds_buffers: [] as AudioBuffer[],\n\n            // イベントソースのインスタンス\n            eventsource: null as EventSource | null,\n\n            // フルスクリーン状態が切り替わったときのハンドラー\n            fullscreen_handler: null as () => void | null,\n\n            // キャプチャハンドラーのインスタンス\n            capture_handler: null as CaptureHandler | null,\n\n            // ***** キーボードショートカット *****\n\n            // ショートカットキーのハンドラー\n            shortcut_key_handler: null as (event: KeyboardEvent) => void | null,\n\n            // ショートカットキーの最終押下時刻のタイムスタンプ\n            shortcut_key_pressed_at: Utils.time(),\n\n            // キーボードショートカットの一覧のモーダルを表示するか\n            shortcut_key_modal: false,\n\n            // キーボードショートカットの一覧に表示するショートカットキーのリスト\n            shortcut_key_list: {\n                left_column: [\n                    {\n                        name: '全般',\n                        icon: 'fluent:home-20-filled',\n                        icon_height: '22px',\n                        shortcuts: [\n                            { name: '数字キー・テンキーに対応するリモコン番号 (1~12) の地デジチャンネルに切り替える', keys: [{name: '1~9, 0, -(=), ^(~)', icon: false}] },\n                            { name: '数字キー・テンキーに対応するリモコン番号 (1~12) の BS チャンネルに切り替える', keys: [{name: 'Shift', icon: false}, {name: '1~9, 0, -(=), ^(~)', icon: false}] },\n                            { name: '前のチャンネルに切り替える', keys: [{name: 'fluent:arrow-up-12-filled', icon: true}] },\n                            { name: '次のチャンネルに切り替える', keys: [{name: 'fluent:arrow-down-12-filled', icon: true}] },\n                            { name: 'キーボードショートカットの一覧を表示する', keys: [{name: '／(？)', icon: false}] },\n                        ]\n                    },\n                    {\n                        name: 'プレイヤー',\n                        icon: 'fluent:play-20-filled',\n                        icon_height: '20px',\n                        shortcuts: [\n                            { name: '再生 / 一時停止の切り替え', keys: [{name: 'Space', icon: false}] },\n                            { name: '再生 / 一時停止の切り替え (キャプチャタブ表示時)', keys: [{name: 'Shift', icon: false}, {name: 'Space', icon: false}] },\n                            { name: 'プレイヤーの音量を上げる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-up-12-filled', icon: true}] },\n                            { name: 'プレイヤーの音量を下げる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-down-12-filled', icon: true}] },\n                            { name: '停止して0.5秒早戻し', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-left-12-filled', icon: true}] },\n                            { name: '停止して0.5秒早送り', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-right-12-filled', icon: true}] },\n                            { name: 'フルスクリーンの切り替え', keys: [{name: 'F', icon: false}] },\n                            { name: 'ライブストリームの同期', keys: [{name: 'W', icon: false}] },\n                            { name: 'Picture-in-Picture の表示切り替え', keys: [{name: 'E', icon: false}] },\n                            { name: '字幕の表示切り替え', keys: [{name: 'S', icon: false}] },\n                            { name: 'コメントの表示切り替え', keys: [{name: 'D', icon: false}] },\n                            { name: '映像をキャプチャする', keys: [{name: 'C', icon: false}] },\n                            { name: '映像をコメントを付けてキャプチャする', keys: [{name: 'V', icon: false}] },\n                            { name: 'コメント入力フォームにフォーカスする', keys: [{name: 'M', icon: false}] },\n                            { name: 'コメント入力フォームを閉じる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'M', icon: false}] },\n                        ]\n                    },\n                ],\n                right_column: [\n                    {\n                        name: 'パネル',\n                        icon: 'fluent:panel-right-20-filled',\n                        icon_height: '24px',\n                        shortcuts: [\n                            { name: 'パネルの表示切り替え', keys: [{name: 'P', icon: false}] },\n                            { name: '番組情報タブを表示する', keys: [{name: 'K', icon: false}] },\n                            { name: 'チャンネルタブを表示する', keys: [{name: 'L', icon: false}] },\n                            { name: 'コメントタブを表示する', keys: [{name: '；(＋)', icon: false}] },\n                            { name: 'Twitter タブを表示する', keys: [{name: '：(＊)', icon: false}] },\n                        ]\n                    },\n                    {\n                        name: 'Twitter',\n                        icon: 'fa-brands:twitter',\n                        icon_height: '22px',\n                        shortcuts: [\n                            { name: 'ツイート検索タブを表示する', keys: [{name: '［ (「)', icon: false}] },\n                            { name: 'タイムラインタブを表示する', keys: [{name: '］ (」)', icon: false}] },\n                            { name: 'キャプチャタブを表示する', keys: [{name: '＼(￥)', icon: false}] },\n                            { name: 'ツイート入力フォームにフォーカスを当てる/フォーカスを外す', keys: [{name: 'Tab', icon: false}] },\n                            { name: 'キャプチャにフォーカスする', keys: [{name: 'キャプチャタブを表示', icon: false}, {name: 'fluent:arrow-up-12-filled;fluent:arrow-down-12-filled;fluent:arrow-left-12-filled;fluent:arrow-right-12-filled', icon: true}] },\n                            { name: 'キャプチャを拡大表示する/<br>キャプチャの拡大表示を閉じる', keys: [{name: 'キャプチャにフォーカス', icon: false}, {name: 'Enter', icon: false}] },\n                            { name: 'キャプチャを選択する/<br>キャプチャの選択を解除する', keys: [{name: 'キャプチャにフォーカス', icon: false}, {name: 'Space', icon: false}] },\n                            { name: 'クリップボード内の画像を<br>キャプチャとして取り込む', keys: [{name: 'ツイート入力<br>フォームにフォーカス', icon: false}, {name: Utils.CtrlOrCmd(), icon: false}, {name: 'V', icon: false}] },\n                            { name: 'ツイートを送信する', keys: [{name: 'Twitter タブを表示', icon: false}, {name: Utils.CtrlOrCmd(), icon: false}, {name: 'Enter', icon: false}] },\n                        ]\n                    },\n                ]\n            }\n        };\n    },\n    computed: {\n        // ChannelsStore / SettingsStore に this.channelsStore / this.settingsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useChannelsStore, useSettingsStore),\n    },\n    // 開始時に実行\n    async created() {\n\n        // チャンネル ID をセット\n        this.channelsStore.channel_id = this.$route.params.channel_id;\n\n        // Virtual Keyboard API に対応している場合は、仮想キーボード周りの操作を自力で行うことをブラウザに伝える\n        // この視聴画面のみ\n        if ('virtualKeyboard' in navigator) {\n            navigator.virtualKeyboard.overlaysContent = true;\n            // 仮想キーボードが表示されたり閉じられたときのイベント\n            navigator.virtualKeyboard.ongeometrychange = (event) => {\n                if (event.target.boundingRect.width === 0 && event.target.boundingRect.height === 0) {\n                    this.is_virtual_keyboard_display = false;\n                } else {\n                    this.is_virtual_keyboard_display = true;\n                }\n            };\n        }\n\n        // 再生セッションを初期化\n        this.init();\n\n        // RomSound を鳴らすための AudioContext を生成\n        this.romsounds_context = new AudioContext();\n\n        // 01 ~ 14 まですべての RomSound を読み込む\n        for (let index = 1; index <= 14; index++) {\n\n            // ArrayBuffer として RomSound を取得\n            const url = `/assets/romsounds/${index.toString().padStart(2, '0')}.wav`;\n            const audio_data = await APIClient.get(url, {\n                baseURL: '',  // BaseURL を明示的にクライアントのルートに設定\n                responseType: 'arraybuffer',\n            });\n\n            // ArrayBuffer をデコードして AudioBuffer にし、すぐ呼び出せるように貯めておく\n            // ref: https://ics.media/entry/200427/\n            this.romsounds_buffers.push(await this.romsounds_context.decodeAudioData(audio_data.data));\n        }\n    },\n    // 終了前に実行\n    beforeDestroy() {\n\n        // 仮想キーボード周りの操作をブラウザに戻す\n        if ('virtualKeyboard' in navigator) {\n            navigator.virtualKeyboard.overlaysContent = false;\n        }\n\n        // destroy() を実行\n        // 別のページへ遷移するため、DPlayer のインスタンスを確実に破棄する\n        // さもなければ、ブラウザがリロードされるまでバックグラウンドで永遠に再生され続けてしまう\n        // 不正な ID のため 404 ページに遷移されるときは実行しない\n        if (this.channelsStore.channel.current.channel_id !== 'gr999') {\n            this.destroy(true);\n        }\n\n        // AudioContext のリソースを解放\n        if (this.romsounds_context !== null) {\n            this.romsounds_context.close();\n        }\n\n        // このページから離れるので、チャンネル ID を gr000 (ダミー値) に戻す\n        this.channelsStore.channel_id = 'gr000';\n    },\n    // チャンネル切り替え時に実行\n    // コンポーネント（インスタンス）は再利用される\n    // ref: https://v3.router.vuejs.org/ja/guide/advanced/navigation-guards.html#%E3%83%AB%E3%83%BC%E3%83%88%E5%8D%98%E4%BD%8D%E3%82%AB%E3%82%99%E3%83%BC%E3%83%88%E3%82%99\n    beforeRouteUpdate(to, from, next) {\n\n        // 前の再生セッションを破棄して終了する\n        const destroy_promise = this.destroy(false, this.is_zapping_continuously);\n\n        // 連続してチャンネルを切り替えていることを示すフラグを立てる\n        // このフラグは再生セッションが初期化されるタイミングで必ず降ろされる\n        this.is_zapping_continuously = true;\n\n        // チャンネル ID を次のチャンネルのものに切り替える\n        this.channelsStore.channel_id = to.params.channel_id;\n\n        // ハッシュタグフォームのリセットがオンなら、ハッシュタグフォームを空にする\n        if (this.settingsStore.settings.reset_hashtag_when_program_switches === true) {\n            (this.$refs.Twitter as InstanceType<typeof Twitter>).tweet_hashtag = '';\n        }\n\n        (async () => {\n\n            // ザッピング（「前/次のチャンネル」ボタン or 上下キーショートカット）によるチャンネル移動時のみ、\n            // 0.5秒だけ待ってから新しい再生セッションを初期化する\n            // 連続してチャンネルを切り替えた際に毎回再生処理を開始しないように猶予を設ける\n            if (this.is_zapping === true) {\n                this.is_zapping = false;\n                this.interval_ids.push(window.setTimeout(() => {\n                    this.is_zapping_continuously = false;  // 新しいセッションを初期化するので、フラグを下ろす\n                    destroy_promise.then(() => this.init());  // destroy() の実行完了を待ってから初期化する\n                }, 0.5 * 1000));\n\n            // 通常のチャンネル移動時は、すぐに再生セッションを初期化する\n            } else {\n                this.is_zapping_continuously = false;  // 新しいセッションを初期化するので、フラグを下ろす\n                destroy_promise.then(() => this.init());  // destroy() の実行完了を待ってから初期化する\n            }\n        })();\n\n        // 次のルートに置き換え\n        next();\n    },\n    watch: {\n\n        // 視聴中のチャンネルが変更されたときのイベント\n        'channelsStore.channel': {\n            immediate: true,\n            handler(\n                new_channel: {previous: IChannel; current: IChannel; next: IChannel;},\n                old_channel: {previous: IChannel; current: IChannel; next: IChannel;} | undefined,\n            ) {\n\n                // old_channel が undefined の場合は、初回のイベント発火なので何もしない\n                if (old_channel === undefined) {\n                    return;\n                }\n\n                // Twitter コンポーネントのインスタンスを取得\n                const twitter_component = this.$refs.Twitter as InstanceType<typeof Twitter>;\n\n                // 前のチャンネル情報と次のチャンネル情報で channel_id が変わってたら局タグ追加処理を走らせる\n                if (new_channel.current.channel_id !== old_channel.current.channel_id) {\n                    const old_channel_hashtag = twitter_component.getChannelHashtag(old_channel.current.channel_name) ?? '';\n                    twitter_component.tweet_hashtag =\n                        twitter_component.formatHashtag(twitter_component.tweet_hashtag.replaceAll(old_channel_hashtag, ''));\n                    twitter_component.updateTweetLetterCount();\n                }\n\n                // 取得したチャンネル情報と現在のチャンネル情報の NID-SID-EID の組み合わせが異なる場合\n                if ((new_channel.current.id !== old_channel.current.id) ||  // チャンネルが異なる\n                    (new_channel.current.program_present !== null && old_channel.current.program_present === null) ||  // 番組情報あり→番組情報なし\n                    (new_channel.current.program_present === null && old_channel.current.program_present !== null) ||  // 番組情報なし→番組情報あり\n                    ((new_channel.current.program_present !== null && old_channel.current.program_present !== null) &&\n                    (new_channel.current.program_present.id !== old_channel.current.program_present.id))) {  // 番組情報あり→番組情報あり & 番組が異なる\n\n                    // ハッシュタグフォームのリセットがオンなら、ハッシュタグフォームを空にする\n                    if (this.settingsStore.settings.reset_hashtag_when_program_switches === true) {\n                        twitter_component.tweet_hashtag = twitter_component.formatHashtag('');\n                        twitter_component.updateTweetLetterCount();\n                    }\n                }\n            },\n        },\n\n        // 前回視聴画面を開いた際にパネルが表示されていたかどうかを保存\n        is_panel_display() {\n            this.settingsStore.settings.showed_panel_last_time = this.is_panel_display;\n        }\n    },\n    methods: {\n\n        // 再生セッションを初期化する\n        async init() {\n\n            // ローディング中の背景画像をランダムで設定\n            this.background_url = PlayerUtils.generatePlayerBackgroundURL();\n\n            // コントロール表示タイマーを実行\n            this.controlDisplayTimer();\n\n            // 現在時刻を1秒おきに更新\n            this.interval_ids.push(window.setInterval(() => this.time = dayjs().format('YYYY/MM/DD HH:mm:ss'), 1 * 1000));\n\n            // 00秒までの残り秒数を取得\n            // 現在 16:01:34 なら 26 (秒) になる\n            const residue_second = 60 - new Date().getSeconds();\n\n            // 00秒になるまで待ってから実行するタイマー\n            // 番組は基本1分単位で組まれているため、20秒や45秒など中途半端な秒数で更新してしまうと番組情報の反映が遅れてしまう\n            this.interval_ids.push(window.setTimeout(() => {\n\n                // この時点で00秒なので、チャンネル情報を更新\n                this.channelsStore.update(true);\n                this.update();\n\n                // 以降、30秒おきにチャンネル情報を更新\n                this.interval_ids.push(window.setInterval(() => {\n                    this.channelsStore.update(true);\n                    this.update();\n                }, 30 * 1000));\n\n            }, residue_second * 1000));\n\n            // チャンネル情報を更新 (初回)\n            await this.channelsStore.update();\n            this.update();\n        },\n\n        // 画面を更新する\n        async update() {\n\n            // チャンネル ID が未定義なら実行しない（フェイルセーフ）\n            if (this.$route.params.channel_id === undefined) {\n                return;\n            }\n\n            // もし現時点でチャンネル ID が gr999 だった場合、チャンネル情報に存在しない不正な ID なので、404 ページにリダイレクト\n            if (this.channelsStore.channel.current.channel_id === 'gr999') {\n                this.$router.push({path: '/not-found/'});\n                return;\n            }\n\n            // プレイヤーがまだ初期化されていない or 他のチャンネルからの切り替えですでにプレイヤーが初期化されているけど破棄が可能\n            // update() 自体は初期化時以外にも1分ごとに定期実行されるため、その際に毎回プレイヤーを再初期化しないようにする\n            if (this.player === null || this.player_can_be_destroyed === true) {\n\n                // プレイヤー (DPlayer) 周りのセットアップ\n                this.initPlayer();\n\n                // サーバーから送られてくるメッセージのイベントハンドラーを初期化\n                this.initEventHandler();\n\n                // キャプチャのイベントハンドラーを初期化\n                this.initCaptureHandler();\n\n                // ショートカットキーのイベントハンドラーを初期化\n                // 事前に前のイベントハンドラーを削除しておかないと、重複してキー操作が実行されてしまう\n                // 直前で実行しないと上下キーでのチャンネル操作が動かなくなる\n                document.removeEventListener('keydown', this.shortcut_key_handler);\n                this.initShortcutKeyHandler();\n            }\n\n            if (this.player === null) {\n                return;  // 復旧不可能 (発生しないはずだが、書いとかないと TypeScript に怒られる)\n            }\n\n            // 副音声がない番組でプレイヤー上で副音声に切り替えられないように\n            // 音声多重放送でもデュアルモノでもない番組のみ\n            if ((this.channelsStore.channel.current.program_present === null) ||\n               ((this.channelsStore.channel.current.program_present.primary_audio_type !== '1/0+1/0モード(デュアルモノ)') &&\n                (this.channelsStore.channel.current.program_present.secondary_audio_type === null))) {\n\n                // クラスを付与\n                this.player.template.audioItem[1].classList.add('dplayer-setting-audio-item--disabled');\n\n                // 現在副音声が選択されている可能性を考慮し、明示的に主音声に切り替える\n                if (this.player.plugins.mpegts !== undefined || this.player.plugins.liveLLHLSForKonomiTV !== undefined) {\n                    // プレイヤーの初期化が完了するまで少し待つ\n                    while (this.player === null) {\n                        await Utils.sleep(0.1);\n                    }\n                    this.player.template.audioItem[0].classList.add('dplayer-setting-audio-current');\n                    this.player.template.audioItem[1].classList.remove('dplayer-setting-audio-current');\n                    this.player.template.audioValue.textContent = this.player.tran('Primary audio');\n                    try {\n                        if (this.player.plugins.mpegts !== undefined && this.player.plugins.mpegts instanceof mpegts.MSEPlayer) {\n                            this.player.plugins.mpegts.switchPrimaryAudio();\n                        }\n                        if (this.player.plugins.liveLLHLSForKonomiTV !== undefined) {\n                            this.player.plugins.liveLLHLSForKonomiTV.switchPrimaryAudio();\n                        }\n                    } catch (error) {\n                        // pass\n                    }\n                }\n\n            // 音声多重放送かデュアルモノなので、副音声への切り替えを有効化\n            } else {\n                this.player.template.audioItem[1].classList.remove('dplayer-setting-audio-item--disabled');\n            }\n\n            // MediaSession API を使い、メディア通知の表示をカスタマイズ\n            if ('mediaSession' in navigator) {\n\n                // アートワークとして表示するアイコン\n                const artwork = [\n                    {src: '/assets/images/icons/icon-maskable-192px.png', sizes: '192x192', type: 'image/png'},\n                    {src: '/assets/images/icons/icon-maskable-512px.png', sizes: '512x512', type: 'image/png'},\n                ];\n\n                // メディア通知の表示をカスタマイズ\n                navigator.mediaSession.metadata = new MediaMetadata({\n                    title: this.channelsStore.channel.current.program_present ?\n                        this.channelsStore.channel.current.program_present.title : '放送休止',\n                    artist: this.channelsStore.channel.current.channel_name,\n                    artwork: artwork,\n                });\n\n                // 再生状況のステータスを設定\n                if ('setPositionState' in navigator.mediaSession) {\n                    navigator.mediaSession.setPositionState({\n                        duration: 0,  // ライブなので0（長さなしを表すらしい）に設定\n                        playbackRate: 1,  // ライブなので再生速度は常に1になる\n                    });\n                }\n\n                // 一旦既存のイベントハンドラーを削除\n                navigator.mediaSession.setActionHandler('play', null);\n                navigator.mediaSession.setActionHandler('pause', null);\n                navigator.mediaSession.setActionHandler('previoustrack', null);\n                navigator.mediaSession.setActionHandler('nexttrack', null);\n\n                // メディア通知上のボタンが押されたときのイベント\n                navigator.mediaSession.setActionHandler('play', () => this.player?.play());  // 再生\n                navigator.mediaSession.setActionHandler('pause', () => this.player?.pause());  // 停止\n                navigator.mediaSession.setActionHandler('previoustrack', async () => {  // 前のチャンネルに切り替え\n                    navigator.mediaSession.metadata = new MediaMetadata({\n                        title: this.channelsStore.channel.previous.program_present ?\n                            this.channelsStore.channel.previous.program_present.title : '放送休止',\n                        artist: this.channelsStore.channel.previous.channel_name,\n                        artwork: artwork,\n                    });\n                    // ルーティングを前のチャンネルに置き換える\n                    await this.$router.push({path: `/tv/watch/${this.channelsStore.channel.previous.channel_id}`});\n                });\n                navigator.mediaSession.setActionHandler('nexttrack', async () => {  // 次のチャンネルに切り替え\n                    navigator.mediaSession.metadata = new MediaMetadata({\n                        title: this.channelsStore.channel.next.program_present ?\n                            this.channelsStore.channel.next.program_present.title : '放送休止',\n                        artist: this.channelsStore.channel.next.channel_name,\n                        artwork: artwork,\n                    });\n                    // ルーティングを次のチャンネルに置き換える\n                    await this.$router.push({path: `/tv/watch/${this.channelsStore.channel.next.channel_id}`});\n                });\n            }\n        },\n\n        // マウスが動いたりタップされた時のイベント\n        // 3秒間何も操作がなければコントロールを非表示にする\n        controlDisplayTimer(event: Event | null = null, is_player_event: boolean = false) {\n\n            // タッチデバイスかどうか\n            // DPlayer の UA 判定コードと同一\n            const is_touch_device = /iPhone|iPad|iPod|Windows|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\n\n            // タッチデバイスで mousemove 、あるいはタッチデバイス以外で touchmove か click が発火した時は実行じない\n            if (is_touch_device == true  && event !== null && event.type === 'mousemove') return;\n            if (is_touch_device == false && event !== null && (event.type === 'touchmove' || event.type === 'click')) return;\n\n            // 以前セットされたタイマーを止める\n            window.clearTimeout(this.control_interval_id);\n\n            // setTimeout に渡すタイマー関数\n            const timeout = () => {\n\n                // コメント入力フォームが表示されているときは実行しない\n                // タイマーを掛け直してから抜ける\n                if (this.player !== null && this.player.template.controller.classList.contains('dplayer-controller-comment')) {\n                    this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\n                    return;\n                }\n\n                // コントロールを非表示にする\n                this.is_control_display = false;\n\n                // プレイヤーのコントロールと設定パネルを非表示にする\n                if (this.player !== null) {\n                    this.player.controller.hide();\n                    this.player.setting.hide();\n                }\n            };\n\n            // タッチデバイスでプレイヤー画面がクリックされたとき\n            if (is_touch_device === true && is_player_event === true) {\n\n                // プレイヤーのコントロールの表示状態に合わせる\n                if (this.player?.controller.isShow()) {\n\n                    // コントロールを表示する\n                    this.is_control_display = true;\n\n                    // プレイヤーのコントロールを表示する\n                    this.player.controller.show();\n\n                    // 3秒間何も操作がなければコントロールを非表示にする\n                    // 3秒間の間一度でもマウスが動けばタイマーが解除されてやり直しになる\n                    this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\n\n                } else {\n\n                    // コントロールを非表示にする\n                    this.is_control_display = false;\n\n                    // プレイヤーのコントロールと設定パネルを非表示にする\n                    this.player?.controller.hide();\n                    this.player?.setting.hide();\n                }\n\n            // それ以外の画面がクリックされたとき\n            } else {\n\n                // コントロールを表示する\n                this.is_control_display = true;\n\n                // プレイヤーのコントロールを表示する\n                if (this.player !== null) {\n                    this.player.controller.show();\n                }\n\n                // 3秒間何も操作がなければコントロールを非表示にする\n                // 3秒間の間一度でもマウスが動けばタイマーが解除されてやり直しになる\n                this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\n            }\n        },\n\n        // プレイヤーを初期化する\n        initPlayer() {\n\n            // mpegts.js を window 直下に入れる\n            // こうしないと DPlayer が mpegts.js を認識できない\n            (window as any).mpegts = mpegts;\n\n            // すでに DPlayer が初期化されている場合は破棄する\n            // チャンネル切り替え時などが該当する\n            if (this.player !== null && this.player_can_be_destroyed === true) {\n                try {\n                    this.player.destroy();\n                } catch (error) {\n                    // mpegts.js をうまく破棄できない場合\n                    if (this.player.plugins.mpegts !== undefined) {\n                        this.player.plugins.mpegts.destroy();\n                    }\n                }\n                this.player_can_be_destroyed = false;\n                this.player = null;\n            }\n\n            // 低遅延モードであれば低遅延向けの再生バッファを、そうでなければ通常の再生バッファをセット (秒単位)\n            const playback_buffer_sec = this.settingsStore.settings.tv_low_latency_mode ?\n                PLAYBACK_BUFFER_SEC_LOW_LATENCY : PLAYBACK_BUFFER_SEC;\n\n            // DPlayer を初期化\n            this.player = new DPlayer({\n                container: this.$el.querySelector<HTMLElement>('.watch-player__dplayer')!,\n                theme: '#E64F97',  // テーマカラー\n                lang: 'ja-jp',  // 言語\n                live: true,  // ライブモード\n                liveSyncMinBufferSize: this.is_mpegts_supported ? playback_buffer_sec - 0.1 : 0,  // ライブモードで同期する際の最小バッファサイズ\n                loop: false,  // ループ再生 (ライブのため無効化)\n                airplay: false,  // AirPlay 機能 (うまく動かないため無効化)\n                autoplay: true,  // 自動再生\n                hotkey: false,  // ショートカットキー（こちらで制御するため無効化）\n                screenshot: false,  // スクリーンショット (こちらで制御するため無効化)\n                volume: 1.0,  // 音量の初期値\n                // 映像\n                video: {\n                    // デフォルトの品質\n                    // ラジオチャンネルでは常に 48KHz/192kbps に固定する\n                    defaultQuality: (this.channelsStore.channel.current.is_radiochannel) ?\n                        '48kHz/192kbps' : this.settingsStore.settings.tv_streaming_quality,\n                    // 品質リスト\n                    quality: (() => {\n                        const qualities: DPlayerType.VideoQuality[] = [];\n\n                        // ラジオチャンネル\n                        // API が受け付ける品質の値は通常のチャンネルと同じだが (手抜き…)、実際の品質は 48KHz/192kbps で固定される\n                        // ラジオチャンネルの場合は、1080p と渡しても 48kHz/192kbps 固定の音声だけの MPEG-TS が配信される\n                        if (this.channelsStore.channel.current.is_radiochannel) {\n                            // mpegts.js\n                            if (this.is_mpegts_supported === true) {\n                                qualities.push({\n                                    name: '48kHz/192kbps',\n                                    type: 'mpegts',\n                                    url: `${Utils.api_base_url}/streams/live/${this.channelsStore.channel_id}/1080p/mpegts`,\n                                });\n                            // LL-HLS (mpegts.js がサポートされていない場合)\n                            } else {\n                                qualities.push({\n                                    name: '48kHz/192kbps',\n                                    type: 'live-llhls-for-KonomiTV',\n                                    url: `${Utils.api_base_url}/streams/live/${this.channelsStore.channel_id}/1080p/ll-hls`,\n                                });\n                            }\n\n                        // 通常のチャンネル\n                        } else {\n\n                            // ブラウザが H.265 / HEVC の再生に対応していて、かつ通信節約モードが有効なとき\n                            // API に渡す画質に -hevc のプレフィックスをつける\n                            let hevc_prefix = '';\n                            if (PlayerUtils.isHEVCVideoSupported() && this.settingsStore.settings.tv_data_saver_mode === true) {\n                                hevc_prefix = '-hevc';\n                            }\n\n                            // 品質リストを作成\n                            for (const quality of ['1080p-60fps', '1080p', '810p', '720p', '540p', '480p', '360p', '240p']) {\n                                // mpegts.js\n                                if (this.is_mpegts_supported === true) {\n                                    qualities.push({\n                                        name: quality === '1080p-60fps' ? '1080p (60fps)' : quality,\n                                        type: 'mpegts',\n                                        url: `${Utils.api_base_url}/streams/live/${this.channelsStore.channel_id}/${quality}${hevc_prefix}/mpegts`,\n                                    });\n                                // LL-HLS (mpegts.js がサポートされていない場合)\n                                } else {\n                                    qualities.push({\n                                        name: quality === '1080p-60fps' ? '1080p (60fps)' : quality,\n                                        type: 'live-llhls-for-KonomiTV',\n                                        url: `${Utils.api_base_url}/streams/live/${this.channelsStore.channel_id}/${quality}${hevc_prefix}/ll-hls`,\n                                    });\n                                }\n                            }\n                        }\n                        return qualities;\n                    })(),\n                },\n                // コメント\n                danmaku: {\n                    user: 'KonomiTV',  // 便宜上 KonomiTV に固定\n                    speedRate: this.settingsStore.settings.comment_speed_rate,  // コメントの流れる速度\n                    fontSize: this.settingsStore.settings.comment_font_size,  // コメントのフォントサイズ\n                },\n                // コメント API バックエンド\n                apiBackend: {\n                    // コメント取得時\n                    read: (options) => {\n                        // 空の配列を返す (こうするとコメント0件と認識される)\n                        options.success([]);\n                    },\n                    // コメント送信時\n                    send: async (options) => {\n                        // Comment コンポーネント内のコメント送信メソッドを呼び出す\n                        // ref: https://stackoverflow.com/a/65729556/17124142 ($refs への型設定)\n                        (this.$refs.Comment as InstanceType<typeof Comment>).sendComment(options);\n                    },\n                },\n                // プラグイン\n                pluginOptions: {\n                    // mpegts.js\n                    mpegts: {\n                        config: {\n                            // Web Worker を有効にする\n                            enableWorker: true,\n                            // IO 層のバッファを禁止する\n                            enableStashBuffer: false,\n                            // HTMLMediaElement の内部バッファによるライブストリームの遅延を追跡する\n                            // liveBufferLatencyChasing と異なり、いきなり再生時間をスキップするのではなく、\n                            // 再生速度を少しだけ上げることで再生を途切れさせることなく遅延を追跡する\n                            liveSync: this.settingsStore.settings.tv_low_latency_mode,\n                            // 許容する HTMLMediaElement の内部バッファの最大値 (秒単位, 3秒)\n                            liveSyncMaxLatency: 3,\n                            // HTMLMediaElement の内部バッファ (遅延) が liveSyncMaxLatency を超えたとき、ターゲットとする遅延時間 (秒単位)\n                            liveSyncTargetLatency: playback_buffer_sec,\n                            // ライブストリームの遅延の追跡に利用する再生速度 (x1.1)\n                            // 遅延が 3 秒を超えたとき、遅延が playback_buffer_sec を下回るまで再生速度が x1.1 に設定される\n                            liveSyncPlaybackRate: 1.1,\n                        }\n                    },\n                    // aribb24.js\n                    aribb24: {\n                        // 描画フォント\n                        normalFont: `\"${this.settingsStore.settings.caption_font}\", sans-serif`,\n                        // 縁取りする色\n                        forceStrokeColor: this.settingsStore.settings.always_border_caption_text ? true : false,\n                        // 背景色\n                        forceBackgroundColor: this.settingsStore.settings.specify_caption_background_color ?\n                            this.settingsStore.settings.caption_background_color : null,\n                        // DRCS 文字を対応する Unicode 文字に置換\n                        drcsReplacement: true,\n                        // 高解像度の字幕 Canvas を取得できるように\n                        enableRawCanvas: true,\n                        // 縁取りに strokeText API を利用\n                        useStroke: true,\n                        // Unicode 領域の代わりに私用面の領域を利用 (Windows TV 系フォントのみ)\n                        usePUA: (() => {\n                            const font = this.settingsStore.settings.caption_font;\n                            const context = document.createElement('canvas').getContext('2d')!;\n                            context.font = `10px ${font}`;\n                            context.fillText('Test', 0, 0);\n                            if (font.startsWith('Windows TV')) {\n                                return true;\n                            } else {\n                                return false;\n                            }\n                        })(),\n                        // 文字スーパーの PRA (内蔵音再生コマンド) のコールバックを指定\n                        PRACallback: async (index: number) => {\n\n                            // 設定で文字スーパーが無効なら実行しない\n                            if (this.settingsStore.settings.tv_show_superimpose === false) return;\n\n                            // index に応じた内蔵音を鳴らす\n                            // ref: https://ics.media/entry/200427/\n                            // ref: https://www.ipentec.com/document/javascript-web-audio-api-change-volume\n\n                            // 自動再生ポリシーに引っかかったなどで AudioContext が一時停止されている場合、一度 resume() する必要がある\n                            // resume() するまでに何らかのユーザーのジェスチャーが行われているはず…\n                            // なくても動くこともあるみたいだけど、念のため\n                            if (this.romsounds_context.state === 'suspended') {\n                                await this.romsounds_context.resume();\n                            }\n\n                            // index で指定された音声データを読み込み\n                            const buffer_source_node = this.romsounds_context.createBufferSource();\n                            buffer_source_node.buffer = this.romsounds_buffers[index];\n\n                            // GainNode につなげる\n                            const gain_node = this.romsounds_context.createGain();\n                            buffer_source_node.connect(gain_node);\n\n                            // 出力につなげる\n                            gain_node.connect(this.romsounds_context.destination);\n\n                            // 音量を元の wav の3倍にする (1倍だと結構小さめ)\n                            gain_node.gain.value = 3;\n\n                            // 再生開始\n                            buffer_source_node.start(0);\n                        },\n                    }\n                },\n                // 字幕\n                subtitle: {\n                    type: 'aribb24',  // aribb24.js を有効化\n                }\n            });\n\n            // デバッグ用にプレイヤーインスタンスも window 直下に入れる\n            (window as any).player = this.player;\n\n            // プレイヤー側のコントロール非表示タイマーを無効化（上書き）\n            // 無効化しておかないと、controlDisplayTimer() と競合してしまう\n            // 上書き元のコードは https://github.com/tsukumijima/DPlayer/blob/master/src/js/controller.js#L387-L395 にある\n            this.player.controller.setAutoHide = (time: number) => {};\n\n            // ニコニコ実況セッションを初期化し、随時コメントを受信できるようにする\n            // 初期化以降の処理はすべて LiveCommentManager に任せる\n            (this.$refs.Comment as InstanceType<typeof Comment>).initSession(this.player, this.channelsStore.channel_id);\n\n            // ***** コメント送信時のイベントハンドラー *****\n\n            // コメントが送信されたときに、プレイヤーからのコメント送信から間もないかどうかのフラグを立てる (0.1秒後に解除する)\n            // コメントを送信するとコメント入力フォームへのフォーカスが外れるため、ページ全体の keydown イベントでは\n            // Enter キーの押下がコメント送信由来のイベントかキャプチャ拡大表示由来のイベントかを判断できない\n            // そこで、コメント入力フォームフォーカス中に Enter キーが押された場合（=コメント送信時）に 0.1 秒間フラグを立てることで、\n            // ショートカットキーハンドラーがコメント送信由来のイベントであることを判定できるようにしている\n            this.player.template.commentInput.addEventListener('keydown', (event) => {\n                if (event.code === 'Enter') {\n                    this.is_comment_send_just_did = true;\n                    setTimeout(() => this.is_comment_send_just_did = false, 100);\n                }\n            });\n\n            // 「コメント送信後にコメント入力フォームを閉じる」がオフになっている時のために、プレイヤー側のコメント送信関数を上書き\n            // 上書き部分以外の処理内容は概ね https://github.com/tsukumijima/DPlayer/blob/master/src/js/comment.js に準じる\n            this.player.comment!.send = () => {\n\n                if (this.player === null) {\n                    return;  // 復旧不可能 (発生しないはずだが、書いとかないと TypeScript に怒られる)\n                }\n\n                // コメント入力フォームへのフォーカスを外す (「コメント送信後にコメント入力フォームを閉じる」がオンのときだけ)\n                if (this.settingsStore.settings.close_comment_form_after_sending === true) {\n                    this.player.template.commentInput.blur();\n                }\n\n                // 空コメントを弾く\n                if (!this.player.template.commentInput.value.replace(/^\\s+|\\s+$/g, '')) {\n                    this.player.notice(this.player.tran('Please input danmaku content!'));\n                    return;\n                }\n\n                // コメントを送信\n                this.player.danmaku!.send(\n                    {\n                        text: this.player.template.commentInput.value,\n                        color: this.player.container.\n                            querySelector<HTMLInputElement>('.dplayer-comment-setting-color input:checked')!.value,\n                        type: this.player.container.\n                            querySelector<HTMLInputElement>('.dplayer-comment-setting-type input:checked')!.value as DPlayerType.DanmakuType,\n                        size: this.player.container.\n                            querySelector<HTMLInputElement>('.dplayer-comment-setting-size input:checked')!.value as DPlayerType.DanmakuSize,\n                    },\n                    // 送信完了後にコメント入力フォームを閉じる ([コメント送信後にコメント入力フォームを閉じる] がオンのときだけ)\n                    () => {\n                        if (this.settingsStore.settings.close_comment_form_after_sending === true) {\n                            this.player !== null && this.player.comment!.hide();\n                        }\n                    },\n                    true,\n                );\n\n                // 重複送信を防ぐ\n                this.player.template.commentInput.value = '';\n            };\n\n            // ***** 設定パネルのショートカット一覧へのリンクのイベントハンドラー *****\n\n            // 設定パネルにショートカット一覧を表示するリンクを動的に追加する\n            // タッチデバイスでは実行しない\n            const is_touch_device = /iPhone|iPad|iPod|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\n            if (is_touch_device === false) {\n                this.player.template.settingOriginPanel.insertAdjacentHTML('beforeend', `\n                <div class=\"dplayer-setting-item dplayer-setting-keyboard-shortcut\">\n                    <span class=\"dplayer-label\">キーボードショートカット</span>\n                    <div class=\"dplayer-toggle\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\">\n                            <path d=\"M22 16l-10.105-10.6-1.895 1.987 8.211 8.613-8.211 8.612 1.895 1.988 8.211-8.613z\"></path>\n                        </svg>\n                    </div>\n                </div>`);\n\n                // 設定パネルの高さを再設定\n                const settingOriginPanelHeight = this.player.template.settingOriginPanel.scrollHeight;\n                this.player.template.settingBox.style.clipPath = `inset(calc(100% - ${settingOriginPanelHeight}px) 0 0 round 7px)`;\n\n                // 設定パネルのショートカット一覧を表示するリンクがクリックされたときのイベント\n                // リアクティブではないので、手動でやらないといけない…\n                this.$el.querySelector('.dplayer-setting-keyboard-shortcut')!.addEventListener('click', () => {\n                    this.player?.setting.hide();  // 設定パネルを閉じる\n                    this.shortcut_key_modal = true;\n                });\n            }\n\n            // ***** フルスクリーンのイベントハンドラー *****\n\n            // フルスクリーンにするコンテナ要素（ページ全体）\n            const fullscreen_container = document.querySelector('.v-application')!;\n            this.fullscreen_handler = () => {\n                this.is_fullscreen = this.player?.fullScreen.isFullScreen() === true;\n            };\n            if (fullscreen_container.onfullscreenchange !== undefined) {\n                fullscreen_container.addEventListener('fullscreenchange', this.fullscreen_handler);\n            } else {\n                fullscreen_container.addEventListener('webkitfullscreenchange', this.fullscreen_handler);\n            }\n\n            // DPlayer のフルスクリーン関係のメソッドを無理やり上書きし、KonomiTV の UI と統合する\n            // 上書き元のコードは https://github.com/tsukumijima/DPlayer/blob/master/src/js/fullscreen.js にある\n            // フルスクリーンかどうか\n            this.player.fullScreen.isFullScreen = (type?: DPlayerType.FullscreenType) => {\n                return !!(document.fullscreenElement || document.webkitFullscreenElement);\n            };\n            // フルスクリーンをリクエスト\n            this.player.fullScreen.request = (type?: DPlayerType.FullscreenType) => {\n                if (this.player === null) return;\n\n                // すでにフルスクリーンだったらキャンセルする\n                if (this.player.fullScreen.isFullScreen()) {\n                    this.player.fullScreen.cancel();\n                    return;\n                }\n\n                // フルスクリーンをリクエスト\n                // Safari は webkit のベンダープレフィックスが必要\n                fullscreen_container.requestFullscreen = fullscreen_container.requestFullscreen || fullscreen_container.webkitRequestFullscreen;\n                if (fullscreen_container.requestFullscreen) {\n                    fullscreen_container.requestFullscreen();\n                } else {\n                    // フルスクリーンがサポートされていない場合はエラーを表示\n                    this.player.notice('iPhone Safari は動画のフルスクリーン表示に対応していません。');\n                    return;\n                }\n\n                // 画面の向きを横に固定 (Screen Orientation API がサポートされている場合)\n                if (screen.orientation) {\n                    screen.orientation.lock('landscape').catch(() => {});\n                }\n            };\n            // フルスクリーンをキャンセル\n            this.player.fullScreen.cancel = (type?: DPlayerType.FullscreenType) => {\n\n                // フルスクリーンを終了\n                // Safari は webkit のベンダープレフィックスが必要\n                document.exitFullscreen = document.exitFullscreen || document.webkitExitFullscreen;\n                if (document.exitFullscreen) {\n                    document.exitFullscreen();\n                }\n\n                // 画面の向きの固定を解除\n                if (screen.orientation) {\n                    screen.orientation.unlock();\n                }\n            };\n\n            // ***** 再生/停止/画質切り替え時のイベントハンドラー *****\n\n            // 再生/停止されたとき\n            // 通知バーからの制御など、画面から以外の外的要因で再生/停止が行われる事もある\n            const on_play_or_pause = () => {\n\n                // まだ設定パネルが表示されていたら非表示にする\n                this.player?.setting.hide();\n\n                // コントロールを表示する\n                this.controlDisplayTimer();\n            };\n            this.player.on('play', on_play_or_pause);\n            this.player.on('pause', on_play_or_pause);\n\n            // 画質の切り替えが開始されたときのイベント\n            this.player.on('quality_start', () => {\n\n                // ローディング中の背景画像をランダムで設定\n                this.background_url = PlayerUtils.generatePlayerBackgroundURL();\n\n                // イベントソースを閉じる\n                if (this.eventsource !== null) {\n                    this.eventsource.close();\n                    this.eventsource = null;\n                }\n\n                // 新しい EventSource を作成\n                // 画質ごとにイベント API は異なるため、一度破棄してから作り直す\n                this.initEventHandler();\n            });\n\n            // 停止状態でかつ再生時間からバッファが 30 秒以上離れていないかを監視し、そうなっていたら強制的にシークする\n            // mpegts.js の仕様上、MSE に未再生のバッファがたまり過ぎると SourceBuffer が追加できなくなるため、強制的に接続が切断されてしまう\n            // LL-HLS 再生時も、ずっと停止したままだとプレイリストやセグメントに HTTP リクエストされなくなり、サーバー側でタイムアウトさせられてしまう\n            // mpegts.js 再生時は 60 秒、LL-HLS 再生時は 30 秒おきに監視する (LL-HLS 再生時はバッファの状態に関わらずシークする)\n            if (this.is_mpegts_supported === true) {\n                this.interval_ids.push(window.setInterval(() => {\n                    if (this.player === null) return;\n                    if ((this.player.video.paused && this.player.video.buffered.length >= 1) &&\n                        (this.player.video.buffered.end(0) - this.player.video.currentTime > 30)) {\n                        this.player.sync();\n                    }\n                }, 60 * 1000));\n            } else {\n                this.interval_ids.push(window.setInterval(() => {\n                    if (this.player === null) return;\n                    if (this.player.video.paused) {\n                        this.player.sync();\n                    }\n                }, 30 * 1000));\n            }\n\n            // ***** 文字スーパーのイベントハンドラー *****\n\n            (async () => {\n\n                // 文字スーパーが初期化されるまで待つ\n                if (this.player === null) return;\n                while (this.player.plugins.aribb24Superimpose === undefined) {\n                    await Utils.sleep(0.1);  // 0.1 秒待つ\n                }\n\n                // 設定で文字スーパーが有効\n                // 字幕が非表示の場合でも、文字スーパーは表示する\n                if (this.settingsStore.settings.tv_show_superimpose === true) {\n                    this.player.plugins.aribb24Superimpose.show();\n                    this.player.on('subtitle_hide', () => {\n                        this.player?.plugins.aribb24Superimpose!.show();\n                    });\n                // 設定で文字スーパーが無効\n                } else {\n                    this.player.plugins.aribb24Superimpose.hide();\n                    this.player.on('subtitle_show', () => {\n                        this.player?.plugins.aribb24Superimpose!.hide();\n                    });\n                }\n\n            })();\n        },\n\n        // イベントハンドラーを初期化する\n        initEventHandler() {\n\n            // ***** プレイヤー再生開始時のイベントハンドラー *****\n\n            if (this.player === null) return;\n\n            // 必ず最初はローディング状態とする\n            this.is_loading = true;\n\n            // 音量を 0 に設定\n            this.player.video.volume = 0;\n\n            // video 要素の crossOrigin 属性を 'anonymous' に設定\n            // これを設定しないと、クロスオリジンの場合にキャプチャができない\n            this.player.video.crossOrigin = 'anonymous';\n\n            // LL-HLS 再生時のみ、ローディングが終わるまでは表示上再生状態を維持する\n            // play() が正常に実行できればいいのだが、Safari の自動再生制限により失敗することがあるので、\n            // その際はアイコンの HTML を書き換えたりして強制的に再生状態にする (苦肉の策)\n            if (this.is_mpegts_supported === false) {\n                const force_play = () => {\n                    this.player?.video.play().catch(() => {\n                        console.warn('HTMLVideoElement.play() rejected. run fallback.');\n                        const pause_icon = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 17 32\"><path d=\"M14.080 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048zM2.88 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048z\"></path></svg>';\n                        this.player!.template.playButton.innerHTML = pause_icon;\n                        this.player!.template.mobilePlayButton.innerHTML = pause_icon;\n                        this.player!.container.classList.remove('dplayer-paused');\n                        this.player!.container.classList.add('dplayer-playing');\n                        this.player!.danmaku!.play();\n                    });\n                    // ローディング表示が消えたタイミングでイベントを登録解除\n                    if (this.is_loading === false) {\n                        this.player?.video.removeEventListener('pause', force_play);\n                        return;\n                    }\n                };\n                this.player.video.addEventListener('pause', force_play);\n            }\n\n            // 再生バッファを調整し、再生準備ができた段階でプレイヤーの背景を非表示にするイベントを登録\n            // 実際に再生可能になるのを待ってから実行する\n            // 画質切り替え時にも実行する必要があるので、あえてこの位置に記述している\n            const on_canplay = async () => {\n\n                // 自分自身のイベントを登録解除 (重複実行を避ける)\n                if (this.player === null) return;\n                this.player.video.oncanplay = null;\n                this.player.video.oncanplaythrough = null;\n\n                // mpegts.js 利用時のみ実行\n                if (this.is_mpegts_supported === true) {\n\n                    // 再生バッファ調整のため、一旦停止させる\n                    // this.player.video.pause() を使うとプレイヤーの UI アイコンが停止してしまうので、代わりに playbackRate を使う\n                    this.player.video.playbackRate = 0;\n\n                    // 再生バッファを取得する (取得に失敗した場合は 0 を返す)\n                    const get_playback_buffer_sec = (): number => {\n                        let buffered_end = 0;\n                        if (this.player.video.buffered.length >= 1) {\n                            buffered_end = this.player.video.buffered.end(0);\n                        }\n                        return (Math.round((buffered_end - this.player.video.currentTime) * 1000) / 1000);\n                    };\n\n                    // 低遅延モードであれば低遅延向けの再生バッファを、そうでなければ通常の再生バッファをセット (秒単位)\n                    const playback_buffer_sec = this.settingsStore.settings.tv_low_latency_mode ?\n                        PLAYBACK_BUFFER_SEC_LOW_LATENCY : PLAYBACK_BUFFER_SEC;\n\n                    // 再生バッファが playback_buffer_sec を超えるまで 0.1 秒おきに再生バッファをチェックする\n                    // 再生バッファが playback_buffer_sec を切ると再生が途切れやすくなるので (特に動きの激しい映像)、\n                    // 再生開始までの時間を若干犠牲にして、再生バッファの調整と同期に時間を割く\n                    // playback_buffer_sec の値は mpegts.js に渡す liveSyncTargetLatency プロパティに渡す値と共通\n                    let current_playback_buffer_sec = get_playback_buffer_sec();\n                    while (current_playback_buffer_sec < playback_buffer_sec) {\n                        await Utils.sleep(0.1);\n                        current_playback_buffer_sec = get_playback_buffer_sec();\n                    }\n\n                    // 再生開始\n                    this.player.video.playbackRate = 1;\n                }\n\n                // 再生が一時的に止まってバッファリングしているとき/再び再生されはじめたときのイベント\n                // バッファリングの Progress Circular の表示を制御する\n                // 同期が終わってからの方が都合が良い\n                this.player.video.addEventListener('waiting', () => this.is_video_buffering = true);\n                this.player.video.addEventListener('playing', () => this.is_video_buffering = false);\n\n                // ローディング状態を解除し、映像を表示する\n                this.is_loading = false;\n\n                // バッファリング中の Progress Circular を非表示にする\n                this.is_video_buffering = false;\n\n                if (this.channelsStore.channel.current.is_radiochannel) {\n                    // ラジオチャンネルでは引き続き映像の代わりとして背景画像を表示し続ける\n                    this.is_background_display = true;\n                } else {\n                    // 背景画像をフェードアウト\n                    this.is_background_display = false;\n                }\n\n                // 再生開始時に音量を徐々に上げる\n                // いきなり再生されるよりも体験が良い\n                const current_volume = this.player.user.get('volume');\n                while ((this.player.video.volume + 0.05) < current_volume) {\n                    // 小数第2位以下を切り捨てて、浮動小数の誤差で 1 (100%) を微妙に超えてしまいエラーになるのを避ける\n                    this.player.video.volume = Utils.mathFloor(this.player.video.volume + 0.05, 2);\n                    await Utils.sleep(0.02);\n                }\n                this.player.video.volume = current_volume;\n            };\n            this.player.video.oncanplay = on_canplay;\n            this.player.video.oncanplaythrough = on_canplay;\n\n            // ***** KonomiTV サーバーのイベント API のイベントハンドラー *****\n\n            // EventSource を作成\n            const eventsource_url = (this.player!.quality!.url as string).replace('/mpegts', '/events').replace(/\\/ll-hls.*/, '/events');\n            this.eventsource = new EventSource(eventsource_url);\n\n            // 初回接続時のイベント\n            this.eventsource.addEventListener('initial_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n                console.log(`[initial_update] Status: ${event.status} / Detail: ${event.detail}`);\n\n                // ステータスごとに処理を振り分け\n                switch (event.status) {\n\n                    // Status: Standby\n                    case 'Standby': {\n\n                        // バッファリング中の Progress Circular を表示\n                        this.is_video_buffering = true;\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n                        break;\n                    }\n                }\n            });\n\n            // ステータスが更新されたときのイベント\n            this.eventsource.addEventListener('status_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                if (this.player === null) return;\n                const event = JSON.parse(event_raw.data);\n                console.log(`[status_update] Status: ${event.status} / Detail: ${event.detail}`);\n\n                // 視聴者数を更新\n                this.channelsStore.updateChannel(this.channelsStore.channel_id, {\n                    ...this.channelsStore.channel.current,\n                    viewers: event.clients_count,\n                });\n\n                // ステータスごとに処理を振り分け\n                switch (event.status) {\n\n                    // Status: Standby\n                    case 'Standby': {\n\n                        // ステータス詳細をプレイヤーに表示\n                        if (!this.player.template.notice.textContent!.includes('画質を')) {  // 画質切り替えの表示を上書きしない\n                            this.player.notice(event.detail, -1);\n                        }\n\n                        // バッファリング中の Progress Circular を表示\n                        this.is_video_buffering = true;\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n                        break;\n                    }\n\n                    // Status: ONAir\n                    case 'ONAir': {\n\n                        // ステータス詳細をプレイヤーから削除\n                        if (!this.player.template.notice.textContent!.includes('画質を')) {  // 画質切り替えの表示を上書きしない\n                            this.player.notice(this.player.template.notice.textContent!, 0.000001);\n                        }\n\n                        // LL-HLS ストリーミング時のみ、このタイミングで映像をロードして再生を開始する\n                        if (this.is_mpegts_supported === false) {\n                            this.player.video.load();\n                            this.player.video.play();\n                            on_canplay();\n                        }\n\n                        // 再生が開始される前にチャンネルを切り替えた際にコメントが流れない不具合のワークアラウンド\n                        if (this.player.container.classList.contains('dplayer-paused')) {\n                            this.player.container.classList.remove('dplayer-paused');\n                            this.player.container.classList.add('dplayer-playing');\n                        }\n\n                        // 前のプレイヤーインスタンスの Picture-in-Picture ウインドウが残っている場合、終了させてからもう一度切り替える\n                        // チャンネル切り替えが完了しても前の Picture-in-Picture ウインドウは再利用されないため、一旦終了させるしかない\n                        if (document.pictureInPictureElement) {\n                            document.exitPictureInPicture();\n                            this.player.video.requestPictureInPicture();\n                        }\n                        break;\n                    }\n\n                    // Status: Restart\n                    case 'Restart': {\n\n                        // ステータス詳細をプレイヤーに表示\n                        this.player.notice(event.detail, -1);\n\n                        // プレイヤーを再起動する\n                        this.player.switchVideo({\n                            url: this.player.quality!.url,\n                            type: this.player.quality!.type,\n                        });\n\n                        // 再起動しただけでは自動再生されないので、明示的に\n                        this.player.play();\n\n                        // バッファリング中の Progress Circular を表示\n                        this.is_video_buffering = true;\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n                        break;\n                    }\n\n                    // Status: Offline\n                    // 基本的に Offline は放送休止中やエラーなどで復帰の見込みがない状態\n                    case 'Offline': {\n\n                        if (this.player !== null) {\n\n                            // ステータス詳細をプレイヤーに表示\n                            // 動画の読み込みエラーが送出された時にメッセージを上書きする\n                            this.player.notice(event.detail, -1);\n                            this.player.video.onerror = () => {\n                                this.player!.notice(event.detail, -1);\n                                this.player!.video.onerror = null;\n                            };\n\n                            // 描画されたコメントをクリア\n                            this.player?.danmaku?.clear();\n\n                            // 動画を停止する\n                            this.player.video.pause();\n                        }\n\n                        // イベントソースを閉じる（復帰の見込みがないため）\n                        if (this.eventsource !== null) {\n                            this.eventsource.close();\n                            this.eventsource = null;\n                        }\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n\n                        // バッファリング中の Progress Circular を非表示にする\n                        this.is_loading = false;\n                        this.is_video_buffering = false;\n                        break;\n                    }\n                }\n            });\n\n            // ステータス詳細が更新されたときのイベント\n            this.eventsource.addEventListener('detail_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                if (this.player === null) return;\n                const event = JSON.parse(event_raw.data);\n                console.log(`[detail_update] Status: ${event.status} Detail:${event.detail}`);\n\n                // 視聴者数を更新\n                this.channelsStore.updateChannel(this.channelsStore.channel_id, {\n                    ...this.channelsStore.channel.current,\n                    viewers: event.clients_count,\n                });\n\n                // ステータスごとに処理を振り分け\n                switch (event.status) {\n\n                    // Status: Standby\n                    case 'Standby': {\n\n                        // ステータス詳細をプレイヤーに表示\n                        this.player.notice(event.detail, -1);\n\n                        // プレイヤーの背景を表示する\n                        if (!this.is_background_display) {\n                            this.is_background_display = true;\n                        }\n                        break;\n                    }\n                }\n            });\n\n            // クライアント数（だけ）が更新されたときのイベント\n            this.eventsource.addEventListener('clients_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n\n                // 視聴者数を更新\n                this.channelsStore.updateChannel(this.channelsStore.channel_id, {\n                    ...this.channelsStore.channel.current,\n                    viewers: event.clients_count,\n                });\n            });\n        },\n\n        // ショートカットキーを初期化する\n        initShortcutKeyHandler() {\n\n            const twitter_component = (this.$refs.Twitter as InstanceType<typeof Twitter>);\n            const tweet_form_element = twitter_component.$el.querySelector<HTMLDivElement>('.tweet-form__textarea');\n\n            // IME 変換中の状態を保存する\n            for (const element of document.querySelectorAll('input[type=text],input[type=search],textarea')) {\n                element.addEventListener('compositionstart', () => this.is_ime_composing = true);\n                element.addEventListener('compositionend', () => this.is_ime_composing = false);\n            }\n\n            // ショートカットキーハンドラー\n            this.shortcut_key_handler = async (event: KeyboardEvent) => {\n\n                const tag = document.activeElement.tagName.toUpperCase();\n                const editable = document.activeElement.getAttribute('contenteditable');\n\n                // 矢印キーのデフォルトの挙動（スクロール）を抑制\n                // キーリピート周りで間引かれるイベントでも event.preventDefault() しないとスクロールしてしまうため、\n                // 一番最初のタイミングでやっておく\n                // input・textarea・contenteditable 状態の要素では実行しない\n                if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.code) &&\n                    (tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true')) {\n                    event.preventDefault();\n                }\n\n                // キーリピート（押しっぱなし）状態の場合は基本実行しない\n                // 押し続けると何度も同じ動作が実行されて大変な事になる…\n                // ただ、キーリピートを使いたい場合もあるので、リピート状態をフラグとして保存する\n                let is_repeat = false;\n                if (event.repeat) is_repeat = true;\n\n                // キーリピート状態は event.repeat を見る事でだいたい検知できるが、最初の何回かは検知できないこともある\n                // そこで、0.05 秒以内に連続して発火したキーイベントは間引きも兼ねて実行しない\n                const now = Utils.time();\n                if (now - this.shortcut_key_pressed_at < 0.05) return;\n                this.shortcut_key_pressed_at = now;  // 最終押下時刻を更新\n\n                // 無名関数の中で実行する\n                const result = await (async (): Promise<boolean> => {\n\n                    // ***** ツイート入力フォームにフォーカスを当てる/フォーカスを外す *****\n\n                    // ツイート入力フォームにフォーカスしているときもこのショートカットが動くようにする\n                    // 以降の if 文で textarea フォーカス時のイベントをすべて弾いてしまっているため、前に持ってきている\n                    // Tab キーに割り当てている関係で、IME 変換中は実行しない（IME 変換中に実行すると文字変換ができなくなる）\n                    if (((tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') ||\n                        (document.activeElement === tweet_form_element)) && this.is_ime_composing === false) {\n                        if (event.code === 'Tab') {\n\n                            // ツイート入力フォームにフォーカスがすでに当たっていたら、フォーカスを外して終了\n                            if (document.activeElement === tweet_form_element) {\n                                tweet_form_element.blur();\n                                return true;\n                            }\n\n                            // パネルを開く\n                            this.is_panel_display = true;\n\n                            // どのタブを開いていたかに関係なく Twitter タブに切り替える\n                            this.tv_panel_active_tab = 'Twitter';\n\n                            // ツイート入力フォームの textarea 要素にフォーカスを当てる\n                            tweet_form_element.focus();\n\n                            // フォーカスを当てると勝手に横方向にスクロールされてしまうので、元に戻す\n                            this.$el.scrollLeft = 0;\n\n                            window.setTimeout(() => {\n\n                                // 他のタブから切り替えると一発でフォーカスが当たらないことがあるので、ちょっとだけ待ってから念押し\n                                // $nextTick() だと上手くいかなかった…\n                                tweet_form_element.focus();\n\n                                // フォーカスを当てると勝手に横方向にスクロールされてしまうので、元に戻す\n                                this.$el.scrollLeft = 0;\n\n                            }, 100);  // 0.1秒\n\n                            return true;\n                        }\n                    }\n\n                    // ***** ツイートを送信する *****\n\n                    // ツイート入力フォームにフォーカスしているときもこのショートカットが動くようにする\n                    // Twitter タブ以外を開いているときは実行しない\n                    // 以降の if 文で textarea フォーカス時のイベントをすべて弾いてしまっているため、前に持ってきている\n                    if (((tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') ||\n                        (document.activeElement === tweet_form_element)) &&\n                        this.tv_panel_active_tab === 'Twitter' &&\n                        this.is_ime_composing === false) {\n                        // (Ctrl or Cmd or Shift) + Enter\n                        // Shift + Enter は隠し機能（間違えたとき用）\n                        if ((event.ctrlKey || event.metaKey || event.shiftKey) && event.code === 'Enter') {\n                            twitter_component.$el.querySelector<HTMLDivElement>('.tweet-button')!.click();\n                            return true;\n                        }\n                    }\n\n                    // ***** コメント入力フォームを閉じる *****\n\n                    // プレイヤーが初期化されていない時・Shift / Alt キーが一緒に押された時に作動しないように\n                    if (this.player !== null && !event.shiftKey && !event.altKey) {\n\n                        // コメント入力フォームが表示されているときのみ\n                        if (this.player.template.controller.classList.contains('dplayer-controller-comment')) {\n                            // Ctrl or Cmd + M\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'KeyM') {\n                                this.player.comment!.hide();\n                                return true;\n                            }\n                        }\n                    }\n\n                    // input・textarea・contenteditable 状態の要素でなければ\n                    // 文字入力中にショートカットキーが作動してしまわないように\n                    if (tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') {\n\n                        // キーリピートでない時・Ctrl / Cmd / Alt キーが一緒に押された時に作動しないように\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.altKey) {\n\n                            // ***** 数字キーでチャンネルを切り替える *****\n\n                            // Ctrl / Cmd キーが同時押しされていたら BS チャンネルの方を選局する\n                            const switch_channel_type = (event.shiftKey) ? 'BS' : 'GR';\n\n                            // 1～9キー\n                            let switch_remocon_id: number | null = null;\n                            if (event.code === 'Digit1' || event.code === 'Digit2' || event.code === 'Digit3' ||\n                                event.code === 'Digit4' || event.code === 'Digit5' || event.code === 'Digit6' ||\n                                event.code === 'Digit7' || event.code === 'Digit8' || event.code === 'Digit9') {\n                                switch_remocon_id = Number(event.code.replace('Digit', ''));\n                            }\n                            // 0キー: 10に割り当て\n                            if (event.code === 'Digit0') switch_remocon_id = 10;\n                            // -キー: 11に割り当て\n                            if (event.code === 'Minus') switch_remocon_id = 11;\n                            // ^キー: 12に割り当て\n                            if (event.code === 'Equal') switch_remocon_id = 12;\n                            // 1～9キー (テンキー)\n                            if (event.code === 'Numpad1' || event.code === 'Numpad2' || event.code === 'Numpad3' ||\n                                event.code === 'Numpad4' || event.code === 'Numpad5' || event.code === 'Numpad6' ||\n                                event.code === 'Numpad7' || event.code === 'Numpad8' || event.code === 'Numpad9') {\n                                switch_remocon_id = Number(event.code.replace('Numpad', ''));\n                            }\n                            // 0キー (テンキー): 10に割り当て\n                            if (event.code === 'Numpad0') switch_remocon_id = 10;\n\n                            // この時点でリモコン番号が取得できていたら実行\n                            if (switch_remocon_id !== null) {\n\n                                // 切り替え先のチャンネルを取得する\n                                const switch_channel = this.channelsStore.getChannelByRemoconID(switch_channel_type, switch_remocon_id);\n\n                                // チャンネルが取得できていれば、ルーティングをそのチャンネルに置き換える\n                                // 押されたキーに対応するリモコン番号のチャンネルがない場合や、現在と同じチャンネル ID の場合は何も起こらない\n                                if (switch_channel !== null && switch_channel.channel_id !== this.channelsStore.channel_id) {\n                                    await this.$router.push({path: `/tv/watch/${switch_channel.channel_id}`});\n                                    return true;\n                                }\n                            }\n                        }\n\n                        // キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\n\n                            // ***** キーボードショートカットの一覧を表示する *****\n\n                            // /(?)キー: キーボードショートカットの一覧を表示する\n                            if (event.code === 'Slash') {\n                                this.shortcut_key_modal = !this.shortcut_key_modal;\n                                return true;\n                            }\n\n                            // ***** パネルのタブを切り替える *****\n\n                            // Pキー: パネルの表示切り替え\n                            if (event.code === 'KeyP') {\n                                this.is_panel_display = !this.is_panel_display;\n                                return true;\n                            }\n                            // Kキー: 番組情報タブ\n                            if (event.code === 'KeyK') {\n                                this.tv_panel_active_tab = 'Program';\n                                return true;\n                            }\n                            // Lキー: チャンネルタブ\n                            if (event.code === 'KeyL') {\n                                this.tv_panel_active_tab = 'Channel';\n                                return true;\n                            }\n                            // ;(+)キー: コメントタブ\n                            if (event.code === 'Semicolon') {\n                                this.tv_panel_active_tab = 'Comment';\n                                return true;\n                            }\n                            // :(*)キー: Twitterタブ\n                            if (event.code === 'Quote') {\n                                this.tv_panel_active_tab = 'Twitter';\n                                return true;\n                            }\n\n                            // ***** Twitter タブ内のタブを切り替える *****\n\n                            // [(「): ツイート検索タブ\n                            if (event.code === 'BracketRight') {\n                                twitter_component.twitter_active_tab = 'Search';\n                                return true;\n                            }\n                            // ](」): タイムラインタブ\n                            if (event.code === 'Backslash') {\n                                twitter_component.twitter_active_tab = 'Timeline';\n                                return true;\n                            }\n                            // \\(￥)キー: キャプチャタブ\n                            if (event.code === 'IntlRo') {\n                                twitter_component.twitter_active_tab = 'Capture';\n                                return true;\n                            }\n                        }\n\n                        // Twitter タブ内のキャプチャタブが表示されている & Ctrl / Cmd / Shift / Alt のいずれも押されていないときだけ\n                        // キャプチャタブが表示されている時は、プレイヤー操作側の矢印キー/スペースキーのショートカットは動作しない（キーが重複するため）\n                        if (this.tv_panel_active_tab === 'Twitter' && twitter_component.twitter_active_tab === 'Capture' &&\n                            (!event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey)) {\n\n                            // ***** キャプチャにフォーカスする *****\n\n                            if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.code)) {\n\n                                // キャプチャリストに一枚もキャプチャがない\n                                if (twitter_component.captures.length === 0) return false;\n\n                                // まだどのキャプチャにもフォーカスされていない場合は、一番新しいキャプチャにフォーカスして終了\n                                if (twitter_component.captures.some(capture => capture.focused === true) === false) {\n                                    twitter_component.captures[twitter_component.captures.length - 1].focused = true;\n                                    return true;\n                                }\n\n                                // 現在フォーカスされているキャプチャのインデックスを取得\n                                const focused_capture_index = twitter_component.captures.findIndex(capture => capture.focused === true);\n\n                                // ↑キー: 2つ前のキャプチャにフォーカスする\n                                // キャプチャリストは2列で並んでいるので、2つ後のキャプチャが現在フォーカスされているキャプチャの直上になる\n                                if (event.code === 'ArrowUp') {\n                                    // 2つ前のキャプチャがないなら実行しない\n                                    if (focused_capture_index - 2 < 0) return false;\n                                    twitter_component.captures[focused_capture_index - 2].focused = true;\n                                }\n\n                                // ↓キー: 2つ後のキャプチャにフォーカスする\n                                // キャプチャリストは2列で並んでいるので、2つ後のキャプチャが現在フォーカスされているキャプチャの直下になる\n                                if (event.code === 'ArrowDown') {\n                                    // 2つ後のキャプチャがないなら実行しない\n                                    if (focused_capture_index + 2 > (twitter_component.captures.length - 1)) return false;\n                                    twitter_component.captures[focused_capture_index + 2].focused = true;\n                                }\n\n                                // ←キー: 1つ前のキャプチャにフォーカスする\n                                if (event.code === 'ArrowLeft') {\n                                    // 1つ前のキャプチャがないなら実行しない\n                                    if (focused_capture_index - 1 < 0) return false;\n                                    twitter_component.captures[focused_capture_index - 1].focused = true;\n                                }\n\n                                // ←キー: 1つ後のキャプチャにフォーカスする\n                                if (event.code === 'ArrowRight') {\n                                    // 1つ後のキャプチャがないなら実行しない\n                                    if (focused_capture_index + 1 > (twitter_component.captures.length - 1)) return false;\n                                    twitter_component.captures[focused_capture_index + 1].focused = true;\n                                }\n\n                                // 現在フォーカスされているキャプチャのフォーカスを外す\n                                twitter_component.captures[focused_capture_index].focused = false;\n\n                                // 拡大表示のモーダルが開かれている場合は、フォーカスしたキャプチャをモーダルにセット\n                                // こうすることで、QuickLook みたいな挙動になる\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\n                                if (twitter_component.zoom_capture_modal === true) {\n                                    twitter_component.zoom_capture = focused_capture;\n                                }\n\n                                // 現在フォーカスされているキャプチャが見える位置までスクロール\n                                // block: 'nearest' の指定で、上下どちらにスクロールしてもフォーカスされているキャプチャが常に表示されるようになる\n                                const focused_capture_element =\n                                    twitter_component.$el.querySelector(`img[src=\"${focused_capture.image_url}\"]`).parentElement;\n                                if (is_repeat) {\n                                    // キーリピート状態ではスムーズスクロールがフォーカスの移動に追いつけずスクロールの挙動がおかしくなるため、\n                                    // スムーズスクロールは無効にしてある\n                                    focused_capture_element.scrollIntoView({block: 'nearest', inline: 'nearest', behavior: 'auto'});\n                                } else {\n                                    focused_capture_element.scrollIntoView({block: 'nearest', inline: 'nearest', behavior: 'smooth'});\n                                }\n                                return true;\n                            }\n\n                            // ***** キャプチャを拡大表示する/拡大表示を閉じる *****\n\n                            if (event.code === 'Enter') {\n\n                                // Enter キーの押下がプレイヤー側のコメント送信由来のイベントの場合は実行しない\n                                if (this.is_comment_send_just_did) return false;\n\n                                // すでにモーダルが開かれている場合は、どのキャプチャが拡大表示されているかに関わらず閉じる\n                                if (twitter_component.zoom_capture_modal === true) {\n                                    twitter_component.zoom_capture_modal = false;\n                                    return true;\n                                }\n\n                                // 現在フォーカスされているキャプチャを取得\n                                // まだどのキャプチャにもフォーカスされていない場合は実行しない\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\n                                if (focused_capture === undefined) return false;\n\n                                // モーダルを開き、モーダルで拡大表示するキャプチャとしてセット\n                                twitter_component.zoom_capture = focused_capture;\n                                twitter_component.zoom_capture_modal = true;\n                                return true;\n                            }\n\n                            // ***** キャプチャを選択する/選択を解除する *****\n\n                            if (event.code === 'Space') {\n\n                                // 現在フォーカスされているキャプチャを取得\n                                // まだどのキャプチャにもフォーカスされていない場合は実行しない\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\n                                if (focused_capture === undefined) return false;\n\n                                // 「キャプチャリスト内のキャプチャがクリックされたときのイベント」を呼ぶ\n                                // 選択されていなければ選択され、選択されていれば選択が解除される\n                                // キャプチャの枚数制限などはすべて clickCapture() の中で処理される\n                                twitter_component.clickCapture(focused_capture);\n                                return true;\n                            }\n                        }\n\n                        // ***** 上下キーでチャンネルを切り替える *****\n\n                        // キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\n                        // キャプチャ関連のショートカットの後に持ってこないとキャプチャ関連のショートカットが動作しなくなる\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\n\n                            // ↑キー: 前のチャンネルに切り替え\n                            if (event.code === 'ArrowUp') {\n                                this.is_zapping = true;\n                                await this.$router.push({path: `/tv/watch/${this.channelsStore.channel.previous.channel_id}`});\n                                return true;\n                            }\n                            // ↓キー: 次のチャンネルに切り替え\n                            if (event.code === 'ArrowDown') {\n                                this.is_zapping = true;\n                                await this.$router.push({path: `/tv/watch/${this.channelsStore.channel.next.channel_id}`});\n                                return true;\n                            }\n                        }\n\n                        // ***** プレイヤーのショートカットキー *****\n\n                        // プレイヤーが初期化されていない時・Shift / Alt キーが一緒に押された時に作動しないように\n                        if (this.player !== null && !event.shiftKey && !event.altKey) {\n\n                            // Ctrl / Cmd + ↑キー: プレイヤーの音量を上げる\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowUp') {\n                                this.player.volume(this.player.volume() + 0.05);\n                                return true;\n                            }\n                            // Ctrl / Cmd + ↓キー: プレイヤーの音量を下げる\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowDown') {\n                                this.player.volume(this.player.volume() - 0.05);\n                                return true;\n                            }\n                            // Ctrl / Cmd + ←キー: 停止して0.5秒巻き戻し\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowLeft') {\n                                if (this.player.video.paused === false) this.player.video.pause();\n                                this.player.video.currentTime = this.player.video.currentTime - 0.5;\n                                return true;\n                            }\n                            // Ctrl / Cmd + →キー: 停止して0.5秒早送り\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowRight') {\n                                if (this.player.video.paused === false) this.player.video.pause();\n                                this.player.video.currentTime = this.player.video.currentTime + 0.5;\n                                return true;\n                            }\n                        }\n\n                        // プレイヤーが初期化されていない時・Ctrl / Cmd / Alt キーが一緒に押された時に作動しないように\n                        if (this.player !== null && !event.ctrlKey && !event.metaKey && !event.altKey) {\n\n                            // Shift + Spaceキー + キーリピートでない時 + Twitter タブ表示時 + キャプチャタブ表示時: 再生/停止\n                            if (event.shiftKey === true && event.code === 'Space' && is_repeat === false &&\n                                this.tv_panel_active_tab === 'Twitter' && twitter_component.twitter_active_tab === 'Capture') {\n                                this.player.toggle();\n                                return true;\n                            }\n                        }\n\n                        // プレイヤーが初期化されていない時・キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\n                        if (this.player !== null && is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\n\n                            // Spaceキー: 再生/停止\n                            if (event.code === 'Space') {\n                                this.player.toggle();\n                                return true;\n                            }\n                            // Fキー: フルスクリーンの切り替え\n                            if (event.code === 'KeyF') {\n                                this.player.fullScreen.toggle();\n                                return true;\n                            }\n                            // Wキー: ライブストリームの同期\n                            if (event.code === 'KeyW') {\n                                this.player.sync();\n                                return true;\n                            }\n                            // Eキー: Picture-in-Picture の表示切り替え\n                            if (event.code === 'KeyE') {\n                                if (document.pictureInPictureEnabled) {\n                                    this.player.template.pipButton.click();\n                                }\n                                return true;\n                            }\n                            // Sキー: 字幕の表示切り替え\n                            if (event.code === 'KeyS') {\n                                this.player.subtitle.toggle();\n                                if (!this.player.subtitle.container.classList.contains('dplayer-subtitle-hide')) {\n                                    this.player.notice(`${this.player.tran('Show subtitle')}`);\n                                } else {\n                                    this.player.notice(`${this.player.tran('Hide subtitle')}`);\n                                }\n                                return true;\n                            }\n                            // Dキー: コメントの表示切り替え\n                            if (event.code === 'KeyD') {\n                                this.player.template.showDanmaku.click();\n                                if (this.player.template.showDanmakuToggle.checked) {\n                                    this.player.notice(`${this.player.tran('Show comment')}`);\n                                } else {\n                                    this.player.notice(`${this.player.tran('Hide comment')}`);\n                                }\n                                return true;\n                            }\n                            // Cキー: 映像をキャプチャ\n                            if (event.code === 'KeyC') {\n                                await this.capture_handler.captureAndSave(false);\n                                return true;\n                            }\n                            // Vキー: 映像を実況コメントを付けてキャプチャ\n                            if (event.code === 'KeyV') {\n                                await this.capture_handler.captureAndSave(true);\n                                return true;\n                            }\n                            // Mキー: コメント入力フォームにフォーカス\n                            if (event.code === 'KeyM') {\n                                this.player.controller.show();\n                                this.player.comment.show();\n                                this.controlDisplayTimer();\n                                window.setTimeout(() => this.player.template.commentInput.focus(), 100);\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                })();\n\n                // 無名関数を実行した後の戻り値が true ならショートカットキーの操作を実行したことになるので、デフォルトのキー操作を封じる\n                if (result === true) {\n                    event.preventDefault();\n                }\n            };\n\n            // ページ上でキーが押されたときのイベントを登録\n            document.addEventListener('keydown', this.shortcut_key_handler);\n        },\n\n        // キャプチャ関連のイベントを初期化する\n        initCaptureHandler() {\n\n            // キャプチャハンドラーを初期化\n            this.capture_handler = new CaptureHandler(this.player, (blob: Blob, filename: string) => {\n                // キャプチャが撮られたら、随時 Twitter タブのキャプチャリストに追加する\n                (this.$refs.Twitter as InstanceType<typeof Twitter>).addCaptureList(blob, filename);\n            });\n\n            // キャプチャボタンがクリックされたときのイベント\n            // ショートカットからのキャプチャでも同じイベントがトリガーされる\n            const capture_button = this.$el.querySelector('.dplayer-icon.dplayer-capture-icon');\n            capture_button.addEventListener('click', async () => {\n                await this.capture_handler.captureAndSave(false);\n            });\n\n            // コメント付きキャプチャボタンがクリックされたときのイベント\n            // ショートカットからのキャプチャでも同じイベントがトリガーされる\n            const comment_capture_button = this.$el.querySelector('.dplayer-icon.dplayer-comment-capture-icon');\n            comment_capture_button.addEventListener('click', async () => {\n                await this.capture_handler.captureAndSave(true);\n            });\n        },\n\n\n        // 再生セッションを破棄する\n        // チャンネルを切り替える際に実行される\n        async destroy(is_destroy_player = false, is_zapping_continuously = false) {\n\n            // ニコニコ実況セッションを破棄し、コメント受信を終了する\n            (this.$refs.Comment as InstanceType<typeof Comment>).destroy();\n\n            // clearInterval() ですべての setInterval(), setTimeout() の実行を止める\n            // clearInterval() と clearTimeout() は中身共通なので問題ない\n            for (const interval_id of this.interval_ids) {\n                window.clearInterval(interval_id);\n            }\n\n            // コントロール表示制御用タイマーを止める\n            window.clearTimeout(this.control_interval_id);\n\n            // interval_ids をクリア\n            this.interval_ids = [];\n\n            // 再びローディング状態にする\n            this.is_loading = true;\n\n            // プレイヤーの背景を隠す\n            this.is_background_display = false;\n\n            // プレイヤーの破棄を許可する\n            if (this.player !== null) {\n                this.player_can_be_destroyed = true;\n            }\n\n            // イベントソースを閉じる\n            if (this.eventsource !== null) {\n                this.eventsource.close();\n                this.eventsource = null;\n            }\n\n            // 映像がフェードアウトするアニメーション (0.2秒) 分待ってから実行\n            // この 0.2 秒の間に音量をフェードアウトさせる\n            // なお、ザッピングでチャンネルを連続で切り替えている場合は実行しない (実行しても意味がないため)\n            if (is_zapping_continuously === false) {\n                const current_volume = this.player.user.get('volume');\n                // 20回 (0.01秒おき) に分けて音量を下げる\n                for (let i = 0; i < 20; i++) {\n                    await Utils.sleep(0.01);\n                    this.player.video.volume = current_volume * (1 - (i + 1) / 20);\n                }\n            }\n\n            // is_destroy_player が true の時は、ここで DPlayer 自体を破棄する\n            // false の時は次の initPlayer() が実行されるまで破棄されない\n            // 次のプレイヤーの初期化の直前に前のプレイヤーを破棄することで、プレイヤーの HTML が消えることによるちらつきを防ぐ\n            if (is_destroy_player === true && this.player !== null) {\n                try {\n                    this.player.destroy();\n                } catch (error) {\n                    // mpegts.js をうまく破棄できない場合\n                    if (this.player.plugins.mpegts !== undefined) {\n                        this.player.plugins.mpegts.destroy();\n                    }\n                }\n                this.player_can_be_destroyed = false;\n                this.player = null;\n            }\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Watch.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Watch.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Watch.vue?vue&type=template&id=054d59ef&scoped=true&\"\nimport script from \"./Watch.vue?vue&type=script&lang=ts&\"\nexport * from \"./Watch.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Watch.vue?vue&type=style&index=0&id=054d59ef&prod&lang=scss&\"\nimport style1 from \"./Watch.vue?vue&type=style&index=1&id=054d59ef&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"054d59ef\",\n  null\n  \n)\n\nexport default component.exports","\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\n\nimport Utils from '@/utils';\nimport Login from '@/views/Login.vue';\nimport NotFound from '@/views/NotFound.vue';\nimport Register from '@/views/Register.vue';\nimport SettingsAccount from '@/views/Settings/Account.vue';\nimport SettingsCaption from '@/views/Settings/Caption.vue';\nimport SettingsCapture from '@/views/Settings/Capture.vue';\nimport SettingsGeneral from '@/views/Settings/General.vue';\nimport SettingsIndex from '@/views/Settings/Index.vue';\nimport SettingsJikkyo from '@/views/Settings/Jikkyo.vue';\nimport SettingsServer from '@/views/Settings/Server.vue';\nimport SettingsTwitter from '@/views/Settings/Twitter.vue';\nimport TVHome from '@/views/TV/Home.vue';\nimport TVWatch from '@/views/TV/Watch.vue';\n\nVue.use(VueRouter);\n\nconst router = new VueRouter({\n\n    // History API モード\n    mode: 'history',\n\n    // ルーティングのベース URL\n    base: process.env.BASE_URL,\n\n    // ルーティング設定\n    routes: [\n        {\n            path: '/',\n            redirect: '/tv/',\n        },\n        {\n            path: '/tv/',\n            name: 'TV Home',\n            component: TVHome,\n        },\n        {\n            path: '/tv/watch/:channel_id',\n            name: 'TV Watch',\n            component: TVWatch,\n        },\n        {\n            path: '/settings/',\n            name: 'Settings Index',\n            component: SettingsIndex,\n            beforeEnter: (to, from, next) => {\n\n                // スマホ縦画面・スマホ横画面・タブレット縦画面では設定一覧画面を表示する（画面サイズの関係）\n                if (Utils.isSmartphoneVertical() || Utils.isSmartphoneHorizontal() || Utils.isTabletVertical()) {\n                    next();  // 通常通り遷移\n                    return;\n                }\n\n                // それ以外の画面サイズでは全般設定にリダイレクト\n                next({path: '/settings/general/'});\n            }\n        },\n        {\n            path: '/settings/general',\n            name: 'Settings General',\n            component: SettingsGeneral,\n        },\n        {\n            path: '/settings/caption',\n            name: 'Settings Caption',\n            component: SettingsCaption,\n        },\n        {\n            path: '/settings/capture',\n            name: 'Settings Capture',\n            component: SettingsCapture,\n        },\n        {\n            path: '/settings/account',\n            name: 'Settings Account',\n            component: SettingsAccount,\n        },\n        {\n            path: '/settings/jikkyo',\n            name: 'Settings Jikkyo',\n            component: SettingsJikkyo,\n        },\n        {\n            path: '/settings/twitter',\n            name: 'Settings Twitter',\n            component: SettingsTwitter,\n        },\n        {\n            path: '/settings/server',\n            name: 'Settings Server',\n            component: SettingsServer,\n        },\n        {\n            path: '/login/',\n            name: 'Login',\n            component: Login,\n        },\n        {\n            path: '/register/',\n            name: 'Register',\n            component: Register,\n        },\n        {\n            path: '*',\n            name: 'NotFound',\n            component: NotFound,\n        },\n    ],\n\n    // ページ遷移時のスクロールの挙動の設定\n    // ref: https://v3.router.vuejs.org/ja/guide/advanced/scroll-behavior.html\n    scrollBehavior (to, from, savedPosition) {\n        if (savedPosition) {\n            // 戻る/進むボタンが押されたときは保存されたスクロール位置を使う\n            return savedPosition;\n        } else {\n            // それ以外は常に先頭にスクロールする\n            return {x: 0, y: 0};\n        }\n    }\n});\n\nexport default router;\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n    register(`${process.env.BASE_URL}service-worker.js`, {\n        ready() {\n            console.log(\n                'App is being served from cache by a service worker.\\n' +\n                'For more details, visit https://goo.gl/AFskqB'\n            );\n        },\n        registered() {\n            console.log('Service worker has been registered.');\n        },\n        cached() {\n            console.log('Content has been cached for offline use.');\n        },\n        updatefound() {\n            console.log('New content is downloading.');\n        },\n        updated() {\n            console.log('New content is available; please refresh.');\n        },\n        offline() {\n            console.log('No internet connection found. App is running in offline mode.');\n        },\n        error(error) {\n            console.error('Error during service worker registration:', error);\n        }\n    });\n}\n","\nimport { Icon } from '@iconify/vue2';\nimport { createPinia, PiniaVuePlugin } from 'pinia';\nimport { polyfill as SeamlessScrollPolyfill } from 'seamless-scroll-polyfill';\nimport VTooltip from 'v-tooltip';\nimport Vue from 'vue';\nimport VueVirtualScroller from 'vue-virtual-scroller';\nimport 'vue-virtual-scroller/dist/vue-virtual-scroller.css';\nimport VuetifyMessageSnackbar from 'vuetify-message-snackbar';\nimport 'v-tooltip/dist/v-tooltip.css';\n\nimport App from '@/App.vue';\nimport VTabItem from '@/components/Vuetify/VTabItem';\nimport VTabs from '@/components/Vuetify/VTabs';\nimport VTabsItems from '@/components/Vuetify/VTabsItems';\nimport vuetify from '@/plugins/vuetify';\nimport router from '@/router';\nimport useSettingsStore, { setLocalStorageSettings } from '@/store/SettingsStore';\nimport '@/service-worker';\nimport Utils from '@/utils';\n\n// スムーズスクロール周りの API の polyfill を適用\n// Element.scrollInfoView() のオプション指定を使うために必要\nSeamlessScrollPolyfill();\n\n// Production Tip を非表示にする\nVue.config.productionTip = false;\n\n// 常に Vue.js devtools を有効にする\nVue.config.devtools = true;\n\n// Pinia を使う\n// ref: https://pinia.vuejs.org/cookbook/options-api.html\nVue.use(PiniaVuePlugin);\nconst pinia = createPinia();\n\n// vue-virtual-scroller を使う\nVue.use(VueVirtualScroller);\n\n// vuetify-message-snackbar を使う\n// マイナーな OSS（しかも中国語…）だけど、Snackbar を関数で呼びたかったのでちょうどよかった\n// ref: https://github.com/thinkupp/vuetify-message-snackbar\nVue.use(VuetifyMessageSnackbar, {\n    // 画面上に配置しない\n    top: false,\n    // 画面下に配置する\n    bottom: true,\n    // デフォルトの背景色\n    color: '#433532',\n    // ダークテーマを適用する\n    dark: true,\n    // 影 (Elevation) の設定\n    elevation: 8,\n    // 2.5秒でタイムアウト\n    timeout: 2500,\n    // 要素が非表示になった後に DOM から要素を削除する\n    autoRemove: true,\n    // 閉じるボタンのテキスト\n    closeButtonContent: '閉じる',\n    // Vuetify のインスタンス\n    vuetifyInstance: vuetify,\n});\n\n// VTooltip を使う\n// タッチデバイスでは無効化する\n// ref: https://v-tooltip.netlify.app/guide/config.html#default-values\nconst trigger = Utils.isTouchDevice() ? [] : ['hover', 'focus', 'touch'];\nVTooltip.options.themes.tooltip.showTriggers = trigger;\nVTooltip.options.themes.tooltip.hideTriggers = trigger;\nVTooltip.options.themes.tooltip.delay.show = 0;\nVTooltip.options.offset = [0, 7];\nVue.use(VTooltip);\n\n// Iconify（アイコン）のグローバルコンポーネント\nVue.component('Icon', Icon);\n\n// VTabItem / VTabs / VTabsItems の挙動を改善するグローバルコンポーネント\nVue.component('v-tab-item-fix', VTabItem);\nVue.component('v-tabs-fix', VTabs);\nVue.component('v-tabs-items-fix', VTabsItems);\n\n// Vue を初期化\n(window as any).KonomiTVVueInstance = new Vue({\n    pinia,\n    router,\n    vuetify,\n    render: h => h(App),\n}).$mount('#app');\n\n// 設定データをサーバーにアップロード中かどうか\nlet is_uploading_settings = false;\n\n// 設定データの変更を監視する\nconst settings_store = useSettingsStore();\nsettings_store.$subscribe(async () => {\n\n    // 設定データをアップロード中の場合は何もしない\n    if (is_uploading_settings === true) {\n        return;\n    }\n\n    // 設定データを LocalStorage に保存\n    console.log('Client Settings Changed:', settings_store.settings);\n    setLocalStorageSettings(settings_store.settings);\n\n    // 設定データをサーバーに同期する (ログイン時かつ同期が有効な場合のみ)\n    await settings_store.syncClientSettingsToServer();\n\n}, {detached: true});\n\n// ログイン時かつ設定の同期が有効な場合、ページ遷移に関わらず、常に3秒おきにサーバーから設定を取得する\n// 初回のページレンダリングに間に合わないのは想定内（同期の完了を待つこともできるが、それだと表示速度が遅くなるのでしょうがない）\nwindow.setInterval(async () => {\n    if (Utils.getAccessToken() !== null && settings_store.settings.sync_settings === true) {\n\n        // 設定データをサーバーにアップロード\n        is_uploading_settings = true;\n        await settings_store.syncClientSettingsFromServer();\n        is_uploading_settings = false;\n\n        // 設定データを LocalStorage に保存\n        setLocalStorageSettings(settings_store.settings);\n    }\n}, 3 * 1000);  // 3秒おき\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkKonomiTV\"] = self[\"webpackChunkKonomiTV\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1972); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_c","_self","attrs","staticRenderFns","script","component","render","VTabItem","h","props","name","this","computedTransition","on","beforeEnter","onBeforeTransition","afterEnter","onAfterTransition","enterCancelled","onTransitionCancelled","beforeLeave","afterLeave","leaveCancelled","enter","onEnter","genWindowItem","VTabsBar","data","items","methods","register","item","activeItem","internalIndex","push","sort","a","b","index_a","$slots","default","findIndex","element","$vnode","key","index_b","$on","onClick","mandatory","selectedValues","length","updateMandatory","updateItem","indexOf","undefined","updateInternalValue","unregister","constructor","super","options","call","VTabs","genBar","slider","style","height","convertToUnit","activeClass","centerActive","dark","light","optional","mobileBreakpoint","nextIcon","prevIcon","showArrows","value","internalValue","callSlider","change","val","ref","setTextColor","computedColor","setBackgroundColor","backgroundColor","$createElement","genSlider","VTabsItems","updateReverse","oldVal","itemsLength","lastIndex","continuous","Vue","Vuetify","VSnackbar","VBtn","VIcon","theme","themes","primary","secondary","twitter","base","lighten1","lighten2","gray","black","background","lighten3","text","darken1","darken2","darken3","customProperties","Utils","static","localStorage","getItem","access_token","setItem","removeItem","test","navigator","userAgent","blob","filename","blob_url","URL","createObjectURL","link","document","createElement","download","href","click","revokeObjectURL","content","html_escape_table","replace","match","popupSizeWidth","popupSizeHeight","window","screen","posTop","posLeft","width","class_name","activeElement","classList","contains","matchMedia","matches","Math","floor","seconds","Promise","resolve","setTimeout","Date","now","Object","prototype","toString","slice","toLowerCase","escapeHTML","pattern","version","process","api_base_url","location","protocol","host","ChannelUtils","channel_id","result","groups","channel_type","toUpperCase","e","channel_force","success","message","KonomiTVVueInstance","$message","info","warning","error","show","axios_instance","axios","interceptors","request","use","config","baseURL","headers","timeout","Users","user_create_request","response","APIClient","Message","username","password","URLSearchParams","responseType","user_update_request","icon","form_data","FormData","append","useUserStore","defineStore","state","is_logged_in","user","user_icon_url","getters","user_niconico_icon_url","niconico_user_id","user_id_slice","actions","async","console","log","login","silent","logout","fetchUser","settings_store","useSettingsStore","settings","sync_settings","force","catch","AxiosError","status","Error","detail","is_error","NaN","is_success","url","assign","method","template","user_store","Number","isNaN","Settings","sync_settings_keys","default_settings","pinned_channel_ids","showed_panel_last_time","selected_twitter_account_id","saved_twitter_hashtags","tv_streaming_quality","tv_data_saver_mode","tv_low_latency_mode","panel_display_state","tv_panel_active_tab","caption_font","always_border_caption_text","specify_caption_background_color","caption_background_color","tv_show_superimpose","capture_copy_to_clipboard","capture_save_mode","capture_caption_mode","comment_speed_rate","comment_font_size","close_comment_form_after_sending","muted_comment_keywords","muted_niconico_user_ids","mute_vulgar_comments","mute_abusive_discriminatory_prejudiced_comments","mute_big_size_comments","mute_fixed_comments","mute_colored_comments","mute_consecutive_same_characters_comments","fold_panel_after_sending_tweet","reset_hashtag_when_program_switches","auto_add_watching_channel_hashtag","twitter_active_tab","tweet_hashtag_position","tweet_capture_watermark_position","getLocalStorageSettings","JSON","parse","setLocalStorageSettings","stringify","getNormalizedSettings","new_settings","default_settings_key","keys","file","settings_json","syncClientSettingsToServer","getSyncableClientSettings","sync_settings_key","settings_server","settings_server_key","settings_server_value","entries","CommentUtils","color","color_table","position","size","comment_mail","commands","split","command","parsed_color","getCommentColor","parsed_position","getCommentPosition","parsed_size","getCommentSize","comment","user_id","includes","special_command_comments_pattern","mute_vulgar_comments_pattern","mute_abusive_discriminatory_prejudiced_comments_pattern","mute_consecutive_same_characters_comments_pattern","muted_comment_keyword","startsWith","endsWith","RegExp","annoying_statistical_comments_pattern","Buffer","PlayerUtils","background_count","random","padStart","canPlayType","ProgramUtils","program","mark","pattern1","pattern2","dayjs","isSameOrAfter","isSameOrBefore","isBetween","pause_time_start","hour","minute","second","pause_time_end","pause_time_start_23","pause_time_end_23","default_value","progress","diff","start_time","duration","is_short","end_time","format","staticClass","$event","model","callback","expression","_vm","password_showing","directives","rawName","_setup","_v","staticStyle","class","Version","useVersionStore","server_version_info","last_updated_at","client_version","server_version","_b","_a","latest_version","is_client_develop_version","is_server_develop_version","is_update_available","is_version_mismatch","fetchServerVersion","version_info","components","BottomNavigation","computed","mapStores","versionStore","Header","Navigation","is_form_dense","userStore","$router","path","_setupProxy","_m","password_validation","username_validation","$refs","validate","is_admin","overrideServerSettingsFromClient","sync_settings_dialog","preventDefault","settings_username","settings_icon","$$v","settings_password_showing","settings_password","scopedSlots","account_delete_confirm_dialog","SettingsBase","is_loading","settings_username_validation","settings_password_validation","watch","settingsStore","sync_settings_json","server_sync_settings","server_sync_settings_json","syncClientSettingsFromServer","update_type","updateUser","updateUserIcon","deleteUser","$set","isHEVCVideoSupported","import_settings_file","exportSettings","settings_json_blob","Blob","type","importClientSettings","go","resetClientSettings","comment_mute_settings_modal","muted_comment_keyword_match_type","prop","event","showing","Boolean","required","interval_timer_id","$emit","Niconico","authorization_url","CommentMuteSettings","hash","params","get","authorization_status","parseInt","authorization_detail","onOAuthCallbackReceived","history","replaceState","popup_window","open","onMessage","closed","close","removeEventListener","addEventListener","twitter_account","loginTwitterAccountWithPasswordForm","twitter_password_auth_dialog","twitter_screen_name","twitter_password_showing","twitter_password","Twitter","twitter_password_auth_request","screen_name","captures","tweet_capture","is_twitter_password_auth_sending","twitter_form","current_twitter_account","twitter_accounts","updated_at","reset","Array","from","channels_type","channels","id","removePinnedChannel","stopPropagation","domProps","_s","IProgramDefault","network_id","service_id","event_id","title","description","is_free","genre","video_type","video_codec","video_resolution","primary_audio_type","primary_audio_language","primary_audio_sampling_rate","secondary_audio_type","secondary_audio_language","secondary_audio_sampling_rate","IChannelDefault","transport_stream_id","remocon_id","channel_number","channel_name","channel_comment","is_subchannel","is_radiochannel","is_display","viewers","program_present","program_following","Channels","useChannelsStore","channels_list","GR","BS","CS","CATV","SKY","STARDIGIO","is_channels_list_initial_updated","is_showing_live","channel","getChannelType","previous","current","next","current_channel_index","IProgramError","IChannelError","previous_channel_index","index","next_channel_index","channels_list_with_pinned","Map","set","_d","_e","_f","_g","delete","has","channels_list_with_pinned_for_watch","getChannel","find","getChannelByRemoconID","updateChannel","update","tab","interval_ids","residue_second","getSeconds","channelsStore","setInterval","beforeDestroy","interval_id","clearInterval","addPinnedChannel","splice","isPinnedChannel","controlDisplayTimer","modifiers","backgroundImage","is_panel_display","player","shortcut_key_modal","shortcut_key_column_name","shortcut_key_column","shortcut_keys","key_name","_l","getProgramTime","getProgramProgress","is_comment_list_dropdown_display","fn","active","time","isTouchDevice","initialize_failed_message","is_manual_scroll","LiveCommentManager","on_initial_comments_received","on_comment_received","watch_session","comment_session","vpos_base_timestamp","keep_seat_interval_id","abort_controller","AbortController","watch_session_result","initWatchSession","initCommentSession","is_disconnect_message_received","watch_session_info","notice","WebSocket","audience_token","send","signal","code","reconnect","readyState","OPEN","keepIntervalSec","disconnect_reason","reason","vposBaseTime","valueOf","threadId","message_server_url","messageServer","uri","thread_id","your_post_key","yourPostKey","comment_session_info","initial_comments_buffer","initial_comments_received","ping","thread","threadkey","res_from","resultcode","chat","yourpost","parseCommentCommand","mail","isMutedComment","comment_data","no","date","my_post","buffered_end","video","buffered","end","comment_delay_time","currentTime","paused","danmaku","draw","sendComment","position_table","vpos","round","abort","warn","destroy","initSession","is_auto_scrolling","comment_list","comment_list_element","comment_list_dropdown_top","comment_list_dropdown_comment","live_comment_manager","visibilitychange_listener","resize_observer","resize_observer_element","created","mounted","$el","querySelector","is_user_scrolling","onmousedown","x","clientX","getBoundingClientRect","left","clientWidth","onmouseup","on_user_scrolling","is_dragging","ontouchstart","ontouchend","ontouchmove","onwheel","onscroll","scrollTop","offsetHeight","scrollHeight","unobserve","showCommentListDropdown","comment_list_wrapper_rect","comment_list_wrapper","comment_list_dropdown_height","comment_button_rect","currentTarget","top","hideCommentListDropdown","filter","addMutedKeywords","addMutedNiconicoUserIds","addMutedNiconicoUserIDs","smooth","scrollTo","behavior","initReserveObserver","animation_timeout_id","on_resize","video_element","comment_area_element","clientHeight","letter_box_height","threshold","comment_area_vertical_margin","comment_area_width","comment_area_height","gcd","y","gcd_result","comment_area_height_aspect","transition","setProperty","clearTimeout","removeProperty","ResizeObserver","observe","comment_list_buffer","max_comment_count","initial_comments","scrollCommentList","visibilityState","max","comment_list_and_buffer_length","niconico_user_premium","decorateProgramInfo","getAttribute","genre_index","major","middle","getChannelForceType","detail_text","detail_heading","URLtoLink","zoom_capture_modal","capture","clickCapture","target","tweet_hashtag","is_tweet_hashtag_form_focused","updateTweetLetterCount","tweet_text","is_tweet_text_form_focused","is_logged_in_twitter","tweet_letter_count","editing","hashtag","updateSelectedTwitterAccount","draggable","is_virtual_keyboard_display","selected_twitter_account","is_twitter_account_list_display","map","is_hashtag_list_display","zoom_capture","captures_element","tweet_captures","is_tweet_sending","some","twitter_account_index","formatHashtag","image_url","deep","handler","pasteClipboardData","clipboard_item","clipboardData","getAsFile","addCaptureList","clickHashtagListButton","clickHashtag","clickAccountButton","fullscreenElement","exitFullscreen","selected","shift","focused","$nextTick","image_bitmap","createImageBitmap","canvas","OffscreenCanvas","context","getContext","alpha","desynchronized","willReadFrequently","drawImage","font","fillStyle","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","textAlign","textBaseline","fillText","convertToBlob","quality","toBlob","getChannelHashtag","from_hashtag_list","tweet_hashtag_array","trim","replaceAll","channel_hashtag","join","new_tweet_captures","drawProgramTitleOnCapture","then","blur","Captures","CaptureHandler","captured_callback","player_container","container","insertAdjacentHTML","comment_capture_button","capture_button","canvas_context","videoWidth","videoHeight","with_comments","total_time","channels_store","addHighlight","filename_base","filename_caption","caption_canvas","plugins","aribb24Caption","getRawCanvas","superimpose_canvas","aribb24Superimpose","is_caption_showing","isShowing","isPresent","is_superimpose_showing","caption_text","getTextContent","exif_options","is_caption_composited","is_comment_composited","export_and_save","exportToBlob","setEXIFDataToCapture","capture_normal","capture_caption","promises","comments_image","createCommentsImage","drawComments","filename_real","all","bitmap_canvas","transferFromImageBitmap","removeHighlight","copyBlobToClipboard","convertBlobToPng","add","remove","html","svg","image","Image","src","encodeURIComponent","decode","comments_html","outerHTML","querySelectorAll","commentsHTMLtoSVGImage","offsetWidth","draw_scale_ratio","draw_height","HTMLCanvasElement","reject","captured_playback_position","json","captured_at","datetime","exif","piexif","TagValues","ImageIFD","XResolution","YResolution","ResolutionUnit","YCbCrPositioning","DateTime","Software","XPComment","ExifIFD","ExifVersion","ComponentsConfiguration","FlashpixVersion","ColorSpace","DateTimeOriginal","DateTimeDigitized","exif_string","dump","blob_string","reader","FileReader","onload","onerror","readAsBinaryString","blob_string_new","insert","buffer","Uint8Array","charCodeAt","PLAYBACK_BUFFER_SEC_LOW_LATENCY","PLAYBACK_BUFFER_SEC","Channel","Comment","Program","background_url","is_video_buffering","is_background_display","is_control_display","is_fullscreen","is_ime_composing","is_comment_send_just_did","control_interval_id","is_zapping","is_zapping_continuously","player_can_be_destroyed","is_mpegts_supported","mpegts","romsounds_context","romsounds_buffers","eventsource","fullscreen_handler","capture_handler","shortcut_key_handler","shortcut_key_pressed_at","shortcut_key_list","left_column","icon_height","shortcuts","right_column","$route","virtualKeyboard","overlaysContent","ongeometrychange","boundingRect","init","AudioContext","audio_data","decodeAudioData","beforeRouteUpdate","to","destroy_promise","immediate","new_channel","old_channel","twitter_component","old_channel_hashtag","generatePlayerBackgroundURL","initPlayer","initEventHandler","initCaptureHandler","initShortcutKeyHandler","audioItem","liveLLHLSForKonomiTV","audioValue","textContent","tran","switchPrimaryAudio","artwork","sizes","mediaSession","metadata","MediaMetadata","artist","setPositionState","playbackRate","setActionHandler","play","pause","is_player_event","is_touch_device","controller","hide","setting","isShow","playback_buffer_sec","DPlayer","lang","live","liveSyncMinBufferSize","loop","airplay","autoplay","hotkey","screenshot","volume","defaultQuality","qualities","hevc_prefix","speedRate","fontSize","apiBackend","read","pluginOptions","enableWorker","enableStashBuffer","liveSync","liveSyncMaxLatency","liveSyncTargetLatency","liveSyncPlaybackRate","aribb24","normalFont","forceStrokeColor","forceBackgroundColor","drcsReplacement","enableRawCanvas","useStroke","usePUA","PRACallback","resume","buffer_source_node","createBufferSource","gain_node","createGain","connect","destination","gain","start","subtitle","setAutoHide","commentInput","settingOriginPanel","settingOriginPanelHeight","settingBox","clipPath","fullscreen_container","fullScreen","isFullScreen","onfullscreenchange","webkitFullscreenElement","cancel","requestFullscreen","webkitRequestFullscreen","orientation","lock","webkitExitFullscreen","unlock","on_play_or_pause","sync","crossOrigin","force_play","pause_icon","playButton","innerHTML","mobilePlayButton","on_canplay","oncanplay","oncanplaythrough","get_playback_buffer_sec","current_playback_buffer_sec","current_volume","eventsource_url","EventSource","event_raw","clients_count","load","pictureInPictureElement","exitPictureInPicture","requestPictureInPicture","switchVideo","clear","tweet_form_element","tag","tagName","editable","is_repeat","repeat","focus","scrollLeft","ctrlKey","metaKey","shiftKey","altKey","switch_channel_type","switch_remocon_id","switch_channel","focused_capture_index","focused_capture","focused_capture_element","parentElement","scrollIntoView","block","inline","toggle","pictureInPictureEnabled","pipButton","showDanmaku","showDanmakuToggle","checked","captureAndSave","is_destroy_player","i","VueRouter","router","mode","routes","redirect","TVHome","TVWatch","SettingsIndex","SettingsGeneral","SettingsCaption","SettingsCapture","SettingsAccount","SettingsJikkyo","SettingsTwitter","SettingsServer","Login","Register","NotFound","scrollBehavior","savedPosition","ready","registered","cached","updatefound","updated","offline","SeamlessScrollPolyfill","PiniaVuePlugin","pinia","createPinia","VueVirtualScroller","VuetifyMessageSnackbar","bottom","elevation","autoRemove","closeButtonContent","vuetifyInstance","vuetify","trigger","VTooltip","Icon","App","$mount","is_uploading_settings","$subscribe","detached","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}