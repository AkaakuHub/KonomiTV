{"version":3,"file":"assets/js/app.daef5ef3.js","mappings":"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","sources":["webpack://KonomiTV/./src/App.vue","webpack://KonomiTV/./src/App.vue?74c6","webpack://KonomiTV/./src/components/Vuetify/VTabItem.ts","webpack://KonomiTV/./src/components/Vuetify/VTabsBar.ts","webpack://KonomiTV/./src/components/Vuetify/VTabs.ts","webpack://KonomiTV/./src/components/Vuetify/VTabsItems.ts","webpack://KonomiTV/./src/message.ts","webpack://KonomiTV/./src/services/APIClient.ts","webpack://KonomiTV/./src/services/Users.ts","webpack://KonomiTV/./src/services/Settings.ts","webpack://KonomiTV/./src/utils/Utils.ts","webpack://KonomiTV/./src/utils/ChannelUtils.ts","webpack://KonomiTV/./src/utils/CommentUtils.ts","webpack://KonomiTV/./src/utils/PlayerUtils.ts","webpack://KonomiTV/./src/utils/ProgramUtils.ts","webpack://KonomiTV/./src/utils/index.ts","webpack://KonomiTV/./src/store/SettingsStore.ts","webpack://KonomiTV/./src/store/UserStore.ts","webpack://KonomiTV/./src/plugins/axios.ts","webpack://KonomiTV/./src/plugins/vuetify.ts","webpack://KonomiTV/./src/views/Login.vue","webpack://KonomiTV/./src/components/Header.vue","webpack://KonomiTV/./src/components/Header.vue?5d06","webpack://KonomiTV/./src/components/Navigation.vue","webpack://KonomiTV/./src/components/BottomNavigation.vue","webpack://KonomiTV/./src/components/BottomNavigation.vue?ff7d","webpack://KonomiTV/./src/services/Version.ts","webpack://KonomiTV/./src/components/Navigation.vue?e993","webpack://KonomiTV/./src/components/Navigation.vue?c328","webpack://KonomiTV/./src/components/Navigation.vue?bd43","webpack://KonomiTV/./src/views/Login.vue?21ac","webpack://KonomiTV/./src/views/Login.vue?ce3e","webpack://KonomiTV/./src/views/Login.vue?f5d0","webpack://KonomiTV/./src/views/NotFound.vue","webpack://KonomiTV/./src/views/NotFound.vue?5999","webpack://KonomiTV/./src/views/NotFound.vue?4637","webpack://KonomiTV/./src/views/NotFound.vue?dbe0","webpack://KonomiTV/./src/views/Register.vue","webpack://KonomiTV/./src/views/Register.vue?4c26","webpack://KonomiTV/./src/views/Register.vue?e763","webpack://KonomiTV/./src/views/Register.vue?709e","webpack://KonomiTV/./src/views/Settings/Account.vue","webpack://KonomiTV/./src/views/Settings/Base.vue","webpack://KonomiTV/./src/views/Settings/Base.vue?8f0e","webpack://KonomiTV/./src/views/Settings/Base.vue?b75f","webpack://KonomiTV/./src/views/Settings/Base.vue?13e1","webpack://KonomiTV/./src/views/Settings/Account.vue?a46e","webpack://KonomiTV/./src/views/Settings/Account.vue?c440","webpack://KonomiTV/./src/views/Settings/Account.vue?d79e","webpack://KonomiTV/./src/views/Settings/Caption.vue","webpack://KonomiTV/./src/views/Settings/Caption.vue?b49e","webpack://KonomiTV/./src/views/Settings/Caption.vue?c909","webpack://KonomiTV/./src/views/Settings/Caption.vue?3a40","webpack://KonomiTV/./src/views/Settings/Capture.vue","webpack://KonomiTV/./src/views/Settings/Capture.vue?91d0","webpack://KonomiTV/./src/views/Settings/Capture.vue?2770","webpack://KonomiTV/./src/views/Settings/Capture.vue?6493","webpack://KonomiTV/./src/views/Settings/Environment.vue","webpack://KonomiTV/./src/views/Settings/Environment.vue?c875","webpack://KonomiTV/./src/views/Settings/Environment.vue?8e72","webpack://KonomiTV/./src/views/Settings/Environment.vue?4a7e","webpack://KonomiTV/./src/views/Settings/General.vue","webpack://KonomiTV/./src/views/Settings/General.vue?5f9b","webpack://KonomiTV/./src/views/Settings/General.vue?6383","webpack://KonomiTV/./src/views/Settings/General.vue?1430","webpack://KonomiTV/./src/views/Settings/Index.vue","webpack://KonomiTV/./src/views/Settings/Index.vue?6033","webpack://KonomiTV/./src/views/Settings/Index.vue?c35a","webpack://KonomiTV/./src/views/Settings/Index.vue?ea37","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue?c072","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue?2b63","webpack://KonomiTV/./src/components/Settings/CommentMuteSettings.vue?5678","webpack://KonomiTV/./src/services/Niconico.ts","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?43de","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?dae2","webpack://KonomiTV/./src/views/Settings/Jikkyo.vue?e1ab","webpack://KonomiTV/./src/views/Settings/Twitter.vue","webpack://KonomiTV/./src/services/Twitter.ts","webpack://KonomiTV/./src/views/Settings/Twitter.vue?a501","webpack://KonomiTV/./src/views/Settings/Twitter.vue?c5a2","webpack://KonomiTV/./src/views/Settings/Twitter.vue?8f70","webpack://KonomiTV/./src/views/TV/Home.vue","webpack://KonomiTV/./src/services/Programs.ts","webpack://KonomiTV/./src/services/Channels.ts","webpack://KonomiTV/./src/store/ChannelsStore.ts","webpack://KonomiTV/./src/views/TV/Home.vue?bdd6","webpack://KonomiTV/./src/views/TV/Home.vue?8980","webpack://KonomiTV/./src/views/TV/Home.vue?6763","webpack://KonomiTV/./src/views/TV/Watch.vue","webpack://KonomiTV/./src/components/Panel/Channel.vue","webpack://KonomiTV/./src/components/Panel/Channel.vue?0e9d","webpack://KonomiTV/./src/components/Panel/Channel.vue?34fb","webpack://KonomiTV/./src/components/Panel/Channel.vue?d5d3","webpack://KonomiTV/./src/components/Panel/Comment.vue","webpack://KonomiTV/./src/services/player/LiveCommentManager.ts","webpack://KonomiTV/./src/components/Panel/Comment.vue?94d2","webpack://KonomiTV/./src/components/Panel/Comment.vue?31bb","webpack://KonomiTV/./src/components/Panel/Comment.vue?ffda","webpack://KonomiTV/./src/components/Panel/Program.vue","webpack://KonomiTV/./src/components/Panel/Program.vue?d838","webpack://KonomiTV/./src/components/Panel/Program.vue?f967","webpack://KonomiTV/./src/components/Panel/Program.vue?393d","webpack://KonomiTV/./src/components/Panel/Twitter.vue","webpack://KonomiTV/./src/components/Panel/Twitter.vue?d4d0","webpack://KonomiTV/./src/components/Panel/Twitter.vue?710e","webpack://KonomiTV/./src/components/Panel/Twitter.vue?82e1","webpack://KonomiTV/./src/services/Captures.ts","webpack://KonomiTV/./src/services/player/CaptureHandler.ts","webpack://KonomiTV/./src/views/TV/Watch.vue?a1ad","webpack://KonomiTV/./src/views/TV/Watch.vue?78bf","webpack://KonomiTV/./src/views/TV/Watch.vue?f307","webpack://KonomiTV/./src/router/index.ts","webpack://KonomiTV/./src/service-worker.ts","webpack://KonomiTV/./src/main.ts","webpack://KonomiTV/webpack/bootstrap","webpack://KonomiTV/webpack/runtime/amd options","webpack://KonomiTV/webpack/runtime/chunk loaded","webpack://KonomiTV/webpack/runtime/compat get default export","webpack://KonomiTV/webpack/runtime/define property getters","webpack://KonomiTV/webpack/runtime/global","webpack://KonomiTV/webpack/runtime/harmony module decorator","webpack://KonomiTV/webpack/runtime/hasOwnProperty shorthand","webpack://KonomiTV/webpack/runtime/make namespace object","webpack://KonomiTV/webpack/runtime/jsonp chunk loading","webpack://KonomiTV/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-app',{attrs:{\"id\":\"app\"}},[_c('transition',[_c('router-view')],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=af060a7a&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&id=af060a7a&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\nimport { VueConstructor, VNode } from 'vue';\nimport VTabItem from 'vuetify/lib/components/VTabs/VTabItem';\n\n// VTabItem は VWindowItem を extend() して実装されている\nexport default (VTabItem as VueConstructor).extend({\n    render (h): VNode {\n        return h('transition', {\n            props: {\n                name: (this as any).computedTransition,\n            },\n            on: {\n                // Handlers for enter windows.\n                beforeEnter: (this as any).onBeforeTransition,\n                afterEnter: (this as any).onAfterTransition,\n                enterCancelled: (this as any).onTransitionCancelled,\n\n                // Handlers for leave windows.\n                beforeLeave: (this as any).onBeforeTransition,\n                afterLeave: (this as any).onAfterTransition,\n                leaveCancelled: (this as any).onTransitionCancelled,\n\n                // Enter handler for height transition.\n                enter: (this as any).onEnter,\n            }\n        // this.showLazyContent() を通さずに常にレンダリングされるようにする\n        // 本来は実際に表示されている時だけレンダリングし、負荷を減らすための処理\n        // ただチャンネルリストのレンダリングは重いので、最初からレンダリングされていた方がタブの初回切り替えが早くなる\n        }, [(this as any).genWindowItem()]);\n    }\n});\n","\nimport { VueConstructor } from 'vue';\nimport { GroupableInstance } from 'vuetify/lib/components/VItemGroup/VItemGroup';\nimport VTabsBar from 'vuetify/lib/components/VTabs/VTabsBar';\n\n// VTabsBar は VItemGroup を extend() して実装されている\nexport default (VTabsBar as VueConstructor).extend({\n    data() {\n        return {\n            // 一応型定義をしておく\n            items: [] as GroupableInstance[],\n        };\n    },\n    methods: {\n\n        // タブのデータ配列の先頭に新しい要素が追加されるとそのタブのアニメーションの向きが逆になるバグがあるので、VItemGroup 側の挙動をオーバーライドする\n        // DOM 上も VNode 上も正しい順序で並んでいるが、this.items に関しては追加された順になっていてしまっていて齟齬が発生するのが原因\n        // ref: https://github.com/vuetifyjs/vuetify/issues/13862\n        register(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 要素を items に追加\n            this.items.push(item);\n\n            // this.$slots.default に VNode が、items には単に VueComponent が入っているので、事前に VNode の順番に合わせて並べ替える\n            // こうすることで、追加された順ではなく元のデータ配列通りの順番になる\n            this.items.sort((a, b) => {\n\n                // VueComponent の key が一致する this.$slots.default 内の VNode を探す\n                const index_a = this.$slots.default.findIndex((element) => {\n                    return a.$vnode.key === element.key;\n                });\n                const index_b = this.$slots.default.findIndex((element) => {\n                    return b.$vnode.key === element.key;\n                });\n\n                // index 順で並び替え\n                return index_a - index_b;\n            });\n\n            item.$on('change', () => (this as any).onClick(item));\n            if ((this as any).mandatory && !(this as any).selectedValues.length) {\n                (this as any).updateMandatory();\n            }\n\n            // 追加された要素のソート後のインデックスを取得して更新する\n            (this as any).updateItem(item, this.items.indexOf(item));\n\n            // ソート後の現在アクティブなタブのインデックスを取得し直し、設定する\n            // 配列の末尾以外に追加された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\n            }\n        },\n\n        unregister(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 継承元の unregister() の処理を呼び出す（いわゆる super() ）\n            // ref: https://github.com/vuejs/vue/issues/2977\n            (this.constructor as any).super.options.methods.unregister.call(this, item);\n\n            // 配列の末尾以外から削除された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\n            }\n        }\n    }\n});\n","\nimport { VueConstructor, VNode } from 'vue';\nimport VTabs from 'vuetify/lib/components/VTabs/VTabs';\nimport { convertToUnit } from 'vuetify/lib/util/helpers';\n\nimport VTabsBar from '@/components/Vuetify/VTabsBar';\n\nexport default (VTabs as VueConstructor).extend({\n    methods: {\n\n        // VTabsBar は VTabs から暗黙的に生成されるコンポーネントのため、直接上書きすることができない\n        // そこで VTabs 自体も上書きし、VTabs で $createElement() される時の VTabsBar を自前でオーバーライドしたものに差し替える\n        // ビルド済みのファイルには型定義が入っていないので any を多用せざるを得ない…\n        genBar(items: VNode[], slider: VNode | null) {\n            const data = {\n                style: {\n                    height: convertToUnit((this as any).height),\n                },\n                props: {\n                    activeClass: (this as any).activeClass,\n                    centerActive: (this as any).centerActive,\n                    dark: (this as any).dark,\n                    light: (this as any).light,\n                    mandatory: !(this as any).optional,\n                    mobileBreakpoint: (this as any).mobileBreakpoint,\n                    nextIcon: (this as any).nextIcon,\n                    prevIcon: (this as any).prevIcon,\n                    showArrows: (this as any).showArrows,\n                    value: (this as any).internalValue,\n                },\n                on: {\n                    'call:slider': (this as any).callSlider,\n                    change: (val: any) => {\n                        (this as any).internalValue = val;\n                    },\n                },\n                ref: 'items',\n            };\n\n            (this as any).setTextColor((this as any).computedColor, data);\n            (this as any).setBackgroundColor((this as any).backgroundColor, data);\n\n            // ここでオーバーライドした VTabsBar を使うのが最重要\n            // これをやるためだけにわざわざ VTabs に関してもオーバーライドする羽目になってる…\n            return (this as any).$createElement(VTabsBar, data, [\n                (this as any).genSlider(slider),\n                items,\n            ]);\n        }\n    }\n});\n","\nimport { VueConstructor } from 'vue';\nimport { GroupableInstance } from 'vuetify/lib/components/VItemGroup/VItemGroup';\nimport VTabsItems from 'vuetify/lib/components/VTabs/VTabsItems';\n\n// VTabsItems は VItemGroup と VWindow を extend() して実装されている\nexport default (VTabsItems as VueConstructor).extend({\n    data() {\n        return {\n            // 一応型定義をしておく\n            items: [] as GroupableInstance[],\n        };\n    },\n    methods: {\n\n        // タブのデータ配列の先頭に新しい要素が追加されるとそのタブのアニメーションの向きが逆になるバグがあるので、VItemGroup 側の挙動をオーバーライドする\n        // DOM 上も VNode 上も正しい順序で並んでいるが、this.items に関しては追加された順になっていてしまっていて齟齬が発生するのが原因\n        // ref: https://github.com/vuetifyjs/vuetify/issues/13862\n        register(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 要素を items に追加\n            this.items.push(item);\n\n            // this.$slots.default に VNode が、items には単に VueComponent が入っているので、事前に VNode の順番に合わせて並べ替える\n            // こうすることで、追加された順ではなく元のデータ配列通りの順番になる\n            this.items.sort((a, b) => {\n\n                // VueComponent の key が一致する this.$slots.default 内の VNode を探す\n                const index_a = this.$slots.default.findIndex((element) => {\n                    return a.$vnode.key === element.key;\n                });\n                const index_b = this.$slots.default.findIndex((element) => {\n                    return b.$vnode.key === element.key;\n                });\n\n                // index 順で並び替え\n                return index_a - index_b;\n            });\n\n            item.$on('change', () => (this as any).onClick(item));\n            if ((this as any).mandatory && !(this as any).selectedValues.length) {\n                (this as any).updateMandatory();\n            }\n\n            // 追加された要素のソート後のインデックスを取得して更新する\n            (this as any).updateItem(item, this.items.indexOf(item));\n\n            // ソート後の現在アクティブなタブのインデックスを取得し直し、設定する\n            // 配列の末尾以外に追加された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                // 値が異なるときだけ更新する\n                // こうしないと、Safari で変なアニメーションがついてしまう\n                if (this.items.indexOf(activeItem) !== (this as any).internalValue) {\n                    (this as any).updateInternalValue(this.items.indexOf(activeItem));\n                }\n            }\n        },\n\n        unregister(item: GroupableInstance) {\n\n            // 現在アクティブなタブの VueComponent を取得\n            const activeItem = this.items[(this as any).internalIndex];\n\n            // 継承元の unregister() の処理を呼び出す（いわゆる super() ）\n            // ref: https://github.com/vuejs/vue/issues/2977\n            (this.constructor as any).super.options.methods.unregister.call(this, item);\n\n            // 配列の末尾以外から削除された場合はインデックスが1つずつずれてしまうため、インデックスを設定し直す必要がある\n            if (activeItem !== undefined) {\n                (this as any).updateInternalValue(this.items.indexOf(activeItem));\n            }\n        },\n\n        // 最初のタブから最後のタブに遷移するとアニメーションの向きが逆になるバグがあるので、VWindow 側の挙動をオーバーライドする\n        // 本来は VCarousel 用の動作だが、VTabsItems も VWindow を継承しているので、それが適用されてしまっているらしい\n        // ref: https://github.com/yuwu9145/vuetify/blob/master/packages/vuetify/src/components/VWindow/VWindow.ts#L239-L252\n        updateReverse(val: number, oldVal: number) {\n\n            const itemsLength = this.items.length;\n            const lastIndex = itemsLength - 1;\n\n            if (itemsLength <= 2) return val < oldVal;\n\n            // continuous が false の時、常に val < oldVal の結果を返す\n            if (!(this as any).continuous) return val < oldVal;\n\n            if (val === lastIndex && oldVal === 0) {\n                return true;\n            } else if (val === 0 && oldVal === lastIndex) {\n                return false;\n            } else {\n                return val < oldVal;\n            }\n        }\n    }\n});\n","\nimport { MessageOption, MessageType } from 'vuetify-message-snackbar/src/message';\n\n\ninterface MessageReturnValue {\n    close(): void;\n    again(): void;\n}\n\n// Vue コンポーネント以外からも this.$message を使えるようにするための (強引な) ラッパー\nexport default {\n    success(message: MessageType | MessageOption): MessageReturnValue {\n        // @ts-ignore\n        return window.KonomiTVVueInstance.$message.success(message);\n    },\n    info(message: MessageType | MessageOption): MessageReturnValue {\n        // @ts-ignore\n        return window.KonomiTVVueInstance.$message.info(message);\n    },\n    warning(message: MessageType | MessageOption): MessageReturnValue {\n        // @ts-ignore\n        return window.KonomiTVVueInstance.$message.warning(message);\n    },\n    error(message: MessageType | MessageOption): MessageReturnValue {\n        // @ts-ignore\n        return window.KonomiTVVueInstance.$message.error(message);\n    },\n    show(message: MessageType | MessageOption): MessageReturnValue {\n        // @ts-ignore\n        return window.KonomiTVVueInstance.$message.show(message);\n    }\n};\n","\n/**\n * services/ 以下の各クラスは、KonomiTV サーバーへの API リクエストを抽象化し、\n * API レスポンスの受け取りと、エラーが発生した際のエラーハンドリング (エラーメッセージ表示) までを責務として負う\n */\n\nimport { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\n\nimport Message from '@/message';\nimport axios from '@/plugins/axios';\n\n\n/** API のエラーレスポンスを表すインターフェイス */\nexport interface IError {\n    detail: string;\n}\n\n/** API リクエスト成功時のレスポンスを表すインターフェイス */\nexport type SuccessResponse<T> = {\n    status: number;\n    data: T;\n    error: null;\n    is_success: true;\n};\n\n/** API リクエスト失敗時のレスポンスを表すインターフェイス */\nexport type ErrorResponse<T extends Error = Error> = {\n    status: number;\n    data: null;\n    error: T;\n    is_error: true;\n};\n\n\n/**\n * services/ 以下の各クラスから呼び出される、Axios の薄いラッパー\n * エラーハンドリングを容易にするために、レスポンスを SuccessResponse と ErrorResponse に分けて返す\n * ref: https://zenn.dev/engineer_titan/articles/291c9fccb338e2\n */\nclass APIClient {\n\n    /**\n     * Axios で HTTP リクエストを送信し、レスポンスを受け取る\n     * @param request AxiosRequestConfig\n     * @returns 成功なら SuccessResponse 、失敗なら ErrorResponse を返す\n     */\n    static async request<T>(request: AxiosRequestConfig): Promise<SuccessResponse<T> | ErrorResponse> {\n\n        // Axios で HTTP リクエストを送信し、レスポンスを受け取る\n        const result: AxiosResponse<T> | AxiosError<IError> = await axios.request(request).catch((error: AxiosError<IError>) => error);\n\n        // エラーが発生した場合は ErrorResponse を返す\n        if (result instanceof AxiosError<IError>) {\n            console.error(result);\n\n            // エラーレスポンスがあれば、エラー内容を取得して返す\n            if (result.response) {\n                return {\n                    status: result.response.status,\n                    data: null,\n                    error: new Error(result.response.data.detail),\n                    is_error: true,\n                };\n\n            // エラーレスポンスがない場合は、AxiosError をそのまま返す\n            } else {\n                return {\n                    status: NaN,\n                    data: null,\n                    error: result,\n                    is_error: true,\n                };\n            }\n\n        // 正常にレスポンスが返ってきた場合は SuccessResponse を返す\n        } else {\n            return {\n                status: result.status,\n                data: result.data,\n                error: null,\n                is_success: true,\n            };\n        }\n    }\n\n\n    /**\n     * GET リクエストを送信する\n     * @param url リクエスト先の URL\n     * @returns 成功なら SuccessResponse 、失敗なら ErrorResponse を返す\n     */\n    static async get<T = any, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<SuccessResponse<T> | ErrorResponse> {\n        const request: AxiosRequestConfig = {\n            url: url,\n            method: 'GET',\n            ...config,\n        };\n        return await APIClient.request<T>(request);\n    }\n\n\n    /**\n     * POST リクエストを送信する\n     * @param url リクエスト先の URL\n     * @returns 成功なら SuccessResponse 、失敗なら ErrorResponse を返す\n     */\n    static async post<T = any, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<SuccessResponse<T> | ErrorResponse> {\n        const request: AxiosRequestConfig = {\n            url: url,\n            method: 'POST',\n            data: data,\n            ...config,\n        };\n        return await APIClient.request<T>(request);\n    }\n\n\n    /**\n     * PUT リクエストを送信する\n     * @param url リクエスト先の URL\n     * @returns 成功なら SuccessResponse 、失敗なら ErrorResponse を返す\n     */\n    static async put<T = any, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<SuccessResponse<T> | ErrorResponse> {\n        const request: AxiosRequestConfig = {\n            url: url,\n            method: 'PUT',\n            data: data,\n            ...config,\n        };\n        return await APIClient.request<T>(request);\n    }\n\n\n    /**\n     * DELETE リクエストを送信する\n     * @param url リクエスト先の URL\n     * @returns 成功なら SuccessResponse 、失敗なら ErrorResponse を返す\n     */\n    static async delete<T = any, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<SuccessResponse<T> | ErrorResponse> {\n        const request: AxiosRequestConfig = {\n            url: url,\n            method: 'DELETE',\n            ...config,\n        };\n        return await APIClient.request<T>(request);\n    }\n\n\n    /**\n     * 一般的なエラーメッセージの共通処理\n     * エラーメッセージを SnackBar で表示する\n     * @param response API から返されたエラーレスポンス\n     * @param template エラーメッセージのテンプレート（「アカウント情報を取得できませんでした。」など)\n     */\n    static showGenericError(response: ErrorResponse, template: string): void {\n        switch (response.error.message) {\n            case 'Access token data is invalid': {\n                Message.error(`${template}\\nログインセッションが不正です。もう一度ログインしてください。`);\n                return;\n            }\n            case 'Access token is invalid': {\n                Message.error(`${template}\\nログインセッションの有効期限が切れています。もう一度ログインしてください。`);\n                return;\n            }\n            case 'User associated with access token does not exist': {\n                Message.error(`${template}\\nログインセッションに紐づくユーザーが存在しないか、削除されています。`);\n                return;\n            }\n            default: {\n                if (response.error.message) {\n                    if (Number.isNaN(response.status)) {\n                        Message.error(`${template}(${response.error.message})`);\n                    } else {\n                        Message.error(`${template}(HTTP Error ${response.status} / ${response.error.message})`);\n                    }\n                } else {\n                    Message.error(`${template}(HTTP Error ${response.status})`);\n                }\n                return;\n            }\n        }\n    }\n}\n\nexport default APIClient;\n","\nimport Message from '@/message';\nimport APIClient from '@/services/APIClient';\n\n\n/** ユーザーアカウントの情報を表すインターフェイス */\nexport interface IUser {\n    id: number;\n    name: string;\n    is_admin: boolean;\n    niconico_user_id: number | null;\n    niconico_user_name: string | null;\n    niconico_user_premium: boolean | null;\n    twitter_accounts: ITwitterAccount[];\n    created_at: string;\n    updated_at: string;\n}\n\n/** ユーザーアカウントに紐づく Twitter アカウントの情報を表すインターフェイス */\nexport interface ITwitterAccount {\n    id: number;\n    name: string;\n    screen_name: string;\n    icon_url: string;\n    created_at: string;\n    updated_at: string;\n}\n\n/** ユーザーアカウントのアクセストークンを表すインターフェイス */\nexport interface IUserAccessToken {\n    access_token: string;\n    token_type: string;\n}\n\nexport interface IUserCreateRequest {\n    username: string;\n    password: string;\n}\nexport interface IUserUpdateRequest {\n    username?: string;\n    password?: string;\n}\nexport interface IUserUpdateRequestForAdmin {\n    username?: string;\n    password?: string;\n    is_admin?: boolean;\n}\n\n\nclass Users {\n\n    /**\n     * ユーザーアカウントを作成する\n     * @param user_create_request ユーザー名とパスワード\n     * @returns 作成したユーザーアカウントの情報 or アカウント作成に失敗した場合は null\n     */\n    static async createUser(user_create_request: IUserCreateRequest): Promise<IUser | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.post<IUser>('/users', user_create_request);\n\n        // エラー処理\n        if ('is_error' in response) {\n            switch (response.error.message) {\n                case 'Specified username is duplicated': {\n                    Message.error('ユーザー名が重複しています。');\n                    break;\n                }\n                case 'Specified username is not accepted due to system limitations': {\n                    Message.error('ユーザー名に token と me は使えません。');\n                    break;\n                }\n                default: {\n                    APIClient.showGenericError(response, 'アカウントを作成できませんでした。');\n                    break;\n                }\n            }\n            return null;\n        }\n\n        return response.data;\n    }\n\n\n    /**\n     * ユーザーアカウントのアクセストークンを発行する\n     * @param username ユーザー名\n     * @param password パスワード\n     * @returns 発行したアクセストークン or ログインに失敗した場合は null\n     */\n    static async createUserAccessToken(username: string, password: string): Promise<IUserAccessToken | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.post<IUserAccessToken>('/users/token', new URLSearchParams({username, password}));\n\n        // エラー処理\n        if ('is_error' in response) {\n            switch (response.error.message) {\n                case 'Incorrect username': {\n                    Message.error('ログインできませんでした。そのユーザー名のアカウントは存在しません。');\n                    break;\n                }\n                case 'Incorrect password': {\n                    Message.error('ログインできませんでした。パスワードを間違えていませんか？');\n                    break;\n                }\n                default: {\n                    APIClient.showGenericError(response, 'ログインできませんでした。');\n                    break;\n                }\n            }\n            return null;\n        }\n\n        return response.data;\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントの情報を取得する\n     * @returns ログイン中のユーザーアカウントの情報 or ログインしていない場合は null\n     */\n    static async fetchUser(): Promise<IUser | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<IUser>('/users/me');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'アカウント情報を取得できませんでした。');\n            return null;\n        }\n\n        return response.data;\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントのアイコンを取得する\n     * @returns ログイン中のユーザーアカウントのアイコンの Blob URL or ログインしていない場合は null\n     */\n    static async fetchUserIcon(): Promise<string | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get('/users/me/icon', {responseType: 'blob'});\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'アイコン画像を取得できませんでした。');\n            return null;\n        }\n\n        return URL.createObjectURL(response.data);\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントの情報を更新する\n     * @param user_update_request ユーザー名 or パスワード\n     */\n    static async updateUser(user_update_request: IUserUpdateRequest): Promise<void> {\n\n        // API リクエストを実行\n        const response = await APIClient.put('/users/me', user_update_request);\n\n        // エラー処理\n        if ('is_error' in response) {\n            switch (response.error.message) {\n                case 'Specified username is duplicated': {\n                    Message.error('ユーザー名が重複しています。');\n                    break;\n                }\n                case 'Specified username is not accepted due to system limitations': {\n                    Message.error('ユーザー名に token と me は使えません。');\n                    break;\n                }\n                default: {\n                    APIClient.showGenericError(response, 'アカウント情報を更新できませんでした。');\n                    break;\n                }\n            }\n            return;\n        }\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントのアイコン画像を更新する\n     * @param icon アイコンの File オブジェクト\n     */\n    static async updateUserIcon(icon: File): Promise<void> {\n\n        // アイコン画像の File オブジェクト (= Blob) を FormData に入れる\n        // multipart/form-data で送るために必要\n        // ref: https://r17n.page/2020/02/04/nodejs-axios-file-upload-api/\n        const form_data = new FormData();\n        form_data.append('image', icon);\n\n        // API リクエストを実行\n        const response = await APIClient.put('/users/me/icon', form_data, {headers: {'Content-Type': 'multipart/form-data'}});\n\n        // エラー処理\n        if ('is_error' in response) {\n            switch (response.error.message) {\n                case 'Please upload JPEG or PNG image': {\n                    Message.error('JPEG または PNG 画像をアップロードしてください。');\n                    break;\n                }\n                default: {\n                    APIClient.showGenericError(response, 'アイコン画像を更新できませんでした。');\n                    break;\n                }\n            }\n            return;\n        }\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントを削除する\n     */\n    static async deleteUser(): Promise<void> {\n\n        // API リクエストを実行\n        const response = await APIClient.delete('/users/me');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'アカウントを削除できませんでした。');\n            return;\n        }\n    }\n}\n\nexport default Users;\n","\nimport APIClient from '@/services/APIClient';\n\n\n/**\n * サーバーに保存されるクライアント設定を表すインターフェース\n * サーバー側の app.schemas.ClientSettings と\n * client/src/store/SettingsStore.ts 内の sync_settings_keys で定義されているものと同じ\n */\nexport interface IClientSettings {\n    pinned_channel_ids: string[];\n    // showed_panel_last_time: 同期無効\n    // selected_twitter_account_id: 同期無効\n    saved_twitter_hashtags: string[];\n    // tv_streaming_quality: 同期無効\n    // tv_data_saver_mode: 同期無効\n    // tv_low_latency_mode: 同期無効\n    panel_display_state: 'RestorePreviousState' | 'AlwaysDisplay' | 'AlwaysFold';\n    tv_panel_active_tab: 'Program' | 'Channel' | 'Comment' | 'Twitter';\n    caption_font: string;\n    always_border_caption_text: boolean;\n    specify_caption_background_color: boolean;\n    caption_background_color: string;\n    tv_show_superimpose: boolean;\n    // capture_copy_to_clipboard: 同期無効\n    capture_save_mode: 'Browser' | 'UploadServer' | 'Both';\n    capture_caption_mode: 'VideoOnly' | 'CompositingCaption' | 'Both';\n    // sync_settings: 同期無効\n    comment_speed_rate: number;\n    comment_font_size: number;\n    close_comment_form_after_sending: boolean;\n    muted_comment_keywords: IMutedCommentKeywords[];\n    muted_niconico_user_ids: string[];\n    mute_vulgar_comments: boolean;\n    mute_abusive_discriminatory_prejudiced_comments: boolean;\n    mute_big_size_comments: boolean;\n    mute_fixed_comments: boolean;\n    mute_colored_comments: boolean;\n    mute_consecutive_same_characters_comments: boolean;\n    fold_panel_after_sending_tweet: boolean;\n    reset_hashtag_when_program_switches: boolean;\n    auto_add_watching_channel_hashtag: boolean;\n    twitter_active_tab: 'Search' | 'Timeline' | 'Capture';\n    tweet_hashtag_position: 'Prepend' | 'Append' | 'PrependWithLineBreak' | 'AppendWithLineBreak';\n    tweet_capture_watermark_position: 'None' | 'TopLeft' | 'TopRight' | 'BottomLeft' | 'BottomRight';\n}\n\n/**\n * ミュート対象のコメントのキーワードのインターフェイス\n */\nexport interface IMutedCommentKeywords {\n    match: 'partial' | 'forward' | 'backward' | 'exact' | 'regex';\n    pattern: string;\n}\n\n\nclass Settings {\n\n    /**\n     * クライアント設定を取得する\n     * @return クライアント設定 (取得に失敗した場合は null)\n     */\n    static async fetchClientSettings(): Promise<IClientSettings | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<IClientSettings>('/settings/client');\n\n        // エラー処理 (基本起こらないはず & 実行できなくても後続の処理に影響しないため何もしない)\n        if ('is_error' in response) {\n            return null;\n        }\n\n        return response.data;\n    }\n\n\n    /**\n     * クライアント設定を更新する\n     * @param settings クライアント設定\n     */\n    static async updateClientSettings(settings: IClientSettings): Promise<void> {\n\n        // API リクエストを実行\n        // 正常時は 204 No Content が返るし、エラーは基本起こらないはずなので何もしない\n        await APIClient.put<IClientSettings>('/settings/client', settings);\n    }\n}\n\nexport default Settings;\n","\n/**\n * 共通ユーティリティ\n */\nexport default class Utils {\n\n    // バージョン情報\n    // ビルド時の環境変数 (vue.config.js に記載) から取得\n    static readonly version: string = process.env.VUE_APP_VERSION;\n\n    // バックエンドの API のベース URL\n    static readonly api_base_url = (() => {\n        if (process.env.NODE_ENV === 'development') {\n            // デバッグ時はポートを 7000 に強制する\n            return `${window.location.protocol}//${window.location.hostname}:7000/api`;\n        } else {\n            // ビルド後は同じポートを使う\n            return `${window.location.protocol}//${window.location.host}/api`;\n        }\n    })();\n\n\n    /**\n     * アクセストークンを LocalStorage から取得する\n     * @returns JWT アクセストークン（ログインしていない場合は null が返る）\n     */\n    static getAccessToken(): string | null {\n\n        // LocalStorage の取得結果をそのまま返す\n        // LocalStorage.getItem() はキーが存在しなければ（=ログインしていなければ）null を返す\n        return localStorage.getItem('KonomiTV-AccessToken');\n    }\n\n\n    /**\n     * アクセストークンを LocalStorage に保存する\n     * @param access_token 発行された JWT アクセストークン\n     */\n    static saveAccessToken(access_token: string): void {\n\n        // そのまま LocalStorage に保存\n        localStorage.setItem('KonomiTV-AccessToken', access_token);\n    }\n\n\n    /**\n     * アクセストークンを LocalStorage から削除する\n     * アクセストークンを削除することで、ログアウト相当になる\n     */\n    static deleteAccessToken(): void {\n\n        // LocalStorage に KonomiTV-AccessToken キーが存在しない\n        if (localStorage.getItem('KonomiTV-AccessToken') === null) return;\n\n        // KonomiTV-AccessToken キーを削除\n        localStorage.removeItem('KonomiTV-AccessToken');\n    }\n\n\n    /**\n     * ブラウザが実行されている OS に応じて、\"Ctrl\" または \"Cmd\" を返す\n     * キーボードショートカットのコンビネーションキーの説明を OS によって分けるために使う\n     * @returns ブラウザが実行されている OS が Mac なら Cmd を、それ以外なら Ctrl を返す\n     */\n    static CtrlOrCmd(): 'Ctrl' | 'Cmd' {\n        // iPhone・iPad で純正キーボードを接続した場合も一応想定して、iPhone・iPad も含める（動くかは未検証）\n        return /iPhone|iPad|Macintosh/i.test(navigator.userAgent) ? 'Cmd' : 'Ctrl';\n    }\n\n\n    /**\n     * Blob に格納されているデータをブラウザにダウンロードさせる\n     * @param blob Blob オブジェクト\n     * @param filename 保存するファイル名\n     */\n    static downloadBlobData(blob: Blob, filename: string): void {\n\n        // Blob URL を発行\n        const blob_url = URL.createObjectURL(blob);\n\n        // 画像をダウンロード\n        const link = document.createElement('a');\n        link.download = filename;\n        link.href = blob_url;\n        link.click();\n\n        // Blob URL を破棄\n        URL.revokeObjectURL(blob_url);\n    }\n\n\n    /**\n     * innerHTML しても問題ないように HTML の特殊文字をエスケープする\n     * PHP の htmlspecialchars() と似たようなもの\n     * @param content HTML エスケープされてないテキスト\n     * @returns HTML エスケープされたテキスト\n     */\n    static escapeHTML(content: string): string {\n\n        // HTML エスケープが必要な文字\n        // ref: https://www.php.net/manual/ja/function.htmlspecialchars.php\n        const html_escape_table = {\n            '&': '&amp;',\n            '\"': '&quot;',\n            '\\'': '&apos;',\n            '<': '&lt;',\n            '>': '&gt;',\n        };\n\n        // ref: https://qiita.com/noriaki/items/4bfef8d7cf85dc1035b3\n        return content.replace(/[&\"'<>]/g, (match) => {\n            return html_escape_table[match];\n        });\n    }\n\n\n    /**\n     * OAuth 連携時のポップアップを画面中央に表示するための windowFeatures 文字列を取得する\n     * ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1\n     * @returns window.open() で使う windowFeatures 文字列\n     */\n    static getWindowFeatures(): string {\n\n        // ポップアップウインドウのサイズ\n        const popupSizeWidth = 650;\n        const popupSizeHeight = window.screen.height >= 800 ? 800 : window.screen.height - 100;\n\n        // ポップアップウインドウの位置\n        const posTop = (window.screen.height - popupSizeHeight) / 2;\n        const posLeft = (window.screen.width - popupSizeWidth) / 2;\n\n        return `toolbar=0,status=0,top=${posTop},left=${posLeft},width=${popupSizeWidth},height=${popupSizeHeight},modal=yes,alwaysRaised=yes`;\n    }\n\n\n    /**\n     * 現在フォーカスを持っている要素に指定された CSS クラスが付与されているか\n     * @param class_name 存在を確認する CSS クラス名\n     * @returns document.activeElement が class_name で指定したクラスを持っているかどうか\n     */\n    static hasActiveElementClass(class_name: string): boolean {\n        if (document.activeElement === null) return false;\n        return document.activeElement.classList.contains(class_name);\n    }\n\n\n    /**\n     * モバイルデバイス（スマホ・タブレット）かどうか\n     * @returns モバイルデバイス (スマホ・タブレット) なら true を返す\n     */\n    static isMobileDevice(): boolean {\n        // Macintosh が入っているのは、iPadOS は既定でデスクトップ表示モードが有効になっていて、UA だけでは Mac と判別できないため\n        // Mac にタッチパネル付きの機種は存在しないので、'ontouchend' in document で判定できる\n        return /iPhone|iPad|iPod|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\n    }\n\n\n    /**\n     * 表示画面がスマホ横画面かどうか\n     * @returns スマホ横画面なら true を返す\n     */\n    static isSmartphoneHorizontal(): boolean {\n        return window.matchMedia('(max-width: 1000px) and (max-height: 450px)').matches;\n    }\n\n\n    /**\n     * 表示画面がスマホ縦画面かどうか\n     * @returns スマホ縦画面なら true を返す\n     */\n    static isSmartphoneVertical(): boolean {\n        return window.matchMedia('(max-width: 600px) and (min-height: 450.01px)').matches;\n    }\n\n\n    /**\n     * 表示画面がタブレット横画面かどうか\n     * @returns タブレット横画面なら true を返す\n     */\n    static isTabletHorizontal(): boolean {\n        return window.matchMedia('(max-width: 1264px) and (max-height: 850px)').matches;\n    }\n\n\n    /**\n     * 表示画面がタブレット縦画面かどうか\n     * @returns タブレット縦画面なら true を返す\n     */\n    static isTabletVertical(): boolean {\n        return window.matchMedia('(max-width: 850px) and (min-height: 850.01px)').matches;\n    }\n\n\n    /**\n     * 表示端末がタッチデバイスかどうか\n     * @returns タッチデバイスなら true を返す\n     */\n    static isTouchDevice(): boolean {\n        return window.matchMedia('(hover: none)').matches;\n    }\n\n\n    /**\n     * 任意の桁で切り捨てする\n     * ref: https://qiita.com/nagito25/items/0293bc317067d9e6c560#comment-87f0855f388953843037\n     * @param value 切り捨てする数値\n     * @param base どの桁で切り捨てするか (-1 → 10の位 / 3 → 小数第3位）\n     * @return 切り捨てした値\n     */\n    static mathFloor(value: number, base: number = 0): number {\n        return Math.floor(value * (10**base)) / (10**base);\n    }\n\n\n    /**\n     * async/await でスリープ的なもの\n     * @param seconds 待機する秒数 (ミリ秒単位ではないので注意)\n     * @returns Promise を返すので、await sleep(1); のように使う\n     */\n    static async sleep(seconds: number): Promise<number> {\n        return await new Promise(resolve => setTimeout(resolve, seconds * 1000));\n    }\n\n\n    /**\n     * 現在時刻の UNIX タイムスタンプ (秒単位) を取得する (デバッグ用)\n     * @returns 現在時刻の UNIX タイムスタンプ (秒単位)\n     */\n    static time(): number {\n        return Date.now() / 1000;\n    }\n\n\n    /**\n     * 指定された値の型の名前を取得する\n     * ref: https://qiita.com/amamamaou/items/ef0b797156b324bb4ef3\n     * @returns 指定された値の型の名前\n     */\n    static typeof(value: any): string {\n        return Object.prototype.toString.call(value).slice(8, -1).toLowerCase();\n    }\n\n\n    /**\n     * 文字列中に含まれる URL をリンクの HTML に置き換える\n     * @param text 置換対象の文字列\n     * @returns URL をリンクに置換した文字列\n     */\n    static URLtoLink(text: string): string {\n\n        // HTML の特殊文字で表示がバグらないように、事前に HTML エスケープしておく\n        text = Utils.escapeHTML(text);\n\n        // ref: https://www.softel.co.jp/blogs/tech/archives/6099\n        const pattern = /(https?:\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/ig;\n        return text.replace(pattern, '<a href=\"$1\" target=\"_blank\">$1</a>');\n    }\n}\n","\nimport { ChannelType } from '@/services/Channels';\n\n\n/**\n * チャンネル周りのユーティリティ\n */\nexport class ChannelUtils {\n\n    /**\n     * チャンネル ID からチャンネルタイプを取得する\n     * @param channel_id チャンネル ID\n     * @returns チャンネルタイプ\n     */\n    static getChannelType(channel_id: string): ChannelType {\n        try {\n            const result = channel_id.match('(?<channel_type>[a-z]+)[0-9]+').groups.channel_type.toUpperCase();\n            return result as ChannelType;\n        } catch (e) {\n            // 何かしらエラーが発生したということはチャンネル ID が不正\n            // とりあえずここではエラーにならないよう GR を返す  エラー処理はその後の段階で行われる\n            return 'GR';\n        }\n    }\n\n\n    /**\n     * チャンネルの実況勢いから「多」「激多」「祭」を取得する\n     * ref: https://ja.wikipedia.org/wiki/%E3%83%8B%E3%82%B3%E3%83%8B%E3%82%B3%E5%AE%9F%E6%B3%81\n     * @param channel_force チャンネルの実況勢い\n     * @returns normal（普通）or many（多）or so-many（激多）or festival（祭）\n     */\n    static getChannelForceType(channel_force: number | null): 'normal' | 'many' | 'so-many' | 'festival' {\n\n        // 実況勢いが null（=対応する実況チャンネルがない）\n        if (channel_force === null) return 'normal';\n\n        // 実況勢いが 500 コメント以上（祭）\n        if (channel_force >= 500) return 'festival';\n        // 実況勢いが 200 コメント以上（激多）\n        if (channel_force >= 200) return 'so-many';\n        // 実況勢いが 100 コメント以上（多）\n        if (channel_force >= 100) return 'many';\n\n        // それ以外\n        return 'normal';\n    }\n}\n","\nimport { Buffer } from 'buffer';\n\nimport useSettingsStore from '@/store/SettingsStore';\n\n\n/**\n * コメント周りのユーティリティ\n */\nexport class CommentUtils {\n\n    // 「露骨な表現を含むコメントをミュートする」のフィルタ正規表現\n    static readonly mute_vulgar_comments_pattern = new RegExp(Buffer.from('cHJwcnzvvZDvvZLvvZDvvZJ8U0VYfFPjgIdYfFPil69YfFPil4tYfFPil49YfO+8s++8pe+8uHzvvLPjgIfvvLh877yz4pev77y4fO+8s+KXi++8uHzvvLPil4/vvLh844Ki44OA44Or44OIfOOCouODiuOCpXzjgqLjg4rjg6t844Kk44Kr6IetfOOCpOOBj3zjgYbjgpPjgZN844Km44Oz44KzfOOBhuOCk+OBoXzjgqbjg7Pjg4F844Ko44Kt44ObfOOBiOOBoeOBiOOBoXzjgYjjgaPjgaF844Ko44OD44OBfOOBiOOBo+OCjXzjgqjjg4Pjg61844GI44KNfOOCqOODrXzlt6Xlj6N844GK44GV44KP44KK44G+44KTfOOBiuOBl+OBo+OBk3zjgqrjgrfjg4PjgrN844Kq44OD44K144OzfOOBiuOBo+OBseOBhHzjgqrjg4Pjg5HjgqR844Kq44OK44OL44O8fOOBiuOBquOBu3zjgqrjg4rjg5t844GK44Gx44GEfOOCquODkeOCpHzjgYpwfOOBiu+9kHzjgqrjg5Xjg5HjgrN844Ks44Kk44K444OzfOOCreODs+OCv+ODnnzjgY/jgbHjgYJ844GP44Gx44GBfOOCr+ODquODiOODquOCuXzjgq/jg7Pjg4t844GU44GP44GU44GP44GU44GP44GU44GPfOOCs+ODs+ODieODvOODoHzjgrbjg7zjg6Hjg7N844K344KzfOOBl+OBk+OBl+OBk3zjgrfjgrPjgrfjgrN844GZ44GR44GZ44GRfOOBm+OBhOOBiOOBjXzjgZnjgYXjgYXjgYXjgYXjgYV844GZ44GG44GG44GG44GG44GGfOOCu+OCr+ODreOCuXzjgrvjg4Pjgq/jgrl844K744OV44OsfOOBoeOBo+OBseOBhHzjgaHjgaPjg5HjgqR844OB44OD44OR44KkfOOBoeOCk+OBk3zjgaHjgIfjgZN844Gh4pev44GTfOOBoeKXi+OBk3zjgaHil4/jgZN844OB44Oz44KzfOODgeOAh+OCs3zjg4Hil6/jgrN844OB4peL44KzfOODgeKXj+OCs3zjgaHjgpPjgb1844Gh44CH44G9fOOBoeKXr+OBvXzjgaHil4vjgb1844Gh4peP44G9fOODgeODs+ODnXzjg4HjgIfjg51844OB4pev44OdfOODgeKXi+ODnXzjg4Hil4/jg51844Gh44KT44Gh44KTfOODgeODs+ODgeODs3zjgabjgYPjgpPjgabjgYPjgpN844OG44Kj44Oz44OG44Kj44OzfOODhuOCo+ODs+ODnXzjg4fjgqvjgYR844OH44Oq44OY44OrfOiEseOBknzjgbHjgYTjgoLjgb9844OR44OR5rS7fOOBteOBhuODu3zjgbXjgYbigKZ844G144GFfO++jO+9qXzjgbXjgY/jgonjgb/jgYvjgZF844G144GP44KJ44KT44GnfOOBuuOBo+OBn3zjgbrjgo3jgbrjgo1844Oa44Ot44Oa44OtfO++je++n+++m+++je++n+++m3zjg5Xjgqfjg6l844G844Gj44GNfOODneODq+ODjnzjgbzjgo3jgpN844Oc44Ot44OzfO++ju++nu++m+++nXzjgb3jgo3jgop844Od44Ot44OqfO++ju++n+++m+++mHzjg57jg7PjgY3jgaR844Oe44Oz44Kt44OEfOOBvuOCk+OBk3zjgb7jgIfjgZN844G+4pev44GTfOOBvuKXi+OBk3zjgb7il4/jgZN844Oe44Oz44KzfOODnuOAh+OCs3zjg57il6/jgrN844Oe4peL44KzfOODnuKXj+OCs3zjgb7jgpPjgZXjgpN844KC44Gj44GT44KKfOODouODg+OCs+ODqnzjgoLjgb/jgoLjgb9844Oi44Of44Oi44OffOODpOOBo+OBn3zjg6TjgaPjgaZ844Ok44KJfOOChOOCieOBm+OCjXzjg6Tjgop844Ok44KLfOODpOOCjHzjg6Tjgo1844Op44OW44ObfOODr+ODrOODoXzllph86Zmw5qC4fOmZsOiMjnzpmbDllId85rer5aSifOmZsOavm3znlKPjgoHjgot85aWz44Gu5a2Q44Gu5pelfOaxmuOBo+OBleOCk3zlp6Z86aiO5LmX5L2NfOmHkeeOiXzmnIjntYx85b6M6IOM5L2NfOWtkOS9nOOCinzlsITnsr585L+h6ICFfOeyvua2snzpgI/jgZF85oCn5LqkfOeyvuWtkHzmraPluLjkvY185oCn5b60fOaAp+eahHznlJ/nkIZ85a+45q2i44KBfOe0oOadkHzmirHjgYR85oqx44GLfOaKseOBjXzmirHjgY985oqx44GRfOaKseOBk3zkubPpppZ85oGl5Z6ifOS4reOBoOOBl3zkuK3lh7rjgZd85bC/fOaKnOOBhHzmipzjgZHjgarjgYR85oqc44GR44KLfOaKnOOBkeOCjHzohqjjgol85YuD6LW3fOaPieOBvnzmj4njgb985o+J44KAfOaPieOCgXzmvKvmuZZ844CH772efOKXr++9nnzil4vvvZ584peP772efOOAh+ODg+OCr+OCuXzil6/jg4Pjgq/jgrl84peL44OD44Kv44K5fOKXj+ODg+OCr+OCuQ==', 'base64').toString());\n\n    // 「罵倒や差別的な表現を含むコメントをミュートする」のフィルタ正規表現\n    static readonly mute_abusive_discriminatory_prejudiced_comments_pattern = new RegExp(Buffer.from('44CCfOOCouOCueODmnzjgqTjgqvjgox844Kk44Op44Gk44GPfOOCpuOCuHzjgqbjg7zjg6h844Km44OofOOCpuODqOOCr3zjgqbjg7J844GN44KC44GEfOOCreODouOCpHzjgq3jg6LjgYR844KtL+ODoC/jg4F844Ks44Kk44K4fO+9tu++nu+9su+9vO++nnzjgqzjgq1844Kr44K5fOOCreODg+OCunzjgY3jgaHjgYzjgYR844Kt44OB44Ks44KkfOOCreODoOODgXzjg4Hjg6fjg7N85Y2D44On44OzfOOBpOOCk+OBvHzjg4Tjg7Pjg5x844ON44OI44Km44OofOOBq+OBoOOBguOBgnzjg4vjg4B8776G776A776efOODkeODvOODqHzjg5Hjg6h844OR44Oo44KvfOOBtuOBo+OBlXzjg5bjg4PjgrV844G244GV44GEfOODluOCteOCpHzjgb7jgazjgZF844Oh44Kv44OpfOODkOOCq3zjg6DjgqvjgaTjgY986bq755Sf44K744Oh44Oz44OIfOaFsOWuieWppnzlrrPlhZB85aSW5a2XfOWnpuWbvXzpn5Plm7186Z+T5LitfOmfk+aXpXzln7rlnLDlpJZ85rCX5oyB44Gh5oKqfOWbveS6pOaWree1tnzmrrp86aCD44GZfOWcqOaXpXzlj4LmlL/mqKl85q2744GtfOawj+OBrXzvvoDvvot85q255YyVfOatueODknzpmpzlrrN85pat5LqkfOS4remfk3zmnJ3prq585b6055So5belfOWjunzml6Xpn5N85pel5bidfOeymOedgHzlj43ml6V86aas6bm/fOeZuumBlHzmnLR85aOy5Zu9fOS4jeW/q3zplpPmipzjgZF86Z2W5Zu9', 'base64').toString());\n\n    // 「8文字以上同じ文字が連続しているコメントをミュートする」のフィルタ正規表現\n    static readonly mute_consecutive_same_characters_comments_pattern = /(.)\\1{7,}/;\n\n    // ニコ生の特殊コマンド付きコメントのフィルタ正規表現\n    static readonly special_command_comments_pattern = /\\/[a-z]+ /;\n\n    // 迷惑な統計コメントのフィルタ正規表現\n    static readonly annoying_statistical_comments_pattern = /最高\\d+米\\/|計\\d+ＩＤ|総\\d+米/;\n\n    // ニコニコの色指定を 16 進数カラーコードに置換するテーブル\n    static readonly color_table: {[key: string]: string} = {\n        'white': '#FFEAEA',\n        'red': '#F02840',\n        'pink': '#FD7E80',\n        'orange': '#FDA708',\n        'yellow': '#FFE133',\n        'green': '#64DD17',\n        'cyan': '#00D4F5',\n        'blue': '#4763FF',\n        'purple': '#D500F9',\n        'black': '#1E1310',\n        'white2': '#CCCC99',\n        'niconicowhite': '#CCCC99',\n        'red2': '#CC0033',\n        'truered': '#CC0033',\n        'pink2': '#FF33CC',\n        'orange2': '#FF6600',\n        'passionorange': '#FF6600',\n        'yellow2': '#999900',\n        'madyellow': '#999900',\n        'green2': '#00CC66',\n        'elementalgreen': '#00CC66',\n        'cyan2': '#00CCCC',\n        'blue2': '#3399FF',\n        'marineblue': '#3399FF',\n        'purple2': '#6633CC',\n        'nobleviolet': '#6633CC',\n        'black2': '#666666',\n    };\n\n\n    /**\n     * ニコニコの色指定を 16 進数カラーコードに置換する\n     * @param color ニコニコの色指定\n     * @return 16 進数カラーコード\n     */\n    static getCommentColor(color: string): string | null {\n        return this.color_table[color] || null;\n    }\n\n\n    /**\n     * ニコニコの位置指定を DPlayer の位置指定に置換する\n     * @param position ニコニコの位置指定\n     * @return DPlayer の位置指定\n     */\n    static getCommentPosition(position: string): 'top' | 'right' | 'bottom' | null {\n        switch (position) {\n            case 'ue':\n                return 'top';\n            case 'naka':\n                return 'right';\n            case 'shita':\n                return 'bottom';\n            default:\n                return null;\n        }\n    }\n\n\n    /**\n     * ニコニコのサイズ指定を DPlayer のサイズ指定に置換する\n     * @param size ニコニコのサイズ指定\n     * @returns DPlayer のサイズ指定\n     */\n    static getCommentSize(size: string): 'big' | 'medium' | 'small' | null {\n        switch (size) {\n            case 'big':\n            case 'medium':\n            case 'small':\n                return size;\n            default:\n                return null;\n        }\n    }\n\n\n    /**\n     * ニコニコのコメントコマンドを解析する\n     * @param comment_mail ニコニコのコメントコマンド\n     * @returns コメントの色、位置、サイズ\n     */\n    static parseCommentCommand(comment_mail: string): {\n        color: string;\n        position: 'top' | 'right' | 'bottom';\n        size: 'big' | 'medium' | 'small';\n    } {\n        let color = '#FFEAEA';\n        let position: 'top' | 'right' | 'bottom' = 'right';\n        let size: 'big' | 'medium' | 'small' = 'medium';\n\n        if (comment_mail !== undefined && comment_mail !== null) {\n            const commands = comment_mail.replace('184', '').split(' ');\n\n            for (const command of commands) {\n                const parsed_color = CommentUtils.getCommentColor(command);\n                const parsed_position = CommentUtils.getCommentPosition(command);\n                const parsed_size = CommentUtils.getCommentSize(command);\n                if (parsed_color !== null) {\n                    color = parsed_color;\n                }\n                if (parsed_position !== null) {\n                    position = parsed_position;\n                }\n                if (parsed_size !== null) {\n                    size = parsed_size;\n                }\n            }\n        }\n\n        return {color, position, size};\n    }\n\n\n    /**\n     * ミュート対象のコメントかどうかを判断する\n     * @param comment コメント\n     * @param user_id コメントを投稿したユーザーの ID\n     * @param color コメントの色\n     * @param position コメントの位置\n     * @param size コメントのサイズ\n     * @return ミュート対象のコメントなら true を返す\n     */\n    static isMutedComment(\n        comment: string,\n        user_id: string,\n        color?: string,\n        position?: 'top' | 'right' | 'bottom',\n        size?: 'big' | 'medium' | 'small',\n    ): boolean {\n\n        const settings_store = useSettingsStore();\n\n        // ユーザー ID ミュート処理\n        if (settings_store.settings.muted_niconico_user_ids.includes(user_id)) {\n            return true;\n        }\n\n        // ニコ生の特殊コマンド付きコメント (/nicoad, /emotion など) を一括で弾く\n        if (CommentUtils.special_command_comments_pattern.test(comment)) {\n            return true;\n        }\n\n        // 「映像の上下に固定表示されるコメントをミュートする」がオンの場合\n        // コメントの位置が top (上固定) もしくは bottom (下固定) のときは弾く\n        if (settings_store.settings.mute_fixed_comments === true && (position === 'top' || position === 'bottom')) {\n            console.log('[CommentUtils] Muted comment (fixed_comments): ' + comment);\n            return;\n        }\n\n        // 「色付きのコメントをミュートする」がオンの場合\n        // コメントの色が #FFEAEA (デフォルト) 以外のときは弾く\n        if (settings_store.settings.mute_colored_comments === true && color !== '#FFEAEA') {\n            console.log('[CommentUtils] Muted comment (colored_comments): ' + comment);\n            return;\n        }\n\n        // 「文字サイズが大きいコメントをミュートする」がオンの場合\n        // コメントのサイズが big のときは弾く\n        if (settings_store.settings.mute_big_size_comments === true && size === 'big') {\n            console.log('[CommentUtils] Muted comment (big_size_comments): ' + comment);\n            return;\n        }\n\n        // 「露骨な表現を含むコメントをミュートする」がオンの場合\n        if ((settings_store.settings.mute_vulgar_comments === true) &&\n            (CommentUtils.mute_vulgar_comments_pattern.test(comment))) {\n            console.log('[CommentUtils] Muted comment (vulgar_comments): ' + comment);\n            return true;\n        }\n\n        // 「罵倒や差別的な表現を含むコメントをミュートする」がオンの場合\n        if ((settings_store.settings.mute_abusive_discriminatory_prejudiced_comments === true) &&\n            (CommentUtils.mute_abusive_discriminatory_prejudiced_comments_pattern.test(comment))) {\n            console.log('[CommentUtils] Muted comment (abusive_discriminatory_prejudiced_comments): ' + comment);\n            return true;\n        }\n\n        // 「8文字以上同じ文字が連続しているコメントをミュートする」がオンの場合\n        if ((settings_store.settings.mute_consecutive_same_characters_comments === true &&\n            (CommentUtils.mute_consecutive_same_characters_comments_pattern.test(comment)))) {\n            console.log('[CommentUtils] Muted comment (consecutive_same_characters_comments): ' + comment);\n            return true;\n        }\n\n        // キーワードミュート処理\n        for (const muted_comment_keyword of settings_store.settings.muted_comment_keywords) {\n            if (muted_comment_keyword.pattern === '') continue;  // キーワードが空文字のときは無視\n            switch (muted_comment_keyword.match) {\n                // 部分一致\n                case 'partial':\n                    if (comment.includes(muted_comment_keyword.pattern)) {\n                        console.log('[CommentUtils] Muted comment (partial): ' + comment);\n                        return true;\n                    }\n                    break;\n                // 前方一致\n                case 'forward':\n                    if (comment.startsWith(muted_comment_keyword.pattern)) {\n                        console.log('[CommentUtils] Muted comment (forward): ' + comment);\n                        return true;\n                    }\n                    break;\n                // 後方一致\n                case 'backward':\n                    if (comment.endsWith(muted_comment_keyword.pattern)) {\n                        console.log('[CommentUtils] Muted comment (backward): ' + comment);\n                        return true;\n                    }\n                    break;\n                // 完全一致\n                case 'exact':\n                    if (comment === muted_comment_keyword.pattern) {\n                        console.log('[CommentUtils] Muted comment (exact): ' + comment);\n                        return true;\n                    }\n                    break;\n                // 正規表現\n                case 'regex':\n                    if (new RegExp(muted_comment_keyword.pattern).test(comment)) {\n                        console.log('[CommentUtils] Muted comment (regex): ' + comment);\n                        return true;\n                    }\n                    break;\n            }\n        }\n\n        // 「ＮHK→計1447ＩＤ／内プレ425ＩＤ／総33372米 ◆ Ｅﾃﾚ → 計73ＩＤ／内プレ19ＩＤ／総941米」のような\n        // 迷惑コメントを一括で弾く (あえてミュートしたくないユースケースが思い浮かばないのでデフォルトで弾く)\n        // 一番最後なのは、この迷惑コメント自体の頻度が低いため\n        if (CommentUtils.annoying_statistical_comments_pattern.test(comment)) {\n            return true;\n        }\n\n        // いずれのミュート処理にも引っかからなかった (ミュート対象ではない)\n        return false;\n    }\n\n\n    /**\n     * ミュート済みキーワードリストに追加する (完全一致)\n     * @param comment コメント文字列\n     */\n    static addMutedKeywords(comment: string): void {\n\n        // すでにまったく同じミュート済みキーワードが追加済みの場合は何もしない\n        const settings_store = useSettingsStore();\n        for (const muted_comment_keyword of settings_store.settings.muted_comment_keywords) {\n            if (muted_comment_keyword.match === 'exact' && muted_comment_keyword.pattern === comment) {\n                return;\n            }\n        }\n\n        // ミュート済みキーワードリストに追加\n        settings_store.settings.muted_comment_keywords.push({\n            match: 'exact',\n            pattern: comment,\n        });\n    }\n\n\n    /**\n     * ミュート済みニコニコユーザー ID リストに追加する\n     * @param user_id ニコニコユーザー ID\n     */\n    static addMutedNiconicoUserIDs(user_id: string): void {\n\n        // すでに追加済みの場合は何もしない\n        const settings_store = useSettingsStore();\n        if (settings_store.settings.muted_niconico_user_ids.includes(user_id)) {\n            return;\n        }\n\n        // ミュート済みニコニコユーザー ID リストに追加\n        settings_store.settings.muted_niconico_user_ids.push(user_id);\n    }\n}\n","\n/**\n * プレイヤー周りのユーティリティ\n */\nexport class PlayerUtils {\n\n    /**\n     * プレイヤーの背景画像をランダムで取得し、その URL を返す\n     * @returns ランダムで設定されたプレイヤーの背景画像の URL\n     */\n    static generatePlayerBackgroundURL(): string {\n        const background_count = 12;  // 12種類から選択\n        const random = (Math.floor(Math.random() * background_count) + 1);\n        return `/assets/images/player-backgrounds/${random.toString().padStart(2, '0')}.jpg`;\n    }\n\n\n    /**\n     * 現在のブラウザで H.265 / HEVC 映像が再生できるかどうかを取得する\n     * ref: https://github.com/StaZhu/enable-chromium-hevc-hardware-decoding#mediacapabilities\n     * @returns 再生できるなら true、できないなら false\n     */\n    static isHEVCVideoSupported(): boolean {\n        // hvc1.1.6.L123.B0 の部分は呪文 (HEVC であることと、そのプロファイルを示す値らしい)\n        return document.createElement('video').canPlayType('video/mp4; codecs=\"hvc1.1.6.L123.B0\"') === 'probably';\n    }\n}\n","\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ja';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\n\nimport { IProgram } from '@/services/Programs';\nimport Utils from '@/utils';\n\n\n/**\n * 番組情報周りのユーティリティ\n */\nexport class ProgramUtils {\n\n    /**\n     * 番組情報中の[字]や[解]などの記号をいい感じに装飾する\n     * @param program 番組情報のオブジェクト\n     * @param key 番組情報のオブジェクトから取り出すプロパティのキー\n     * @returns 装飾した文字列\n     */\n    static decorateProgramInfo(program: IProgram | null, key: string): string {\n\n        // program が空でないかつ、program[key] が存在する\n        if (program !== null && program[key] !== null) {\n\n            // 番組情報に含まれる HTML の特殊文字で表示がバグらないように、事前に HTML エスケープしておく\n            const text = Utils.escapeHTML(program[key]);\n\n            // 本来 ARIB 外字である記号の一覧\n            // ref: https://ja.wikipedia.org/wiki/%E7%95%AA%E7%B5%84%E8%A1%A8\n            // ref: https://github.com/xtne6f/EDCB/blob/work-plus-s/EpgDataCap3/EpgDataCap3/ARIB8CharDecode.cpp#L1319\n            const mark = '新|終|再|交|映|手|声|多|副|字|文|CC|OP|二|S|B|SS|無|無料' +\n                'C|S1|S2|S3|MV|双|デ|D|N|W|P|H|HV|SD|天|解|料|前|後初|生|販|吹|PPV|' +\n                '演|移|他|収|・|英|韓|中|字/日|字/日英|3D|2K|4K|8K|5.1|7.1|22.2|60P|120P|d|HC|HDR|SHV|UHD|VOD|配|初';\n\n            // 正規表現を作成\n            const pattern1 = new RegExp('\\\\((二|字|再)\\\\)', 'g');  // 通常の括弧で囲まれている記号\n            const pattern2 = new RegExp(`\\\\[(${mark})\\\\]`, 'g');\n\n            // 正規表現で置換した結果を返す\n            return text.replace(pattern1, '<span class=\"decorate-symbol\">$1</span>')\n                .replace(pattern2, '<span class=\"decorate-symbol\">$1</span>');\n\n        // 番組情報がない時間帯\n        } else {\n\n            dayjs.extend(isSameOrAfter);\n            dayjs.extend(isSameOrBefore);\n            dayjs.extend(isBetween);\n\n            // 23時～翌7時 (0:00 ~ 06:59 or 23:00 ~ 23:59) の間なら放送を休止している可能性が高いので、放送休止と表示する\n            const now = dayjs();\n            const pause_time_start = dayjs().hour(0).minute(0).second(0);\n            const pause_time_end = dayjs().hour(6).minute(59).second(59);\n            const pause_time_start_23 = dayjs().hour(23).minute(0).second(0);\n            const pause_time_end_23 = dayjs().hour(23).minute(59).second(59);\n            if ((now.isSameOrAfter(pause_time_start) && now.isSameOrBefore(pause_time_end)) ||\n                (now.isSameOrAfter(pause_time_start_23) && now.isSameOrBefore(pause_time_end_23))) {\n                if (key === 'title') {\n                    return '放送休止';  // タイトル\n                } else {\n                    return 'この時間は放送を休止しています。';  // 番組概要\n                }\n\n            // それ以外の時間帯では、「番組情報がありません」と表示する\n            // 急な番組変更の影響で、一時的にその時間帯に対応する番組情報が消えることがある\n            // 特に Mirakurun バックエンドでは高頻度で収集した EIT[p/f] が比較的すぐ反映されるため、この現象が起こりやすい\n            // 日中に放送休止（停波）になることはまずあり得ないので、番組情報が取得できてないだけで視聴できるかも？というニュアンスを与える\n            } else {\n                if (key === 'title') {\n                    return '番組情報がありません';  // タイトル\n                } else {\n                    return 'この時間の番組情報を取得できませんでした。';  // 番組概要\n                }\n            }\n        }\n    }\n\n\n    /**\n     * オブジェクトからプロパティを取得し、もしプロパティが存在しなければ代替値を返す\n     * @param items 対象のオブジェクト\n     * @param key オブジェクトから取り出すプロパティのキー\n     * @param default_value 取得できなかった際の代替値\n     * @returns オブジェクト取得した値 or 代替値\n     */\n    static getAttribute(items: {[key: string]: any}, key: string, default_value: any): any {\n\n        // items が空でないかつ、items[key] が存在する\n        if (items !== null && items[key] !== undefined && items[key] !== null) {\n\n            // items[key] の内容を返す\n            return items[key];\n\n        // 指定された代替値を返す\n        } else {\n            return default_value;\n        }\n    }\n\n\n    /**\n     * 番組の進捗状況を取得する\n     * @param program 番組情報\n     * @returns 番組の進捗状況（%単位）\n     */\n    static getProgramProgress(program: IProgram): number {\n\n        // program が空でない\n        if (program !== null) {\n\n            // 番組開始時刻から何秒進んだか\n            const progress = dayjs(dayjs()).diff(program.start_time, 'second');\n\n            // %単位の割合を算出して返す\n            return progress / program.duration * 100;\n\n        // 放送休止中\n        } else {\n            return 0;\n        }\n    }\n\n\n    /**\n     * 番組の放送時刻を取得する\n     * @param program 番組情報\n     * @param is_short 時刻のみ返すかどうか\n     * @returns 番組の放送時刻\n     */\n    static getProgramTime(program: IProgram, is_short: boolean = false): string {\n\n        // program が空でなく、かつ番組時刻が初期値でない\n        if (program !== null && program.start_time !== '2000-01-01T00:00:00+09:00') {\n\n            // dayjs で日付を扱いやすく\n            dayjs.locale('ja');  // ロケールを日本に設定\n            const start_time = dayjs(program.start_time);\n            const end_time = dayjs(program.end_time);\n            const duration = program.duration / 60;  // 分換算\n\n            // 時刻のみ返す\n            if (is_short === true) {  // 時刻のみ\n                return `${start_time.format('HH:mm')} ～ ${end_time.format('HH:mm')}`;\n            // 通常\n            } else {\n                return `${start_time.format('YYYY/MM/DD (dd) HH:mm')} ～ ${end_time.format('HH:mm')} (${duration}分)`;\n            }\n\n        // 放送休止中\n        } else {\n\n            // 時刻のみ返す\n            if (is_short === true) {\n                return '--:-- ～ --:--';\n            // 通常\n            } else {\n                return '----/--/-- (-) --:-- ～ --:-- (--分)';\n            }\n        }\n    }\n}\n","\n// 共通ユーティリティをデフォルトとしてインポート\nimport Utils from '@/utils/Utils';\nexport default Utils;\n\n// Utils フォルダ配下のユーティリティを一括でインポートできるように\nexport * from '@/utils/ChannelUtils';\nexport * from '@/utils/CommentUtils';\nexport * from '@/utils/PlayerUtils';\nexport * from '@/utils/ProgramUtils';\n","\nimport { defineStore } from 'pinia';\n\nimport Settings, { IClientSettings, IMutedCommentKeywords } from '@/services/Settings';\nimport Utils from '@/utils';\n\n\n// LocalStorage に保存される KonomiTV の設定データ\ninterface ILocalClientSettings {\n    pinned_channel_ids: string[];\n    showed_panel_last_time: boolean;\n    selected_twitter_account_id: number | null;\n    saved_twitter_hashtags: string[];\n    tv_streaming_quality: '1080p-60fps' | '1080p' | '810p' | '720p' | '540p' | '480p' | '360p' | '240p';\n    tv_data_saver_mode: boolean;\n    tv_low_latency_mode: boolean;\n    panel_display_state: 'RestorePreviousState' | 'AlwaysDisplay' | 'AlwaysFold';\n    tv_panel_active_tab: 'Program' | 'Channel' | 'Comment' | 'Twitter';\n    caption_font: string;\n    always_border_caption_text: boolean;\n    specify_caption_background_color: boolean;\n    caption_background_color: string;\n    tv_show_superimpose: boolean;\n    capture_copy_to_clipboard: boolean;\n    capture_save_mode: 'Browser' | 'UploadServer' | 'Both';\n    capture_caption_mode: 'VideoOnly' | 'CompositingCaption' | 'Both';\n    sync_settings: boolean;\n    comment_speed_rate: number;\n    comment_font_size: number;\n    close_comment_form_after_sending: boolean;\n    muted_comment_keywords: IMutedCommentKeywords[];\n    muted_niconico_user_ids: string[];\n    mute_vulgar_comments: boolean;\n    mute_abusive_discriminatory_prejudiced_comments: boolean;\n    mute_big_size_comments: boolean;\n    mute_fixed_comments: boolean;\n    mute_colored_comments: boolean;\n    mute_consecutive_same_characters_comments: boolean;\n    fold_panel_after_sending_tweet: boolean;\n    reset_hashtag_when_program_switches: boolean;\n    auto_add_watching_channel_hashtag: boolean;\n    twitter_active_tab: 'Search' | 'Timeline' | 'Capture';\n    tweet_hashtag_position: 'Prepend' | 'Append' | 'PrependWithLineBreak' | 'AppendWithLineBreak';\n    tweet_capture_watermark_position: 'None' | 'TopLeft' | 'TopRight' | 'BottomLeft' | 'BottomRight';\n}\n\n// 設定データのうち、同期対象の設定キー\n// サーバー側の app.schemas.ClientSettings と\n// client/src/services/Settings.ts 内の IClientSettings で定義されているものと同じ\nconst sync_settings_keys = [\n    'pinned_channel_ids',\n    // showed_panel_last_time: 同期無効\n    // selected_twitter_account_id: 同期無効\n    'saved_twitter_hashtags',\n    // tv_streaming_quality: 同期無効\n    // tv_data_saver_mode: 同期無効\n    // tv_low_latency_mode: 同期無効\n    'panel_display_state',\n    'tv_panel_active_tab',\n    'caption_font',\n    'always_border_caption_text',\n    'specify_caption_background_color',\n    'caption_background_color',\n    'tv_show_superimpose',\n    // capture_copy_to_clipboard: 同期無効\n    'capture_save_mode',\n    'capture_caption_mode',\n    // sync_settings: 同期無効\n    'comment_speed_rate',\n    'comment_font_size',\n    'close_comment_form_after_sending',\n    'muted_comment_keywords',\n    'muted_niconico_user_ids',\n    'mute_vulgar_comments',\n    'mute_abusive_discriminatory_prejudiced_comments',\n    'mute_big_size_comments',\n    'mute_fixed_comments',\n    'mute_colored_comments',\n    'mute_consecutive_same_characters_comments',\n    'fold_panel_after_sending_tweet',\n    'reset_hashtag_when_program_switches',\n    'auto_add_watching_channel_hashtag',\n    'twitter_active_tab',\n    'tweet_hashtag_position',\n    'tweet_capture_watermark_position',\n];\n\n// LocalStorage に保存される KonomiTV の設定データのデフォルト値\nconst default_settings: ILocalClientSettings = {\n\n    // ***** 設定画面から直接変更できない設定値 *****\n\n    // ピン留めしているチャンネルの ID (ex: gr011) が入るリスト\n    pinned_channel_ids: [],\n    // 前回視聴画面を開いた際にパネルが表示されていたかどうか (同期無効)\n    showed_panel_last_time: true,\n    // 現在ツイート対象として選択されている Twitter アカウントの ID (同期無効)\n    selected_twitter_account_id: null,\n    // 保存している Twitter のハッシュタグが入るリスト\n    saved_twitter_hashtags: [],\n\n    // ***** 設定 → 全般 *****\n\n    // テレビのデフォルトのストリーミング画質 (Default: 1080p) (同期無効)\n    tv_streaming_quality: '1080p',\n    // テレビを通信節約モードで視聴する (Default: オフ) (同期無効)\n    tv_data_saver_mode: false,\n    // テレビを低遅延で視聴する (Default: 低遅延で視聴する) (同期無効)\n    tv_low_latency_mode: true,\n    // デフォルトのパネルの表示状態 (Default: 前回の状態を復元する)\n    panel_display_state: 'RestorePreviousState',\n    // テレビをみるときにデフォルトで表示されるパネルのタブ (Default: 番組情報タブ)\n    tv_panel_active_tab: 'Program',\n\n    // ***** 設定 → 字幕 *****\n\n    // 字幕のフォント (Default: Windows TV 丸ゴシック)\n    caption_font: 'Windows TV MaruGothic',\n    // 字幕の文字を常に縁取って描画する (Default: 常に縁取る)\n    always_border_caption_text: true,\n    // 字幕の背景色を指定する (Default: 指定しない)\n    specify_caption_background_color: false,\n    // 字幕の背景色 (Default: 不透明度が 50% の黒)\n    caption_background_color: '#00000080',\n    // テレビをみるときに文字スーパーを表示する (Default: 表示する)\n    tv_show_superimpose: true,\n\n    // ***** 設定 → キャプチャ *****\n\n    // キャプチャをクリップボードにコピーする (Default: 無効) (同期無効)\n    capture_copy_to_clipboard: false,\n    // キャプチャの保存先 (Default: ブラウザでダウンロード)\n    capture_save_mode: 'Browser',\n    // 字幕が表示されているときのキャプチャの保存モード (Default: 映像のみのキャプチャと、字幕を合成したキャプチャを両方保存する)\n    capture_caption_mode: 'Both',\n\n    // ***** 設定 → アカウント *****\n\n    // 設定を同期する (Default: 同期しない) (同期無効)\n    sync_settings: false,\n\n    // ***** 設定 → ニコニコ実況 *****\n\n    // コメントの速さ (Default: 1倍)\n    comment_speed_rate: 1,\n    // コメントのフォントサイズ (Default: 34px)\n    comment_font_size: 34,\n    // コメント送信後にコメント入力フォームを閉じる (Default: オン)\n    close_comment_form_after_sending: true,\n\n    // ***** 設定 → ニコニコ実況 (ミュート設定) *****\n\n    // ミュート済みのコメントのキーワードが入るリスト\n    muted_comment_keywords: [],\n    // ミュート済みのニコニコユーザー ID が入るリスト\n    muted_niconico_user_ids: [],\n    // 露骨な表現を含むコメントをミュートする (Default: ミュートする)\n    mute_vulgar_comments: true,\n    // 罵倒や誹謗中傷、差別的な表現、政治的に偏った表現を含むコメントをミュートする (Default: ミュートする)\n    mute_abusive_discriminatory_prejudiced_comments: true,\n    // 文字サイズが大きいコメントをミュートする (Default: ミュートする)\n    mute_big_size_comments: true,\n    // 映像の上下に固定表示されるコメントをミュートする (Default: ミュートしない)\n    mute_fixed_comments: false,\n    // 色付きのコメントをミュートする (Default: ミュートしない)\n    mute_colored_comments: false,\n    // 8文字以上同じ文字が連続しているコメントをミュートする (Default: ミュートしない)\n    mute_consecutive_same_characters_comments: false,\n\n    // ***** 設定 → Twitter *****\n\n    // ツイート送信後にパネルを折りたたむ (Default: オフ)\n    fold_panel_after_sending_tweet: false,\n    // 番組が切り替わったときにハッシュタグフォームをリセットする (Default: オン)\n    reset_hashtag_when_program_switches: true,\n    // 視聴中のチャンネルに対応する局タグを自動で追加する (Default: オン)\n    auto_add_watching_channel_hashtag: true,\n    // デフォルトで表示される Twitter タブ内のタブ (Default: キャプチャタブ)\n    twitter_active_tab: 'Capture',\n    // ツイートにつけるハッシュタグの位置 (Default: ツイート本文の後に追加する)\n    tweet_hashtag_position: 'Append',\n    // ツイートするキャプチャに番組名の透かしを描画する (Default: 透かしを描画しない)\n    tweet_capture_watermark_position: 'None',\n};\n\n/**\n * LocalStorage の KonomiTV-Settings キーから設定データを取得する\n * @returns 設定データ\n */\nexport function getLocalStorageSettings(): {[key: string]: any} {\n    const settings = localStorage.getItem('KonomiTV-Settings');\n    if (settings !== null) {\n        return JSON.parse(settings);\n    } else {\n        // もし LocalStorage に KonomiTV-Settings キーがまだない場合、あらかじめデフォルトの設定値を保存しておく\n        setLocalStorageSettings(default_settings);\n        return default_settings;\n    }\n}\n\n/**\n * LocalStorage の KonomiTV-Settings キーに設定データを保存する\n * @param settings 設定データ\n */\nexport function setLocalStorageSettings(settings: {[key: string]: any}): void {\n    localStorage.setItem('KonomiTV-Settings', JSON.stringify(settings));\n}\n\n/**\n * 与えられた設定データを並び替えたり足りない設定キーを補完したり不要な設定キーを削除したりと整形して返す\n * @param settings 設定データ\n */\nfunction getNormalizedSettings(settings: {[key: string]: any}): ILocalClientSettings {\n\n    // (名前が変わった、廃止されたなどの理由で) 現在の default_settings に存在しない設定キーを排除した上で並び替え\n    // 並び替えられていないと設定データの比較がうまくいかない\n    const new_settings: {[key: string]: any} = {};\n    for (const default_settings_key of Object.keys(default_settings)) {\n        if (default_settings_key in settings) {\n            new_settings[default_settings_key] = settings[default_settings_key];\n        } else {\n            // 後のバージョンで追加されたなどの理由で現状の KonomiTV-Settings に存在しない設定キーの場合\n            // その設定キーのデフォルト値を取得する\n            new_settings[default_settings_key] = default_settings[default_settings_key];\n        }\n    }\n\n    // この状態の新しい設定データを返す\n    return new_settings as ILocalClientSettings;\n}\n\n/**\n * 設定データを共有するストア\n */\nconst useSettingsStore = defineStore('settings', {\n    state: () => {\n\n        // ref: https://www.vuemastery.com/blog/refresh-proof-your-pinia-stores/\n\n        // LocalStorage から設定データを取得する\n        const settings = getLocalStorageSettings();\n\n        // (名前が変わった、廃止されたなどの理由で) 現在の default_settings に存在しない設定キーを排除した上で並び替え\n        const new_settings = getNormalizedSettings(settings);\n\n        // この状態の新しい設定データを LocalStorage に保存する\n        setLocalStorageSettings(new_settings);\n\n        // 設定データを Store の state のデフォルト値として返す\n        return {\n            settings: new_settings as ILocalClientSettings,\n        };\n    },\n    actions: {\n\n        /**\n         * エクスポートした JSON ファイルから設定データをインポートする (既存の設定はすべて上書きされる)\n         * @param file エクスポートした JSON ファイル\n         * @returns インポートに成功したかどうか\n         */\n        async importClientSettings(file: File): Promise<boolean> {\n\n            // JSON ファイルを読み込む\n            const settings_json = await file.text();\n\n            // JSON ファイルをパースする\n            let settings = {};\n            try {\n                settings = JSON.parse(settings_json);\n            } catch (error) {\n                return false;\n            }\n\n            // (名前が変わった、廃止されたなどの理由で) 現在の default_settings に存在しない設定キーを排除した上で並び替え\n            const new_settings = getNormalizedSettings(settings);\n\n            // この状態の新しい設定データを LocalStorage に保存し、Store の state に反映する\n            // このとき、既存の設定データはすべて上書きされる\n            setLocalStorageSettings(new_settings);\n            this.settings = new_settings;\n\n            // 設定データをサーバーに同期する\n            await this.syncClientSettingsToServer();\n\n            return true;\n        },\n\n        /**\n         * 設定データを初期状態にリセットする\n         */\n        async resetClientSettings(): Promise<void> {\n\n            // デフォルト値の設定データを LocalStorage に保存し、Store の state に反映する\n            setLocalStorageSettings(default_settings);\n            this.settings = default_settings;\n\n            // 設定データをサーバーに同期する\n            await this.syncClientSettingsToServer();\n        },\n\n        /**\n         * 設定データのうち、サーバーへの同期対象の設定キーのみで構成されたオブジェクト (IClientSettings と一致する) を返す\n         * @returns サーバーへの同期対象の設定キーのみで構成されたオブジェクト\n         */\n        getSyncableClientSettings(): IClientSettings {\n\n            // 同期対象の設定キーのみで設定データをまとめ直す\n            // sync_settings には同期対象外の設定は含まれない\n            const sync_settings: {[key: string]: any} = {};\n            for (const sync_settings_key of sync_settings_keys) {\n                if (sync_settings_key in this.settings) {\n                    sync_settings[sync_settings_key] = this.settings[sync_settings_key];\n                } else {\n                    // 後から追加された設定キーなどの理由で設定キーが現状の KonomiTV-Settings に存在しない場合\n                    // その設定キーのデフォルト値を取得する\n                    sync_settings[sync_settings_key] = default_settings[sync_settings_key];\n                }\n            }\n\n            return sync_settings as IClientSettings;\n        },\n\n        /**\n         * ログイン時かつ同期が有効な場合、サーバーに保存されている設定データをこのクライアントに同期する\n         * @param force ログイン中なら同期が有効かに関わらず実行する (デフォルト: false)\n         */\n        async syncClientSettingsFromServer(force: boolean = false): Promise<void> {\n\n            // ログインしていない時、同期が無効なときは実行しない\n            if (Utils.getAccessToken() === null || (this.settings.sync_settings === false && force === false)) {\n                return;\n            }\n\n            // サーバーから設定データをダウンロード\n            const settings_server = await Settings.fetchClientSettings();\n            if (settings_server === null) {\n                return;  // 取得できなくても後続の処理には影響しないので、サイレントに失敗する\n            }\n\n            // クライアントの設定データをサーバーからの設定データで上書き\n            for (const [settings_server_key, settings_server_value] of Object.entries(settings_server)) {\n                this.settings[settings_server_key] = settings_server_value;\n            }\n        },\n\n        /**\n         * ログイン時かつ同期が有効な場合、このクライアントの設定をサーバーに同期する\n         * @param force ログイン中なら同期が有効かに関わらず実行する (デフォルト: false)\n         */\n        async syncClientSettingsToServer(force: boolean = false): Promise<void> {\n\n            // ログインしていない時、同期が無効なときは実行しない\n            if (Utils.getAccessToken() === null || (this.settings.sync_settings === false && force === false)) {\n                return;\n            }\n\n            // 同期対象の設定キーのみで設定データをまとめ直す\n            const sync_settings = this.getSyncableClientSettings();\n\n            // サーバーに設定データをアップロード\n            await Settings.updateClientSettings(sync_settings);\n        }\n    }\n});\n\nexport default useSettingsStore;\n","\nimport { defineStore } from 'pinia';\n\nimport Message from '@/message';\nimport Users, { IUser, IUserUpdateRequest } from '@/services/Users';\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils from '@/utils';\n\n\n/**\n * 現在ログイン中のユーザーアカウントの情報を共有するストア\n */\nconst useUserStore = defineStore('user', {\n    state: () => ({\n\n        // 現在ログイン中かどうか\n        is_logged_in: false as boolean,\n\n        // ログイン済みのユーザーの情報\n        user: null as IUser | null,\n\n        // ログイン済みのユーザーのアイコン画像の Blob URL\n        user_icon_url: null as string | null,\n    }),\n    getters: {\n\n        /**\n         * ログイン済みのユーザーのニコニコアカウントのユーザーアイコンの URL (ニコニコアカウントと連携されている場合のみ)\n         */\n        user_niconico_icon_url(): string | null {\n            if (this.user === null || this.user.niconico_user_id === null) {\n                return null;\n            }\n            const user_id_slice = this.user.niconico_user_id.toString().slice(0, 4);\n            return `https://secure-dcdn.cdn.nimg.jp/nicoaccount/usericon/${user_id_slice}/${this.user.niconico_user_id}.jpg`;\n        }\n    },\n    actions: {\n\n        /**\n         * アカウントを作成する\n         * @param username ユーザー名\n         * @param password パスワード\n         * @returns アカウント作成に成功した場合は true\n         */\n        async register(username: string, password: string): Promise<boolean> {\n\n            // アカウントを作成\n            const result = await Users.createUser({username, password});\n            if (result === null) {\n                console.log('Register failed.');\n                return false;  // アカウント作成失敗 (エラーハンドリングは services 層で行われる)\n            }\n\n            // 作成したアカウントでログイン\n            await this.login(username, password, true);\n            console.log('Register successful.');\n            Message.success('アカウントを作成しました。');\n            return true;\n        },\n\n        /**\n         * ログイン処理を行う\n         * @param username ユーザー名\n         * @param password パスワード\n         * @param silent ログインしたことをメッセージで通知しない場合は true\n         * @returns ログインに成功した場合は true\n         */\n        async login(username: string, password: string, silent: boolean = false): Promise<boolean> {\n\n            // アクセストークンを発行\n            const access_token = await Users.createUserAccessToken(username, password);\n            if (access_token === null) {\n                console.log('Login failed.');\n                return false;  // ログイン失敗 (エラーハンドリングは services 層で行われる)\n            }\n\n            // 取得したアクセストークンを保存\n            console.log('Login successful.');\n            Utils.saveAccessToken(access_token.access_token);\n            this.is_logged_in = true;\n\n            // ユーザーアカウントの情報を取得\n            await this.fetchUser(true);\n\n            if (silent === false) {\n                Message.success('ログインしました。');\n            }\n\n            return true;\n        },\n\n        /**\n         * ログアウト処理を行う\n         * @param silent ログアウトしたことをメッセージで通知しない場合は true\n         */\n        logout(silent: boolean = false): void {\n\n            // 設定の同期を無効化\n            const settings_store = useSettingsStore();\n            settings_store.settings.sync_settings = false;\n\n            // ブラウザからアクセストークンを削除\n            // これをもってログアウトしたことになる（それ以降の Axios のリクエストにはアクセストークンが含まれなくなる）\n            Utils.deleteAccessToken();\n\n            // 未ログイン状態に設定\n            this.is_logged_in = false;\n            this.user = null;\n            this.user_icon_url = '';\n\n            if (silent === false) {\n                Message.success('ログアウトしました。');\n            }\n        },\n\n        /**\n         * 現在ログイン中のユーザーアカウントの情報を取得する\n         * すでに取得済みの情報がある場合は API リクエストを行わずにそれを返す\n         * @param force 強制的に API リクエストを行う場合は true\n         * @returns ログイン中のユーザーアカウントの情報 or ログインしていない場合は null\n         */\n        async fetchUser(force: boolean = false): Promise<IUser | null> {\n\n            // LocalStorage にアクセストークンが保存されていない場合 (= 非ログイン状態) は常に null を返す\n            if (Utils.getAccessToken() === null) {\n                return null;\n            }\n\n            // すでにログイン済みのユーザーアカウントの情報がある場合はそれを返す\n            // force が true の場合は無視される\n            if (this.user !== null && force === false) {\n                return this.user;\n            }\n\n            // ユーザーアカウントの情報を取得する\n            const user = await Users.fetchUser();\n            if (user === null) {\n                // この時点で無効などの理由でアクセストークンが削除されている場合、ログアウトする\n                if (Utils.getAccessToken() === null) {\n                    this.logout(true);\n                }\n                return null;\n            }\n            this.is_logged_in = true;\n            this.user = user;\n\n            // ユーザーアカウントのアイコン画像の Blob URL を取得する\n            const user_icon_url = await Users.fetchUserIcon();\n            if (user_icon_url === null) {\n                return null;\n            }\n            this.user_icon_url = user_icon_url;\n\n            return this.user;\n        },\n\n        /**\n         * 現在ログイン中のユーザーアカウントの情報を更新する\n         * @param user_update_request ユーザー名 or パスワード\n         */\n        async updateUser(user_update_request: IUserUpdateRequest): Promise<void> {\n\n            // ユーザーアカウントの情報を更新する\n            await Users.updateUser(user_update_request);\n\n            // ユーザーアカウントの情報を再取得する\n            await this.fetchUser(true);\n\n            if (user_update_request.username !== undefined) {\n                Message.show('ユーザー名を更新しました。');\n            } else if (user_update_request.password !== undefined) {\n                Message.show('パスワードを更新しました。');\n            }\n        },\n\n        /**\n         * 現在ログイン中のユーザーアカウントのアイコン画像を更新する\n         * @param icon アイコンの File オブジェクト\n         */\n        async updateUserIcon(icon: File): Promise<void> {\n\n            // ユーザーアカウントのアイコン画像を更新する\n            await Users.updateUserIcon(icon);\n\n            // ユーザーアカウントの情報を再取得する\n            await this.fetchUser(true);\n\n            Message.show('アイコン画像を更新しました。');\n        },\n\n        /**\n         * 現在ログイン中のユーザーアカウントを削除する\n         */\n        async deleteUser(): Promise<void> {\n\n            // ユーザーアカウントを削除する\n            await Users.deleteUser();\n\n            // ログアウトする\n            this.logout(true);\n\n            Message.show('アカウントを削除しました。');\n        }\n    }\n});\n\nexport default useUserStore;\n","\nimport axios from 'axios';\n\nimport useUserStore from '@/store/UserStore';\nimport Utils from '@/utils';\n\n// ref: https://note.com/quoizunda/n/nb62e13e73499\n\n// Axios のインスタンスを作成\nconst axios_instance = axios.create();\n\n// HTTP リクエスト前に割り込んで行われる処理\naxios_instance.interceptors.request.use((config) => {\n\n    // API のベース URL を設定 (config.baseURL が指定されていない場合のみ)\n    if (config.baseURL === undefined) {\n        config.baseURL = Utils.api_base_url;\n    }\n\n    // アクセストークンが取得できたら（=ログインされていれば）\n    // 取得したアクセストークンを Authorization ヘッダーに Bearer トークンとしてセット\n    // これを忘れると（当然ながら）ログインしていない扱いになる\n    config.headers = config.headers || {};\n    const access_token = Utils.getAccessToken();\n    if (access_token !== null) {\n        config.headers['Authorization'] = `Bearer ${access_token}`;\n    }\n\n    // KonomiTV クライアントのバージョンを設定\n    // 今のところ使わないが、将来的にクライアントとサーバーを分離することを見据えて念のため\n    config.headers['X-KonomiTV-Version'] = Utils.version;\n\n    // タイムアウト時間を30秒に設定\n    config.timeout = 30 * 1000;\n\n    return config;\n});\n\n// HTTP リクエスト後に割り込んで行われる処理\naxios_instance.interceptors.response.use(\n    (response) => response,\n    (error) => {\n\n        // 401 Unauthorized が返ってきたら、ログアウトさせる\n        // JWT の有効期限が切れたときに発生する\n        if (axios.isAxiosError(error) && error.response && error.response.status === 401) {\n            const user_store = useUserStore();\n            user_store.logout(true);\n        }\n\n        // エラーをそのまま返す\n        return Promise.reject(error);\n    }\n);\n\nexport default axios_instance;\n","\nimport Vue from 'vue';\nimport { VSnackbar, VBtn, VIcon } from 'vuetify/lib';\nimport Vuetify from 'vuetify/lib/framework';\n\nVue.use(Vuetify);\n\n// vuetify-message-snackbar を使うのに必要\nVue.component('v-snackbar', VSnackbar);\nVue.component('v-btn', VBtn);\nVue.component('v-icon', VIcon);\n\nexport default new Vuetify({\n    theme: {\n        dark: true,\n        themes: {\n            dark: {\n                primary: '#E64F97',\n                secondary: '#E33157',\n                twitter: {\n                    base: '#4F82E6',\n                    lighten1: '#799FEC',\n                    lighten2: '#41A5F1',\n                },\n                gray: '#66514C',\n                black: '#110A09',\n                background: {\n                    base: '#1E1310',\n                    lighten1: '#2F221F',\n                    lighten2: '#433532',\n                    lighten3: '#4c3c38',\n                },\n                text: {\n                    base: '#FFEAEA',\n                    darken1: '#D9C7C7',\n                    darken2: '#8E7F7E',\n                    darken3: '#786968',\n                }\n            }\n        },\n        options: {\n            customProperties: true,\n        },\n    },\n});\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"login-container-wrapper d-flex align-center w-100 mb-13\"},[_c('v-card',{staticClass:\"login-container px-10 pt-8 pb-11 mx-auto background lighten-1\",attrs:{\"elevation\":\"10\",\"width\":\"100%\",\"max-width\":\"450\"}},[_c('v-card-title',{staticClass:\"login__logo flex-column justify-center\"},[_c('v-img',{attrs:{\"max-width\":\"250\",\"src\":\"/assets/images/logo.svg\"}}),_c('h4',{staticClass:\"mt-10\"},[_vm._v(\"ログイン\")])],1),_c('v-divider'),_c('v-form',{ref:\"login\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('v-text-field',{staticClass:\"mt-12\",attrs:{\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"hide-details\":\"\",\"autofocus\":\"\",\"dense\":_vm.is_form_dense},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}}),_c('v-text-field',{staticClass:\"mt-8\",attrs:{\"outlined\":\"\",\"placeholder\":\"パスワード\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"type\":_vm.password_showing ? 'text' : 'password',\"append-icon\":_vm.password_showing ? 'mdi-eye' : 'mdi-eye-off'},on:{\"click:append\":function($event){_vm.password_showing = !_vm.password_showing}},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('v-btn',{staticClass:\"login-button mt-5\",attrs:{\"color\":\"secondary\",\"depressed\":\"\",\"width\":\"100%\",\"height\":\"56\"},on:{\"click\":function($event){return _vm.login()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-in\"}}),_vm._v(\"ログイン \")],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('header',{staticClass:\"header\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"konomitv-logo ml-3 ml-md-6\",attrs:{\"to\":\"/tv/\"}},[_c('img',{staticClass:\"konomitv-logo__image\",attrs:{\"src\":\"/assets/images/logo.svg\",\"height\":\"21\"}})]),_c('v-spacer')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./Header.vue?vue&type=template&id=84897154&scoped=true&\"\nvar script = {}\nimport style0 from \"./Header.vue?vue&type=style&index=0&id=84897154&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"84897154\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_c('div',{staticClass:\"navigation-container elevation-8\"},[_c('nav',{staticClass:\"navigation\"},[_c('div',{staticClass:\"navigation-scroll\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/tv/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"テレビをみる\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/videos/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"ビデオをみる\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/timetable/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:calendar-ltr-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"番組表\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/captures/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:image-multiple-24-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"キャプチャ\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/watchlists/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"ic:round-playlist-play\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"ウォッチリスト\")])],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/histories/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:history-16-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"視聴履歴\")])],1),_c('v-spacer'),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"navigation__link\",attrs:{\"active-class\":\"navigation__link--active\",\"to\":\"/settings/\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"設定\")])],1),_c('a',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.top\",value:(_vm.is_update_available ? `アップデートがあります (version ${_vm.latest_version})` : ''),expression:\"is_update_available ? `アップデートがあります (version ${latest_version})` : ''\",modifiers:{\"top\":true}}],staticClass:\"navigation__link\",class:{\n                        'navigation__link--version': _vm.Utils.version.includes('-dev'),\n                        'navigation__link--highlight': _vm.is_update_available,\n                    },attrs:{\"active-class\":\"navigation__link--active\",\"href\":\"https://github.com/tsukumijima/KonomiTV\"}},[_c('Icon',{staticClass:\"navigation__link-icon\",attrs:{\"icon\":\"fluent:info-16-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"navigation__link-text\"},[_vm._v(\"version \"+_vm._s(_vm.Utils.version))])],1)],1)])]),_c('BottomNavigation')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-bottom-navigation',{staticClass:\"bottom-navigation-container elevation-12\",attrs:{\"color\":\"primary\",\"grow\":\"\"}},[_c('v-btn',{staticClass:\"bottom-navigation-button\",attrs:{\"to\":\"/tv/\"}},[_c('span',{staticClass:\"mt-1\"},[_vm._v(\"テレビをみる\")]),_c('Icon',{attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"30px\"}})],1),_c('v-btn',{staticClass:\"bottom-navigation-button\",attrs:{\"to\":\"/videos/\"}},[_c('span',{staticClass:\"mt-1\"},[_vm._v(\"ビデオをみる\")]),_c('Icon',{attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"30px\"}})],1),_c('v-btn',{staticClass:\"bottom-navigation-button\",attrs:{\"to\":\"/settings/\"}},[_c('span',{staticClass:\"mt-1\"},[_vm._v(\"設定\")]),_c('Icon',{attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"30px\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./BottomNavigation.vue?vue&type=template&id=1e3ca16e&scoped=true&\"\nvar script = {}\nimport style0 from \"./BottomNavigation.vue?vue&type=style&index=0&id=1e3ca16e&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1e3ca16e\",\n  null\n  \n)\n\nexport default component.exports","\nimport APIClient from '@/services/APIClient';\n\n\n/** バージョン情報を表すインターフェイス */\nexport interface IVersionInformation {\n    version: string;\n    latest_version: string;\n    environment: 'Windows' | 'Linux' | 'Linux-Docker';\n    backend: 'EDCB' | 'Mirakurun';\n    encoder: 'FFmpeg' | 'QSVEncC' | 'NVEncC' | 'VCEEncC' | 'rkmppenc';\n}\n\n\nclass Version {\n\n    /**\n     * バージョン情報を取得する\n     * @returns バージョン情報 or バージョン情報の取得に失敗した場合は null\n     */\n    static async fetchServerVersion(): Promise<IVersionInformation | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<IVersionInformation>('/version');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'バージョン情報を取得できませんでした。');\n            return null;\n        }\n\n        return response.data;\n    }\n}\n\nexport default Version;\n","\n\nimport Vue from 'vue';\n\nimport BottomNavigation from '@/components/BottomNavigation.vue';\nimport Version from '@/services/Version';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Navigation',\n    components: {\n        BottomNavigation,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n\n            // 最新のバージョン\n            latest_version: null as string | null,\n\n            // アップデートが利用可能か\n            is_update_available: false as boolean,\n        };\n    },\n    async created() {\n        try {\n\n            // バージョン情報を取得\n            const version_info = await Version.fetchServerVersion();\n            if (version_info === null) {\n                return;\n            }\n\n            this.latest_version = version_info.latest_version;\n\n            // 最新のサーバーバージョンが取得できなかった場合は中断\n            if (this.latest_version === null) {\n                return;\n            }\n\n            // もし現在のサーバーバージョン (-dev を除く) と最新のサーバーバージョンが異なるなら、アップデートが利用できる旨を表示する\n            // 現在のサーバーバージョンが -dev 付きで、かつ最新のサーバーバージョンが -dev なし の場合 (リリース版がリリースされたとき) も同様に表示する\n            // つまり開発版だと同じバージョンのリリース版がリリースされたときにしかアップデート通知が表示されない事になるが、ひとまずこれで…\n            if ((version_info.version.includes('-dev') === false && version_info.version !== version_info.latest_version) ||\n                (version_info.version.includes('-dev') === true && version_info.version.replace('-dev', '') === version_info.latest_version)) {\n                this.is_update_available = true;\n            }\n\n        } catch (error) {\n            throw new Error(error);  // エラー内容をコンソールに表示して終了\n        }\n    }\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Navigation.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Navigation.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Navigation.vue?vue&type=template&id=42f38e8c&scoped=true&\"\nimport script from \"./Navigation.vue?vue&type=script&lang=ts&\"\nexport * from \"./Navigation.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Navigation.vue?vue&type=style&index=0&id=42f38e8c&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"42f38e8c\",\n  null\n  \n)\n\nexport default component.exports","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport useUserStore from '@/store/UserStore';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Login',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            username: '' as string,\n            password: '' as string,\n            password_showing: false,\n        };\n    },\n    computed: {\n        // UserStore に this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useUserStore),\n    },\n    async created() {\n\n        // アカウント情報を更新\n        await this.userStore.fetchUser();\n\n        // 現在ログイン中の場合はアカウントページに遷移\n        if (this.userStore.is_logged_in) {\n            await this.$router.replace({path: '/settings/account'});\n        }\n    },\n    methods: {\n        async login() {\n\n            // ユーザー名またはパスワードが空\n            if (this.username === '' || this.password === '') {\n                this.$message.error('ユーザー名またはパスワードが空です。');\n                return;\n            }\n\n            // ログイン処理 (エラーハンドリング含む) を実行\n            const result = await this.userStore.login(this.username, this.password);\n            if (result === false) {\n                return;  // ログイン失敗\n            }\n\n            // アカウントページに遷移\n            // ブラウザバックでログインページに戻れないようにする\n            await this.$router.replace({path: '/settings/account'});\n        }\n    }\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=851c3dec&scoped=true&\"\nimport script from \"./Login.vue?vue&type=script&lang=ts&\"\nexport * from \"./Login.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Login.vue?vue&type=style&index=0&id=851c3dec&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"851c3dec\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_vm._m(0)],1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"d-flex justify-center align-center w-100\"},[_c('div',{staticClass:\"d-flex justify-center align-center flex-column\"},[_c('h1',[_vm._v(\"Not Found, or Under Development...\")]),_c('span',{staticClass:\"mt-4 text--text text--darken-1\"},[_vm._v(\"お探しのページは存在しないか、鋭意開発中です。\")])])])\n}]\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\n\nexport default Vue.extend({\n    name: 'NotFound',\n    components: {\n        Header,\n        Navigation,\n    },\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NotFound.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NotFound.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./NotFound.vue?vue&type=template&id=1310cfee&scoped=true&\"\nimport script from \"./NotFound.vue?vue&type=script&lang=ts&\"\nexport * from \"./NotFound.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./NotFound.vue?vue&type=style&index=0&id=1310cfee&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1310cfee\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"register-container-wrapper d-flex align-center w-100 mb-13\"},[_c('v-card',{staticClass:\"register-container px-10 pt-8 pb-11 mx-auto background lighten-1\",attrs:{\"elevation\":\"10\",\"width\":\"100%\",\"max-width\":\"450\"}},[_c('v-card-title',{staticClass:\"register__logo flex-column justify-center\"},[_c('v-img',{attrs:{\"max-width\":\"250\",\"src\":\"/assets/images/logo.svg\"}}),_c('h4',{staticClass:\"mt-10\"},[_vm._v(\"アカウントを作成\")])],1),_c('v-divider'),_c('v-form',{ref:\"register\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('v-text-field',{staticClass:\"mt-12\",attrs:{\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"autofocus\":\"\",\"dense\":_vm.is_form_dense,\"rules\":[_vm.username_validation]},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}}),_c('v-text-field',{staticStyle:{\"margin-top\":\"2px\"},attrs:{\"outlined\":\"\",\"placeholder\":\"パスワード\",\"dense\":_vm.is_form_dense,\"type\":_vm.password_showing ? 'text' : 'password',\"append-icon\":_vm.password_showing ? 'mdi-eye' : 'mdi-eye-off',\"rules\":[_vm.password_validation]},on:{\"click:append\":function($event){_vm.password_showing = !_vm.password_showing}},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('v-btn',{staticClass:\"register-button mt-5\",attrs:{\"color\":\"secondary\",\"depressed\":\"\",\"width\":\"100%\",\"height\":\"56\"},on:{\"click\":function($event){return _vm.register()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-add-20-filled\",\"height\":\"24\"}}),_vm._v(\"アカウントを作成 \")],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport useUserStore from '@/store/UserStore';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Register',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            username: null as string | null,\n            username_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'ユーザー名を入力してください。';\n                if (/^.{2,}$/.test(value) === false) return 'ユーザー名は2文字以上で入力してください。';\n                return true;\n            },\n            password: null as string | null,\n            password_showing: true,  // アカウント作成時はデフォルトでパスワードを表示する\n            password_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'パスワードを入力してください。';\n                // 正規表現の参考: https://qiita.com/grrrr/items/0b35b5c1c98eebfa5128\n                if (/^[a-zA-Z0-9!-/:-@¥[-`{-~]{4,}$/.test(value) === false) return 'パスワードは4文字以上の半角英数記号を入力してください。';\n                return true;\n            },\n        };\n    },\n    computed: {\n        // UserStore に this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useUserStore),\n    },\n    async created() {\n\n        // アカウント情報を更新\n        await this.userStore.fetchUser();\n\n        // 現在ログイン中の場合はアカウントページに遷移\n        if (this.userStore.is_logged_in) {\n            await this.$router.replace({path: '/settings/account'});\n        }\n    },\n    methods: {\n        async register() {\n\n            // すべてのバリデーションが通過したときのみ\n            // ref: https://qiita.com/Hijiri_Ishi/items/56cac99c8f3806a6fa24\n            if ((this.$refs.register as any).validate() === false) return;\n            if (this.username === null || this.password === null) return;\n\n            // アカウント作成 & ログイン処理 (エラーハンドリング含む) を実行\n            const result = await this.userStore.register(this.username, this.password);\n            if (result === false) {\n                return;  // ログイン失敗\n            }\n\n            // アカウントページに遷移\n            // ブラウザバックでアカウント作成画面に戻れないようにする\n            this.$message.success('アカウントを作成しました。');\n            await this.$router.replace({path: '/settings/account'});\n        }\n    }\n});\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Register.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Register.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Register.vue?vue&type=template&id=c3cecea2&scoped=true&\"\nimport script from \"./Register.vue?vue&type=script&lang=ts&\"\nexport * from \"./Register.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Register.vue?vue&type=style&index=0&id=c3cecea2&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c3cecea2\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"25px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"アカウント\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[(_vm.userStore.user === null)?_c('div',{staticClass:\"account\"},[_c('div',{staticClass:\"account-wrapper\"},[_c('img',{staticClass:\"account__icon\",attrs:{\"src\":\"/assets/images/account-icon-default.png\"}}),_c('div',{staticClass:\"account__info\"},[_c('div',{staticClass:\"account__info-name\"},[_c('span',{staticClass:\"account__info-name-text\"},[_vm._v(\"ログインしていません\")])]),_c('span',{staticClass:\"account__info-id\"},[_vm._v(\"Not logged in\")])])]),_c('v-btn',{staticClass:\"account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"140\",\"height\":\"56\",\"depressed\":\"\",\"to\":\"/login/\"}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-in\"}}),_vm._v(\"ログイン \")],1)],1):_vm._e(),(_vm.userStore.user !== null)?_c('div',{staticClass:\"account\"},[_c('div',{staticClass:\"account-wrapper\"},[_c('img',{staticClass:\"account__icon\",attrs:{\"src\":_vm.userStore.user_icon_url}}),_c('div',{staticClass:\"account__info\"},[_c('div',{staticClass:\"account__info-name\"},[_c('span',{staticClass:\"account__info-name-text\"},[_vm._v(_vm._s(_vm.userStore.user.name))]),(_vm.userStore.user.is_admin)?_c('span',{staticClass:\"account__info-admin\"},[_vm._v(\"管理者\")]):_vm._e()]),_c('span',{staticClass:\"account__info-id\"},[_vm._v(\"User ID: \"+_vm._s(_vm.userStore.user.id))])])]),_c('v-btn',{staticClass:\"account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"140\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.userStore.logout()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fa:sign-out\"}}),_vm._v(\"ログアウト \")],1)],1):_vm._e(),(_vm.userStore.is_logged_in === false)?_c('div',{staticClass:\"account-register\"},[_c('div',{staticClass:\"account-register__heading\"},[_vm._v(\" KonomiTV アカウントにログインすると、\"),_c('br'),_vm._v(\"より便利な機能が使えます！ \")]),_c('div',{staticClass:\"account-register__feature\"},[_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"ニコニコ実況にコメントする\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"テレビを見ながらニコニコ実況にコメントできます。別途、ニコニコアカウントとの連携が必要です。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fa-brands:twitter\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"Twitter 連携機能\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"テレビを見ながら Twitter にツイートしたり、検索したツイートをリアルタイムで表示できます。別途、Twitter アカウントとの連携が必要です。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fluent:arrow-sync-20-filled\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"設定をデバイス間で同期\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"ピン留めしたチャンネルなど、ブラウザに保存されている各種設定をブラウザやデバイスをまたいで同期できます。\")])])],1),_c('div',{staticClass:\"account-feature\"},[_c('Icon',{staticClass:\"account-feature__icon\",attrs:{\"icon\":\"fa-solid:sliders-h\"}}),_c('div',{staticClass:\"account-feature__info\"},[_c('span',{staticClass:\"account-feature__info-heading\"},[_vm._v(\"環境設定をブラウザから変更\")]),_c('span',{staticClass:\"account-feature__info-text\"},[_vm._v(\"管理者権限があれば、環境設定をブラウザから変更できます。一番最初に作成されたアカウントには、自動で管理者権限が付与されます。\")])])],1)]),_c('div',{staticClass:\"account-register__description\"},[_vm._v(\" KonomiTV アカウントの作成に必要なものは\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\"ユーザー名とパスワードだけです。\"),_c('br'),_vm._v(\" アカウントはローカルにインストールした\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\" KonomiTV サーバーごとに保存されます。\"),_c('br'),_vm._v(\" 外部のサービスには保存されませんので、ご安心ください。\"),_c('br')]),_c('v-btn',{staticClass:\"account-register__button\",attrs:{\"color\":\"secondary\",\"width\":\"100%\",\"max-width\":\"250\",\"height\":\"50\",\"depressed\":\"\",\"to\":\"/register/\"}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-add-20-filled\",\"height\":\"24\"}}),_vm._v(\"アカウントを作成 \")],1)],1):_vm._e(),(_vm.userStore.is_logged_in === true)?_c('div',[_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"sync_settings\"}},[_vm._v(\"設定をデバイス間で同期する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"sync_settings\"}},[_vm._v(\" KonomiTV では、設定を同じアカウントでログインしているデバイス間で同期できます。\"),_c('br'),_vm._v(\" 同期をオンにすると、同期をオンにしているすべてのデバイスで共通の設定が使えます。ピン留めチャンネルやハッシュタグリストなども同期されます。\"),_c('br'),_vm._v(\" ただし、デバイス固有の設定（画質設定など）は、同期後も各デバイスで個別に反映されます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"sync_settings\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.sync_settings),callback:function ($$v) {_vm.sync_settings=$$v},expression:\"sync_settings\"}})],1),_c('v-dialog',{attrs:{\"max-width\":\"530\"},model:{value:(_vm.sync_settings_dialog),callback:function ($$v) {_vm.sync_settings_dialog=$$v},expression:\"sync_settings_dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"justify-center\"},[_vm._v(\"設定データの競合\")]),_c('v-card-text',[_vm._v(\" このデバイスの設定と、サーバーに保存されている設定が競合しています。\"),_c('br'),_vm._v(\" 一度上書きすると、元に戻すことはできません。慎重に選択してください。\"),_c('br')]),_c('div',{staticClass:\"d-flex flex-column px-4 pb-4 settings__conflict-dialog\"},[_c('v-btn',{staticClass:\"settings__save-button error--text text--lighten-1\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.overrideServerSettingsFromClient()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:document-arrow-up-16-filled\",\"height\":\"22px\"}}),_vm._v(\" サーバーに保存されている設定を、\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\"このデバイスの設定で上書きする \")],1),_c('v-btn',{staticClass:\"settings__save-button error--text text--lighten-1 mt-3\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.overrideClientSettingsFromServer()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:document-arrow-down-16-filled\",\"height\":\"22px\"}}),_vm._v(\" このデバイスの設定を、\"),_c('br',{staticClass:\"smartphone-vertical-only\"}),_vm._v(\"サーバーに保存されている設定で上書きする \")],1),_c('v-btn',{staticClass:\"settings__save-button mt-3\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){_vm.sync_settings_dialog = false}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:dismiss-16-filled\",\"height\":\"22px\"}}),_vm._v(\" キャンセル \")],1)],1)],1)],1),_c('v-form',{ref:\"settings_username\",staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ユーザー名\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントのユーザー名を設定します。アルファベットだけでなく日本語や記号も使えます。\"),_c('br'),_vm._v(\" 同じ KonomiTV サーバー上の他のアカウントと同じユーザー名には変更できません。\"),_c('br')]),_c('v-text-field',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"placeholder\":\"ユーザー名\",\"dense\":_vm.is_form_dense,\"rules\":[_vm.settings_username_validation]},model:{value:(_vm.settings_username),callback:function ($$v) {_vm.settings_username=$$v},expression:\"settings_username\"}})],1),_c('v-btn',{staticClass:\"settings__save-button\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountInfo('username')}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"ユーザー名を更新 \")],1),_c('v-form',{staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"アイコン画像\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントのアイコン画像を設定します。\"),_c('br'),_vm._v(\" アップロードされた画像は自動で 400×400 の正方形にリサイズされます。\"),_c('br')]),_c('v-file-input',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"アイコン画像を選択\",\"dense\":_vm.is_form_dense,\"accept\":\"image/jpeg, image/png\",\"prepend-icon\":\"\",\"prepend-inner-icon\":\"mdi-paperclip\"},model:{value:(_vm.settings_icon),callback:function ($$v) {_vm.settings_icon=$$v},expression:\"settings_icon\"}})],1),_c('v-btn',{staticClass:\"settings__save-button mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountIcon()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"アイコン画像を更新 \")],1),_c('v-form',{ref:\"settings_password\",staticClass:\"settings__item\",on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"新しいパスワード\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" KonomiTV アカウントの新しいパスワードを設定します。\"),_c('br')]),_c('v-text-field',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"placeholder\":\"新しいパスワード\",\"dense\":_vm.is_form_dense,\"type\":_vm.settings_password_showing ? 'text' : 'password',\"append-icon\":_vm.settings_password_showing ? 'mdi-eye' : 'mdi-eye-off',\"rules\":[_vm.settings_password_validation]},on:{\"click:append\":function($event){_vm.settings_password_showing = !_vm.settings_password_showing}},model:{value:(_vm.settings_password),callback:function ($$v) {_vm.settings_password=$$v},expression:\"settings_password\"}})],1),_c('v-btn',{staticClass:\"settings__save-button\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.updateAccountInfo('password')}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:save-16-filled\",\"height\":\"24px\"}}),_vm._v(\"パスワードを更新 \")],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item mt-6\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"アカウントを削除\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 現在ログインしている KonomiTV アカウントを削除します。\"),_c('br'),_c('b',[_vm._v(\"アカウントに紐づくすべてのデータが削除されます。\")]),_vm._v(\"元に戻すことはできません。\"),_c('br')])]),_c('v-dialog',{attrs:{\"max-width\":\"385\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"}},'v-btn',attrs,false),on),[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:delete-16-filled\",\"height\":\"24px\"}}),_vm._v(\"アカウントを削除 \")],1)]}}],null,false,974850237),model:{value:(_vm.account_delete_confirm_dialog),callback:function ($$v) {_vm.account_delete_confirm_dialog=$$v},expression:\"account_delete_confirm_dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"justify-center\"},[_vm._v(\"本当にアカウントを削除しますか？\")]),_c('v-card-text',[_vm._v(\" アカウントに紐づくすべてのデータが削除されます。元に戻すことはできません。\"),_c('br'),_vm._v(\" 本当にアカウントを削除しますか？ \")]),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"text\",\"text\":\"\"},on:{\"click\":function($event){_vm.account_delete_confirm_dialog = false}}},[_vm._v(\"キャンセル\")]),_c('v-btn',{attrs:{\"color\":\"error\",\"text\":\"\"},on:{\"click\":function($event){return _vm.deleteAccount()}}},[_vm._v(\"削除\")])],1)],1)],1)],1):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('v-card',{staticClass:\"settings-container d-flex px-5 py-5 mx-auto background\",attrs:{\"elevation\":\"0\",\"width\":\"100%\",\"max-width\":\"1000\"}},[_c('div',[_c('v-navigation-drawer',{staticClass:\"settings-navigation flex-shrink-0 background\",attrs:{\"permanent\":\"\",\"width\":\"195\",\"height\":\"auto\"}},[_c('v-list-item',{staticClass:\"px-4\"},[_c('v-list-item-content',[_c('h1',[_vm._v(\"設定\")])])],1),_c('v-list',{staticClass:\"mt-2 px-0\",attrs:{\"nav\":\"\"}},[_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/general\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 3px\"},attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"全般\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/caption\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:subtitles-16-regular\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"字幕\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/capture\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:image-multiple-16-regular\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"キャプチャ\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/account\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"アカウント\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/jikkyo\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 2px\"},attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"ニコニコ実況\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/twitter\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 1px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"Twitter\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/environment\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:toolbox-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"環境設定\")])],1)],1)],1)],1)],1),_c('v-card',{staticClass:\"settings ml-5 px-7 py-7 lighten-1\",attrs:{\"width\":\"100%\"}},[_vm._t(\"default\")],2)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\n\n// 設定のベース画面なので、ロジックは基本置かない\nexport default Vue.extend({\n    name: 'Settings-Base',\n    components: {\n        Header,\n        Navigation,\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Base.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Base.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Base.vue?vue&type=template&id=16c50bdf&scoped=true&\"\nimport script from \"./Base.vue?vue&type=script&lang=ts&\"\nexport * from \"./Base.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Base.vue?vue&type=style&index=0&id=16c50bdf&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"16c50bdf\",\n  null\n  \n)\n\nexport default component.exports","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport Settings from '@/services/Settings';\nimport useSettingsStore from '@/store/SettingsStore';\nimport useUserStore from '@/store/UserStore';\nimport Utils from '@/utils';\nimport Base from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-Account',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            // ローディング中かどうか\n            is_loading: true,\n\n            // ユーザー名とパスワード\n            // ログイン画面やアカウント作成画面の data と同一のもの\n            settings_username: null as string | null,\n            settings_username_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'ユーザー名を入力してください。';\n                if (/^.{2,}$/.test(value) === false) return 'ユーザー名は2文字以上で入力してください。';\n                return true;\n            },\n            settings_password: null as string | null,\n            settings_password_showing: true,  // アカウント情報変更時はデフォルトでパスワードを表示する\n            settings_password_validation: (value: string | null) => {\n                if (value === '' || value === null) return 'パスワードを入力してください。';\n                // 正規表現の参考: https://qiita.com/grrrr/items/0b35b5c1c98eebfa5128\n                if (/^[a-zA-Z0-9!-/:-@¥[-`{-~]{4,}$/.test(value) === false) return 'パスワードは4文字以上の半角英数記号を入力してください。';\n                return true;\n            },\n\n            // アップロードするアイコン画像\n            settings_icon: null as File | null,\n\n            // アカウント削除確認ダイヤログ\n            account_delete_confirm_dialog: null as boolean | null,\n\n            // 設定を同期するかの設定値\n            sync_settings: useSettingsStore().settings.sync_settings as boolean,\n\n            // 設定を同期するときのダイヤログ\n            sync_settings_dialog: false,\n        };\n    },\n    computed: {\n        // SettingsStore / UserStore に this.settingsStore / this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore, useUserStore),\n    },\n    async created() {\n\n        // アカウント情報を更新\n        await this.userStore.fetchUser();\n\n        // ローディング状態を解除\n        this.is_loading = false;\n    },\n    watch: {\n        // sync_settings の値の変更を監視する\n        async sync_settings() {\n\n            // 同期がオンになった & ダイヤログが表示されていない\n            if (this.sync_settings === true && this.sync_settings_dialog === false) {\n\n                // 同期対象の設定キーのみで設定データをまとめ直す\n                const sync_settings = this.settingsStore.getSyncableClientSettings();\n\n                // 同期対象のこのクライアントの設定を再度 JSON にする（文字列比較のため）\n                const sync_settings_json = JSON.stringify(sync_settings);\n\n                // サーバーから設定データをダウンロード\n                // 一度オブジェクトに戻したものをを再度 JSON にする（文字列比較のため）\n                const server_sync_settings = await Settings.fetchClientSettings();\n                if (server_sync_settings === null) {\n                    this.$message.error('サーバーから設定データを取得できませんでした。');\n                    return;\n                }\n                const server_sync_settings_json = JSON.stringify(server_sync_settings);\n\n                // このクライアントの設定とサーバーに保存されている設定が一致しない（=競合している）\n                if (sync_settings_json !== server_sync_settings_json) {\n\n                    // 一度同期のスイッチをオフにして、クライアントとサーバーどちらの設定を使うのかを選択させるダイヤログを表示\n                    this.sync_settings_dialog = true;\n                    this.sync_settings = false;\n\n                // このクライアントの設定とサーバーに保存されている設定が一致する\n                } else {\n\n                    // 特に設定の同期をオンにしても問題ないので、そのまま有効にする\n                    this.settingsStore.settings.sync_settings = true;\n                }\n\n            // 同期がオフになった & ダイヤログが表示されていない\n            } else if (this.sync_settings === false && this.sync_settings_dialog === false) {\n                this.settingsStore.settings.sync_settings = false;\n            }\n        }\n    },\n    methods: {\n\n        // このクライアントの設定でサーバー上の設定を上書きする\n        async overrideServerSettingsFromClient() {\n\n            // 強制的にこのクライアントの設定をサーバーに同期\n            await this.settingsStore.syncClientSettingsToServer(true);\n\n            // 設定の同期を有効化\n            this.settingsStore.settings.sync_settings = true;\n            this.sync_settings = true;\n\n            // ダイヤログを閉じる\n            this.sync_settings_dialog = false;\n        },\n\n        // サーバー上の設定でこのクライアントの設定を上書きする\n        async overrideClientSettingsFromServer() {\n\n            // 強制的にサーバーに保存されている設定データをこのクライアントに同期する\n            // 設定の同期を有効化する前に実行しておくのが重要\n            await this.settingsStore.syncClientSettingsFromServer(true);\n\n            // 設定の同期を有効化\n            // 値を変更した時点で設定データがサーバーにアップロードされてしまうので、\n            // それよりも前に syncClientSettingsFromServer(true) でサーバー上の設定データを同期させておく必要がある\n            // さもなければ、サーバー上の設定データがこのクライアントの設定で上書きされてしまい、overrideServerSettingsFromClient() と同じ挙動になってしまう\n            this.settingsStore.settings.sync_settings = true;\n            this.sync_settings = true;\n\n            // ダイヤログを閉じる\n            this.sync_settings_dialog = false;\n        },\n\n        async updateAccountInfo(update_type: 'username' | 'password') {\n\n            // すべてのバリデーションが通過したときのみ\n            // ref: https://qiita.com/Hijiri_Ishi/items/56cac99c8f3806a6fa24\n            if (update_type === 'username') {\n                if ((this.$refs.settings_username as any).validate() === false) return;\n            } else {\n                if ((this.$refs.settings_password as any).validate() === false) return;\n            }\n\n            // アカウント情報の更新処理 (エラーハンドリングを含む) を実行\n            if (update_type === 'username') {\n                if (this.settings_username === null) return;\n                await this.userStore.updateUser({username: this.settings_username});\n            } else {\n                if (this.settings_password === null) return;\n                await this.userStore.updateUser({password: this.settings_password});\n            }\n        },\n\n        async updateAccountIcon() {\n\n            // アイコン画像が選択されていないなら更新しない\n            if (this.settings_icon === null) {\n                this.$message.error('アップロードする画像を選択してください！');\n                return;\n            }\n\n            // アイコン画像の更新処理 (エラーハンドリングを含む) を実行\n            await this.userStore.updateUserIcon(this.settings_icon);\n        },\n\n        async deleteAccount() {\n\n            // ダイヤログを閉じる\n            this.account_delete_confirm_dialog = false;\n\n            // アカウント削除処理 (エラーハンドリングを含む) を実行\n            await this.userStore.deleteUser();\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Account.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Account.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Account.vue?vue&type=template&id=59547fa0&scoped=true&\"\nimport script from \"./Account.vue?vue&type=script&lang=ts&\"\nexport * from \"./Account.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Account.vue?vue&type=style&index=0&id=59547fa0&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"59547fa0\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:subtitles-16-regular\",\"width\":\"25px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"字幕\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item\"},[_c('label',{staticClass:\"settings__item-heading\"},[_vm._v(\"字幕のフォント\")]),_c('label',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーで字幕表示をオンにしているときの、字幕のフォントを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.caption_font},model:{value:(_vm.settingsStore.settings.caption_font),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"caption_font\", $$v)},expression:\"settingsStore.settings.caption_font\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"always_border_caption_text\"}},[_vm._v(\"字幕の文字を常に縁取りする\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"always_border_caption_text\"}},[_vm._v(\" 字幕表示時、縁取りをオンにすると、字幕が見やすくきれいになります。とくに理由がなければ、オンにしておくのがおすすめです。\"),_c('br'),_vm._v(\" この設定がオフのときも、字幕データ側で縁取りが指定されていれば、オンのときと同様に縁取り付きで描画されます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"always_border_caption_text\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.always_border_caption_text),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"always_border_caption_text\", $$v)},expression:\"settingsStore.settings.always_border_caption_text\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"specify_caption_background_color\"}},[_vm._v(\"字幕の背景色を指定する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"specify_caption_background_color\"}},[_vm._v(\" 字幕表示時、背景色を自分で指定するか設定できます。\"),_c('br'),_vm._v(\" この設定をオフのときは、字幕データ側で指定されている背景色で描画します。とくに理由がなければ、オフにしておくのがおすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"specify_caption_background_color\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.specify_caption_background_color),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"specify_caption_background_color\", $$v)},expression:\"settingsStore.settings.specify_caption_background_color\"}})],1),_c('div',{staticClass:\"settings__item\",class:{'settings__item--disabled': _vm.settingsStore.settings.specify_caption_background_color === false}},[_c('label',{staticClass:\"settings__item-heading\"},[_vm._v(\"字幕の背景色\")]),_c('label',{staticClass:\"settings__item-label\"},[_vm._v(\" 上の [字幕の背景色を指定する] をオンにしているときのみ有効です。透明度 (アルファチャンネル) を 0 に設定すれば、字幕の背景を非表示にできます。\"),_c('br')]),_c('div',{ref:\"caption_background_color\",staticClass:\"settings__item-label\"},[_c('v-color-picker',{staticClass:\"settings__item-form\",attrs:{\"hide-details\":\"\",\"flat\":true,\"show-alpha\":true,\"show-swatches\":false,\"hide-inputs\":false,\"width\":690,\"canvas-height\":80,\"disabled\":_vm.settingsStore.settings.specify_caption_background_color === false},model:{value:(_vm.settingsStore.settings.caption_background_color),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"caption_background_color\", $$v)},expression:\"settingsStore.settings.caption_background_color\"}})],1)]),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_show_superimpose\"}},[_vm._v(\"テレビをみるときに文字スーパーを表示する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_show_superimpose\"}},[_vm._v(\" 文字スーパーは、緊急地震速報の赤テロップや、NHK BS のニュース速報のテロップなどで利用されています。とくに理由がなければ、オンにしておくのがおすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_show_superimpose\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.tv_show_superimpose),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_show_superimpose\", $$v)},expression:\"settingsStore.settings.tv_show_superimpose\"}})],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils from '@/utils';\nimport Base from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-Caption',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            // 字幕のフォントの選択肢\n            caption_font: [\n                {'text': 'Windows TV ゴシック', 'value': 'Windows TV Gothic'},\n                {'text': 'Windows TV 丸ゴシック', 'value': 'Windows TV MaruGothic'},\n                {'text': 'Windows TV 太丸ゴシック', 'value': 'Windows TV FutoMaruGothic'},\n                {'text': 'ヒラギノTV丸ゴ', 'value': 'Hiragino TV Sans Rd S'},\n                {'text': '新丸ゴ ARIB', 'value': 'TT-ShinMGo-regular'},\n                {'text': 'Rounded M+ 1m for ARIB', 'value': 'Rounded M+ 1m for ARIB'},\n                {'text': 'Noto Sans JP', 'value': 'Noto Sans JP Caption'},\n                {'text': 'デフォルトのフォント', 'value': 'sans-serif'},\n            ],\n        };\n    },\n    computed: {\n        // SettingsStore に this.settingsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore),\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Caption.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Caption.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Caption.vue?vue&type=template&id=62dda79a&\"\nimport script from \"./Caption.vue?vue&type=script&lang=ts&\"\nexport * from \"./Caption.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:image-multiple-16-regular\",\"width\":\"26px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"キャプチャ\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item settings__item--switch settings__item--sync-disabled\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"capture_copy_to_clipboard\"}},[_vm._v(\"キャプチャをクリップボードにコピーする\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"capture_copy_to_clipboard\"}},[_vm._v(\" この設定をオンにすると、撮ったキャプチャ画像がクリップボードにもコピーされます。\"),_c('br'),_vm._v(\" クリップボードの履歴をサポートしていない OS では、この設定をオンにしてキャプチャを撮ると、以前のクリップボードが上書きされます。注意してください。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"capture_copy_to_clipboard\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.capture_copy_to_clipboard),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"capture_copy_to_clipboard\", $$v)},expression:\"settingsStore.settings.capture_copy_to_clipboard\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"キャプチャの保存先\")]),_c('div',{staticClass:\"settings__item-label\"},[_c('p',[_vm._v(\" キャプチャした画像をブラウザでダウンロードするか、KonomiTV サーバーにアップロードするかを設定します。\"),_c('br'),_vm._v(\" ブラウザでのダウンロードと、KonomiTV サーバーへのアップロードを両方同時に行うこともできます。\"),_c('br')]),_c('p',[_vm._v(\" ブラウザでダウンロードすると、視聴中のデバイスのダウンロードフォルダに保存されます。\"),_c('br'),_vm._v(\" 視聴中のデバイスにそのまま保存されるためシンプルですが、保存先のフォルダを変更できないこと、PC 版 Chrome では毎回ダウンロードバーが表示されてしまうことがデメリットです。\"),_c('br')]),_c('p',[_vm._v(\" KonomiTV サーバーにアップロードすると、環境設定で指定されたキャプチャ保存フォルダに保存されます。視聴したデバイスにかかわらず、今までに撮ったキャプチャをひとつのフォルダにまとめて保存できます。\"),_c('br'),_vm._v(\" 他のデバイスでキャプチャを見るにはキャプチャ保存フォルダをネットワークに共有する必要があること、スマホ・タブレットではネットワーク上のフォルダへのアクセスがやや面倒なことがデメリットです。\"),_c('br')])]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.capture_save_mode},model:{value:(_vm.settingsStore.settings.capture_save_mode),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"capture_save_mode\", $$v)},expression:\"settingsStore.settings.capture_save_mode\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"字幕表示時のキャプチャの保存モード\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 字幕表示時、キャプチャした画像に字幕を合成するかを設定します。\"),_c('br'),_vm._v(\" 映像のみのキャプチャと、字幕を合成したキャプチャを両方同時に保存することもできます。\"),_c('br'),_vm._v(\" なお、字幕非表示時は、常に映像のみ (+コメント付きキャプチャではコメントを合成して) 保存されます。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.capture_caption_mode},model:{value:(_vm.settingsStore.settings.capture_caption_mode),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"capture_caption_mode\", $$v)},expression:\"settingsStore.settings.capture_caption_mode\"}})],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils from '@/utils';\nimport Base from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-Capture',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            // キャプチャの保存先の選択肢\n            capture_save_mode: [\n                {'text': 'ブラウザでダウンロード', 'value': 'Browser'},\n                {'text': 'KonomiTV サーバーにアップロード', 'value': 'UploadServer'},\n                {'text': 'ブラウザでのダウンロードと、KonomiTV サーバーへのアップロードを両方行う', 'value': 'Both'},\n            ],\n\n            // 字幕が表示されているときのキャプチャの保存モードの選択肢\n            capture_caption_mode: [\n                {'text': '映像のみのキャプチャを保存する', 'value': 'VideoOnly'},\n                {'text': '字幕を合成したキャプチャを保存する', 'value': 'CompositingCaption'},\n                {'text': '映像のみのキャプチャと、字幕を合成したキャプチャを両方保存する', 'value': 'Both'},\n            ],\n        };\n    },\n    computed: {\n        // SettingsStore に this.settingsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore),\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Capture.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Capture.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Capture.vue?vue&type=template&id=4e92cae5&\"\nimport script from \"./Capture.vue?vue&type=script&lang=ts&\"\nexport * from \"./Capture.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fluent:toolbox-20-filled\",\"width\":\"22px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"環境設定\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"鋭意開発中…\")])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport Base from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-Environment',\n    components: {\n        Base,\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Environment.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Environment.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Environment.vue?vue&type=template&id=f0e0c626&\"\nimport script from \"./Environment.vue?vue&type=script&lang=ts&\"\nexport * from \"./Environment.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"19px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"全般\")])],1),_c('div',{staticClass:\"settings__content\"},[_c('div',{staticClass:\"settings__item settings__item--sync-disabled\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"テレビのデフォルトのストリーミング画質\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" テレビをライブストリーミングするときのデフォルトの画質を設定します。\"),_c('br'),_vm._v(\" ストリーミング画質はプレイヤーの設定からいつでも切り替えられます。\"),_c('br')]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" [1080p (60fps)] は、通常 30fps (60i) の映像を補間することで、ほかの画質よりも滑らか（ぬるぬる）な映像で再生できます。ただし、再生負荷が少し高くなります。\"),_c('br'),_vm._v(\" [1080p (60fps)] で視聴するときは、QSVEncC などのハードウェアエンコーダーの利用をおすすめします。FFmpeg (ソフトウェアエンコーダー) では CPU 使用率が高くなり、再生に支障が出ることがあります。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tv_streaming_quality},model:{value:(_vm.settingsStore.settings.tv_streaming_quality),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_streaming_quality\", $$v)},expression:\"settingsStore.settings.tv_streaming_quality\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch settings__item--sync-disabled\",class:{'settings__item--disabled': _vm.PlayerUtils.isHEVCVideoSupported() === false}},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_data_saver_mode\"}},[_vm._v(\"テレビを通信節約モードで視聴する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_data_saver_mode\"}},[_vm._v(\" 通信節約モードでは、H.265 / HEVC という圧縮率の高いコーデックを使い、画質はほぼそのまま、通信量を通常の 2/3 程度に抑えながら視聴できます。ただし、再生負荷が高くなります。\"),_c('br'),_vm._v(\" 通信節約モードで視聴するときは、QSVEncC などのハードウェアエンコーダーの利用をおすすめします。FFmpeg (ソフトウェアエンコーダー) ではまともに再生できない可能性が高いです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_data_saver_mode\",\"inset\":\"\",\"hide-details\":\"\",\"disabled\":_vm.PlayerUtils.isHEVCVideoSupported() === false},model:{value:(_vm.settingsStore.settings.tv_data_saver_mode),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_data_saver_mode\", $$v)},expression:\"settingsStore.settings.tv_data_saver_mode\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch settings__item--sync-disabled\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"tv_low_latency_mode\"}},[_vm._v(\"テレビを低遅延で視聴する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"tv_low_latency_mode\"}},[_vm._v(\" 低遅延ストリーミングをオンにすると、\"),_c('b',[_vm._v(\"放送波との遅延を最短 0.9 秒に抑えて視聴できます。\")]),_c('br'),_vm._v(\" また、約 3 秒以上遅延したときに少しだけ再生速度を早める (1.1x) ことで、滑らかにストリーミングの遅れを取り戻します。\"),_c('br'),_vm._v(\" 宅外視聴などのネットワークが不安定になりがちな環境では、低遅延ストリーミングをオフにしてみると、映像のカクつきを改善できるかもしれません。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"tv_low_latency_mode\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.tv_low_latency_mode),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_low_latency_mode\", $$v)},expression:\"settingsStore.settings.tv_low_latency_mode\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"デフォルトのパネルの表示状態\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 視聴画面を開いたときに、右側のパネルをどう表示するかを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.panel_display_state},model:{value:(_vm.settingsStore.settings.panel_display_state),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"panel_display_state\", $$v)},expression:\"settingsStore.settings.panel_display_state\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"テレビをみるときにデフォルトで表示されるパネルのタブ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" テレビの視聴画面を開いたときに、右側のパネルで最初に表示されるタブを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tv_panel_active_tab},model:{value:(_vm.settingsStore.settings.tv_panel_active_tab),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tv_panel_active_tab\", $$v)},expression:\"settingsStore.settings.tv_panel_active_tab\"}})],1),_c('v-divider',{staticClass:\"mt-6\"}),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"設定をエクスポート\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" このデバイス（ブラウザ）に保存されている設定データを、エクスポート（ダウンロード）できます。\"),_c('br'),_vm._v(\" ダウンロードした設定データ (KonomiTV-Settings.json) は、[設定をインポート] からインポートできます。異なるサーバーの KonomiTV を同じ設定で使いたいときなどに使ってください。\"),_c('br')])]),_c('v-btn',{staticClass:\"settings__save-button mt-4\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.exportSettings()}}},[_c('Icon',{staticClass:\"mr-3\",attrs:{\"icon\":\"fa6-solid:download\",\"height\":\"19px\"}}),_vm._v(\"設定をエクスポート \")],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"設定をインポート\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" [設定をエクスポート] でダウンロードした設定データを、このデバイス（ブラウザ）にインポートできます。\"),_c('br'),_vm._v(\" 設定をインポートすると、\"),_c('b',[_vm._v(\"現在のデバイス設定はすべて上書きされます。\")]),_vm._v(\"元に戻すことはできません。\"),_c('br'),_vm._v(\" 設定のデバイス間同期がオンのときは、\"),_c('b',[_vm._v(\"同期が有効なすべてのデバイスに反映されます。\")]),_vm._v(\"十分ご注意ください。\"),_c('br')]),_c('v-file-input',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"設定データ (KonomiTV-Settings.json) を選択\",\"dense\":_vm.is_form_dense,\"accept\":\"application/json\",\"prepend-icon\":\"\",\"prepend-inner-icon\":\"mdi-paperclip\"},model:{value:(_vm.import_settings_file),callback:function ($$v) {_vm.import_settings_file=$$v},expression:\"import_settings_file\"}})],1),_c('v-btn',{staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.importSettings()}}},[_c('Icon',{staticClass:\"mr-3\",attrs:{\"icon\":\"fa6-solid:upload\",\"height\":\"19px\"}}),_vm._v(\"設定をインポート \")],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading error--text text--lighten-1\"},[_vm._v(\"設定を初期状態にリセット\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" このデバイス（ブラウザ）に保存されている設定データを、初期状態のデフォルト値にリセットできます。\"),_c('br'),_vm._v(\" 設定をリセットすると、元に戻すことはできません。\"),_c('br'),_vm._v(\" 設定のデバイス間同期がオンのときは、\"),_c('b',[_vm._v(\"同期が有効なすべてのデバイスに反映されます。\")]),_vm._v(\"十分ご注意ください。\"),_c('br')])]),_c('v-btn',{staticClass:\"settings__save-button error mt-5\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.resetSettings()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"material-symbols:device-reset-rounded\",\"height\":\"23px\"}}),_vm._v(\"設定をリセット \")],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils, { PlayerUtils } from '@/utils';\nimport Base from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-General',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            PlayerUtils: PlayerUtils,\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            // テレビのデフォルトのストリーミング画質の選択肢\n            tv_streaming_quality: [\n                {'text': '1080p (60fps) （約3.24GB/h / 平均7.2Mbps）', 'value': '1080p-60fps'},\n                {'text': '1080p （約2.31GB/h / 平均5.1Mbps）', 'value': '1080p'},\n                {'text': '810p （約1.92GB/h / 平均4.2Mbps）', 'value': '810p'},\n                {'text': '720p （約1.33GB/h / 平均3.0Mbps）', 'value': '720p'},\n                {'text': '540p （約1.00GB/h / 平均2.2Mbps）', 'value': '540p'},\n                {'text': '480p （約0.74GB/h / 平均1.6Mbps）', 'value': '480p'},\n                {'text': '360p （約0.40GB/h / 平均0.9Mbps）', 'value': '360p'},\n                {'text': '240p （約0.23GB/h / 平均0.5Mbps）', 'value': '240p'},\n            ],\n\n            // デフォルトのパネルの表示状態の選択肢\n            panel_display_state: [\n                {'text': '前回の状態を復元する', 'value': 'RestorePreviousState'},\n                {'text': '常に表示する', 'value': 'AlwaysDisplay'},\n                {'text': '常に折りたたむ', 'value': 'AlwaysFold'},\n            ],\n\n            // テレビをみるときにデフォルトで表示されるパネルのタブの選択肢\n            tv_panel_active_tab: [\n                {'text': '番組情報タブ', 'value': 'Program'},\n                {'text': 'チャンネルタブ', 'value': 'Channel'},\n                {'text': 'コメントタブ', 'value': 'Comment'},\n                {'text': 'Twitter タブ', 'value': 'Twitter'},\n            ],\n\n            // 選択された設定データ (KonomiTV-Settings.json) が入る\n            import_settings_file: null as File | null,\n        };\n    },\n    computed: {\n        // SettingsStore に this.settingsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore),\n    },\n    methods: {\n\n        // 設定データをエクスポートする\n        exportSettings() {\n\n            // 設定データを JSON 化して取得\n            const settings_json = JSON.stringify(this.settingsStore.settings, null, 4);\n\n            // ダウンロードさせるために一旦 Blob にしてから、KonomiTV-Settings.json としてダウンロード\n            const settings_json_blob = new Blob([settings_json], {type: 'application/json'});\n            Utils.downloadBlobData(settings_json_blob, 'KonomiTV-Settings.json');\n            this.$message.success('設定をエクスポートしました。');\n        },\n\n        // 設定データをインポートする\n        async importSettings() {\n\n            // 設定データが選択されていないときは実行しない\n            if (this.import_settings_file === null) {\n                this.$message.error('インポートする設定データを選択してください！');\n                return;\n            }\n\n            // 設定データのインポートを実行\n            const result = await this.settingsStore.importClientSettings(this.import_settings_file);\n            if (result === true) {\n                this.$message.success('設定をインポートしました。');\n                window.setTimeout(() => this.$router.go(0), 300);\n            } else {\n                this.$message.error('設定データが不正なため、インポートできませんでした。');\n            }\n        },\n\n        // 設定データをリセットする\n        async resetSettings() {\n            await this.settingsStore.resetClientSettings();\n            this.$message.success('設定をリセットしました。');\n            window.setTimeout(() => this.$router.go(0), 300);\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./General.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./General.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./General.vue?vue&type=template&id=56d9fb9a&\"\nimport script from \"./General.vue?vue&type=script&lang=ts&\"\nexport * from \"./General.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('v-card',{staticClass:\"settings-container d-flex px-5 py-5 mx-auto background\",attrs:{\"elevation\":\"0\",\"width\":\"100%\",\"max-width\":\"1000\"}},[_c('v-navigation-drawer',{staticClass:\"settings-navigation flex-shrink-0 background\",attrs:{\"permanent\":\"\",\"width\":\"100%\",\"height\":\"auto\"}},[_c('v-list-item',{staticClass:\"px-1\"},[_c('v-list-item-content',[_c('h1',[_vm._v(\"設定\")])])],1),_c('v-list',{staticClass:\"mt-2 px-0\",attrs:{\"nav\":\"\"}},[_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/general\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 3px\"},attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"全般\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/caption\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:subtitles-16-regular\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"字幕\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/capture\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:image-multiple-16-regular\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"キャプチャ\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/account\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"アカウント\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/jikkyo\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 2px\"},attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"ニコニコ実況\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/twitter\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{staticStyle:{\"padding\":\"0 1px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"Twitter\")])],1)],1),_c('v-list-item',{staticClass:\"px-4\",attrs:{\"link\":\"\",\"color\":\"primary\",\"to\":\"/settings/environment\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:toolbox-20-filled\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"環境設定\")])],1)],1),_c('v-list-item',{staticClass:\"px-4 settings-navigation-version\",class:{'settings-navigation-version--highlight': _vm.is_update_available},attrs:{\"link\":\"\",\"color\":\"primary\",\"href\":\"https://github.com/tsukumijima/KonomiTV\"}},[_c('v-list-item-icon',{staticClass:\"mr-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:info-16-regular\",\"width\":\"26px\"}})],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\" version \"+_vm._s(_vm.Utils.version)+_vm._s(_vm.is_update_available ? ' (Update Available)' : '')+\" \")])],1)],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport Version from '@/services/Version';\nimport Utils from '@/utils';\n\nexport default Vue.extend({\n    name: 'Settings-Index',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n\n            // 最新のバージョン\n            latest_version: null as string | null,\n\n            // アップデートが利用可能か\n            is_update_available: false as boolean,\n        };\n    },\n    async created() {\n        try {\n\n            // バージョン情報を取得\n            const version_info = await Version.fetchServerVersion();\n            if (version_info === null) {\n                return;\n            }\n\n            this.latest_version = version_info.latest_version;\n\n            // 最新のサーバーバージョンが取得できなかった場合は中断\n            if (this.latest_version === null) {\n                return;\n            }\n\n            // もし現在のサーバーバージョン (-dev を除く) と最新のサーバーバージョンが異なるなら、アップデートが利用できる旨を表示する\n            // 現在のサーバーバージョンが -dev 付きで、かつ最新のサーバーバージョンが -dev なし の場合 (リリース版がリリースされたとき) も同様に表示する\n            // つまり開発版だと同じバージョンのリリース版がリリースされたときにしかアップデート通知が表示されない事になるが、ひとまずこれで…\n            if ((version_info.version.includes('-dev') === false && version_info.version !== version_info.latest_version) ||\n                (version_info.version.includes('-dev') === true && version_info.version.replace('-dev', '') === version_info.latest_version)) {\n                this.is_update_available = true;\n            }\n\n        } catch (error) {\n            throw new Error(error);  // エラー内容をコンソールに表示して終了\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Index.vue?vue&type=template&id=b5f7dc0a&scoped=true&\"\nimport script from \"./Index.vue?vue&type=script&lang=ts&\"\nexport * from \"./Index.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=b5f7dc0a&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b5f7dc0a\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"19px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"ニコニコ実況\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[(_vm.userStore.user === null || _vm.userStore.user.niconico_user_id === null)?_c('div',{staticClass:\"niconico-account niconico-account--anonymous\"},[_c('div',{staticClass:\"niconico-account-wrapper\"},[_c('Icon',{staticClass:\"flex-shrink-0\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"45px\"}}),_c('div',{staticClass:\"niconico-account__info ml-4\"},[_c('div',{staticClass:\"niconico-account__info-name\"},[_c('span',{staticClass:\"niconico-account__info-name-text\"},[_vm._v(\"ニコニコアカウントと連携していません\")])]),_c('span',{staticClass:\"niconico-account__info-description\"},[_vm._v(\" ニコニコアカウントと連携すると、テレビを見ながらニコニコ実況にコメントできるようになります。 \")])])],1),_c('v-btn',{staticClass:\"niconico-account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"130\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.loginNiconicoAccount()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-connected-20-filled\",\"height\":\"26\"}}),_vm._v(\"連携する \")],1)],1):_vm._e(),(_vm.userStore.user !== null && _vm.userStore.user.niconico_user_id !== null)?_c('div',{staticClass:\"niconico-account\"},[_c('div',{staticClass:\"niconico-account-wrapper\"},[_c('img',{staticClass:\"niconico-account__icon\",attrs:{\"src\":_vm.userStore.user_niconico_icon_url}}),_c('div',{staticClass:\"niconico-account__info\"},[_c('div',{staticClass:\"niconico-account__info-name\"},[_c('span',{staticClass:\"niconico-account__info-name-text\"},[_vm._v(_vm._s(_vm.userStore.user.niconico_user_name)+\" と連携しています\")])]),_c('span',{staticClass:\"niconico-account__info-description\"},[_c('span',{staticClass:\"mr-2\",staticStyle:{\"white-space\":\"nowrap\"}},[_vm._v(\"Niconico User ID:\")]),_c('a',{staticClass:\"mr-2\",attrs:{\"href\":`https://www.nicovideo.jp/user/${_vm.userStore.user.niconico_user_id}`,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.userStore.user.niconico_user_id))]),(_vm.userStore.user.niconico_user_premium == true)?_c('span',{staticClass:\"secondary--text\"},[_vm._v(\"(Premium)\")]):_vm._e()])])]),_c('v-btn',{staticClass:\"niconico-account__login ml-auto\",attrs:{\"color\":\"secondary\",\"width\":\"130\",\"height\":\"56\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.logoutNiconicoAccount()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-disconnected-20-filled\",\"height\":\"26\"}}),_vm._v(\"連携解除 \")],1)],1):_vm._e(),_c('div',{staticClass:\"settings__item mt-7\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントのミュート設定\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 表示したくないコメントを、映像上やコメントリストに表示しないようにミュートできます。\"),_c('br')])]),_c('v-btn',{staticClass:\"settings__save-button mt-4\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){_vm.comment_mute_settings_modal = !_vm.comment_mute_settings_modal}}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"19px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"コメントのミュート設定を開く\")])],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントの速さ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーに流れるコメントの速さを設定します。\"),_c('br'),_vm._v(\" たとえば 1.2 に設定すると、コメントが 1.2 倍速く流れます。\"),_c('br')]),_c('v-slider',{staticClass:\"settings__item-form\",attrs:{\"ticks\":\"always\",\"thumb-label\":\"\",\"hide-details\":\"\",\"step\":0.1,\"min\":0.5,\"max\":2},model:{value:(_vm.settingsStore.settings.comment_speed_rate),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"comment_speed_rate\", $$v)},expression:\"settingsStore.settings.comment_speed_rate\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"コメントの文字サイズ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" プレイヤーに流れるコメントの文字サイズの基準値を設定します。\"),_c('br'),_vm._v(\" 実際の文字サイズは画面サイズに合わせて調整されます。デフォルトの文字サイズは 34px です。\"),_c('br')]),_c('v-slider',{staticClass:\"settings__item-form\",attrs:{\"ticks\":\"always\",\"thumb-label\":\"\",\"hide-details\":\"\",\"min\":20,\"max\":60},model:{value:(_vm.settingsStore.settings.comment_font_size),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"comment_font_size\", $$v)},expression:\"settingsStore.settings.comment_font_size\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"close_comment_form_after_sending\"}},[_vm._v(\"コメント送信後にコメント入力フォームを閉じる\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"close_comment_form_after_sending\"}},[_vm._v(\" この設定をオンにすると、コメントを送信した後に、コメント入力フォームが自動で閉じるようになります。\"),_c('br'),_vm._v(\" コメント入力フォームが表示されたままだと、大半のショートカットキーが文字入力と競合して使えなくなります。とくに理由がなければ、オンにしておくのがおすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"close_comment_form_after_sending\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.close_comment_form_after_sending),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"close_comment_form_after_sending\", $$v)},expression:\"settingsStore.settings.close_comment_form_after_sending\"}})],1)],1),_c('CommentMuteSettings',{model:{value:(_vm.comment_mute_settings_modal),callback:function ($$v) {_vm.comment_mute_settings_modal=$$v},expression:\"comment_mute_settings_modal\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('v-dialog',{attrs:{\"max-width\":\"770\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.comment_mute_settings_modal),callback:function ($$v) {_vm.comment_mute_settings_modal=$$v},expression:\"comment_mute_settings_modal\"}},[_c('v-card',{staticClass:\"comment-mute-settings\"},[_c('v-card-title',{staticClass:\"px-5 pt-5 pb-3 d-flex align-center font-weight-bold\",staticStyle:{\"height\":\"60px\"}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"26px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"コメントのミュート設定\")]),_c('v-spacer'),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"d-flex align-center rounded-circle cursor-pointer px-2 py-2\",on:{\"click\":function($event){_vm.comment_mute_settings_modal = false}}},[_c('Icon',{attrs:{\"icon\":\"fluent:dismiss-12-filled\",\"width\":\"23px\",\"height\":\"23px\"}})],1)],1),_c('div',{staticClass:\"px-5 pb-5\"},[_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:sliders-h\",\"width\":\"24px\",\"height\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"クイック設定\")])],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_vulgar_comments\"}},[_vm._v(\" 露骨な表現を含むコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_vulgar_comments\"}},[_vm._v(\" 性的な単語などの露骨・下品な表現を含むコメントを、一括でミュートするかを設定します。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_vulgar_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_vulgar_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_vulgar_comments\", $$v)},expression:\"settingsStore.settings.mute_vulgar_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_abusive_discriminatory_prejudiced_comments\"}},[_vm._v(\" ネガティブな表現、差別的な表現、政治的に偏った表現を含むコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_abusive_discriminatory_prejudiced_comments\"}},[_vm._v(\" 『死ね』『殺す』などのネガティブな表現、特定の国や人々への差別的な表現、政治的に偏った表現を含むコメントを、一括でミュートするかを設定します。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_abusive_discriminatory_prejudiced_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_abusive_discriminatory_prejudiced_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_abusive_discriminatory_prejudiced_comments\", $$v)},expression:\"settingsStore.settings.mute_abusive_discriminatory_prejudiced_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_big_size_comments\"}},[_vm._v(\" 文字サイズが大きいコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_big_size_comments\"}},[_vm._v(\" 通常より大きい文字サイズで表示されるコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" 文字サイズが大きいコメントには迷惑なコメントが多いです。基本的にはオンにしておくのがおすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_big_size_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_big_size_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_big_size_comments\", $$v)},expression:\"settingsStore.settings.mute_big_size_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_fixed_comments\"}},[_vm._v(\" 映像の上下に固定表示されるコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_fixed_comments\"}},[_vm._v(\" 映像の上下に固定された状態で表示されるコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" 固定表示されるコメントが煩わしい方におすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_fixed_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_fixed_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_fixed_comments\", $$v)},expression:\"settingsStore.settings.mute_fixed_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_colored_comments\"}},[_vm._v(\" 色付きのコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_colored_comments\"}},[_vm._v(\" 白以外の色で表示される色付きのコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" この設定をオンにしておくと、目立つ色のコメントを一掃できます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_colored_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_colored_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_colored_comments\", $$v)},expression:\"settingsStore.settings.mute_colored_comments\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"mute_consecutive_same_characters_comments\"}},[_vm._v(\" 8文字以上同じ文字が連続しているコメントをミュートする \")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"mute_consecutive_same_characters_comments\"}},[_vm._v(\" 『wwwwwwwwwww』『あばばばばばばばばば』など、8文字以上同じ文字が連続しているコメントを、一括でミュートするかを設定します。\"),_c('br'),_vm._v(\" しばしばあるテンプレコメントが煩わしい方におすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"mute_consecutive_same_characters_comments\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.mute_consecutive_same_characters_comments),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"mute_consecutive_same_characters_comments\", $$v)},expression:\"settingsStore.settings.mute_consecutive_same_characters_comments\"}})],1),_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:comment-dismiss-20-filled\",\"width\":\"24px\"}}),_c('span',{staticClass:\"ml-2 mr-2\"},[_vm._v(\"ミュート済みのキーワード\")]),_c('v-btn',{staticClass:\"ml-auto\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.settingsStore.settings.muted_comment_keywords.push({match: 'partial', pattern: ''})}}},[_c('Icon',{attrs:{\"icon\":\"fluent:add-12-filled\",\"height\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"追加\")])],1)],1),_c('div',{staticClass:\"muted-comment-items\"},_vm._l((_vm.settingsStore.settings.muted_comment_keywords),function(muted_comment_keyword,index){return _c('div',{key:muted_comment_keyword.id,staticClass:\"muted-comment-item\"},[_c('v-text-field',{staticClass:\"muted-comment-item__input\",attrs:{\"type\":\"search\",\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"ミュートするキーワードを入力\"},model:{value:(_vm.settingsStore.settings.muted_comment_keywords[index].pattern),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings.muted_comment_keywords[index], \"pattern\", $$v)},expression:\"settingsStore.settings.muted_comment_keywords[index].pattern\"}}),_c('v-select',{staticClass:\"muted-comment-item__match-type\",attrs:{\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"items\":_vm.muted_comment_keyword_match_type},model:{value:(_vm.settingsStore.settings.muted_comment_keywords[index].match),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings.muted_comment_keywords[index], \"match\", $$v)},expression:\"settingsStore.settings.muted_comment_keywords[index].match\"}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"muted-comment-item__delete-button\",on:{\"click\":function($event){_vm.settingsStore.settings.muted_comment_keywords\n                            .splice(_vm.settingsStore.settings.muted_comment_keywords.indexOf(muted_comment_keyword), 1)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:delete-16-filled\",\"width\":\"20px\"}})],1)],1)}),0),_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold mt-4\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-prohibited-20-filled\",\"width\":\"24px\"}}),_c('span',{staticClass:\"ml-2 mr-2\"},[_vm._v(\"ミュート済みのニコニコユーザー ID\")]),_c('v-btn',{staticClass:\"ml-auto\",attrs:{\"depressed\":\"\"},on:{\"click\":function($event){return _vm.settingsStore.settings.muted_niconico_user_ids.push('')}}},[_c('Icon',{attrs:{\"icon\":\"fluent:add-12-filled\",\"height\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"追加\")])],1)],1),_c('div',{staticClass:\"muted-comment-items\"},_vm._l((_vm.settingsStore.settings.muted_niconico_user_ids),function(muted_niconico_user_id,index){return _c('div',{key:muted_niconico_user_id.id,staticClass:\"muted-comment-item\"},[_c('v-text-field',{staticClass:\"muted-comment-item__input\",attrs:{\"type\":\"search\",\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\",\"placeholder\":\"ミュートするニコニコユーザー ID を入力\"},model:{value:(_vm.settingsStore.settings.muted_niconico_user_ids[index]),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings.muted_niconico_user_ids, index, $$v)},expression:\"settingsStore.settings.muted_niconico_user_ids[index]\"}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"muted-comment-item__delete-button\",on:{\"click\":function($event){_vm.settingsStore.settings.muted_niconico_user_ids\n                            .splice(_vm.settingsStore.settings.muted_niconico_user_ids.indexOf(muted_niconico_user_id), 1)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:delete-16-filled\",\"width\":\"20px\"}})],1)],1)}),0)])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue, { PropType } from 'vue';\n\nimport useSettingsStore from '@/store/SettingsStore';\n\nexport default Vue.extend({\n    name: 'CommentMuteSettings',\n    // カスタム v-model を実装する\n    // ref: https://jp.vuejs.org/v2/guide/components-custom-events.html\n    model: {\n        prop: 'showing',  // v-model で渡された値が \"showing\" props に入る\n        event: 'change',  // \"change\" イベントで親コンポーネントに反映\n    },\n    props: {\n        // コメントのミュート設定のモーダルを表示するか\n        showing: {\n            type: Boolean as PropType<Boolean>,\n            required: true,\n        }\n    },\n    data() {\n        return {\n\n            // インターバルのタイマー ID\n            interval_timer_id: 0,\n\n            // コメントのミュート設定のモーダルを表示するか\n            comment_mute_settings_modal: false,\n\n            // ミュート済みのキーワードのマッチタイプ\n            muted_comment_keyword_match_type: [\n                {text: '部分一致', value: 'partial'},\n                {text: '前方一致', value: 'forward'},\n                {text: '後方一致', value: 'backward'},\n                {text: '完全一致', value: 'exact'},\n                {text: '正規表現', value: 'regex'},\n            ],\n        };\n    },\n    computed: {\n        // SettingsStore に this.settingsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore),\n    },\n    watch: {\n\n        // showing (親コンポーネント側) の変更を監視し、変更されたら comment_mute_settings_modal に反映する\n        showing() {\n            this.comment_mute_settings_modal = this.showing as boolean;\n        },\n\n        // comment_mute_settings_modal (子コンポーネント側) の変更を監視し、変更されたら this.$emit() で親コンポーネントに伝える\n        comment_mute_settings_modal() {\n            this.$emit('change', this.comment_mute_settings_modal);\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommentMuteSettings.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommentMuteSettings.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CommentMuteSettings.vue?vue&type=template&id=533463f6&scoped=true&\"\nimport script from \"./CommentMuteSettings.vue?vue&type=script&lang=ts&\"\nexport * from \"./CommentMuteSettings.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CommentMuteSettings.vue?vue&type=style&index=0&id=533463f6&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"533463f6\",\n  null\n  \n)\n\nexport default component.exports","\nimport APIClient from '@/services/APIClient';\n\n\n/** ニコニコアカウントと連携するための認証 URL を表すインターフェイス */\nexport interface INiconicoAuthURL {\n    authorization_url: string;\n}\n\n\nclass Niconico {\n\n    /**\n     * ニコニコアカウントと連携するための認証 URL を取得する\n     * @returns 認証 URL or 認証 URL の取得に失敗した場合は null\n     */\n    static async fetchAuthorizationURL(): Promise<string | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<INiconicoAuthURL>('/niconico/auth');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'ニコニコアカウントとの連携用の認証 URL を取得できませんでした。');\n            return null;\n        }\n\n        return response.data.authorization_url;\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントに紐づくニコニコアカウントとの連携を解除する\n     * @returns 連携解除に成功した場合は true, 失敗した場合は false\n     */\n    static async logoutAccount(): Promise<boolean> {\n\n        // API リクエストを実行\n        const response = await APIClient.delete('/niconico/logout');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'ニコニコアカウントとの連携を解除できませんでした。');\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport default Niconico;\n","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport CommentMuteSettings from '@/components/Settings/CommentMuteSettings.vue';\nimport Niconico from '@/services/Niconico';\nimport useSettingsStore from '@/store/SettingsStore';\nimport useUserStore from '@/store/UserStore';\nimport Utils from '@/utils';\nimport Base from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-Jikkyo',\n    components: {\n        Base,\n        CommentMuteSettings,\n    },\n    data() {\n        return {\n\n            // コメントのミュート設定のモーダルを表示するか\n            comment_mute_settings_modal: false,\n\n            // ローディング中かどうか\n            is_loading: true,\n        };\n    },\n    computed: {\n        // SettingsStore / UserStore に this.settingsStore / this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore, useUserStore),\n    },\n    async created() {\n\n        // アカウント情報を更新\n        await this.userStore.fetchUser();\n\n        // ローディング状態を解除\n        this.is_loading = false;\n\n        // もしハッシュ (# から始まるフラグメント) に何か指定されていたら、\n        // OAuth 連携のコールバックの結果が入っている可能性が高いので、パースを試みる\n        // アカウント情報更新より後にしないと Snackbar がうまく表示されない\n        if (location.hash !== '') {\n            const params = new URLSearchParams(location.hash.replace('#', ''));\n            if (params.get('status') !== null && params.get('detail') !== null) {\n                // コールバックの結果を取得できたので、OAuth 連携の結果を画面に通知する\n                const authorization_status = parseInt(params.get('status')!);\n                const authorization_detail = params.get('detail')!;\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\n                // URL からフラグメントを削除\n                // ref: https://stackoverflow.com/a/49373716/17124142\n                history.replaceState(null, '', ' ');\n            }\n        }\n    },\n    methods: {\n        async loginNiconicoAccount() {\n\n            // ログインしていない場合はエラーにする\n            if (this.userStore.is_logged_in === false) {\n                this.$message.warning('連携をはじめるには、KonomiTV アカウントにログインしてください。');\n                return;\n            }\n\n            // ニコニコアカウントと連携するための認証 URL を取得\n            const authorization_url = await Niconico.fetchAuthorizationURL();\n            if (authorization_url === null) {\n                return;\n            }\n\n            // モバイルデバイスではポップアップが事実上使えない (特に Safari ではブロックされてしまう) ので、素直にリダイレクトで実装する\n            if (Utils.isMobileDevice() === true) {\n                location.href = authorization_url;\n                return;\n            }\n\n            // OAuth 連携のため、認証 URL をポップアップウインドウで開く\n            // window.open() の第2引数はユニークなものにしておくと良いらしい\n            // ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1 (大変参考になりました)\n            const popup_window = window.open(authorization_url, 'KonomiTV-OAuthPopup', Utils.getWindowFeatures());\n            if (popup_window === null) {\n                this.$message.error('ポップアップウインドウを開けませんでした。');\n                return;\n            }\n\n            // 認証完了 or 失敗後、ポップアップウインドウから送信される文字列を受信\n            const onMessage = async (event) => {\n\n                // すでにウインドウが閉じている場合は実行しない\n                if (popup_window.closed) return;\n\n                // 受け取ったオブジェクトに KonomiTV-OAuthPopup キーがない or そもそもオブジェクトではない際は実行しない\n                // ブラウザの拡張機能から結構余計な message が飛んでくるっぽい…。\n                if (Utils.typeof(event.data) !== 'object') return;\n                if (('KonomiTV-OAuthPopup' in event.data) === false) return;\n\n                // 認証は完了したので、ポップアップウインドウを閉じ、リスナーを解除する\n                if (popup_window) popup_window.close();\n                window.removeEventListener('message', onMessage);\n\n                // ステータスコードと詳細メッセージを取得\n                const authorization_status = event.data['KonomiTV-OAuthPopup']['status'] as number;\n                const authorization_detail = event.data['KonomiTV-OAuthPopup']['detail'] as string;\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\n            };\n\n            // postMessage() を受信するリスナーを登録\n            window.addEventListener('message', onMessage);\n        },\n\n        async onOAuthCallbackReceived(authorization_status: number, authorization_detail: string) {\n            console.log(`NiconicoAuthCallbackAPI: Status: ${authorization_status} / Detail: ${authorization_detail}`);\n\n            // OAuth 連携に失敗した\n            if (authorization_status !== 200) {\n                if (authorization_detail.startsWith('Authorization was denied (access_denied)')) {\n                    this.$message.error('ニコニコアカウントとの連携がキャンセルされました。');\n                } else if (authorization_detail.startsWith('Failed to get access token (HTTP Error ')) {\n                    const error = authorization_detail.replace('Failed to get access token ', '');\n                    this.$message.error(`アクセストークンの取得に失敗しました。${error}`);\n                } else if (authorization_detail.startsWith('Failed to get access token (Connection Timeout)')) {\n                    this.$message.error('アクセストークンの取得に失敗しました。ニコニコで障害が発生している可能性があります。');\n                } else if (authorization_detail.startsWith('Failed to get user information (HTTP Error ')) {\n                    const error = authorization_detail.replace('Failed to get user information ', '');\n                    this.$message.error(`ニコニコアカウントのユーザー情報の取得に失敗しました。${error}`);\n                } else if (authorization_detail.startsWith('Failed to get user information (Connection Timeout)')) {\n                    this.$message.error('ニコニコアカウントのユーザー情報の取得に失敗しました。ニコニコで障害が発生している可能性があります。');\n                } else {\n                    this.$message.error(`ニコニコアカウントとの連携に失敗しました。(${authorization_detail})`);\n                }\n                return;\n            }\n\n            // アカウント情報を強制的に更新\n            await this.userStore.fetchUser(true);\n\n            this.$message.success('ニコニコアカウントと連携しました。');\n        },\n\n        async logoutNiconicoAccount() {\n\n            // ニコニコアカウント連携解除 API にリクエスト\n            const result = await Niconico.logoutAccount();\n            if (result === false) {\n                return;\n            }\n\n            // アカウント情報を強制的に更新\n            await this.userStore.fetchUser(true);\n\n            this.$message.success('ニコニコアカウントとの連携を解除しました。');\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Jikkyo.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Jikkyo.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Jikkyo.vue?vue&type=template&id=ba993db6&scoped=true&\"\nimport script from \"./Jikkyo.vue?vue&type=script&lang=ts&\"\nexport * from \"./Jikkyo.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Jikkyo.vue?vue&type=style&index=0&id=ba993db6&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ba993db6\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('Base',[_c('h2',{staticClass:\"settings__heading\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"settings__back-button\",attrs:{\"to\":\"/settings/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('Icon',{attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"22px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"Twitter\")])],1),_c('div',{staticClass:\"settings__content\",class:{'settings__content--loading': _vm.is_loading}},[_c('div',{staticClass:\"twitter-accounts\"},[(_vm.userStore.user !== null && _vm.userStore.user.twitter_accounts.length > 0)?_c('div',{staticClass:\"twitter-accounts__heading\"},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:person-board-20-filled\",\"height\":\"30\"}}),_vm._v(\"連携中のアカウント \")],1):_vm._e(),(_vm.userStore.user === null || _vm.userStore.user.twitter_accounts.length === 0)?_c('div',{staticClass:\"twitter-accounts__guide\"},[_c('Icon',{staticClass:\"flex-shrink-0\",attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"45px\"}}),_c('div',{staticClass:\"ml-4\"},[_c('div',{staticClass:\"font-weight-bold text-h6\"},[_vm._v(\"Twitter アカウントと連携していません\")]),_c('div',{staticClass:\"text--text text--darken-1 text-subtitle-2 mt-1\"},[_vm._v(\" Twitter アカウントと連携すると、テレビを見ながら Twitter にツイートしたり、ほかの実況ツイートをリアルタイムで表示できるようになります。 \")])])],1):_vm._e(),_vm._l(((_vm.userStore.user !== null ? _vm.userStore.user.twitter_accounts: [])),function(twitter_account){return _c('div',{key:twitter_account.id,staticClass:\"twitter-account\"},[_c('img',{staticClass:\"twitter-account__icon\",attrs:{\"src\":twitter_account.icon_url}}),_c('div',{staticClass:\"twitter-account__info\"},[_c('div',{staticClass:\"twitter-account__info-name\"},[_c('span',{staticClass:\"twitter-account__info-name-text\"},[_vm._v(_vm._s(twitter_account.name))])]),_c('span',{staticClass:\"twitter-account__info-screen-name\"},[_vm._v(\"@\"+_vm._s(twitter_account.screen_name))])]),_c('v-btn',{staticClass:\"twitter-account__logout ml-auto\",attrs:{\"width\":\"124\",\"height\":\"52\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.logoutTwitterAccount(twitter_account.screen_name)}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-disconnected-20-filled\",\"height\":\"24\"}}),_vm._v(\"連携解除 \")],1)],1)}),_c('v-btn',{staticClass:\"twitter-account__login\",attrs:{\"color\":\"secondary\",\"max-width\":\"250\",\"height\":\"50\",\"depressed\":\"\"},on:{\"click\":function($event){return _vm.loginTwitterAccount()}}},[_c('Icon',{staticClass:\"mr-2\",attrs:{\"icon\":\"fluent:plug-connected-20-filled\",\"height\":\"24\"}}),_vm._v(\"連携するアカウントを追加 \")],1)],2),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"fold_panel_after_sending_tweet\"}},[_vm._v(\"ツイート送信後にパネルを折りたたむ\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"fold_panel_after_sending_tweet\"}},[_vm._v(\" この設定をオンにすると、ツイートを送信した後に、パネルが自動で折りたたまれます。\"),_c('br'),_vm._v(\" ツイートするとき以外はできるだけ映像を大きくして見たい方におすすめです。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"fold_panel_after_sending_tweet\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.fold_panel_after_sending_tweet),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"fold_panel_after_sending_tweet\", $$v)},expression:\"settingsStore.settings.fold_panel_after_sending_tweet\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"reset_hashtag_when_program_switches\"}},[_vm._v(\"番組が切り替わったときにハッシュタグフォームをリセットする\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"reset_hashtag_when_program_switches\"}},[_vm._v(\" チャンネルを切り替えたときや、視聴中の番組が終了し次の番組の放送が開始されたときに、ハッシュタグフォームをリセットするかを設定します。\"),_c('br'),_vm._v(\" この設定をオンにしておけば、「誤って前番組のハッシュタグをつけたまま次番組の実況ツイートをしてしまう」といったミスを回避できます。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"reset_hashtag_when_program_switches\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.reset_hashtag_when_program_switches),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"reset_hashtag_when_program_switches\", $$v)},expression:\"settingsStore.settings.reset_hashtag_when_program_switches\"}})],1),_c('div',{staticClass:\"settings__item settings__item--switch\"},[_c('label',{staticClass:\"settings__item-heading\",attrs:{\"for\":\"auto_add_watching_channel_hashtag\"}},[_vm._v(\"視聴中のチャンネルに対応する局タグを自動で追加する\")]),_c('label',{staticClass:\"settings__item-label\",attrs:{\"for\":\"auto_add_watching_channel_hashtag\"}},[_vm._v(\" この設定をオンにすると、視聴中のチャンネルに対応する局タグ (#nhk, #tokyomx など) がハッシュタグフォームに自動で追加されます。\"),_c('br'),_vm._v(\" 現時点で、局タグは三大首都圏の地上波・BS の一部チャンネル・AT-X にのみ対応しています。\"),_c('br')]),_c('v-switch',{staticClass:\"settings__item-switch\",attrs:{\"id\":\"auto_add_watching_channel_hashtag\",\"inset\":\"\",\"hide-details\":\"\"},model:{value:(_vm.settingsStore.settings.auto_add_watching_channel_hashtag),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"auto_add_watching_channel_hashtag\", $$v)},expression:\"settingsStore.settings.auto_add_watching_channel_hashtag\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"デフォルトで表示される Twitter タブ内のタブ\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" 視聴画面を開いたときに、パネルの Twitter タブの中で最初に表示されるタブを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.twitter_active_tab},model:{value:(_vm.settingsStore.settings.twitter_active_tab),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"twitter_active_tab\", $$v)},expression:\"settingsStore.settings.twitter_active_tab\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ツイートにつけるハッシュタグの位置\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" ツイート本文から見て、ハッシュタグをどの位置につけてツイートするかを設定します。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tweet_hashtag_position},model:{value:(_vm.settingsStore.settings.tweet_hashtag_position),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tweet_hashtag_position\", $$v)},expression:\"settingsStore.settings.tweet_hashtag_position\"}})],1),_c('div',{staticClass:\"settings__item\"},[_c('div',{staticClass:\"settings__item-heading\"},[_vm._v(\"ツイートするキャプチャに番組タイトルの透かしを描画する\")]),_c('div',{staticClass:\"settings__item-label\"},[_vm._v(\" ツイートするキャプチャに、透かしとして視聴中の番組タイトルを描画するかを設定します。\"),_c('br'),_vm._v(\" 透かしの描画位置は 左上・右上・左下・右下 から選択できます。\"),_c('br')]),_c('v-select',{staticClass:\"settings__item-form\",attrs:{\"outlined\":\"\",\"hide-details\":\"\",\"dense\":_vm.is_form_dense,\"items\":_vm.tweet_capture_watermark_position},model:{value:(_vm.settingsStore.settings.tweet_capture_watermark_position),callback:function ($$v) {_vm.$set(_vm.settingsStore.settings, \"tweet_capture_watermark_position\", $$v)},expression:\"settingsStore.settings.tweet_capture_watermark_position\"}})],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nimport APIClient from '@/services/APIClient';\n\n\n/** Twitter アカウントと連携するための認証 URL を表すインターフェイス */\nexport interface ITwitterAuthURL {\n    authorization_url: string;\n}\n\n/** ツイートの送信結果を表すインターフェイス */\nexport interface ITweetResult {\n    is_success: boolean;\n    tweet_url?: string;\n    detail: string;\n}\n\n\nclass Niconico {\n\n    /**\n     * Twitter アカウントと連携するための認証 URL を取得する\n     * @returns 認証 URL or 認証 URL の取得に失敗した場合は null\n     */\n    static async fetchAuthorizationURL(): Promise<string | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<ITwitterAuthURL>('/twitter/auth');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'Twitter アカウントとの連携用の認証 URL を取得できませんでした。');\n            return null;\n        }\n\n        return response.data.authorization_url;\n    }\n\n\n    /**\n     * 現在ログイン中のユーザーアカウントに紐づく Twitter アカウントとの連携を解除する\n     * @param screen_name Twitter のスクリーンネーム\n     * @returns 連携解除に成功した場合は true, 失敗した場合は false\n     */\n    static async logoutAccount(screen_name: string): Promise<boolean> {\n\n        // API リクエストを実行\n        const response = await APIClient.delete(`/twitter/accounts/${screen_name}`);\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'Twitter アカウントとの連携を解除できませんでした。');\n            return false;\n        }\n\n        return true;\n    }\n\n\n    /**\n     * ツイートを送信する\n     * @param screen_name Twitter のスクリーンネーム\n     * @param text ツイート本文\n     * @param captures 添付するキャプチャ画像\n     */\n    static async sendTweet(screen_name: string, text: string, captures: Blob[]): Promise<{message: string; is_error: boolean;}> {\n\n        // multipart/form-data でツイート本文と画像（選択されている場合）を送る\n        const form_data = new FormData();\n        form_data.append('tweet', text);\n        for (const tweet_capture of captures) {\n            form_data.append('images', tweet_capture);\n        }\n\n        // API リクエストを実行\n        const response = await APIClient.post<ITweetResult>(`/twitter/accounts/${screen_name}/tweets`, form_data, {\n            headers: {'Content-Type': 'multipart/form-data'},\n        });\n\n        // エラー処理 (API リクエスト自体に失敗した場合)\n        if ('is_error' in response) {\n            return {message: 'エラー: ツイートの送信に失敗しました。', is_error: true};\n        }\n\n        // 成功 or 失敗に関わらず detail の内容をそのまま通知する\n        if (response.data.is_success === true) {\n            // ツイート成功\n            return {message: response.data.detail, is_error: false};\n        } else {\n            // ツイート失敗\n            return {message: `エラー: ${response.data.detail}`, is_error: true};\n        }\n    }\n}\n\nexport default Niconico;\n","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport Twitter from '@/services/Twitter';\nimport useSettingsStore from '@/store/SettingsStore';\nimport useUserStore from '@/store/UserStore';\nimport Utils from '@/utils';\nimport Base from '@/views/Settings/Base.vue';\n\nexport default Vue.extend({\n    name: 'Settings-Twitter',\n    components: {\n        Base,\n    },\n    data() {\n        return {\n\n            // フォームを小さくするかどうか\n            is_form_dense: Utils.isSmartphoneHorizontal(),\n\n            // デフォルトで表示されるパネルのタブの選択肢\n            twitter_active_tab: [\n                {'text': 'ツイート検索タブ', 'value': 'Search'},\n                {'text': 'タイムラインタブ', 'value': 'Timeline'},\n                {'text': 'キャプチャタブ', 'value': 'Capture'},\n            ],\n\n            // ツイートにつけるハッシュタグの位置の選択肢\n            tweet_hashtag_position: [\n                {'text': 'ツイート本文の前に追加する', 'value': 'Prepend'},\n                {'text': 'ツイート本文の後に追加する', 'value': 'Append'},\n                {'text': 'ツイート本文の前に追加してから改行する', 'value': 'PrependWithLineBreak'},\n                {'text': 'ツイート本文の後に改行してから追加する', 'value': 'AppendWithLineBreak'},\n            ],\n\n            // ツイートするキャプチャに番組タイトルの透かしを描画する位置の選択肢\n            tweet_capture_watermark_position: [\n                {'text': '透かしを描画しない', 'value': 'None'},\n                {'text': '透かしをキャプチャの左上に描画する', 'value': 'TopLeft'},\n                {'text': '透かしをキャプチャの右上に描画する', 'value': 'TopRight'},\n                {'text': '透かしをキャプチャの左下に描画する', 'value': 'BottomLeft'},\n                {'text': '透かしをキャプチャの右下に描画する', 'value': 'BottomRight'},\n            ],\n\n            // ローディング中かどうか\n            is_loading: true,\n        };\n    },\n    computed: {\n        // SettingsStore / UserStore に this.settingsStore / this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useSettingsStore, useUserStore),\n    },\n    async created() {\n\n        // アカウント情報を更新\n        await this.userStore.fetchUser();\n\n        // ローディング状態を解除\n        this.is_loading = false;\n\n        // もしハッシュ (# から始まるフラグメント) に何か指定されていたら、\n        // OAuth 連携のコールバックの結果が入っている可能性が高いので、パースを試みる\n        // アカウント情報更新より後にしないと Snackbar がうまく表示されない\n        if (location.hash !== '') {\n            const params = new URLSearchParams(location.hash.replace('#', ''));\n            if (params.get('status') !== null && params.get('detail') !== null) {\n                // コールバックの結果を取得できたので、OAuth 連携の結果を画面に通知する\n                const authorization_status = parseInt(params.get('status')!);\n                const authorization_detail = params.get('detail')!;\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\n                // URL からフラグメントを削除\n                // ref: https://stackoverflow.com/a/49373716/17124142\n                history.replaceState(null, '', ' ');\n            }\n        }\n    },\n    methods: {\n        async loginTwitterAccount() {\n\n            // ログインしていない場合はエラーにする\n            if (this.userStore.is_logged_in === false) {\n                this.$message.warning('連携をはじめるには、KonomiTV アカウントにログインしてください。');\n                return;\n            }\n\n            // Twitter アカウントと連携するための認証 URL を取得\n            const authorization_url = await Twitter.fetchAuthorizationURL();\n            if (authorization_url === null) {\n                return;\n            }\n\n            // モバイルデバイスではポップアップが事実上使えない (特に Safari ではブロックされてしまう) ので、素直にリダイレクトで実装する\n            if (Utils.isMobileDevice() === true) {\n                location.href = authorization_url;\n                return;\n            }\n\n            // OAuth 連携のため、認証 URL をポップアップウインドウで開く\n            // window.open() の第2引数はユニークなものにしておくと良いらしい\n            // ref: https://qiita.com/catatsuy/items/babce8726ea78f5d25b1 (大変参考になりました)\n            const popup_window = window.open(authorization_url, 'KonomiTV-OAuthPopup', Utils.getWindowFeatures());\n            if (popup_window === null) {\n                this.$message.error('ポップアップウインドウを開けませんでした。');\n                return;\n            }\n\n            // 認証完了 or 失敗後、ポップアップウインドウから送信される文字列を受信\n            const onMessage = async (event) => {\n\n                // すでにウインドウが閉じている場合は実行しない\n                if (popup_window.closed) return;\n\n                // 受け取ったオブジェクトに KonomiTV-OAuthPopup キーがない or そもそもオブジェクトではない際は実行しない\n                // ブラウザの拡張機能から結構余計な message が飛んでくるっぽい…。\n                if (Utils.typeof(event.data) !== 'object') return;\n                if (('KonomiTV-OAuthPopup' in event.data) === false) return;\n\n                // 認証は完了したので、ポップアップウインドウを閉じ、リスナーを解除する\n                if (popup_window) popup_window.close();\n                window.removeEventListener('message', onMessage);\n\n                // ステータスコードと詳細メッセージを取得\n                const authorization_status = event.data['KonomiTV-OAuthPopup']['status'] as number;\n                const authorization_detail = event.data['KonomiTV-OAuthPopup']['detail'] as string;\n                this.onOAuthCallbackReceived(authorization_status, authorization_detail);\n            };\n\n            // postMessage() を受信するリスナーを登録\n            window.addEventListener('message', onMessage);\n        },\n\n        async onOAuthCallbackReceived(authorization_status: number, authorization_detail: string) {\n            console.log(`TwitterAuthCallbackAPI: Status: ${authorization_status} / Detail: ${authorization_detail}`);\n\n            // OAuth 連携に失敗した\n            if (authorization_status !== 200) {\n                if (authorization_detail.startsWith('Authorization was denied by user')) {\n                    this.$message.error('Twitter アカウントとの連携がキャンセルされました。');\n                } else if (authorization_detail.startsWith('Failed to get access token')) {\n                    this.$message.error('アクセストークンの取得に失敗しました。');\n                } else if (authorization_detail.startsWith('Failed to get user information')) {\n                    this.$message.error('Twitter アカウントのユーザー情報の取得に失敗しました。');\n                } else {\n                    this.$message.error(`Twitter アカウントとの連携に失敗しました。(${authorization_detail})`);\n                }\n                return;\n            }\n\n            // アカウント情報を強制的に更新\n            await this.userStore.fetchUser(true);\n            if (this.userStore.user === null) {\n                this.$message.error('アカウント情報を取得できませんでした。');\n                return;\n            }\n\n            // ログイン中のユーザーに紐づく Twitter アカウントのうち、一番 updated_at が新しいものを取得\n            // ログインすると updated_at が更新されるため、この時点で一番 updated_at が新しいアカウントが今回連携したものだと判断できる\n            // ref: https://stackoverflow.com/a/12192544/17124142 (ISO8601 のソートアルゴリズム)\n            const current_twitter_account = [...this.userStore.user.twitter_accounts].sort((a, b) => {\n                return (a.updated_at < b.updated_at) ? 1 : ((a.updated_at > b.updated_at) ? -1 : 0);\n            })[0];\n\n            this.$message.success(`Twitter @${current_twitter_account.screen_name} と連携しました。`);\n        },\n\n        async logoutTwitterAccount(screen_name: string) {\n\n            // Twitter アカウント連携解除 API にリクエスト\n            const result = await Twitter.logoutAccount(screen_name);\n            if (result === false) {\n                return;\n            }\n\n            // アカウント情報を強制的に更新\n            await this.userStore.fetchUser(true);\n\n            this.$message.success(`Twitter @${screen_name} との連携を解除しました。`);\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Twitter.vue?vue&type=template&id=8b6c9e72&scoped=true&\"\nimport script from \"./Twitter.vue?vue&type=script&lang=ts&\"\nexport * from \"./Twitter.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Twitter.vue?vue&type=style&index=0&id=8b6c9e72&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8b6c9e72\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('Header'),_c('main',[_c('Navigation'),_c('div',{staticClass:\"channels-container channels-container--home\",class:{'channels-container--loading': _vm.is_loading}},[_c('v-tabs-fix',{staticClass:\"channels-tab\",attrs:{\"centered\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channelsStore.channels_list_with_pinned)),function([channels_type,]){return _c('v-tab',{key:channels_type,staticClass:\"channels-tab__item\"},[_vm._v(\" \"+_vm._s(channels_type)+\" \")])}),1),_c('v-tabs-items-fix',{staticClass:\"channels-list\",model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channelsStore.channels_list_with_pinned)),function([channels_type, channels]){return _c('v-tab-item-fix',{key:channels_type,staticClass:\"channels-tabitem\"},[_c('div',{staticClass:\"channels\",class:`channels--tab-${channels_type} channels--length-${channels.length}`},[_vm._l((channels),function(channel){return _c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:channel.id,staticClass:\"channel\",attrs:{\"to\":`/tv/watch/${channel.channel_id}`}},[_c('div',{staticClass:\"channel__broadcaster\"},[_c('img',{staticClass:\"channel__broadcaster-icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${channel.channel_id}/logo`}}),_c('div',{staticClass:\"channel__broadcaster-content\"},[_c('span',{staticClass:\"channel__broadcaster-name\"},[_vm._v(\"Ch: \"+_vm._s(channel.channel_number)+\" \"+_vm._s(channel.channel_name))]),_c('div',{staticClass:\"channel__broadcaster-status\"},[_c('div',{staticClass:\"channel__broadcaster-status-force\",class:`channel__broadcaster-status-force--${_vm.ChannelUtils.getChannelForceType(channel.channel_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"12px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"勢い:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(_vm.ProgramUtils.getAttribute(channel, 'channel_force', '--')))]),_c('span',{staticStyle:{\"margin-left\":\"3px\"}},[_vm._v(\" コメ/分\")])],1),_c('div',{staticClass:\"channel__broadcaster-status-viewers ml-4\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:eye\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"視聴数:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(channel.viewers))])],1)])]),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip\",value:(_vm.isPinnedChannel(channel.channel_id) ? 'ピン留めを外す' : 'ピン留めする'),expression:\"isPinnedChannel(channel.channel_id) ? 'ピン留めを外す' : 'ピン留めする'\"}],staticClass:\"channel__broadcaster-pin\",class:{'channel__broadcaster-pin--pinned': _vm.isPinnedChannel(channel.channel_id)},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.isPinnedChannel(channel.channel_id) ? _vm.removePinnedChannel(channel.channel_id) : _vm.addPinnedChannel(channel.channel_id)},\"mousedown\":function($event){$event.preventDefault();$event.stopPropagation();/* 親要素の波紋が広がらないように */}}},[_c('Icon',{attrs:{\"icon\":\"fluent:pin-20-filled\",\"width\":\"24px\"}})],1)]),_c('div',{staticClass:\"channel__program-present\"},[_c('div',{staticClass:\"channel__program-present-title-wrapper\"},[_c('span',{staticClass:\"channel__program-present-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_present, 'title'))}}),_c('span',{staticClass:\"channel__program-present-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_present)))])]),_c('span',{staticClass:\"channel__program-present-description\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_present, 'description'))}})]),_c('v-spacer'),_c('div',{staticClass:\"channel__program-following\"},[_c('div',{staticClass:\"channel__program-following-title\"},[_c('span',{staticClass:\"channel__program-following-title-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"channel__program-following-title-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}}),_c('span',{staticClass:\"channel__program-following-title-text\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_following, 'title'))}})],1),_c('span',{staticClass:\"channel__program-following-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_following)))])]),_c('div',{staticClass:\"channel__progressbar\"},[_c('div',{staticClass:\"channel__progressbar-progress\",style:(`width:${_vm.ProgramUtils.getProgramProgress(channel.program_present)}%;`)})])],1)}),(channels_type === 'ピン留め' && channels.length === 0)?_c('div',{staticClass:\"pinned-container d-flex justify-center align-center w-100\"},[_c('div',{staticClass:\"d-flex justify-center align-center flex-column\"},[_c('h2',[_vm._v(\"ピン留めされているチャンネルが\"),_c('br'),_vm._v(\"ありません。\")]),_c('div',{staticClass:\"mt-4 text--text text--darken-1\"},[_vm._v(\"各チャンネルの \"),_c('Icon',{staticStyle:{\"position\":\"relative\",\"bottom\":\"-5px\"},attrs:{\"icon\":\"fluent:pin-20-filled\",\"width\":\"22px\"}}),_vm._v(\" アイコンから、よくみる\"),_c('br'),_vm._v(\"チャンネルをこのタブにピン留めできます。\")],1),_c('div',{staticClass:\"mt-2 text--text text--darken-1\"},[_vm._v(\"チャンネルをピン留めすると、\"),_c('br'),_vm._v(\"このタブが最初に表示されます。\")])])]):_vm._e()],2)])}),1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n/** 番組情報を表すインターフェイス */\nexport interface IProgram {\n    id: string;\n    network_id: number;\n    service_id: number;\n    event_id: number;\n    channel_id: string;\n    title: string;\n    description: string;\n    detail: {[key: string]: string};\n    start_time: string;\n    end_time: string;\n    duration: number;\n    is_free: boolean;\n    genre: {major: string; middle: string}[];\n    video_type: string;\n    video_codec: string;\n    video_resolution: string;\n    primary_audio_type: string;\n    primary_audio_language: string;\n    primary_audio_sampling_rate: string;\n    secondary_audio_type: string | null;\n    secondary_audio_language: string | null;\n    secondary_audio_sampling_rate: string | null;\n}\n\n/** 番組情報を表すインターフェイスのデフォルト値 */\nexport const IProgramDefault: IProgram = {\n    id: 'NID0-SID0-EID0',\n    network_id: 0,\n    service_id: 0,\n    event_id: 0,\n    channel_id: 'gr000',\n    title: '取得中…',\n    description: '取得中…',\n    detail: {},\n    start_time: '2000-01-01T00:00:00+09:00',\n    end_time: '2000-01-01T00:00:00+09:00',\n    duration: 0,\n    is_free: true,\n    genre: [],\n    video_type: '映像1080i(1125i)、アスペクト比16:9 パンベクトルなし',\n    video_codec: 'mpeg2',\n    video_resolution: '1080i',\n    primary_audio_type: '2/0モード(ステレオ)',\n    primary_audio_language: '日本語',\n    primary_audio_sampling_rate: '48kHz',\n    secondary_audio_type: null,\n    secondary_audio_language: null,\n    secondary_audio_sampling_rate: null,\n};\n\n// TODO: 番組情報 API が開発されたらここに API 定義を書く\n","\nimport APIClient from '@/services/APIClient';\nimport { IProgram, IProgramDefault } from '@/services/Programs';\n\n\n/** チャンネルタイプの型 */\nexport type ChannelType = 'GR' | 'BS' | 'CS' | 'CATV' | 'SKY' | 'STARDIGIO';\n\n// チャンネルタイプの型 (実際のチャンネルリストに表示される表現)\nexport type ChannelTypePretty = 'ピン留め' | '地デジ' | 'BS' | 'CS' | 'CATV' | 'SKY' | 'StarDigio';\n\n/** すべてのチャンネルタイプのチャンネルの情報を表すインターフェイス */\nexport interface IChannelsList {\n    GR: IChannel[];\n    BS: IChannel[];\n    CS: IChannel[];\n    CATV: IChannel[];\n    SKY: IChannel[];\n    STARDIGIO: IChannel[];\n}\n\n/** チャンネル情報を表すインターフェイス */\nexport interface IChannel {\n    id: string;\n    network_id: number;\n    service_id: number;\n    transport_stream_id: number | null;\n    remocon_id: number | null;\n    channel_id: string;\n    channel_number: string;\n    channel_name: string;\n    channel_type: ChannelType;\n    channel_force: number | null;\n    channel_comment: number | null;\n    is_subchannel: boolean;\n    is_radiochannel: boolean;\n    is_display: boolean;\n    viewers: number;\n    program_present: IProgram;\n    program_following: IProgram;\n}\n\n/** チャンネル情報を表すインターフェイスのデフォルト値 */\nexport const IChannelDefault: IChannel = {\n    id: 'NID0-SID0',\n    network_id: 0,\n    service_id: 0,\n    transport_stream_id: null,\n    remocon_id: null,\n    channel_id: 'gr000',\n    channel_number: '---',\n    channel_name: '取得中…',\n    channel_type: 'GR',\n    channel_force: null,\n    channel_comment: null,\n    is_subchannel: false,\n    is_radiochannel: false,\n    is_display: true,\n    viewers: 0,\n    program_present: IProgramDefault,\n    program_following: IProgramDefault,\n};\n\n/** ニコニコ実況のセッション情報を表すインターフェイス */\nexport interface IJikkyoSession {\n    is_success: boolean;\n    audience_token: string | null;\n    detail: string;\n}\n\n\nclass Channels {\n\n    /**\n     * すべてのチャンネルの情報を取得する\n     * @return すべてのチャンネルの情報\n     */\n    static async fetchAll(): Promise<IChannelsList | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<IChannelsList>('/channels');\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'チャンネル情報を取得できませんでした。');\n            return null;\n        }\n\n        return response.data;\n    }\n\n\n    /**\n     * 指定したチャンネルの情報を取得する\n     * 現状、処理の見直しにより使用されていない\n     * @param channel_id チャンネル ID\n     * @return 指定したチャンネルの情報\n     */\n    static async fetch(channel_id: string): Promise<IChannel | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<IChannel>(`/channels/${channel_id}`);\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'チャンネル情報を取得できませんでした。');\n            return null;\n        }\n\n        return response.data;\n    }\n\n\n    /**\n     * 指定したチャンネルに紐づくニコニコ実況のセッション情報を取得する\n     * @param channel_id チャンネル ID\n     * @return 指定したチャンネルに紐づくニコニコ実況のセッション情報\n     */\n    static async fetchJikkyoSession(channel_id: string): Promise<IJikkyoSession | null> {\n\n        // API リクエストを実行\n        const response = await APIClient.get<IJikkyoSession>(`/channels/${channel_id}/jikkyo`);\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'ニコニコ実況のセッション情報を取得できませんでした。');\n            return null;\n        }\n\n        return response.data;\n    }\n}\n\nexport default Channels;\n","\nimport { defineStore } from 'pinia';\nimport Vue from 'vue';\n\nimport Channels, { ChannelType, ChannelTypePretty, IChannelsList, IChannel, IChannelDefault } from '@/services/Channels';\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils, { ChannelUtils } from '@/utils';\n\n\n/**\n * TV ホーム画面と TV 視聴画面の両方のページでチャンネル情報を共有するためのストア\n * チャンネル情報の API からの取得はかなり重めなので、ページ遷移時に毎回 API リクエストを行うのはパフォーマンスが悪い\n * チャンネル情報をストアに格納しておくことで、TV ホーム画面から TV 視聴画面に遷移したときのパフォーマンスが向上する\n */\nconst useChannelsStore = defineStore('channels', {\n    state: () => ({\n\n        // 現在視聴中のチャンネルの ID (ex: gr011)\n        // 視聴画面のみ有効で、ホーム画面では利用されない\n        channel_id: 'gr000' as string,\n\n        // すべてのチャンネルタイプのチャンネルリスト\n        channels_list: {\n            GR: [],\n            BS: [],\n            CS: [],\n            CATV: [],\n            SKY: [],\n            STARDIGIO: [],\n        } as IChannelsList,\n\n        // 初回のチャンネル情報更新が実行された後かどうか\n        is_channels_list_initial_updated: false,\n\n        // 最終更新日時 (UNIX タイムスタンプ、秒単位)\n        last_updated_at: 0,\n    }),\n    getters: {\n\n        /**\n         * ライブ視聴画面を表示中かどうか\n         * チャンネル情報がセットされているかどうかで判定できる\n         */\n        is_showing_live(): boolean {\n            return this.channel_id !== 'gr000';\n        },\n\n        /**\n         * 前・現在・次のチャンネル情報 (視聴画面用)\n         * チャンネル情報はデータ量がかなり多いので、個別に取得するより一気に取得したほうがループ回数が少なくなりパフォーマンスが良い\n         */\n        channel(): {previous: IChannel; current: IChannel; next: IChannel;} {\n\n            // チャンネルタイプごとのチャンネル情報リストを取得する (すべてのチャンネルリストから探索するより効率的)\n            const channels: IChannel[] | undefined = this.channels_list[ChannelUtils.getChannelType(this.channel_id)];\n\n            // まだチャンネルリストの更新が終わっていないなどの場合で取得できなかった場合、\n            // null を返すと UI 側でのエラー処理が大変なので、暫定的なダミーのチャンネル情報を返す\n            if (channels === undefined || channels.length === 0) {\n                return {\n                    previous: IChannelDefault,\n                    current: IChannelDefault,\n                    next: IChannelDefault,\n                };\n            }\n\n            // 起点にするチャンネル情報があるインデックスを取得\n            const current_channel_index = channels.findIndex((channel) => channel.channel_id === this.channel_id);\n\n            // インデックスが取得できなかった場合も同様に、暫定的なダミーのチャンネル情報を返す\n            if (current_channel_index === -1) {\n                const IProgramError = {\n                    ...IChannelDefault.program_present,\n                    channel_id: 'gr999',\n                    title: 'チャンネル情報取得エラー',\n                    description: 'このチャンネル ID のチャンネル情報は存在しません。',\n                };\n                const IChannelError = {\n                    ...IChannelDefault,\n                    channel_id: 'gr999',  // チャンネル情報が存在しないことを示す特殊なチャンネル ID\n                    channel_name: 'ERROR',\n                    program_present: IProgramError,\n                    program_following: IProgramError,\n                };\n                return {\n                    previous: IChannelError,\n                    current: IChannelError,\n                    next: IChannelError,\n                };\n            }\n\n            // 前のインデックスを取得する\n            // インデックスがマイナスになった時は、最後のインデックスに巻き戻す\n            // channel.is_display が true のチャンネルに到達するまで続ける\n            const previous_channel_index = ((): number => {\n                let index = current_channel_index - 1;\n                while (channels.length) {\n                    if (index <= -1) {\n                        index = channels.length - 1;  // 最後のインデックス\n                    }\n                    if (channels[index].is_display) {\n                        return index;\n                    }\n                    index--;\n                }\n                return 0;\n            })();\n\n            // 次のインデックスを取得する\n            // インデックスが配列の長さを超えた時は、最初のインデックスに巻き戻す\n            // channel.is_display が true のチャンネルに到達するまで続ける\n            const next_channel_index = ((): number => {\n                let index = current_channel_index + 1;\n                while (channels.length) {\n                    if (index >= channels.length) {\n                        index = 0;  // 最初のインデックス\n                    }\n                    if (channels[index].is_display) {\n                        return index;\n                    }\n                    index++;\n                }\n                return 0;\n            })();\n\n            // 前・現在・次のチャンネル情報を返す\n            return {\n                previous: channels[previous_channel_index],\n                current: channels[current_channel_index],\n                next: channels[next_channel_index],\n            };\n        },\n\n        /**\n         * 実際に表示されるチャンネルリストを表すデータ\n         * ピン留めチャンネルのタブを追加するほか、放送していないサブチャンネルはピン留めタブを含めて表示から除外される\n         * また、チャンネルが1つもないチャンネルタイプのタブも表示から除外される\n         * (たとえば SKY (スカパー！プレミアムサービス) のタブは、SKY に属すチャンネルが1つもない（=受信できない）なら表示されない)\n         */\n        channels_list_with_pinned(): Map<ChannelTypePretty, IChannel[]> {\n\n            const settings_store = useSettingsStore();\n\n            // 事前に Map を定義しておく\n            // Map にしていたのは、確か連想配列の順序を保証してくれるからだったはず\n            const channels_list_with_pinned = new Map<ChannelTypePretty, IChannel[]>();\n            channels_list_with_pinned.set('ピン留め', []);\n            channels_list_with_pinned.set('地デジ', []);\n\n            // 初回のチャンネル情報更新がまだ実行されていない or 実行中のときは最低限のこの2つだけで返す\n            if (this.is_channels_list_initial_updated === false) {\n                return channels_list_with_pinned;\n            }\n\n            channels_list_with_pinned.set('BS', []);\n            channels_list_with_pinned.set('CS', []);\n            channels_list_with_pinned.set('CATV', []);\n            channels_list_with_pinned.set('SKY', []);\n            channels_list_with_pinned.set('StarDigio', []);\n\n            // channels_list に格納されているすべてのチャンネルに対しループを回し、\n            // 順次 channels_list_with_pinned に追加していく\n            // 1つのチャンネルに対するループ回数が少なくなる分、毎回 filter() や find() するよりも高速になるはず\n            for (const [channel_type, channels] of Object.entries(this.channels_list)) {\n                for (const channel of channels) {\n\n                    // 放送していないサブチャンネルは除外\n                    if (channel.is_display === false) {\n                        continue;\n                    }\n\n                    // ピン留めしているチャンネルの ID (ex: gr011) が入るリストに含まれていたら、ピン留めタブに追加\n                    if (settings_store.settings.pinned_channel_ids.includes(channel.channel_id)) {\n                        channels_list_with_pinned.get('ピン留め')?.push(channel);\n                    }\n\n                    // チャンネルタイプごとに分類\n                    switch (channel.channel_type) {\n                        case 'GR': {\n                            channels_list_with_pinned.get('地デジ')?.push(channel);\n                            break;\n                        }\n                        case 'BS': {\n                            channels_list_with_pinned.get('BS')?.push(channel);\n                            break;\n                        }\n                        case 'CS': {\n                            channels_list_with_pinned.get('CS')?.push(channel);\n                            break;\n                        }\n                        case 'CATV': {\n                            channels_list_with_pinned.get('CATV')?.push(channel);\n                            break;\n                        }\n                        case 'SKY': {\n                            channels_list_with_pinned.get('SKY')?.push(channel);\n                            break;\n                        }\n                        case 'STARDIGIO': {\n                            channels_list_with_pinned.get('StarDigio')?.push(channel);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            // ピン留めチャンネルを追加順に並び替える\n            for (const channel of [...channels_list_with_pinned.get('ピン留め')!]) {\n                const index = settings_store.settings.pinned_channel_ids.indexOf(channel.channel_id);\n                channels_list_with_pinned.get('ピン留め')![index] = channel;\n            }\n\n            // 最後に、チャンネルが1つもないチャンネルタイプのタブを除外する (ピン留めタブを除く)\n            for (const [channel_type, channels] of channels_list_with_pinned) {\n                if (channel_type === 'ピン留め') {\n                    continue;\n                }\n                if (channels.length === 0) {\n                    channels_list_with_pinned.delete(channel_type);\n                }\n            }\n\n            // ただし、this.channels_list_with_pinned 全体が空でもうピン留めタブしか残っていない場合は、ピン留めタブも削除する\n            if (channels_list_with_pinned.size === 1 && channels_list_with_pinned.has('ピン留め')) {\n                channels_list_with_pinned.delete('ピン留め');\n            }\n\n            return channels_list_with_pinned;\n        },\n\n        /**\n         * 視聴画面向けの channels_list_with_pinned\n         * 視聴画面ではピン留めされているチャンネルが1つもないときは、ピン留めタブを表示する必要性がないため削除される\n         */\n        channels_list_with_pinned_for_watch(): Map<ChannelTypePretty, IChannel[]> {\n            const channels_list_with_pinned = new Map([...this.channels_list_with_pinned]);\n            if (channels_list_with_pinned.get('ピン留め')?.length === 0) {\n                channels_list_with_pinned.delete('ピン留め');\n            }\n            return channels_list_with_pinned;\n        }\n    },\n    actions: {\n\n        /**\n         * 指定されたチャンネル ID のチャンネル情報を取得する\n         * @param channel_id 取得するチャンネル ID (ex: gr011)\n         * @returns チャンネル情報\n         */\n        getChannel(channel_id: string): IChannel | null {\n\n            // チャンネルタイプごとのチャンネル情報リストを取得する (すべてのチャンネルリストから探索するより効率的)\n            const channels = this.channels_list[ChannelUtils.getChannelType(channel_id)];\n            if (channels === undefined) {\n                return null;\n            }\n\n            // チャンネル ID が一致するチャンネル情報を返す\n            return channels.find(channel => channel.channel_id === channel_id) ?? null;\n        },\n\n        /**\n         * チャンネルタイプとリモコン番号からチャンネル情報を取得する\n         * @param channel_type チャンネルタイプ\n         * @param remocon_id リモコン番号\n         * @returns チャンネル情報 (見つからなかった場合は null)\n         */\n        getChannelByRemoconID(channel_type: ChannelType, remocon_id: number): IChannel | null {\n\n            // 指定されたチャンネルタイプのチャンネルを取得\n            const channels = this.channels_list[channel_type];\n\n            // リモコン番号が一致するチャンネルを取得\n            const channel = channels.find((channel) => channel.remocon_id === remocon_id);\n\n            // リモコン番号が一致するチャンネルを見つけられなかった場合は null を返す\n            return channel ?? null;\n        },\n\n        /**\n         * 指定されたチャンネル ID のチャンネル情報を更新する\n         * 今のところ viewers (視聴者数) を更新する目的でしか使っていない\n         * @param channel_id 更新するチャンネル ID (ex: gr011)\n         * @param channel 更新後のチャンネル情報\n         */\n        updateChannel(channel_id: string, channel: IChannel): void {\n\n            // チャンネルタイプごとのチャンネル情報リストを取得する (すべてのチャンネルリストから探索するより効率的)\n            const channel_type = ChannelUtils.getChannelType(channel_id);\n            if (this.channels_list[channel_type] === undefined) {\n                return null;\n            }\n\n            // チャンネル ID が一致するチャンネル情報を更新する\n            const index = this.channels_list[channel_type].findIndex(channel => channel.channel_id === channel_id);\n            if (index === -1) {\n                return;\n            }\n            // リアクティブにするために Vue.set を使う\n            Vue.set(this.channels_list[channel_type], index, channel);\n        },\n\n        /**\n         * チャンネルリストを更新する\n         * @param force 強制的に更新するかどうか\n         */\n        async update(force: boolean = false): Promise<void> {\n\n            const update = async () => {\n\n                // 最新のすべてのチャンネルの情報を取得\n                const channels_list = await Channels.fetchAll();\n                if (channels_list === null) {\n                    return;\n                }\n\n                this.channels_list = channels_list;\n                this.is_channels_list_initial_updated = true;\n                this.last_updated_at = Utils.time();\n            };\n\n            // すでに取得されている場合は更新しない\n            if (this.is_channels_list_initial_updated === true && force === false) {\n\n                // ただし、最終更新日時が1分以上前の場合は非同期で更新する\n                if (Utils.time() - this.last_updated_at > 60) {\n                    update();\n                }\n\n                return;\n            }\n\n            // チャンネルリストの更新を行う\n            await update();\n        }\n    }\n});\n\nexport default useChannelsStore;\n","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport Header from '@/components/Header.vue';\nimport Navigation from '@/components/Navigation.vue';\nimport useChannelsStore from '@/store/ChannelsStore';\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils, { ChannelUtils, ProgramUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'TV-Home',\n    components: {\n        Header,\n        Navigation,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            ChannelUtils: ChannelUtils,\n            ProgramUtils: ProgramUtils,\n\n            // タブの状態管理\n            tab: null as number | null,\n\n            // ローディング中かどうか\n            is_loading: true,\n\n            // インターバル ID\n            // ページ遷移時に setInterval(), setTimeout() の実行を止めるのに使う\n            // setInterval(), setTimeout() の返り値を登録する\n            interval_ids: [] as number[],\n        };\n    },\n    computed: {\n        // ChannelsStore / SettingsStore に this.channelsStore / this.settingsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useChannelsStore, useSettingsStore),\n    },\n    // 開始時に実行\n    async created() {\n\n        // ピン留めされているチャンネルの ID が空なら、タブを地デジタブに切り替える\n        // ピン留めができる事を示唆するためにピン留めタブ自体は残す\n        if (this.settingsStore.settings.pinned_channel_ids.length === 0) {\n            this.tab = 1;\n        }\n\n        // 00秒までの残り秒数を取得\n        // 現在 16:01:34 なら 26 (秒) になる\n        const residue_second = 60 - new Date().getSeconds();\n\n        // 00秒になるまで待ってから実行するタイマー\n        // 番組は基本1分単位で組まれているため、20秒や45秒など中途半端な秒数で更新してしまうと番組情報の反映が遅れてしまう\n        this.interval_ids.push(window.setTimeout(() => {\n\n            // この時点で00秒なので、チャンネル情報を更新\n            this.channelsStore.update(true);\n\n            // 以降、30秒おきにチャンネル情報を更新\n            this.interval_ids.push(window.setInterval(() => this.channelsStore.update(true), 30 * 1000));\n\n        }, residue_second * 1000));\n\n        // チャンネル情報を更新 (初回)\n        await this.channelsStore.update();\n\n        // 少しだけ待つ\n        // v-tabs-slider-wrapper をアニメーションさせないために必要\n        await Utils.sleep(0.01);\n\n        // この時点でピン留めされているチャンネルがないなら、タブを地デジタブに切り替える\n        // ピン留めされているチャンネル自体はあるが、現在放送されていないため表示できない場合に備える\n        if (this.channelsStore.channels_list_with_pinned.get('ピン留め').length === 0) {\n            this.tab = 1;\n        }\n\n        // チャンネル情報の更新が終わったタイミングでローディング状態を解除する\n        this.is_loading = false;\n    },\n    // 終了前に実行\n    beforeDestroy() {\n\n        // clearInterval() ですべての setInterval(), setTimeout() の実行を止める\n        // clearInterval() と clearTimeout() は中身共通なので問題ない\n        for (const interval_id of this.interval_ids) {\n            window.clearInterval(interval_id);\n        }\n    },\n    methods: {\n\n        // チャンネルをピン留めする\n        addPinnedChannel(channel_id: string) {\n\n            // ピン留めするチャンネルの ID を追加 (保存は自動で行われる)\n            this.settingsStore.settings.pinned_channel_ids.push(channel_id);\n\n            const channel = this.channelsStore.getChannel(channel_id);\n            this.$message.show(`${channel.channel_name}をピン留めしました。`);\n        },\n\n        // チャンネルをピン留めから外す\n        removePinnedChannel(channel_id: string) {\n\n            // ピン留めを外すチャンネルの ID を削除 (保存は自動で行われる)\n            this.settingsStore.settings.pinned_channel_ids.splice(this.settingsStore.settings.pinned_channel_ids.indexOf(channel_id), 1);\n\n            // この時点でピン留めされているチャンネルがないなら、タブを地デジタブに切り替える\n            if (this.channelsStore.channels_list_with_pinned.get('ピン留め').length === 0) {\n                this.tab = 1;\n            }\n\n            const channel = this.channelsStore.getChannel(channel_id);\n            this.$message.show(`${channel.channel_name}のピン留めを外しました。`);\n        },\n\n        // チャンネルがピン留めされているか\n        isPinnedChannel(channel_id: string): boolean {\n\n            // 引数のチャンネルがピン留めリストに存在するかを返す\n            return this.settingsStore.settings.pinned_channel_ids.includes(channel_id);\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=b6c87c84&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=ts&\"\nexport * from \"./Home.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=b6c87c84&prod&lang=scss&\"\nimport style1 from \"./Home.vue?vue&type=style&index=1&id=b6c87c84&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b6c87c84\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"route-container\"},[_c('main',{staticClass:\"watch-container\",class:{\n            'watch-container--control-display': _vm.is_control_display,\n            'watch-container--panel-display': _vm.Utils.isSmartphoneVertical() ? true : _vm.is_panel_display,\n            'watch-container--fullscreen': _vm.is_fullscreen,\n        }},[_c('nav',{staticClass:\"watch-navigation\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event)},\"click\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"watch-navigation__icon\",attrs:{\"to\":\"/tv/\"}},[_c('img',{staticClass:\"watch-navigation__icon-image\",attrs:{\"src\":\"/assets/images/icon.svg\",\"width\":\"23px\"}})]),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('テレビをみる'),expression:\"'テレビをみる'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/tv/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:tv-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('ビデオをみる'),expression:\"'ビデオをみる'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/videos/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:movies-and-tv-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('番組表'),expression:\"'番組表'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/timetable/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:calendar-ltr-20-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('キャプチャ'),expression:\"'キャプチャ'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/captures/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:image-multiple-24-regular\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('ウォッチリスト'),expression:\"'ウォッチリスト'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/watchlists/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"ic:round-playlist-play\",\"width\":\"26px\"}})],1),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('視聴履歴'),expression:\"'視聴履歴'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/histories/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:history-16-regular\",\"width\":\"26px\"}})],1),_c('v-spacer'),_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:('設定'),expression:\"'設定'\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"to\":\"/settings/\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:settings-20-regular\",\"width\":\"26px\"}})],1),_c('a',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.right\",value:(`version ${_vm.Utils.version}`),expression:\"`version ${Utils.version}`\",modifiers:{\"right\":true}}],staticClass:\"watch-navigation__link\",attrs:{\"active-class\":\"watch-navigation__link--active\",\"href\":\"https://github.com/tsukumijima/KonomiTV\"}},[_c('Icon',{staticClass:\"watch-navigation__link-icon\",attrs:{\"icon\":\"fluent:info-16-regular\",\"width\":\"26px\"}})],1)],1),_c('div',{staticClass:\"watch-content\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event, true)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event, true)},\"click\":function($event){return _vm.controlDisplayTimer($event, true)}}},[_c('header',{staticClass:\"watch-header\"},[_c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"watch-header__back-icon\",attrs:{\"to\":\"/tv/\"}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-left-12-filled\",\"width\":\"25px\"}})],1),_c('img',{staticClass:\"watch-header__broadcaster\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.channelsStore.channel_id)}/logo`}}),_c('span',{staticClass:\"watch-header__program-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channelsStore.channel.current.program_present, 'title'))}}),_c('span',{staticClass:\"watch-header__program-time\"},[_vm._v(\" \"+_vm._s(_vm.ProgramUtils.getProgramTime(_vm.channelsStore.channel.current.program_present, true))+\" \")]),_c('v-spacer'),_c('span',{staticClass:\"watch-header__now\"},[_vm._v(_vm._s(_vm.time))])],1),_c('div',{staticClass:\"watch-player\",class:{\n                'watch-player--loading': _vm.is_loading,\n                'watch-player--virtual-keyboard-display': _vm.is_virtual_keyboard_display && _vm.Utils.hasActiveElementClass('dplayer-comment-input'),\n            }},[_c('div',{staticClass:\"watch-player__background-wrapper\"},[_c('div',{staticClass:\"watch-player__background\",class:{'watch-player__background--display': _vm.is_background_display},style:({backgroundImage: `url(${_vm.background_url})`})},[_c('img',{staticClass:\"watch-player__background-logo\",attrs:{\"src\":\"/assets/images/logo.svg\"}})])]),_c('v-progress-circular',{staticClass:\"watch-player__buffering\",class:{'watch-player__buffering--display': _vm.is_video_buffering && (_vm.is_loading || (_vm.player !== null && !_vm.player.video.paused))},attrs:{\"indeterminate\":\"\",\"size\":\"60\",\"width\":\"6\"}}),_c('div',{staticClass:\"watch-player__dplayer\"}),_c('div',{staticClass:\"watch-player__button\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)},\"touchmove\":function($event){return _vm.controlDisplayTimer($event)},\"click\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.top\",value:('前のチャンネル'),expression:\"'前のチャンネル'\",modifiers:{\"top\":true}}],staticClass:\"switch-button switch-button-up\",on:{\"click\":function($event){_vm.is_zapping = true; _vm.$router.push({path: `/tv/watch/${_vm.channelsStore.channel.previous.channel_id}`})}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:ios-arrow-left-24-filled\",\"width\":\"32px\",\"rotate\":\"1\"}})],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"switch-button switch-button-panel switch-button-panel--open\",on:{\"click\":function($event){_vm.is_panel_display = !_vm.is_panel_display}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:navigation-16-filled\",\"width\":\"32px\"}})],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"},{name:\"tooltip\",rawName:\"v-tooltip.bottom\",value:('次のチャンネル'),expression:\"'次のチャンネル'\",modifiers:{\"bottom\":true}}],staticClass:\"switch-button switch-button-down\",on:{\"click\":function($event){_vm.is_zapping = true; _vm.$router.push({path: `/tv/watch/${_vm.channelsStore.channel.next.channel_id}`})}}},[_c('Icon',{staticClass:\"switch-button-icon\",attrs:{\"icon\":\"fluent:ios-arrow-right-24-filled\",\"width\":\"33px\",\"rotate\":\"1\"}})],1)])],1)]),_c('div',{staticClass:\"watch-panel\",on:{\"mousemove\":function($event){return _vm.controlDisplayTimer($event)}}},[_c('div',{staticClass:\"watch-panel__header\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-close-button\",on:{\"click\":function($event){_vm.is_panel_display = false}}},[_c('Icon',{staticClass:\"panel-close-button__icon\",attrs:{\"icon\":\"akar-icons:chevron-right\",\"width\":\"25px\"}}),_c('span',{staticClass:\"panel-close-button__text\"},[_vm._v(\"閉じる\")])],1),_c('v-spacer'),_c('div',{staticClass:\"panel-broadcaster\"},[_c('img',{staticClass:\"panel-broadcaster__icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.channelsStore.channel_id)}/logo`}}),_c('div',{staticClass:\"panel-broadcaster__number\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.channel_number))]),_c('div',{staticClass:\"panel-broadcaster__name\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.channel_name))])])],1),_c('div',{staticClass:\"watch-panel__content-container\"},[_c('Program',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Program'}}),_c('Channel',{staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Channel'}}),_c('Comment',{ref:\"Comment\",staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Comment'},attrs:{\"channel\":_vm.channelsStore.channel.current,\"player\":_vm.player}}),_c('Twitter',{ref:\"Twitter\",staticClass:\"watch-panel__content\",class:{'watch-panel__content--active': _vm.tv_panel_active_tab === 'Twitter'},attrs:{\"player\":_vm.player,\"is_virtual_keyboard_display\":_vm.is_virtual_keyboard_display},on:{\"panel_folding_requested\":function($event){_vm.is_panel_display = false}}})],1),_c('div',{staticClass:\"watch-panel__navigation\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Program'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Program'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-solid:info-circle\",\"width\":\"33px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"番組情報\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Channel'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Channel'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-solid:broadcast-tower\",\"width\":\"34px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"チャンネル\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Comment'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Comment'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"width\":\"29px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"コメント\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"panel-navigation-button\",class:{'panel-navigation-button--active': _vm.tv_panel_active_tab === 'Twitter'},on:{\"click\":function($event){_vm.tv_panel_active_tab = 'Twitter'}}},[_c('Icon',{staticClass:\"panel-navigation-button__icon\",attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"34px\"}}),_c('span',{staticClass:\"panel-navigation-button__text\"},[_vm._v(\"Twitter\")])],1)])])]),_c('v-dialog',{attrs:{\"max-width\":\"1000\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.shortcut_key_modal),callback:function ($$v) {_vm.shortcut_key_modal=$$v},expression:\"shortcut_key_modal\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"px-5 pt-4 pb-3 d-flex align-center font-weight-bold\"},[_c('Icon',{attrs:{\"icon\":\"fluent:keyboard-20-filled\",\"height\":\"28px\"}}),_c('span',{staticClass:\"ml-3\"},[_vm._v(\"キーボードショートカット\")]),_c('v-spacer'),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"d-flex align-center rounded-circle cursor-pointer px-2 py-2\",on:{\"click\":function($event){_vm.shortcut_key_modal = false}}},[_c('Icon',{attrs:{\"icon\":\"fluent:dismiss-12-filled\",\"width\":\"23px\",\"height\":\"23px\"}})],1)],1),_c('div',{staticClass:\"px-5 pb-4\"},[_c('v-row',_vm._l((_vm.shortcut_key_list),function(shortcut_key_column,shortcut_key_column_name){return _c('v-col',{key:shortcut_key_column_name,attrs:{\"cols\":\"6\"}},_vm._l((shortcut_key_column),function(shortcut_keys){return _c('div',{key:shortcut_keys.name,staticClass:\"mt-3\"},[_c('div',{staticClass:\"text-subtitle-1 d-flex align-center font-weight-bold\"},[_c('Icon',{attrs:{\"icon\":shortcut_keys.icon,\"height\":shortcut_keys.icon_height}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(_vm._s(shortcut_keys.name))])],1),_vm._l((shortcut_keys.shortcuts),function(shortcut){return _c('div',{key:shortcut.name,staticClass:\"mt-3\"},[_c('div',{staticClass:\"text-subtitle-2 mt-2 d-flex align-center font-weight-medium\"},[_c('span',{staticClass:\"mr-2\",domProps:{\"innerHTML\":_vm._s(shortcut.name)}}),_c('div',{staticClass:\"ml-auto d-flex align-center flex-shrink-0\"},_vm._l((shortcut.keys),function(key,index){return _c('div',{key:key.name,staticClass:\"ml-auto d-flex align-center\"},[_c('span',{staticClass:\"shortcut-key\"},[_vm._l((key.name.split(';')),function(key_name){return _c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(key.icon === true),expression:\"key.icon === true\"}],key:key_name,attrs:{\"icon\":key_name,\"height\":\"18px\"}})}),(key.icon === false)?_c('span',{domProps:{\"innerHTML\":_vm._s(key.name)}}):_vm._e()],2),(index < (shortcut.keys.length - 1))?_c('span',{staticClass:\"shortcut-key-plus\"},[_vm._v(\"+\")]):_vm._e()])}),0)])])})],2)}),0)}),1)],1)],1)],1),_c('BottomNavigation')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"channels-container channels-container--watch\"},[_c('v-tabs-fix',{staticClass:\"channels-tab\",attrs:{\"centered\":\"\",\"show-arrows\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channelsStore.channels_list_with_pinned_for_watch)),function([channels_type,]){return _c('v-tab',{key:channels_type,staticClass:\"channels-tab__item\"},[_vm._v(\" \"+_vm._s(channels_type)+\" \")])}),1),_c('div',{staticClass:\"channels-list-container\"},[_c('v-tabs-items-fix',{staticClass:\"channels-list\",model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((Array.from(_vm.channelsStore.channels_list_with_pinned_for_watch)),function([channels_type, channels]){return _c('v-tab-item-fix',{key:channels_type,staticClass:\"channels\"},_vm._l((channels),function(channel){return _c('router-link',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:channel.id,staticClass:\"channel\",attrs:{\"to\":`/tv/watch/${channel.channel_id}`}},[_c('div',{staticClass:\"channel__broadcaster\"},[_c('img',{staticClass:\"channel__broadcaster-icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${channel.channel_id}/logo`}}),_c('div',{staticClass:\"channel__broadcaster-content\"},[_c('span',{staticClass:\"channel__broadcaster-name\"},[_vm._v(\"Ch: \"+_vm._s(channel.channel_number)+\" \"+_vm._s(channel.channel_name))]),_c('div',{staticClass:\"channel__broadcaster-force\",class:`channel__broadcaster-force--${_vm.ChannelUtils.getChannelForceType(channel.channel_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"11px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(_vm.ProgramUtils.getAttribute(channel, 'channel_force', '-')))])],1)])]),_c('div',{staticClass:\"channel__program-present\"},[_c('span',{staticClass:\"channel__program-present-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_present, 'title'))}}),_c('span',{staticClass:\"channel__program-present-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_present)))])]),_c('div',{staticClass:\"channel__program-following\"},[_c('div',{staticClass:\"channel__program-following-title\"},[_c('span',{staticClass:\"channel__program-following-title-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"channel__program-following-title-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}}),_c('span',{staticClass:\"channel__program-following-title-text\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(channel.program_following, 'title'))}})],1),_c('span',{staticClass:\"channel__program-following-time\"},[_vm._v(_vm._s(_vm.ProgramUtils.getProgramTime(channel.program_following)))])]),_c('div',{staticClass:\"channel__progressbar\"},[_c('div',{staticClass:\"channel__progressbar-progress\",style:(`width:${_vm.ProgramUtils.getProgramProgress(channel.program_present)}%;`)})])])}),1)}),1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport useChannelsStore from '@/store/ChannelsStore';\nimport Utils, { ChannelUtils, ProgramUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'Panel-ChannelTab',\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            ChannelUtils: ChannelUtils,\n            ProgramUtils: ProgramUtils,\n\n            // タブの状態管理\n            tab: null,\n        };\n    },\n    computed: {\n        // ChannelsStore に this.channelsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useChannelsStore),\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Channel.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Channel.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Channel.vue?vue&type=template&id=cf668d5e&scoped=true&\"\nimport script from \"./Channel.vue?vue&type=script&lang=ts&\"\nexport * from \"./Channel.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Channel.vue?vue&type=style&index=0&id=cf668d5e&prod&lang=scss&\"\nimport style1 from \"./Channel.vue?vue&type=style&index=1&id=cf668d5e&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cf668d5e\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"comment-container\"},[_c('section',{staticClass:\"comment-header\"},[_c('h2',{staticClass:\"comment-header__title\"},[_c('Icon',{staticClass:\"comment-header__title-icon\",attrs:{\"icon\":\"bi:chat-left-text-fill\",\"height\":\"18.5px\"}}),_c('span',{staticClass:\"comment-header__title-text\"},[_vm._v(\"コメント\")])],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"comment-header__button ml-auto\",on:{\"click\":function($event){_vm.comment_mute_settings_modal = !_vm.comment_mute_settings_modal}}},[_c('Icon',{attrs:{\"icon\":\"heroicons-solid:filter\",\"height\":\"11px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ミュート設定\")])],1)]),_c('section',{ref:\"comment_list_wrapper\",staticClass:\"comment-list-wrapper\"},[_c('div',{staticClass:\"comment-list-dropdown\",class:{'comment-list-dropdown--display': _vm.is_comment_list_dropdown_display},style:({'--comment-list-dropdown-top': `${_vm.comment_list_dropdown_top}px`})},[_c('v-list',{staticStyle:{\"background\":\"var(--v-background-lighten1)\"}},[_c('v-list-item',{staticStyle:{\"min-height\":\"30px\"},attrs:{\"dense\":\"\"},on:{\"click\":function($event){return _vm.addMutedKeywords()}}},[_c('v-list-item-title',{staticClass:\"d-flex align-center\"},[_c('Icon',{attrs:{\"icon\":\"fluent:comment-dismiss-20-filled\",\"width\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"このコメントをミュート\")])],1)],1),_c('v-list-item',{staticStyle:{\"min-height\":\"30px\"},attrs:{\"dense\":\"\"},on:{\"click\":function($event){return _vm.addMutedNiconicoUserIds()}}},[_c('v-list-item-title',{staticClass:\"d-flex align-center\"},[_c('Icon',{attrs:{\"icon\":\"fluent:person-prohibited-20-filled\",\"width\":\"20px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"このコメントの投稿者をミュート\")])],1)],1)],1)],1),_c('div',{staticClass:\"comment-list-cover\",class:{'comment-list-cover--display': _vm.is_comment_list_dropdown_display},on:{\"click\":function($event){return _vm.hideCommentListDropdown()}}}),_c('DynamicScroller',{staticClass:\"comment-list\",attrs:{\"direction\":'vertical',\"items\":_vm.comment_list,\"min-item-size\":34},scopedSlots:_vm._u([{key:\"default\",fn:function({item, active}){return [_c('DynamicScrollerItem',{attrs:{\"item\":item,\"active\":active,\"size-dependencies\":[item.text]}},[_c('div',{staticClass:\"comment\",class:{'comment--my-post': item.my_post}},[_c('span',{staticClass:\"comment__text\"},[_vm._v(_vm._s(item.text))]),_c('span',{staticClass:\"comment__time\"},[_vm._v(_vm._s(item.time))]),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\",value:(!_vm.Utils.isTouchDevice()),expression:\"!Utils.isTouchDevice()\"}],staticClass:\"comment__icon\",on:{\"mouseup\":function($event){return _vm.showCommentListDropdown($event, item)},\"touchend\":function($event){return _vm.showCommentListDropdown($event, item)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:more-vertical-20-filled\",\"width\":\"20px\"}})],1)])])]}}])}),(_vm.initialize_failed_message === null && _vm.comment_list.length === 0)?_c('div',{staticClass:\"comment-announce\"},[_c('div',{staticClass:\"comment-announce__heading\"},[_vm._v(\"まだコメントがありません。\")]),_vm._m(0)]):_vm._e(),(_vm.initialize_failed_message !== null && _vm.comment_list.length === 0)?_c('div',{staticClass:\"comment-announce\"},[_c('div',{staticClass:\"comment-announce__heading\"},[_vm._v(\"コメントがありません。\")]),_c('div',{staticClass:\"comment-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(_vm._s(_vm.initialize_failed_message))])])]):_vm._e()],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"comment-scroll-button elevation-5\",class:{'comment-scroll-button--display': _vm.is_manual_scroll},on:{\"click\":function($event){_vm.is_manual_scroll = false; _vm.scrollCommentList(true);}}},[_c('Icon',{attrs:{\"icon\":\"fluent:arrow-down-12-filled\",\"height\":\"29px\"}})],1),_c('CommentMuteSettings',{model:{value:(_vm.comment_mute_settings_modal),callback:function ($$v) {_vm.comment_mute_settings_modal=$$v},expression:\"comment_mute_settings_modal\"}})],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"comment-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(\"このチャンネルに対応するニコニコ実況のコメントが、リアルタイムで表示されます。\")])])\n}]\n\nexport { render, staticRenderFns }","\nimport dayjs from 'dayjs';\nimport DPlayer from 'dplayer';\nimport * as DPlayerType from 'dplayer/dist/d.ts/types/DPlayer';\n\nimport Channels from '@/services/Channels';\nimport Utils, { CommentUtils } from '@/utils';\n\n\nexport interface ICommentData {\n    id: number;\n    text: string;\n    time: string;\n    user_id: string;\n    my_post: boolean;\n}\n\ninterface IWatchSessionResult {\n    is_success: boolean;\n    detail: string;\n    message_server_url?: string;\n    thread_id?: string;\n    your_post_key?: string;\n}\n\n\nclass LiveCommentManager {\n\n    // 視聴セッションの WebSocket のインスタンス\n    private watch_session: WebSocket | null = null;\n    // コメントセッションの WebSocket のインスタンス\n    private comment_session: WebSocket | null = null;\n    // vpos を計算する基準となる時刻のタイムスタンプ\n    private vpos_base_timestamp: number = 0;\n    // 座席維持用のタイマーのインターバル ID\n    private keep_seat_interval_id: number | null = null;\n    // destroy() 時に EventListener を全解除するための AbortController\n    private abort_controller: AbortController = new AbortController();\n\n    private player: DPlayer;\n    private channel_id: string;\n    private on_initial_comments_received: (initial_comments: ICommentData[]) => void;\n    private on_comment_received: (comment: ICommentData) => void;\n\n    constructor(\n        player: DPlayer,\n        channel_id: string,\n        on_initial_comments_received: (initial_comments: ICommentData[]) => void,\n        on_comment_received: (comment: ICommentData) => void,\n    ) {\n        this.player = player;\n        this.channel_id = channel_id;\n        this.on_initial_comments_received = on_initial_comments_received;\n        this.on_comment_received = on_comment_received;\n    }\n\n\n    /**\n     * ニコニコ実況に接続し、セッションを初期化する\n     * 初期化に成功した場合は、随時コールバックにニコニコ実況から受信したコメントが渡される\n     * @returns セッションの初期化に成功したかどうか\n     */\n    public async initSession(): Promise<{\n        is_success: boolean;\n        detail: string;\n    }> {\n\n        // 視聴セッションを初期化\n        const watch_session_result = await this.initWatchSession();\n        if (watch_session_result.is_success === false) {\n            return {\n                is_success: false,\n                detail: watch_session_result.detail,\n            };\n        }\n\n        // 視聴セッションを初期化できた場合のみ、\n        // 取得したコメントサーバーへの接続情報を使い、非同期でコメントセッションを初期化\n        this.initCommentSession(watch_session_result);\n\n        return {\n            is_success: true,\n            detail: '視聴セッションを初期化しました。',\n        };\n    }\n\n\n    /**\n     * 視聴セッションを初期化する\n     * @returns コメントサーバーへの接続情報 or エラー情報\n     */\n    private async initWatchSession(): Promise<IWatchSessionResult> {\n\n        // サーバーから disconnect メッセージが送られてきた際のフラグ\n        let is_disconnect_message_received = false;\n\n        // セッション情報を取得\n        const watch_session_info = await Channels.fetchJikkyoSession(this.channel_id);\n        if (watch_session_info === null) {\n            return {\n                is_success: false,\n                detail: 'ニコニコ実況のセッション情報を取得できませんでした。',\n            };\n        }\n        if (watch_session_info.is_success === false) {\n            console.error(`[LiveCommentManager][WatchSession] Error: ${watch_session_info.detail}`);\n            // 通常発生しないエラーメッセージ (サーバーエラーなど) はプレイヤー側にも通知する\n            if ((watch_session_info.detail !== 'このチャンネルはニコニコ実況に対応していません。') &&\n                (watch_session_info.detail !== '現在放送中のニコニコ実況がありません。')) {\n                this.player.notice(watch_session_info.detail);\n            }\n            return {\n                is_success: false,\n                detail: watch_session_info.detail,\n            };\n        }\n\n        // 視聴セッション WebSocket を開く\n        this.watch_session = new WebSocket(watch_session_info.audience_token);\n\n        // 視聴セッションの接続が開かれたとき\n        this.watch_session.addEventListener('open', () => {\n\n            // 視聴セッションをリクエスト\n            // 公式ドキュメントいわく、stream フィールドは Optional らしい\n            // サーバー負荷軽減のため、映像が不要な場合は必ず省略してくださいとのこと\n            this.watch_session?.send(JSON.stringify({\n                type: 'startWatching',\n                data: {\n                    'reconnect': false,\n                },\n            }));\n\n        }, { signal: this.abort_controller.signal });\n\n        // 視聴セッションの接続が閉じられたとき（ネットワークが切断された場合など）\n        this.watch_session.addEventListener('close', async (event) => {\n\n            // すでに disconnect メッセージが送られてきている場合は何もしない\n            if (is_disconnect_message_received === true) {\n                return;\n            }\n\n            // 接続切断の理由を表示\n            console.error(`[LiveCommentManager][WatchSession] Connection closed. (Code: ${event.code})`);\n            this.player.notice(`ニコニコ実況との接続が切断されました。(Code: ${event.code})`);\n\n            // 10 秒ほど待ってから再接続する\n            // ニコ生側から切断された場合と異なりネットワークが切断された可能性が高いので、間を多めに取る\n            await Utils.sleep(10);\n            await this.reconnect();\n\n        }, { signal: this.abort_controller.signal });\n\n        // 視聴セッション WebSocket からメッセージを受信したとき\n        // 視聴セッションはコメント送信時のために維持し続ける必要がある\n        // 以下はいずれも視聴セッションを維持し続けたり、エラーが発生した際に再接続するための処理\n        this.watch_session.addEventListener('message', async (event) => {\n\n            // 各メッセージタイプに対応する処理を実行\n            const message = JSON.parse(event.data);\n            switch (message.type) {\n\n                // 座席情報\n                case 'seat': {\n                    // すでにタイマーが設定されている場合は何もしない\n                    if (this.keep_seat_interval_id !== null) {\n                        break;\n                    }\n                    // keepIntervalSec の秒数ごとに keepSeat を送信して座席を維持する\n                    this.keep_seat_interval_id = window.setInterval(() => {\n                        if (this.watch_session && this.watch_session.readyState === WebSocket.OPEN) {\n                            // セッションがまだ開いていれば、座席を維持する\n                            this.watch_session.send(JSON.stringify({type: 'keepSeat'}));\n                        } else {\n                            // セッションが閉じられている場合は、タイマーを停止する\n                            window.clearInterval(this.keep_seat_interval_id ?? 0);\n                        }\n                    }, message.data.keepIntervalSec * 1000);\n                    break;\n                }\n\n                // ping-pong\n                case 'ping': {\n                    // pong を返してセッションを維持する\n                    // 送り返さなかった場合、勝手にセッションが閉じられてしまう\n                    this.watch_session.send(JSON.stringify({type: 'pong'}));\n                    break;\n                }\n\n                // エラー情報\n                case 'error': {\n                    // COMMENT_POST_NOT_ALLOWED と INVALID_MESSAGE に関しては sendComment() の方で処理するので、ここでは何もしない\n                    if (message.data.code === 'COMMENT_POST_NOT_ALLOWED' || message.data.code === 'INVALID_MESSAGE') {\n                        break;\n                    }\n\n                    let error = `ニコニコ実況でエラーが発生しています。(Code: ${message.data.code})`;\n                    switch (message.data.code) {\n                        case 'CONNECT_ERROR':\n                            error = 'ニコニコ実況のコメントサーバーに接続できません。';\n                            break;\n                        case 'CONTENT_NOT_READY':\n                            error = 'ニコニコ実況が配信できない状態です。';\n                            break;\n                        case 'NO_THREAD_AVAILABLE':\n                            error = 'ニコニコ実況のコメントスレッドを取得できません。';\n                            break;\n                        case 'NO_ROOM_AVAILABLE':\n                            error = 'ニコニコ実況のコメント部屋を取得できません。';\n                            break;\n                        case 'NO_PERMISSION':\n                            error = 'ニコニコ実況の API にアクセスする権限がありません。';\n                            break;\n                        case 'NOT_ON_AIR':\n                            error = 'ニコニコ実況が放送中ではありません。';\n                            break;\n                        case 'BROADCAST_NOT_FOUND':\n                            error = 'ニコニコ実況の配信情報を取得できません。';\n                            break;\n                        case 'INTERNAL_SERVERERROR':\n                            error = 'ニコニコ実況でサーバーエラーが発生しています。';\n                            break;\n                    }\n\n                    // エラー情報を表示\n                    console.error(`[LiveCommentManager][WatchSession] Error occurred. (Code: ${message.data.code})`);\n                    this.player.notice(error);\n\n                    // 5 秒ほど待ってから再接続する\n                    await Utils.sleep(5);\n                    await this.reconnect();\n                    break;\n                }\n\n                // 再接続を求められた\n                case 'reconnect': {\n                    // waitTimeSec に記載の秒数だけ待ってから再接続する\n                    // 公式ドキュメントには reconnect で送られてくる audienceToken で再接続しろと書いてあるんだけど、\n                    // 確実性的な面で実装が面倒なので当面このままにしておく\n                    await this.reconnect();\n                    break;\n                }\n\n                // 視聴セッションが閉じられた（4時のリセットなど）\n                case 'disconnect': {\n                    // 実際に接続が閉じられる前に disconnect メッセージが送られてきたので、\n                    // WebSocket の close メッセージを実行させないようにする\n                    is_disconnect_message_received = true;\n\n                    // 接続切断の理由\n                    let disconnect_reason = `ニコニコ実況との接続が切断されました。(${message.data.reason})`;\n                    switch (message.data.reason) {\n                        case 'TAKEOVER':\n                            disconnect_reason = 'ニコニコ実況の番組から追い出されました。';\n                            break;\n                        case 'NO_PERMISSION':\n                            disconnect_reason = 'ニコニコ実況の番組の座席を取得できませんでした。';\n                            break;\n                        case 'END_PROGRAM':\n                            disconnect_reason = 'ニコニコ実況がリセットされたか、コミュニティの番組が終了しました。';\n                            break;\n                        case 'PING_TIMEOUT':\n                            disconnect_reason = 'コメントサーバーとの接続生存確認に失敗しました。';\n                            break;\n                        case 'TOO_MANY_CONNECTIONS':\n                            disconnect_reason = 'ニコニコ実況の同一ユーザからの接続数上限を越えています。';\n                            break;\n                        case 'TOO_MANY_WATCHINGS':\n                            disconnect_reason = 'ニコニコ実況の同一ユーザからの視聴番組数上限を越えています。';\n                            break;\n                        case 'CROWDED':\n                            disconnect_reason = 'ニコニコ実況の番組が満席です。';\n                            break;\n                        case 'MAINTENANCE_IN':\n                            disconnect_reason = 'ニコニコ実況はメンテナンス中です。';\n                            break;\n                        case 'SERVICE_TEMPORARILY_UNAVAILABLE':\n                            disconnect_reason = 'ニコニコ実況で一時的にサーバーエラーが発生しています。';\n                            break;\n                    }\n\n                    // 接続切断の理由を表示\n                    console.error(`[LiveCommentManager][WatchSession] Disconnected. (Reason: ${message.data.reason})`);\n                    this.player.notice(disconnect_reason);\n\n                    // 5 秒ほど待ってから再接続する\n                    await Utils.sleep(5);\n                    await this.reconnect();\n                    break;\n                }\n            }\n\n        }, { signal: this.abort_controller.signal });\n\n        // コメントサーバーへの接続情報を返す\n        // イベント内で値を返すため、Promise で包む\n        return new Promise((resolve) => {\n            this.watch_session.addEventListener('message', async (event) => {\n                const message = JSON.parse(event.data);\n                if (message.type === 'room') {\n\n                    // vpos の基準時刻のタイムスタンプを取得 (ミリ秒単位)\n                    // vpos は番組開始時間からの累計秒数\n                    this.vpos_base_timestamp = dayjs(message.data.vposBaseTime).valueOf();\n\n                    // コメントサーバーへの接続情報を返す\n                    console.log(`[LiveCommentManager][WatchSession] Connected.\\nThread ID: ${message.data.threadId}\\n`);\n                    return resolve({\n                        is_success: true,\n                        detail: '視聴セッションを取得しました。',\n                        // コメントサーバーへの接続情報\n                        message_server_url: message.data.messageServer.uri,\n                        // コメントサーバー上のスレッド ID\n                        thread_id: message.data.threadId,\n                        // メッセージサーバーから受信するコメント (chat メッセージ) に yourpost フラグを付けるためのキー\n                        your_post_key: (message.data.yourPostKey ? message.data.yourPostKey : null),\n                    });\n                }\n            }, { signal: this.abort_controller.signal });\n        });\n    }\n\n\n    /**\n     * コメントセッションを初期化する\n     * @param comment_session_info コメントサーバーへの接続情報\n     */\n    private initCommentSession(comment_session_info: IWatchSessionResult): void {\n\n        // 初回にドカッと送信されてくる過去コメントを受信し終えるまで格納するバッファ\n        const initial_comments_buffer: ICommentData[] = [];\n\n        // 初回にドカッと送信されてくる過去コメントを受信し終えたかどうかのフラグ\n        let initial_comments_received = false;\n\n        // コメントセッション WebSocket を開く\n        this.comment_session = new WebSocket(comment_session_info.message_server_url);\n\n        // コメントセッション WebSocket を開いたとき\n        this.comment_session.addEventListener('open', () => {\n\n            // コメント送信をリクエスト\n            // このコマンドを送らないとコメントが送信されてこない\n            this.comment_session.send(JSON.stringify([\n                {ping: {content: 'rs:0'}},\n                {ping: {content: 'ps:0'}},\n                {\n                    thread: {\n                        version: '20061206',  // 設定必須\n                        thread: comment_session_info.thread_id,  // スレッド ID\n                        threadkey: comment_session_info.your_post_key,  // スレッドキー\n                        user_id: '',  // ユーザー ID（設定不要らしい）\n                        res_from: -50,  // 最初にコメントを 50 個送信する\n                    }\n                },\n                {ping: {content: 'pf:0'}},\n                {ping: {content: 'rf:0'}},\n            ]));\n\n        }, { signal: this.abort_controller.signal });\n\n        // コメントセッション WebSocket からメッセージを受信したとき\n        this.comment_session.addEventListener('message', async (event) => {\n\n            // メッセージを取得\n            const message = JSON.parse(event.data);\n\n            // 接続失敗\n            if (message.thread !== undefined) {\n                if (message.thread.resultcode !== 0) {\n                    console.error(`[LiveCommentManager][CommentSession] Connection failed. (Code: ${message.thread.resultcode})`);\n                    return;\n                }\n            }\n\n            // ping メッセージのみ\n            // rf:0 が送られてきたら初回にドカッと送信されてくる過去コメントの受信は完了\n            // この時点で初回コメントを一気にコールバックに送る\n            if (message.ping !== undefined && message.ping.content === 'rf:0') {\n                initial_comments_received = true;\n                this.on_initial_comments_received(initial_comments_buffer);\n                return;\n            }\n\n            // コメントデータを取得\n            const comment = message.chat;\n\n            // コメントデータが不正な場合 or 自分のコメントの場合は弾く\n            if ((comment === undefined || comment.content === undefined || comment.content === '') ||\n                (comment.yourpost && comment.yourpost === 1)) {\n                return;\n            }\n\n            // コメントコマンドをパース\n            const { color, position, size } = CommentUtils.parseCommentCommand(comment.mail);\n\n            // ミュート対象のコメントかどうかを判定し、もしそうならここで弾く\n            if (CommentUtils.isMutedComment(comment.content, comment.user_id, color, position, size)) {\n                return;\n            }\n\n            // コメントリストへ追加するオブジェクト\n            const comment_data: ICommentData = {\n                id: comment.no,\n                text: comment.content,\n                time: dayjs(comment.date * 1000).format('HH:mm:ss'),\n                user_id: comment.user_id,\n                my_post: false,\n            };\n\n            // もしまだ初回コメントを受信し終えていないなら、バッファに格納して終了\n            // 初回コメントはプレイヤーには描画しないため問題ない\n            if (initial_comments_received === false) {\n                initial_comments_buffer.push(comment_data);\n                return;\n            }\n\n            // 配信で発生する遅延分待ってから\n            // おおよその遅延時間は video.buffered.end(0) - video.currentTime で取得できる\n            let buffered_end = 0;\n            if (this.player.video.buffered.length >= 1) {\n                buffered_end = this.player.video.buffered.end(0);\n            }\n            const comment_delay_time = buffered_end - this.player.video.currentTime;\n            // console.log(`[LiveCommentManager][CommentSession] Delay: ${comment_delay_time} sec.`)\n            await Utils.sleep(comment_delay_time);\n\n            // コールバック関数を実行\n            this.on_comment_received(comment_data);\n\n            // プレイヤーにコメントを描画する (映像再生時のみ)\n            if (this.player.video.paused === false) {\n                this.player.danmaku.draw({\n                    text: comment.content,\n                    color: color,\n                    type: position,\n                    size: size,\n                });\n            }\n\n        }, { signal: this.abort_controller.signal });\n    }\n\n\n    /**\n     * ニコニコ実況にコメントを送信する\n     * @param options DPlayer のコメントオプション\n     */\n    public sendComment(options: DPlayerType.APIBackendSendOptions): void {\n\n        // DPlayer 上のコメント色（カラーコード）とニコニコの色コマンド定義のマッピング\n        const color_table = {\n            '#FFEAEA': 'white',\n            '#F02840': 'red',\n            '#FD7E80': 'pink',\n            '#FDA708': 'orange',\n            '#FFE133': 'yellow',\n            '#64DD17': 'green',\n            '#00D4F5': 'cyan',\n            '#4763FF': 'blue',\n        };\n\n        // DPlayer 上のコメント位置を表す値とニコニコの位置コマンド定義のマッピング\n        const position_table = {\n            'top': 'ue',\n            'right': 'naka',\n            'bottom': 'shita',\n        };\n\n        // vpos を計算 (10ミリ秒単位)\n        // 番組開始時間からの累計秒らしいけど、なぜ指定しないといけないのかは不明\n        // 小数点以下は丸めないとコメントサーバー側で投稿エラーになる\n        const vpos = Math.round((dayjs().valueOf() - this.vpos_base_timestamp) / 10);\n\n        // 視聴セッションが null か、接続が切れている場合は弾く\n        if (this.watch_session === null || this.watch_session.readyState !== WebSocket.OPEN) {\n            console.error('[LiveCommentManager][WatchSession] Comment sending failed. (Connection is not established.)');\n            options.error('コメントの送信に失敗しました。WebSocket 接続が確立されていません。');\n            return;\n        }\n\n        // コメントを送信\n        this.watch_session.send(JSON.stringify({\n            'type': 'postComment',\n            'data': {\n                // コメント本文\n                'text': options.data.text,\n                // コメントの色\n                'color': color_table[options.data.color.toUpperCase()],\n                // コメント位置\n                'position': position_table[options.data.type],\n                // コメントサイズ (DPlayer とニコニコで表現が共通なため、変換不要)\n                'size': options.data.size,\n                // 番組開始時間からの累計秒 (10ミリ秒単位)\n                'vpos': vpos,\n                // 匿名コメント (184) にするかどうか\n                'isAnonymous': true,\n            }\n        }));\n\n        // コメント送信のレスポンスを取得\n        const abort_controller = new AbortController();\n        this.watch_session.addEventListener('message', (event) => {\n            const message = JSON.parse(event.data);\n            switch (message.type) {\n\n                // postCommentResult が送られてきた → コメント送信に成功している\n                case 'postCommentResult': {\n                    // コメント成功を DPlayer にコールバックで通知\n                    options.success();\n\n                    // イベントリスナーを削除\n                    abort_controller.abort();\n                    break;\n                }\n\n                // コメント送信直後に error が送られてきた → コメント送信に失敗している\n                case 'error': {\n                    // コメント失敗を DPlayer にコールバックで通知\n                    let error = `コメントの送信に失敗しました。(${message.data.code})`;\n                    switch (message.data.code) {\n                        case 'COMMENT_POST_NOT_ALLOWED':\n                            error = 'コメントが許可されていません。';\n                            break;\n                        case 'INVALID_MESSAGE':\n                            error = 'コメント内容が無効です。';\n                            break;\n                    }\n                    console.error(`[LiveCommentManager][WatchSession] Comment sending failed. (Code: ${message.data.code})`);\n                    options.error(error);\n\n                    // イベントリスナーを解除\n                    abort_controller.abort();\n                    break;\n                }\n            }\n        }, { signal: abort_controller.signal });\n    }\n\n\n    /**\n     * 同じ設定でニコニコ実況に再接続する\n     */\n    private async reconnect(): Promise<void> {\n        console.warn('[LiveCommentManager][WatchSession] Reconnecting...');\n        this.player.notice('ニコニコ実況に再接続しています…');\n\n        // 前のセッションを破棄\n        this.destroy();\n\n        // セッションを再初期化\n        const result = await this.initSession();\n        if (result.is_success === false) {\n            console.error('[LiveCommentManager][WatchSession] Reconnection failed.');\n            this.player.notice(result.detail);\n        }\n    }\n\n\n    /**\n     * 視聴セッションとコメントセッションをそれぞれ閉じる\n     */\n    public destroy(): void {\n\n        // セッションに紐いているすべての EventListener を解除\n        // 再接続する場合に備えて AbortController を作り直す\n        this.abort_controller.abort();\n        this.abort_controller = new AbortController();\n\n        // 視聴セッションを閉じる\n        if (this.watch_session !== null) {\n            this.watch_session.close();  // WebSocket を閉じる\n            this.watch_session = null;  // null に戻す\n        }\n\n        // コメントセッションを閉じる\n        if (this.comment_session !== null) {\n            this.comment_session.close();  // WebSocket を閉じる\n            this.comment_session = null;  // null に戻す\n        }\n\n        // 座席保持用のタイマーをクリア\n        window.clearInterval(this.keep_seat_interval_id);\n        this.keep_seat_interval_id = null;\n        this.vpos_base_timestamp = 0;\n\n        console.log('[LiveCommentManager][WatchSession] Destroyed.');\n    }\n}\n\nexport default LiveCommentManager;\n","\n\nimport DPlayer from 'dplayer';\nimport * as DPlayerType from 'dplayer/dist/d.ts/types/DPlayer';\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport CommentMuteSettings from '@/components/Settings/CommentMuteSettings.vue';\nimport LiveCommentManager, { ICommentData } from '@/services/player/LiveCommentManager';\nimport useUserStore from '@/store/UserStore';\nimport Utils, { CommentUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'Panel-CommentTab',\n    components: {\n        CommentMuteSettings,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n\n            // 手動スクロール状態かどうか\n            is_manual_scroll: false,\n\n            // 自動スクロール中かどうか\n            // 自動スクロール中の場合、scroll イベントが発火しても無視する\n            is_auto_scrolling: false,\n\n            // コメントリストの配列\n            comment_list: [] as ICommentData[],\n\n            // コメントリストの要素\n            comment_list_element: null as HTMLElement | null,\n\n            // コメントリストのドロップダウン関連\n            is_comment_list_dropdown_display: false as boolean,\n            comment_list_dropdown_top: 0 as number,\n            comment_list_dropdown_comment: null as ICommentData | null,\n\n            // LiveCommentManager のインスタンス\n            live_comment_manager: null as LiveCommentManager | null,\n\n            // ニコニコ実況セッションの初期化に失敗した際のエラーメッセージ\n            // 視聴中チャンネルのニコニコ実況がないときなどに発生する\n            initialize_failed_message: null as string | null,\n\n            // visibilitychange イベントのリスナー\n            visibilitychange_listener: null as (() => void) | null,\n\n            // ResizeObserver のインスタンス\n            resize_observer: null as ResizeObserver | null,\n\n            // ResizeObserver の監視対象の要素\n            resize_observer_element: null as HTMLElement | null,\n\n            // コメントのミュート設定のモーダルを表示するか\n            comment_mute_settings_modal: false,\n        };\n    },\n    computed: {\n        // UserStore に this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useUserStore),\n    },\n    created() {\n\n        // アカウント情報を更新\n        this.userStore.fetchUser();\n    },\n    mounted() {\n\n        // コメントリストの要素を取得\n        if (this.comment_list_element === null) {\n            this.comment_list_element = this.$el.querySelector('.comment-list');\n        }\n\n        // 現在コメントリストがユーザーイベントでスクロールされているかどうか\n        let is_user_scrolling = false;\n\n        // mousedown → mouseup 中: スクロールバーをマウスでドラッグ\n        // 残念ながらスクロールバーのドラッグ中は mousemove のイベントが発火しないため、直接 is_user_scrolling を設定する\n        this.comment_list_element.onmousedown = (event: MouseEvent) => {\n            // コメントリストの要素の左上を起点としたカーソルのX座標を求める\n            const x = event.clientX - this.comment_list_element.getBoundingClientRect().left;\n            // 座標が clientWidth 以上であれば、スクロールバー上で mousedown されたものとする\n            if (x > this.comment_list_element.clientWidth) is_user_scrolling = true;\n        };\n        this.comment_list_element.onmouseup = (event: MouseEvent) => {\n            // コメントリストの要素の左上を起点としたカーソルのX座標を求める\n            const x = event.clientX - this.comment_list_element.getBoundingClientRect().left;\n            // 座標が clientWidth 以上であれば、スクロールバー上で mouseup されたものとする\n            if (x > this.comment_list_element.clientWidth) is_user_scrolling = false;\n        };\n\n        // ユーザーによるスクロールイベントで is_user_scrolling を true にする\n        // 0.1 秒後に false にする（継続してイベントが発火すれば再び true になる）\n        const on_user_scrolling = () => {\n            is_user_scrolling = true;\n            window.setTimeout(() => is_user_scrolling = false, 100);\n        };\n\n        // 現在コメントリストがドラッグされているかどうか\n        let is_dragging = false;\n        // touchstart → touchend 中: スクロールバーをタップでドラッグ\n        this.comment_list_element.ontouchstart = () => is_dragging = true;\n        this.comment_list_element.ontouchend = () => is_dragging = false;\n        // touchmove + is_dragging 中: コメントリストをタップでドラッグしてスクロール\n        this.comment_list_element.ontouchmove = () => is_dragging === true ? on_user_scrolling(): '';\n\n        // wheel 中: マウスホイールの回転\n        this.comment_list_element.onwheel = on_user_scrolling;\n\n        // コメントリストがスクロールされた際、自動スクロール中でない&ユーザーイベントで操作されていれば、手動スクロールモードに設定\n        // 手動スクロールモードでは自動スクロールを行わず、ユーザーがコメントリストをスクロールできるようにする\n        this.comment_list_element.onscroll = async () => {\n\n            // scroll イベントは自動スクロールでも発火してしまうので、ユーザーイベントによるスクロールかを確認しないといけない\n            // 自動スクロール中かどうかは is_auto_scrolling が true のときで判定できるはずだが、\n            // コメントが多くなると is_auto_scrolling が false なのに scroll イベントが遅れて発火してしまうことがある\n            if (this.is_auto_scrolling === false && is_user_scrolling === true) {\n\n                // 手動スクロールを有効化\n                this.is_manual_scroll = true;\n\n                // イベント発火時点では scrollTop の値が完全に下にスクロールされていない場合があるため、0.1秒だけ待つ\n                await Utils.sleep(0.1);\n\n                // 一番下までスクロールされていたら自動スクロールに戻す\n                if ((this.comment_list_element.scrollTop + this.comment_list_element.offsetHeight) >\n                    (this.comment_list_element.scrollHeight - 10)) {  // 一番下から 10px 以内\n                    this.is_manual_scroll = false;  // 手動スクロールを無効化\n                }\n            }\n        };\n    },\n    // 終了前に実行\n    beforeDestroy() {\n\n        // ニコニコ実況セッションを破棄\n        this.destroy();\n\n        // ResizeObserver を終了\n        if (this.resize_observer !== null) {\n            this.resize_observer.unobserve(this.resize_observer_element);\n        }\n    },\n    methods: {\n\n        // ドロップダウンメニューを表示する\n        showCommentListDropdown(event: Event, comment: ICommentData) {\n            const comment_list_wrapper_rect = (this.$refs.comment_list_wrapper as HTMLDivElement).getBoundingClientRect();\n            const comment_list_dropdown_height = 76;  // 76px はドロップダウンメニューの高さ\n            const comment_button_rect = (event.currentTarget as HTMLElement).getBoundingClientRect();\n            // メニューの表示位置をクリックされたコメントに合わせる\n            this.comment_list_dropdown_top = comment_button_rect.top - comment_list_wrapper_rect.top;\n            // メニューがコメントリストからはみ出るときだけ、表示位置を上側に調整\n            if ((this.comment_list_dropdown_top + comment_list_dropdown_height) > comment_list_wrapper_rect.height) {\n                this.comment_list_dropdown_top = this.comment_list_dropdown_top - comment_list_dropdown_height + comment_button_rect.height;\n            }\n            // 表示位置を調整できたので、メニューを表示\n            this.comment_list_dropdown_comment = comment;\n            this.is_comment_list_dropdown_display = true;\n        },\n\n        // ドロップダウンメニューを非表示にする\n        hideCommentListDropdown() {\n            this.is_comment_list_dropdown_display = false;\n            this.comment_list = this.comment_list.filter((comment) => {\n                return CommentUtils.isMutedComment(comment.text, comment.user_id) === false;\n            });\n        },\n\n        // ミュートするキーワードを追加する\n        addMutedKeywords() {\n            CommentUtils.addMutedKeywords(this.comment_list_dropdown_comment.text);\n            this.hideCommentListDropdown();\n        },\n\n        // ミュートするニコニコユーザー ID を追加する\n        addMutedNiconicoUserIds() {\n            CommentUtils.addMutedNiconicoUserIDs(this.comment_list_dropdown_comment.user_id);\n            this.hideCommentListDropdown();\n        },\n\n        // コメントリストを一番下までスクロールする\n        async scrollCommentList(smooth: boolean = false) {\n\n            // ドロップダウンメニュー表示中なら手動スクロールモードに設定\n            if (this.is_comment_list_dropdown_display === true) {\n                this.is_manual_scroll = true;\n            }\n\n            // 手動スクロールモードの時は実行しない\n            if (this.is_manual_scroll === true) return;\n\n            // 自動スクロール中のフラグを立てる\n            this.is_auto_scrolling = true;\n\n            // 0.01 秒待って実行し、念押しで2回実行しないと完全に最下部までスクロールされない…（ブラウザの描画バグ？）\n            // this.$nextTick() は効かなかった\n            for (let index = 0; index < 3; index++) {\n                await Utils.sleep(0.01);\n                if (smooth === true) {  // スムーズスクロール\n                    this.comment_list_element.scrollTo({top: this.comment_list_element.scrollHeight, left: 0, behavior: 'smooth'});\n                } else {\n                    this.comment_list_element.scrollTo(0, this.comment_list_element.scrollHeight);\n                }\n            }\n\n            // 0.1 秒待つ（重要）\n            await Utils.sleep(0.1);\n\n            // 自動スクロール中のフラグを降ろす\n            this.is_auto_scrolling = false;\n        },\n\n        // リサイズ時のイベントを初期化\n        // プレイヤーが初期化される毎に実行する必要がある\n        initReserveObserver() {\n\n            // 以前に初期化された ResizeObserver を終了\n            if (this.resize_observer !== null) {\n                this.resize_observer.unobserve(this.resize_observer_element);\n            }\n\n            // 監視対象の要素\n            this.resize_observer_element = document.querySelector('.watch-player');\n\n            // タイムアウト ID\n            // 一時的に無効にした transition を有効化する際に利用する\n            let animation_timeout_id = null;\n\n            // プレイヤーの要素がリサイズされた際に発火するイベント\n            const on_resize = () => {\n\n                // 映像の要素\n                const video_element = document.querySelector('.dplayer-video-wrap-aspect');\n\n                // コメント描画領域の要素\n                const comment_area_element = document.querySelector<HTMLElement>('.dplayer-danmaku');\n\n                // プレイヤー全体と映像の高さの差（レターボックス）から、コメント描画領域の高さを狭める必要があるかを判定する\n                // 2で割っているのは単体の差を測るため\n                if (this.resize_observer_element === null || this.resize_observer_element.clientHeight === null) return;\n                if (video_element === null || video_element.clientHeight === null) return;\n                const letter_box_height = (this.resize_observer_element.clientHeight - video_element.clientHeight) / 2;\n\n                const threshold = Utils.isSmartphoneVertical() ? 0 : window.matchMedia('(max-height: 450px)').matches ? 50 : 66;\n                if (letter_box_height < threshold) {\n\n                    // コメント描画領域に必要な上下マージン\n                    const comment_area_vertical_margin = (threshold - letter_box_height) * 2;\n\n                    // 狭めるコメント描画領域の幅\n                    // 映像の要素の幅をそのまま利用する\n                    const comment_area_width = video_element.clientWidth;\n\n                    // 狭めるコメント描画領域の高さ\n                    const comment_area_height = video_element.clientHeight - comment_area_vertical_margin;\n\n                    // 狭めるコメント描画領域のアスペクト比を求める\n                    // https://tech.arc-one.jp/asepct-ratio/\n                    const gcd = (x: number, y: number) => {  // 最大公約数を求める関数\n                        if (y === 0) return x;\n                        return gcd(y, x % y);\n                    };\n                    // 幅と高さの最大公約数を求める\n                    const gcd_result = gcd(comment_area_width, comment_area_height);\n                    // 幅と高さをそれぞれ最大公約数で割ってアスペクト比を算出\n                    const comment_area_height_aspect = `${comment_area_width / gcd_result} / ${comment_area_height / gcd_result}`;\n\n                    // 一時的に transition を無効化する\n                    // アスペクト比の設定は連続して行われるが、その際に transition が適用されるとワンテンポ遅れたアニメーションになってしまう\n                    comment_area_element.style.transition = 'none';\n\n                    // コメント描画領域に算出したアスペクト比を設定する\n                    comment_area_element.style.setProperty('--comment-area-aspect-ratio', comment_area_height_aspect);\n\n                    // コメント描画領域に必要な上下マージンを設定する\n                    comment_area_element.style.setProperty('--comment-area-vertical-margin', `${comment_area_vertical_margin}px`);\n\n                    // 以前セットされた setTimeout() を止める\n                    window.clearTimeout(animation_timeout_id);\n\n                    // 0.2秒後に実行する\n                    // 0.2秒より前にもう一度リサイズイベントが来た場合はタイマーがクリアされるため実行されない\n                    window.setTimeout(() => {\n\n                        // 再び transition を有効化する\n                        comment_area_element.style.transition = '';\n\n                    }, 0.2 * 1000);\n\n                } else {\n\n                    // コメント描画領域に設定したアスペクト比・上下マージンを削除する\n                    comment_area_element.style.removeProperty('--comment-area-aspect-ratio');\n                    comment_area_element.style.removeProperty('--comment-area-vertical-margin');\n                }\n            };\n\n            // 要素の監視を開始\n            this.resize_observer = new ResizeObserver(on_resize);\n            this.resize_observer.observe(this.resize_observer_element);\n\n            // 0.6 秒待ってから初回実行\n            // チャンネル切り替え後、再初期化されたプレイヤーに適用するため（早いと再初期化前のプレイヤーに適用されてしまう）\n            window.setTimeout(on_resize, 0.6 * 1000);\n        },\n\n        // ニコニコ実況に接続し、セッションを初期化する\n        async initSession(player: DPlayer, channel_id: string) {\n\n            // リサイズ時のイベントを初期化\n            // イベントはプレイヤーの DOM に紐づいているため、プレイヤーが破棄→再初期化される毎に実行する必要がある\n            this.initReserveObserver();\n\n            // タブが非表示状態のときにコメントを格納する配列\n            // タブが表示状態になったらコメントリストにのみ表示する（遅れているのでプレイヤーには表示しない）\n            const comment_list_buffer: ICommentData[] = [];\n\n            // コメントの最大保持数\n            const max_comment_count = 500;\n\n            // LiveCommentManager を初期化\n            this.live_comment_manager = new LiveCommentManager(\n                // DPlayer のインスタンス\n                player,\n                // チャンネル ID\n                channel_id,\n\n                // 初回の過去コメント (最大50件) を受信したときのコールバック\n                async (initial_comments) => {\n\n                    // コメントリストに一括で追加\n                    this.comment_list.push(...initial_comments);\n\n                    // コメントリストを一番下までスクロール\n                    this.scrollCommentList();\n                },\n\n                // コメントを受信したときのコールバック\n                // プレイヤーへの描画は LiveCommentManager が行う\n                async (comment) => {\n\n                    // タブが非表示状態のときは、バッファにコメントを追加するだけで終了する\n                    // ここで追加すると、タブが表示状態になったときに一斉に描画されて大変なことになる\n                    if (document.visibilityState === 'hidden') {\n                        comment_list_buffer.push(comment);\n                        return;\n                    }\n\n                    // コメントリストのコメント数が max_comment_count 件を超えたら、古いものから順に削除する\n                    // 仮想スクロールとはいえ、さすがに max_comment_count 件を超えると重くなりそう\n                    // 手動スクロール時は実行しない\n                    if (this.comment_list.length >= max_comment_count && this.is_manual_scroll === false) {\n                        this.comment_list.splice(0, Math.max(0, this.comment_list.length - max_comment_count));\n                    }\n\n                    // コメントリストに追加\n                    this.comment_list.push(comment);\n\n                    // コメントリストを一番下までスクロール\n                    this.scrollCommentList();\n                },\n            );\n\n            // タブが表示状態になったときのイベント\n            this.visibilitychange_listener = () => {\n                if (document.visibilityState === 'visible') {\n\n                    // コメントリスト + バッファの合計コメント数が max_comment_count 件を超えたら、\n                    // コメントリスト内のコメントを古いものから順に削除し、max_comment_count 件になるようにする\n                    const comment_list_and_buffer_length = this.comment_list.length + comment_list_buffer.length;\n                    if (comment_list_and_buffer_length >= max_comment_count && this.is_manual_scroll === false) {\n                        this.comment_list.splice(0, Math.max(0, comment_list_and_buffer_length - max_comment_count));\n                    }\n\n                    // バッファ内のコメントをコメントリストに一括で追加する\n                    this.comment_list.push(...comment_list_buffer);\n                    comment_list_buffer.length = 0;  // バッファを空にする\n\n                    // コメントリストを一番下までスクロール\n                    this.scrollCommentList();\n                }\n            };\n            document.addEventListener('visibilitychange', this.visibilitychange_listener);\n\n            // ニコニコ実況セッションを初期化する\n            const result = await this.live_comment_manager.initSession();\n\n            // ニコニコ実況セッションの初期化に失敗した\n            // 初期化に失敗した際のエラーメッセージを保存しておく (エラー表示などで利用する)\n            // プレイヤーへのエラー表示はすでに LiveCommentManager の方で行われているので、ここでは何もしない\n            if (result.is_success === false) {\n                this.initialize_failed_message = result.detail;\n            }\n        },\n\n        // コメントを送信する\n        sendComment(options: DPlayerType.APIBackendSendOptions) {\n\n            // 初期化に失敗しているときは実行せず、保存しておいたエラーメッセージを表示する\n            if (this.initialize_failed_message !== null) {\n                options.error(this.initialize_failed_message);\n                return;\n            }\n\n            // バリデーション\n            if (this.userStore.user === null) {\n                options.error('コメントするには、KonomiTV アカウントにログインしてください。');\n                return;\n            }\n            if (this.userStore.user.niconico_user_id === null) {\n                options.error('コメントするには、ニコニコアカウントと連携してください。');\n                return;\n            }\n            if (this.userStore.user.niconico_user_premium === false && (options.data.type === 'top' || options.data.type === 'bottom')) {\n                options.error('コメントを上下に固定するには、ニコニコアカウントのプレミアム会員登録が必要です。');\n                return;\n            }\n            if (this.userStore.user.niconico_user_premium === false && options.data.size === 'big') {\n                options.error('コメントサイズを大きめに設定するには、ニコニコアカウントのプレミアム会員登録が必要です。');\n                return;\n            }\n\n            // ニコニコ実況のコメントサーバーにコメントを送信\n            this.live_comment_manager.sendComment(options);\n        },\n\n        // ニコニコ実況セッションを破棄する\n        destroy() {\n\n            // タブの表示/非表示の状態が切り替わったときのイベントを削除\n            if (this.visibilitychange_listener !== null) {\n                document.removeEventListener('visibilitychange', this.visibilitychange_listener);\n                this.visibilitychange_listener = null;\n            }\n\n            // LiveCommentManager を破棄\n            if (this.live_comment_manager !== null) {\n                this.live_comment_manager.destroy();\n                this.live_comment_manager = null;\n            }\n\n            this.initialize_failed_message = null;\n            this.comment_list = [];\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Comment.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Comment.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Comment.vue?vue&type=template&id=06220902&scoped=true&\"\nimport script from \"./Comment.vue?vue&type=script&lang=ts&\"\nexport * from \"./Comment.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Comment.vue?vue&type=style&index=0&id=06220902&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"06220902\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"program-container\"},[_c('section',{staticClass:\"program-broadcaster\"},[_c('img',{staticClass:\"program-broadcaster__icon\",attrs:{\"src\":`${_vm.Utils.api_base_url}/channels/${(_vm.channelsStore.channel_id)}/logo`}}),_c('div',{staticClass:\"program-broadcaster__number\"},[_vm._v(\"Ch: \"+_vm._s(_vm.channelsStore.channel.current.channel_number))]),_c('div',{staticClass:\"program-broadcaster__name\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.channel_name))])]),_c('section',{staticClass:\"program-info\"},[_c('h1',{staticClass:\"program-info__title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channelsStore.channel.current.program_present, 'title'))}}),_c('div',{staticClass:\"program-info__time\"},[_vm._v(\" \"+_vm._s(_vm.ProgramUtils.getProgramTime(_vm.channelsStore.channel.current.program_present))+\" \")]),_c('div',{staticClass:\"program-info__description\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channelsStore.channel.current.program_present, 'description'))}}),_c('div',{staticClass:\"program-info__genre-container\"},_vm._l((_vm.ProgramUtils.getAttribute(_vm.channelsStore.channel.current.program_present, 'genre', [])),function(genre,genre_index){return _c('div',{key:genre_index,staticClass:\"program-info__genre\"},[_vm._v(\" \"+_vm._s(genre.major)+\" / \"+_vm._s(genre.middle)+\" \")])}),0),_c('div',{staticClass:\"program-info__next\"},[_c('span',{staticClass:\"program-info__next-decorate\"},[_vm._v(\"NEXT\")]),_c('Icon',{staticClass:\"program-info__next-icon\",attrs:{\"icon\":\"fluent:fast-forward-20-filled\",\"width\":\"16px\"}})],1),_c('span',{staticClass:\"program-info__next-title\",domProps:{\"innerHTML\":_vm._s(_vm.ProgramUtils.decorateProgramInfo(_vm.channelsStore.channel.current.program_following, 'title'))}}),_c('div',{staticClass:\"program-info__next-time\"},[_vm._v(\" \"+_vm._s(_vm.ProgramUtils.getProgramTime(_vm.channelsStore.channel.current.program_following))+\" \")]),_c('div',{staticClass:\"program-info__status\"},[_c('div',{staticClass:\"program-info__status-force\",class:`program-info__status-force--${_vm.ChannelUtils.getChannelForceType(_vm.channelsStore.channel.current.channel_force)}`},[_c('Icon',{attrs:{\"icon\":\"fa-solid:fire-alt\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"勢い:\")]),_c('span',{staticClass:\"ml-2\"},[_vm._v(_vm._s(_vm.ProgramUtils.getAttribute(_vm.channelsStore.channel.current, 'channel_force', '--'))+\" コメ/分\")])],1),_c('div',{staticClass:\"program-info__status-viewers ml-5\"},[_c('Icon',{attrs:{\"icon\":\"fa-solid:eye\",\"height\":\"14px\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"視聴数:\")]),_c('span',{staticClass:\"ml-1\"},[_vm._v(_vm._s(_vm.channelsStore.channel.current.viewers))])],1)])]),_c('section',{staticClass:\"program-detail-container\"},_vm._l((_vm.ProgramUtils.getAttribute(_vm.channelsStore.channel.current.program_present, 'detail', {})),function(detail_text,detail_heading){return _c('div',{key:detail_heading,staticClass:\"program-detail\"},[_c('h2',{staticClass:\"program-detail__heading\"},[_vm._v(_vm._s(detail_heading))]),_c('div',{staticClass:\"program-detail__text\",domProps:{\"innerHTML\":_vm._s(_vm.Utils.URLtoLink(detail_text))}})])}),0)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport useChannelsStore from '@/store/ChannelsStore';\nimport Utils, { ChannelUtils, ProgramUtils } from '@/utils';\n\nexport default Vue.extend({\n    name: 'Panel-ProgramTab',\n    data() {\n        return {\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            ChannelUtils: ChannelUtils,\n            ProgramUtils: ProgramUtils,\n        };\n    },\n    computed: {\n        // ChannelsStore に this.channelsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useChannelsStore),\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Program.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Program.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Program.vue?vue&type=template&id=39cbf74c&scoped=true&\"\nimport script from \"./Program.vue?vue&type=script&lang=ts&\"\nexport * from \"./Program.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Program.vue?vue&type=style&index=0&id=39cbf74c&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"39cbf74c\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"twitter-container\"},[_c('v-dialog',{attrs:{\"content-class\":\"zoom-capture-modal-container\",\"max-width\":\"980\",\"transition\":\"slide-y-transition\"},model:{value:(_vm.zoom_capture_modal),callback:function ($$v) {_vm.zoom_capture_modal=$$v},expression:\"zoom_capture_modal\"}},[_c('div',{staticClass:\"zoom-capture-modal\"},[_c('img',{staticClass:\"zoom-capture-modal__image\",attrs:{\"src\":_vm.zoom_capture ? _vm.zoom_capture.image_url: ''}}),_c('a',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"zoom-capture-modal__download\",attrs:{\"href\":_vm.zoom_capture ? _vm.zoom_capture.image_url : '',\"download\":_vm.zoom_capture ? _vm.zoom_capture.filename : ''}},[_c('Icon',{attrs:{\"icon\":\"fa6-solid:download\",\"width\":\"45px\"}})],1)])]),_c('div',{staticClass:\"tab-container\"},[_c('div',{staticClass:\"tab-content\",class:{'tab-content--active': _vm.twitter_active_tab === 'Capture'}},[_c('div',{staticClass:\"captures\"},_vm._l((_vm.captures),function(capture){return _c('div',{key:capture.image_url,staticClass:\"capture\",class:{\n                        'capture--selected': capture.selected,\n                        'capture--focused': capture.focused,\n                        'capture--disabled': !capture.selected && _vm.tweet_captures.length >= 4,\n                    },on:{\"click\":function($event){return _vm.clickCapture(capture)}}},[_c('img',{staticClass:\"capture__image\",attrs:{\"src\":capture.image_url}}),_c('div',{staticClass:\"capture__disabled-cover\"}),_c('div',{staticClass:\"capture__selected-number\"},[_vm._v(_vm._s(_vm.tweet_captures.findIndex(blob => blob === capture.blob) + 1))]),_c('Icon',{staticClass:\"capture__selected-checkmark\",attrs:{\"icon\":\"fluent:checkmark-circle-16-filled\"}}),_c('div',{staticClass:\"capture__selected-border\"}),_c('div',{staticClass:\"capture__focused-border\"}),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"capture__zoom\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.zoom_capture_modal = true; _vm.zoom_capture = capture},\"mousedown\":function($event){$event.preventDefault();$event.stopPropagation();/* 親要素の波紋が広がらないように */}}},[_c('Icon',{attrs:{\"icon\":\"fluent:zoom-in-16-regular\",\"width\":\"32px\"}})],1)],1)}),0),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.captures.length === 0),expression:\"captures.length === 0\"}],staticClass:\"capture-announce\"},[_c('div',{staticClass:\"capture-announce__heading\"},[_vm._v(\"まだキャプチャがありません。\")]),_vm._m(0)])])]),_c('div',{staticClass:\"tab-button-container\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Search'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Search'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:search-16-filled\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"ツイート検索\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Timeline'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Timeline'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:home-16-regular\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"タイムライン\")])],1),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tab-button\",class:{'tab-button--active': _vm.twitter_active_tab === 'Capture'},on:{\"click\":function($event){_vm.twitter_active_tab = 'Capture'}}},[_c('Icon',{attrs:{\"icon\":\"fluent:image-copy-20-regular\",\"height\":\"18px\"}}),_c('span',{staticClass:\"tab-button__text\"},[_vm._v(\"キャプチャ\")])],1)]),_c('div',{staticClass:\"tweet-form\",class:{\n        'tweet-form--focused': _vm.is_tweet_hashtag_form_focused || _vm.is_tweet_text_form_focused,\n        'tweet-form--virtual-keyboard-display': _vm.is_virtual_keyboard_display &&\n            (_vm.Utils.hasActiveElementClass('tweet-form__hashtag-form') || _vm.Utils.hasActiveElementClass('tweet-form__textarea')) &&\n            (() => {_vm.is_hashtag_list_display = false; return true;})(),\n    }},[_c('div',{staticClass:\"tweet-form__hashtag\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.tweet_hashtag),expression:\"tweet_hashtag\"}],staticClass:\"tweet-form__hashtag-form\",attrs:{\"type\":\"search\",\"placeholder\":\"#ハッシュタグ\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.tweet_hashtag)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.tweet_hashtag=$event.target.value},function($event){return _vm.updateTweetLetterCount()}],\"focus\":function($event){_vm.is_tweet_hashtag_form_focused = true},\"blur\":function($event){_vm.is_tweet_hashtag_form_focused = false},\"change\":function($event){_vm.tweet_hashtag = _vm.formatHashtag(_vm.tweet_hashtag)}}}),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tweet-form__hashtag-list-button\",on:{\"click\":function($event){return _vm.clickHashtagListButton()}}},[_c('Icon',{attrs:{\"icon\":\"fluent:clipboard-text-ltr-32-regular\",\"height\":\"22px\"}})],1)]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.tweet_text),expression:\"tweet_text\"}],ref:\"tweet_text\",staticClass:\"tweet-form__textarea\",attrs:{\"placeholder\":\"ツイート\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.tweet_text)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.tweet_text=$event.target.value},function($event){return _vm.updateTweetLetterCount()}],\"paste\":function($event){return _vm.pasteClipboardData($event)},\"focus\":function($event){_vm.is_tweet_text_form_focused = true},\"blur\":function($event){_vm.is_tweet_text_form_focused = false}}}),_c('div',{staticClass:\"tweet-form__control\"},[_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"account-button\",class:{'account-button--no-login': !_vm.is_logged_in_twitter},on:{\"click\":function($event){return _vm.clickAccountButton()}}},[_c('img',{staticClass:\"account-button__icon\",attrs:{\"src\":_vm.is_logged_in_twitter ? _vm.selected_twitter_account.icon_url : '/assets/images/account-icon-default.png'}}),_c('span',{staticClass:\"account-button__screen-name\"},[_vm._v(\" \"+_vm._s(_vm.is_logged_in_twitter ? `@${_vm.selected_twitter_account.screen_name}` : '連携されていません')+\" \")]),_c('Icon',{staticClass:\"account-button__menu\",attrs:{\"icon\":\"fluent:more-circle-20-regular\",\"width\":\"22px\"}})],1),_c('div',{staticClass:\"limit-meter\"},[_c('div',{staticClass:\"limit-meter__content\",class:{\n                    'limit-meter__content--yellow': _vm.tweet_letter_count <= 20,\n                    'limit-meter__content--red': _vm.tweet_letter_count <= 0,\n                }},[_c('Icon',{staticStyle:{\"margin-right\":\"-2px\"},attrs:{\"icon\":\"fa-brands:twitter\",\"width\":\"12px\"}}),_c('span',[_vm._v(_vm._s(_vm.tweet_letter_count))])],1),_c('div',{staticClass:\"limit-meter__content\"},[_c('Icon',{attrs:{\"icon\":\"fluent:image-16-filled\",\"width\":\"14px\"}}),_c('span',[_vm._v(_vm._s(_vm.tweet_captures.length)+\"/4\")])],1)]),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"tweet-button\",attrs:{\"disabled\":!_vm.is_logged_in_twitter || _vm.tweet_letter_count < 0 ||\n                    (_vm.tweet_letter_count === 140 && _vm.tweet_captures.length === 0)},on:{\"click\":function($event){return _vm.sendTweet()}}},[_c('Icon',{attrs:{\"icon\":\"fa-brands:twitter\",\"height\":\"16px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ツイート\")])],1)])]),_c('div',{staticClass:\"hashtag-list\",class:{\n        'hashtag-list--display': _vm.is_hashtag_list_display,\n        'hashtag-list--virtual-keyboard-display': _vm.is_virtual_keyboard_display && _vm.Utils.hasActiveElementClass('hashtag__input'),\n    }},[_c('div',{staticClass:\"hashtag-heading\"},[_c('div',{staticClass:\"hashtag-heading__text\"},[_c('Icon',{attrs:{\"icon\":\"charm:hash\",\"width\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"ハッシュタグリスト\")])],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag-heading__add-button\",on:{\"click\":function($event){_vm.saved_twitter_hashtags.push({id: _vm.Utils.time(), text: '#ここにハッシュタグを入力', editing: false})}}},[_c('Icon',{attrs:{\"icon\":\"fluent:add-12-filled\",\"width\":\"17px\"}}),_c('span',{staticClass:\"ml-1\"},[_vm._v(\"追加\")])],1)]),_c('draggable',{staticClass:\"hashtag-container\",attrs:{\"handle\":\".hashtag__sort-handle\"},model:{value:(_vm.saved_twitter_hashtags),callback:function ($$v) {_vm.saved_twitter_hashtags=$$v},expression:\"saved_twitter_hashtags\"}},_vm._l((_vm.saved_twitter_hashtags),function(hashtag){return _c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\",value:(!hashtag.editing),expression:\"!hashtag.editing\"}],key:hashtag.id,staticClass:\"hashtag\",class:{'hashtag--editing': hashtag.editing},on:{\"click\":function($event){return _vm.clickHashtag(hashtag)}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(hashtag.text),expression:\"hashtag.text\"}],staticClass:\"hashtag__input\",attrs:{\"type\":\"search\",\"spellcheck\":\"false\",\"disabled\":!hashtag.editing},domProps:{\"value\":(hashtag.text)},on:{\"click\":function($event){$event.stopPropagation();},\"input\":function($event){if($event.target.composing)return;_vm.$set(hashtag, \"text\", $event.target.value)}}}),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag__edit-button\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();hashtag.editing = !hashtag.editing; hashtag.text = _vm.formatHashtag(hashtag.text, true)}}},[_c('Icon',{attrs:{\"icon\":hashtag.editing ? 'fluent:checkmark-16-filled': 'fluent:edit-16-filled',\"width\":\"17px\"}})],1),_c('button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"hashtag__delete-button\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_vm.saved_twitter_hashtags.splice(_vm.saved_twitter_hashtags.indexOf(hashtag), 1)}}},[_c('Icon',{attrs:{\"icon\":\"fluent:delete-16-filled\",\"width\":\"17px\"}})],1),_c('div',{staticClass:\"hashtag__sort-handle\"},[_c('Icon',{attrs:{\"icon\":\"material-symbols:drag-handle-rounded\",\"width\":\"17px\"}})],1)])}),0)],1),_c('div',{staticClass:\"twitter-account-list\",class:{'twitter-account-list--display': _vm.is_twitter_account_list_display}},_vm._l((_vm.userStore.user ? _vm.userStore.user.twitter_accounts : []),function(twitter_account){return _c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],key:twitter_account.id,staticClass:\"twitter-account\",on:{\"click\":function($event){return _vm.updateSelectedTwitterAccount(twitter_account)}}},[_c('img',{staticClass:\"twitter-account__icon\",attrs:{\"src\":twitter_account.icon_url}}),_c('div',{staticClass:\"twitter-account__info\"},[_c('div',{staticClass:\"twitter-account__name\"},[_vm._v(_vm._s(twitter_account.name))]),_c('div',{staticClass:\"twitter-account__screen-name\"},[_vm._v(\"@\"+_vm._s(twitter_account.screen_name))])]),_c('Icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(twitter_account.id === _vm.settingsStore.settings.selected_twitter_account_id),expression:\"twitter_account.id === settingsStore.settings.selected_twitter_account_id\"}],staticClass:\"twitter-account__check\",attrs:{\"icon\":\"fluent:checkmark-16-filled\",\"width\":\"24px\"}})],1)}),0)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"capture-announce__text\"},[_c('p',{staticClass:\"mt-0 mb-0\"},[_vm._v(\"プレイヤーのキャプチャボタンやショートカットキーでキャプチャを撮ると、ここに表示されます。\")]),_c('p',{staticClass:\"mt-2 mb-0\"},[_vm._v(\"表示されたキャプチャを選択してからツイートすると、キャプチャを付けてツイートできます。\")])])\n}]\n\nexport { render, staticRenderFns }","\n\nimport DPlayer from 'dplayer';\nimport { mapStores } from 'pinia';\nimport Vue, { PropType } from 'vue';\nimport draggable from 'vuedraggable';\n\nimport Twitter from '@/services/Twitter';\nimport { ITwitterAccount } from '@/services/Users';\nimport useChannelsStore from '@/store/ChannelsStore';\nimport useSettingsStore from '@/store/SettingsStore';\nimport useUserStore from '@/store/UserStore';\nimport Utils from '@/utils';\n\n// このコンポーネント内でのキャプチャのインターフェイス\ninterface ITweetCapture {\n    blob: Blob;\n    filename: string;\n    image_url: string;\n    selected: boolean;\n    focused: boolean;\n}\n\n// このコンポーネント内でのハッシュタグのインターフェイス\ninterface IHashtag {\n    id: number;\n    text: string;\n    editing: boolean;\n}\n\nexport default Vue.extend({\n    name: 'Panel-TwitterTab',\n    components: {\n        draggable,\n    },\n    props: {\n        // プレイヤーのインスタンス\n        player: {\n            type: null as PropType<DPlayer>,  // 代入当初は null になるため苦肉の策\n            required: true,\n        },\n        // 仮想キーボードが表示されているかどうか\n        is_virtual_keyboard_display: {\n            type: Boolean as PropType<boolean>,\n            required: true,\n        },\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n\n            // Twitter アカウントを1つでも連携しているかどうか\n            is_logged_in_twitter: false,\n\n            // 現在ツイート対象として選択されている Twitter アカウント\n            selected_twitter_account: null as ITwitterAccount | null,\n\n            // 連携している Twitter アカウントリストを表示しているか\n            is_twitter_account_list_display: false,\n\n            // 保存している Twitter のハッシュタグが入るリスト\n            saved_twitter_hashtags: useSettingsStore().settings.saved_twitter_hashtags.map((hashtag, index) => {\n                // id プロパティは :key=\"\" に指定するためにつける ID (ミリ秒単位のタイムスタンプ + index で適当に一意になるように)\n                return {id: Utils.time() + index, text: hashtag, editing: false} as IHashtag;\n            }),\n\n            // ハッシュタグリストを表示しているか\n            is_hashtag_list_display: false,\n\n            // デフォルトで表示される Twitter タブ内のタブ\n            twitter_active_tab: useSettingsStore().settings.twitter_active_tab,\n\n            // キャプチャを拡大表示するモーダルの表示状態\n            zoom_capture_modal: false,\n\n            // 現在モーダルで拡大表示中のキャプチャのオブジェクト\n            zoom_capture: null as ITweetCapture | null,\n\n            // キャプチャリスト\n            captures: [] as ITweetCapture[],\n\n            // キャプチャリストの要素\n            captures_element: null as HTMLDivElement | null,\n\n            // ツイートハッシュタグフォームにフォーカスしているか\n            is_tweet_hashtag_form_focused: false,\n\n            // ツイート本文フォームにフォーカスしているか\n            is_tweet_text_form_focused: false,\n\n            // ツイートのハッシュタグ\n            tweet_hashtag: '',\n\n            // ツイート本文\n            tweet_text: '',\n\n            // ツイートに添付するキャプチャの Blob のリスト\n            tweet_captures: [] as Blob[],\n\n            // 文字数カウント\n            tweet_letter_count: 140,\n        };\n    },\n    computed: {\n        // ChannelsStore / SettingsStore / UserStore に this.channelsStore / this.settingsStore / this.userStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useChannelsStore, useSettingsStore, useUserStore),\n    },\n    async created() {\n\n        // アカウント情報を更新\n        await this.userStore.fetchUser();\n\n        // ログイン時のみ\n        if (this.userStore.is_logged_in === true) {\n\n            // 連携している Twitter アカウントがあれば true に設定\n            if (this.userStore.user.twitter_accounts.length > 0) {\n                this.is_logged_in_twitter = true;\n\n                // 現在ツイート対象として選択されている Twitter アカウントの ID が設定されていない or ID に紐づく Twitter アカウントがない\n                // 連携している Twitter アカウントのうち、一番最初のものを自動選択する\n                // ここで言う Twitter アカウントの ID は DB 上で連番で振られるもので、Twitter アカウントそのものの固有 ID ではない\n                if (this.settingsStore.settings.selected_twitter_account_id === null ||\n                    !this.userStore.user.twitter_accounts.some((twitter_account) => {\n                        return twitter_account.id === this.settingsStore.settings.selected_twitter_account_id;\n                    })) {\n                    this.settingsStore.settings.selected_twitter_account_id = this.userStore.user.twitter_accounts[0].id;\n                }\n\n                // 現在ツイート対象として選択されている Twitter アカウントを取得・設定\n                const twitter_account_index = this.userStore.user.twitter_accounts.findIndex((twitter_account) => {\n                    // Twitter アカウントの ID が選択されているものと一致する\n                    return twitter_account.id === this.settingsStore.settings.selected_twitter_account_id;\n                });\n                this.selected_twitter_account = this.userStore.user.twitter_accounts[twitter_account_index];\n            }\n        }\n\n        // 局タグ追加処理を走らせる (ハッシュタグフォームのフォーマット処理も同時に行われるが、元々空なので無意味)\n        this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag);\n    },\n    beforeDestroy() {\n        // 終了前にすべてのキャプチャの Blob URL を revoke してリソースを解放する\n        for (const capture of this.captures) {\n            URL.revokeObjectURL(capture.image_url);\n        }\n    },\n    watch: {\n\n        // 保存しているハッシュタグが変更されたら随時 LocalStorage に保存する\n        saved_twitter_hashtags: {\n            deep: true,\n            handler() {\n                this.settingsStore.settings.saved_twitter_hashtags = this.saved_twitter_hashtags.map(hashtag => hashtag.text);\n            }\n        }\n    },\n    methods: {\n\n        // 文字数カウントを変更するイベント\n        updateTweetLetterCount() {\n\n            // サロゲートペアを考慮し、スプレッド演算子で一度配列化してから数えている\n            // ref: https://qiita.com/suin/items/3da4fb016728c024eaca\n            this.tweet_letter_count = 140 - [...this.tweet_hashtag].length - [...this.tweet_text].length;\n        },\n\n        // クリップボード内のデータがペーストされたときのイベント\n        pasteClipboardData(event: ClipboardEvent) {\n\n            // 一応配列になっているので回しているが、基本1回のペーストにつき DataTransferItem は1個しか入らない\n            for (const clipboard_item of event.clipboardData.items) {\n\n                // 画像のみを対象にする (DataTransferItem.type には MIME タイプが入る)\n                if (clipboard_item.type.startsWith('image/')) {\n\n                    // クリップボード内の画像データを File オブジェクトとして取得し、キャプチャリストに追加\n                    const file = clipboard_item.getAsFile();\n                    this.addCaptureList(file, file.name);\n                }\n            }\n        },\n\n        // ハッシュタグリストボタンが押されたときのイベント\n        clickHashtagListButton() {\n            this.is_hashtag_list_display = !this.is_hashtag_list_display;\n            // すべてのハッシュタグの編集状態を解除する\n            for (const hashtag of this.saved_twitter_hashtags) {\n                hashtag.editing = false;\n            }\n        },\n\n        // ハッシュタグがクリックされたときのイベント\n        clickHashtag(hashtag: IHashtag) {\n            this.tweet_hashtag = hashtag.text;\n            this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag);\n            this.updateTweetLetterCount();\n            window.setTimeout(() => this.is_hashtag_list_display = false, 150);\n        },\n\n        // アカウントボタンが押されたときのイベント\n        clickAccountButton() {\n\n            // Twitter アカウントが連携されていない場合は Twitter 設定画面に飛ばす\n            if (!this.is_logged_in_twitter) {\n\n                // 視聴画面以外に遷移するため、フルスクリーンを解除しないと画面が崩れる\n                if (document.fullscreenElement) {\n                    document.exitFullscreen();\n                }\n\n                this.$router.push({path: '/settings/twitter'});\n                return;\n            }\n\n            // アカウントリストの表示/非表示を切り替え\n            this.is_twitter_account_list_display = !this.is_twitter_account_list_display;\n\n            // アカウントリストが表示されているなら、ハッシュタグリストを非表示にする\n            if (this.is_twitter_account_list_display === true) {\n                this.is_hashtag_list_display = false;\n            }\n        },\n\n        // 選択されている Twitter アカウントを更新する\n        updateSelectedTwitterAccount(twitter_account: ITwitterAccount) {\n            this.settingsStore.settings.selected_twitter_account_id = twitter_account.id;\n            this.selected_twitter_account = twitter_account;\n\n            // Twitter アカウントリストのオーバーレイを閉じる (少し待ってから閉じたほうが体感が良い)\n            window.setTimeout(() => this.is_twitter_account_list_display = false, 150);\n        },\n\n        // キャプチャリスト内のキャプチャがクリックされたときのイベント\n        clickCapture(capture: ITweetCapture) {\n\n            // 選択されたキャプチャが3枚まで & まだ選択されていないならキャプチャをツイート対象に追加する\n            if (this.tweet_captures.length < 4 && capture.selected === false) {\n                capture.selected = true;\n                this.tweet_captures.push(capture.blob);\n            } else {\n                // ツイート対象のキャプチャになっていたら取り除く\n                const index = this.tweet_captures.findIndex(blob => blob === capture.blob);\n                if (index > -1) {\n                    this.tweet_captures.splice(index, 1);\n                }\n                // キャプチャの選択を解除\n                capture.selected = false;\n            }\n        },\n\n        // 撮ったキャプチャを親コンポーネントから受け取り、キャプチャリストに追加する\n        async addCaptureList(blob: Blob, filename: string) {\n\n            if (this.captures_element === null) {\n                this.captures_element = this.$el.querySelector('.tab-content');\n            }\n\n            // 撮ったキャプチャが50件を超えていたら、重くなるので古いものから削除する\n            // 削除する前に Blob URL を revoke してリソースを解放するのがポイント\n            if (this.captures.length > 50) {\n                URL.revokeObjectURL(this.captures[0].image_url);\n                this.captures.shift();\n            }\n\n            // キャプチャリストにキャプチャを追加\n            const blob_url = URL.createObjectURL(blob);\n            this.captures.push({\n                blob: blob,\n                filename: filename,\n                image_url: blob_url,\n                selected: false,\n                focused: false,\n            });\n\n            // キャプチャリストを下にスクロール\n            // this.$nextTick() のコールバックで DOM の更新を待つ\n            this.$nextTick(() => {\n                this.captures_element.scrollTo({\n                    top: this.captures_element.scrollHeight,\n                    behavior: 'smooth',\n                });\n            });\n        },\n\n        // 撮ったキャプチャに番組タイトルの透かしを描画する\n        async drawProgramTitleOnCapture(capture: Blob): Promise<Blob> {\n\n            // キャプチャの Blob を createImageBitmap() で Canvas に描ける ImageBitmap に変換\n            const image_bitmap = await createImageBitmap(capture);\n\n            // OffscreenCanvas が使えるなら使う (OffscreenCanvas の方がパフォーマンスが良い)\n            const canvas = ('OffscreenCanvas' in window) ?\n                new OffscreenCanvas(image_bitmap.width, image_bitmap.height) : document.createElement('canvas');\n\n            // Canvas にキャプチャを描画\n            const context = canvas.getContext('2d', {\n                alpha: false,\n                desynchronized: true,\n                willReadFrequently: false,\n            }) as OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\n            context.drawImage(image_bitmap, 0, 0);\n            image_bitmap.close();\n\n            // 描画設定\n            context.font = 'bold 22px \"YakuHanJPs\", \"Open Sans\", \"Hiragino Sans\", \"Noto Sans JP\", sans-serif'; // フォント\n            context.fillStyle = 'rgba(255, 255, 255, 70%)';  // 半透明の白\n            context.shadowColor = 'rgba(0, 0, 0, 100%)';  // 影の色\n            context.shadowBlur = 4;  // 影をぼかすしきい値\n            context.shadowOffsetX = 0;  // 影のX座標\n            context.shadowOffsetY = 0;  // 影のY座標\n\n            // 番組タイトルの透かしを描画\n            const title = this.channelsStore.channel.current.program_present.title;\n            switch (this.settingsStore.settings.tweet_capture_watermark_position) {\n                case 'TopLeft': {\n                    context.textAlign = 'left'; // 左寄せ\n                    context.textBaseline = 'top'; // ベースラインを上寄せ\n                    context.fillText(title, 16, 12);\n                    break;\n                }\n                case 'TopRight': {\n                    context.textAlign = 'right'; // 右寄せ\n                    context.textBaseline = 'top'; // ベースラインを上寄せ\n                    context.fillText(title, canvas.width - 16, 12);\n                    break;\n                }\n                case 'BottomLeft': {\n                    context.textAlign = 'left'; // 左寄せ\n                    context.textBaseline = 'bottom'; // ベースラインを下寄せ\n                    context.fillText(title, 16, canvas.height - 12);\n                    break;\n                }\n                case 'BottomRight': {\n                    context.textAlign = 'right'; // 右寄せ\n                    context.textBaseline = 'bottom'; // ベースラインを下寄せ\n                    context.fillText(title, canvas.width - 16, canvas.height - 12);\n                    break;\n                }\n            }\n\n            // Blob にして返す\n            if (canvas instanceof OffscreenCanvas) {\n                return await canvas.convertToBlob({type: 'image/jpeg', quality: 1});\n            } else {\n                return new Promise(resolve => canvas.toBlob(blob => resolve(blob), 'image/jpeg', 1));\n            }\n        },\n\n        // チャンネル名から対応する局タグを取得する\n        // とりあえず三大首都圏 + BS のみ対応\n        getChannelHashtag(channel_name: string): string | null {\n            // NHK\n            if (channel_name.startsWith('NHK総合')) {\n                return '#nhk';\n            } else if (channel_name.startsWith('NHKEテレ')) {\n                return '#etv';\n            // 民放\n            } else if (channel_name.startsWith('日テレ')) {\n                return '#ntv';\n            } else if (channel_name.startsWith('読売テレビ')) {\n                return '#ytv';\n            } else if (channel_name.startsWith('中京テレビ')) {\n                return '#chukyotv';\n            } else if (channel_name.startsWith('テレビ朝日')) {\n                return '#tvasahi';\n            } else if (channel_name.startsWith('ABCテレビ')) {\n                return '#abc';\n            } else if (channel_name.startsWith('メ~テレ')) {\n                return '#nagoyatv';\n            } else if (channel_name.startsWith('TBS') && !channel_name.includes('TBSチャンネル')) {\n                return '#tbs';\n            } else if (channel_name.startsWith('MBS')) {\n                return '#mbs';\n            } else if (channel_name.startsWith('CBC')) {\n                return '#cbc';\n            } else if (channel_name.startsWith('テレビ東京')) {\n                return '#tvtokyo';\n            } else if (channel_name.startsWith('テレビ大阪')) {\n                return '#tvo';\n            } else if (channel_name.startsWith('テレビ愛知')) {\n                return '#tva';\n            } else if (channel_name.startsWith('フジテレビ')) {\n                return '#fujitv';\n            } else if (channel_name.startsWith('関西テレビ')) {\n                return '#kantele';\n            } else if (channel_name.startsWith('東海テレビ')) {\n                return '#tokaitv';\n            // 独立局\n            } else if (channel_name.startsWith('TOKYO MX')) {\n                return '#tokyomx';\n            } else if (channel_name.startsWith('tvk')) {\n                return '#tvk';\n            } else if (channel_name.startsWith('チバテレ')) {\n                return '#chibatv';\n            } else if (channel_name.startsWith('テレ玉')) {\n                return '#teletama';\n            } else if (channel_name.startsWith('サンテレビ')) {\n                return '#suntv';\n            } else if (channel_name.startsWith('KBS京都')) {\n                return '#kbs';\n            // BS・CS\n            } else if (channel_name.startsWith('NHKBS1')) {\n                return '#nhkbs1';\n            } else if (channel_name.startsWith('NHKBSプレミアム')) {\n                return '#nhkbsp';\n            } else if (channel_name.startsWith('BS日テレ')) {\n                return '#bsntv';\n            } else if (channel_name.startsWith('BS朝日')) {\n                return '#bsasahi';\n            } else if (channel_name.startsWith('BS-TBS')) {\n                return '#bstbs';\n            } else if (channel_name.startsWith('BSテレ東')) {\n                return '#bstvtokyo';\n            } else if (channel_name.startsWith('BSフジ')) {\n                return '#bsfuji';\n            } else if (channel_name.startsWith('BS11イレブン')) {\n                return '#bs11';\n            } else if (channel_name.startsWith('BS12トゥエルビ')) {\n                return '#bs12';\n            } else if (channel_name.startsWith('AT-X')) {\n                return '#at_x';\n            }\n\n            return null;\n        },\n\n        // ハッシュタグを整形（余計なスペースなどを削り、全角ハッシュを半角ハッシュへ、全角スペースを半角スペースに置換）\n        formatHashtag(tweet_hashtag: string, from_hashtag_list: boolean = false): string {\n\n            // ハッシュとスペースの表記ゆれを統一し、連続するハッシュやスペースを1つにする\n            const tweet_hashtag_array = tweet_hashtag.trim()\n                .replaceAll('♯', '#').replaceAll('＃', '#').replace(/#{2,}/g, '#').replaceAll('　', ' ').replaceAll(/ +/g,' ').split(' ')\n                .filter(hashtag => hashtag !== '');\n\n            // ハッシュタグがついてない場合にハッシュタグを付与\n            for (let index in tweet_hashtag_array) {\n                if (!tweet_hashtag_array[index].startsWith('#')) {\n                    tweet_hashtag_array[index] = `#${tweet_hashtag_array[index]}`;\n                }\n            }\n\n            // 設定でオンになっている場合のみ、視聴中チャンネルの局タグを自動で追加する (ハッシュタグリスト内のハッシュタグは除外)\n            if (this.settingsStore.settings.auto_add_watching_channel_hashtag === true && from_hashtag_list === false) {\n                const channel_hashtag = this.getChannelHashtag(this.channelsStore.channel.current.channel_name);\n                if (channel_hashtag !== null) {\n                    if (tweet_hashtag_array.includes(channel_hashtag) === false) {\n                        tweet_hashtag_array.push(channel_hashtag);\n                    }\n                }\n            }\n\n            return tweet_hashtag_array.join(' ');\n        },\n\n        // ツイートを送信する\n        async sendTweet() {\n\n            // ハッシュタグを整形\n            this.tweet_hashtag = this.formatHashtag(this.tweet_hashtag);\n            const tweet_hashtag = this.tweet_hashtag;\n\n            // 実際に送るツイート本文を作成\n            let tweet_text = this.tweet_text;\n            if (tweet_hashtag !== '') {  // ハッシュタグが入力されているときのみ\n                switch (this.settingsStore.settings.tweet_hashtag_position) {\n                    // ツイート本文の前に追加する\n                    case 'Prepend': {\n                        tweet_text = `${tweet_hashtag} ${this.tweet_text}`;\n                        break;\n                    }\n                    // ツイート本文の後に追加する\n                    case 'Append': {\n                        tweet_text = `${this.tweet_text} ${tweet_hashtag}`;\n                        break;\n                    }\n                    // ツイート本文の前に追加してから改行する\n                    case 'PrependWithLineBreak': {\n                        tweet_text = `${tweet_hashtag}\\n${this.tweet_text}`;\n                        break;\n                    }\n                    // ツイート本文の後に改行してから追加する\n                    case 'AppendWithLineBreak': {\n                        tweet_text = `${this.tweet_text}\\n${tweet_hashtag}`;\n                        break;\n                    }\n                }\n            }\n\n            // キャプチャへの透かしの描画がオンの場合、キャプチャの Blob を透かし付きのものに差し替える\n            const new_tweet_captures: Blob[] = [];\n            for (let tweet_capture of this.tweet_captures) {\n                if (this.settingsStore.settings.tweet_capture_watermark_position !== 'None') {\n                    tweet_capture = await this.drawProgramTitleOnCapture(tweet_capture);\n                }\n                new_tweet_captures.push(tweet_capture);\n            }\n\n            // ツイート送信 API にリクエスト\n            // レスポンスは待たない\n            Twitter.sendTweet(this.selected_twitter_account.screen_name, tweet_text, new_tweet_captures).then((result) => {\n                this.player.notice(result.message);\n            });\n\n            // 連投防止のため、フォーム上のツイート本文・キャプチャの選択・キャプチャのフォーカスを消去\n            // 送信した感を出す意味合いもある\n            for (const capture of this.captures) {\n                capture.selected = false;\n                capture.focused = false;\n            }\n            this.tweet_captures = [];\n            this.tweet_text = '';\n\n            // パネルを閉じるように親コンポーネントに伝える\n            if (this.settingsStore.settings.fold_panel_after_sending_tweet === true) {\n                this.$emit('panel_folding_requested');\n                (this.$refs.tweet_text as HTMLTextAreaElement).blur();  // フォーカスを外す\n            }\n        },\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Twitter.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Twitter.vue?vue&type=template&id=7e7f81f8&scoped=true&\"\nimport script from \"./Twitter.vue?vue&type=script&lang=ts&\"\nexport * from \"./Twitter.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Twitter.vue?vue&type=style&index=0&id=7e7f81f8&prod&lang=scss&\"\nimport style1 from \"./Twitter.vue?vue&type=style&index=1&id=7e7f81f8&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7e7f81f8\",\n  null\n  \n)\n\nexport default component.exports","\nimport APIClient from '@/services/APIClient';\n\n\nclass Captures {\n\n    /**\n     * キャプチャをサーバーにアップロードし保存する\n     * @param blob キャプチャ画像の Blob\n     * @param filename サーバーに保存するときのファイル名\n     */\n    static async uploadCapture(blob: Blob, filename: string): Promise<void> {\n\n        // キャプチャ画像の File オブジェクト (= Blob) を FormData に入れる\n        // multipart/form-data で送るために必要\n        // ref: https://r17n.page/2020/02/04/nodejs-axios-file-upload-api/\n        const form_data = new FormData();\n        form_data.append('image', blob, filename);\n\n        // API リクエストを実行\n        const response = await APIClient.post('/captures', form_data, {headers: {'Content-Type': 'multipart/form-data'}});\n\n        // エラー処理\n        if ('is_error' in response) {\n            APIClient.showGenericError(response, 'キャプチャのアップロードに失敗しました。');\n            return;\n        }\n    }\n\n    // TODO: キャプチャリスト機能の実装時にいろいろ追加する\n}\n\nexport default Captures;\n","\nimport { Buffer } from 'buffer';\n\nimport { convertBlobToPng, copyBlobToClipboard } from 'copy-image-clipboard';\nimport dayjs from 'dayjs';\nimport DPlayer from 'dplayer';\nimport 'dayjs/locale/ja';\nimport * as piexif from 'piexifjs';\n\nimport Captures from '@/services/Captures';\nimport useChannelsStore from '@/store/ChannelsStore';\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils from '@/utils';\n\n\n// キャプチャに書き込む EXIF メタデータのインターフェイス\ninterface ICaptureExifData {\n    captured_at: string;\n    captured_playback_position: number;\n    network_id: number;\n    service_id: number;\n    event_id: number;\n    title: string;\n    description: string;\n    start_time: string;\n    end_time: string;\n    duration: number;\n    caption_text: string | null;\n    is_caption_composited: boolean;\n    is_comment_composited: boolean;\n}\n\n// CaptureHandler.setEXIFDataToCapture() のオプションのインターフェイス\ninterface ISetEXIFDataToCaptureOptions {\n    network_id: number;\n    service_id: number;\n    event_id: number;\n    title: string;\n    description: string;\n    start_time: string;\n    end_time: string;\n    duration: number;\n    caption_text: string | null;\n    is_caption_composited: boolean;\n    is_comment_composited: boolean;\n}\n\n\nclass CaptureHandler {\n\n    private player: DPlayer;\n    private player_container: HTMLElement;\n    private captured_callback: (blob: Blob, filename: string) => void;\n    private capture_button: HTMLDivElement;\n    private comment_capture_button: HTMLDivElement;\n    private canvas: OffscreenCanvas | HTMLCanvasElement;\n    private canvas_context: OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\n    private settings_store = useSettingsStore();\n\n    constructor(player: DPlayer, captured_callback: (blob: Blob, filename: string) => void) {\n\n        this.player = player;\n        this.player_container = this.player.container;\n        this.captured_callback = captured_callback;\n\n        // コメント付きキャプチャボタンの HTML を追加\n        // insertAdjacentHTML で .dplayer-icons-right の一番左側に配置する\n        // この後に通常のキャプチャボタンが insert されるので、実際は左から2番目\n        // TODO: ボタンのデザインをコメント付きだと分かるようなものに変更する\n        this.player_container.querySelector('.dplayer-icons.dplayer-icons-right').insertAdjacentHTML('afterbegin', `\n            <div class=\"dplayer-icon dplayer-comment-capture-icon\" aria-label=\"コメントを付けてキャプチャ\"\n                data-balloon-nofocus=\"\" data-balloon-pos=\"up\">\n                <span class=\"dplayer-icon-content\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\"><path d=\"M16 23c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zM16 13c-2.206 0-4 1.794-4 4s1.794 4 4 4c2.206 0 4-1.794 4-4s-1.794-4-4-4zM27 28h-22c-1.654 0-3-1.346-3-3v-16c0-1.654 1.346-3 3-3h3c0.552 0 1 0.448 1 1s-0.448 1-1 1h-3c-0.551 0-1 0.449-1 1v16c0 0.552 0.449 1 1 1h22c0.552 0 1-0.448 1-1v-16c0-0.551-0.448-1-1-1h-11c-0.552 0-1-0.448-1-1s0.448-1 1-1h11c1.654 0 3 1.346 3 3v16c0 1.654-1.346 3-3 3zM24 10.5c0 0.828 0.672 1.5 1.5 1.5s1.5-0.672 1.5-1.5c0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5zM15 4c0 0.552-0.448 1-1 1h-4c-0.552 0-1-0.448-1-1v0c0-0.552 0.448-1 1-1h4c0.552 0 1 0.448 1 1v0z\"></path></svg>\n                </span>\n            </div>\n        `);\n\n        // キャプチャボタンの HTML を追加\n        // 標準のスクリーンショット機能は貧弱なので、あえて独自に実装している（そのほうが自由度も高くてやりやすい）\n        // insertAdjacentHTML で .dplayer-icons-right の一番左側に配置する\n        this.player_container.querySelector('.dplayer-icons.dplayer-icons-right').insertAdjacentHTML('afterbegin', `\n            <div class=\"dplayer-icon dplayer-capture-icon\" aria-label=\"キャプチャ\"\n                data-balloon-nofocus=\"\" data-balloon-pos=\"up\">\n                <span class=\"dplayer-icon-content\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\"><path d=\"M16 23c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zM16 13c-2.206 0-4 1.794-4 4s1.794 4 4 4c2.206 0 4-1.794 4-4s-1.794-4-4-4zM27 28h-22c-1.654 0-3-1.346-3-3v-16c0-1.654 1.346-3 3-3h3c0.552 0 1 0.448 1 1s-0.448 1-1 1h-3c-0.551 0-1 0.449-1 1v16c0 0.552 0.449 1 1 1h22c0.552 0 1-0.448 1-1v-16c0-0.551-0.448-1-1-1h-11c-0.552 0-1-0.448-1-1s0.448-1 1-1h11c1.654 0 3 1.346 3 3v16c0 1.654-1.346 3-3 3zM24 10.5c0 0.828 0.672 1.5 1.5 1.5s1.5-0.672 1.5-1.5c0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5zM15 4c0 0.552-0.448 1-1 1h-4c-0.552 0-1-0.448-1-1v0c0-0.552 0.448-1 1-1h4c0.552 0 1 0.448 1 1v0z\"></path></svg>\n                </span>\n            </div>\n        `);\n\n        this.comment_capture_button = this.player_container.querySelector('.dplayer-comment-capture-icon');\n        this.capture_button = this.player_container.querySelector('.dplayer-capture-icon');\n\n        // キャプチャ用の Canvas を初期化\n        // パフォーマンス向上のため、一度作成した Canvas は使い回す\n        // OffscreenCanvas が使えるなら使う (OffscreenCanvas の方がパフォーマンスが良い)\n        this.canvas = ('OffscreenCanvas' in window) ? new OffscreenCanvas(0, 0) : document.createElement('canvas');\n        this.canvas_context = this.canvas.getContext('2d', {\n            alpha: false,\n            desynchronized: true,\n            willReadFrequently: false,\n        }) as OffscreenCanvasRenderingContext2D | CanvasRenderingContext2D;\n\n        // 映像の解像度を Canvas サイズとして設定\n        // 映像が読み込まれた / 画質が変わった際に Canvas のサイズを映像のサイズに合わせる\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        player.on('loadedmetadata', async () => {\n            this.canvas.width = player.video.videoWidth;\n            this.canvas.height = player.video.videoHeight;\n            // 映像サイズがちゃんと設定されるまで繰り返す (Safari 対策)\n            while (this.canvas.width === 0 && this.canvas.height === 0) {\n                await Utils.sleep(0.1);\n                this.canvas.width = player.video.videoWidth;\n                this.canvas.height = player.video.videoHeight;\n            }\n        });\n    }\n\n\n    /**\n     * 映像をキャプチャして保存する\n     * 映像のみと字幕付き (字幕表示時のみ) の両方のキャプチャを生成できる\n     * @param with_comments キャプチャにコメントを合成するかどうか\n     */\n    public async captureAndSave(with_comments: boolean): Promise<void> {\n\n        const total_time = Utils.time();\n\n        // チャンネル情報を取得 (ライブ視聴画面のみ、ビデオ視聴画面では null になる)\n        const channels_store = useChannelsStore();\n        const channel = channels_store.is_showing_live ? channels_store.channel.current : null;\n\n        // ***** バリデーション *****\n\n        // ラジオチャンネルを視聴している場合 (当然映像がないのでキャプチャできない)\n        if (channel !== null && channel.is_radiochannel === true) {\n            this.player.notice('ラジオチャンネルはキャプチャできません。');\n            return;\n        }\n\n        // まだ映像の表示準備が終わっていない (Canvas の幅/高さが 0 のまま)\n        if (this.canvas.width === 0 && this.canvas.height === 0) {\n            this.player.notice('読み込み中はキャプチャできません。');\n            return;\n        }\n\n        // コメントが表示されていないのにコメント付きキャプチャしようとした\n        if (with_comments === true && this.player.danmaku.showing === false) {\n            this.player.notice('コメントを付けてキャプチャするには、コメント表示をオンにしてください。');\n            return;\n        }\n\n        // ***** キャプチャの下準備 *****\n\n        // キャプチャ中はキャプチャボタンをハイライトする\n        this.addHighlight(with_comments);\n\n        // ファイル名（拡張子なし）\n        // TODO: ファイル名パターンを変更できるようにする\n        const filename_base = `Capture_${dayjs().format('YYYYMMDD-HHmmss')}`;\n        const filename = `${filename_base}.jpg`;  // 字幕なしキャプチャ\n        const filename_caption = `${filename_base}_caption.jpg`;  // 字幕ありキャプチャ\n\n        // 字幕・文字スーパーの Canvas を取得\n        // getRawCanvas() で映像と同じ解像度の Canvas が取得できる\n        const caption_canvas: HTMLCanvasElement = this.player.plugins.aribb24Caption.getRawCanvas();\n        const superimpose_canvas: HTMLCanvasElement = this.player.plugins.aribb24Superimpose.getRawCanvas();\n\n        // 字幕が表示されているか\n        // @ts-ignore\n        const is_caption_showing = (this.player.plugins.aribb24Caption.isShowing === true &&\n                                    this.player.plugins.aribb24Caption.isPresent());\n\n        // 文字スーパーが表示されているか\n        // @ts-ignore\n        const is_superimpose_showing = (this.player.plugins.aribb24Superimpose.isShowing === true &&\n                                        this.player.plugins.aribb24Superimpose.isPresent());\n\n        // 字幕が表示されている場合、表示中の字幕のテキストを取得\n        // 取得した字幕のテキストは、キャプチャに字幕が合成されているかに関わらず、常に EXIF メタデータに書き込まれる\n        // 字幕が表示されていない場合は null を入れ、キャプチャしたシーンで字幕が表示されていなかったことを明示する\n        const caption_text = is_caption_showing ? this.player.plugins.aribb24Caption.getTextContent() : null;\n\n        // EXIF に書き込むメタデータを取得する\n        // ライブ視聴画面では、番組情報から EXIF に書き込むメタデータを取得する\n        let exif_options: ISetEXIFDataToCaptureOptions;\n        if (channel !== null) {\n            exif_options = {\n                network_id: channel.program_present.network_id,\n                service_id: channel.program_present.service_id,\n                event_id: channel.program_present.event_id,\n                title: channel.program_present.title,\n                description: channel.program_present.description,\n                start_time: channel.program_present.start_time,\n                end_time: channel.program_present.end_time,\n                duration: channel.program_present.duration,\n                caption_text: caption_text,\n                is_caption_composited: false,  // 後で上書きされる\n                is_comment_composited: false,  // 後で上書きされる\n            };\n        // ビデオ視聴画面では、録画番組情報から EXIF に書き込むメタデータを取得する\n        } else {\n            // TODO\n        }\n\n        // エクスポートして保存する共通処理\n        const export_and_save = async (\n            canvas: OffscreenCanvas | HTMLCanvasElement,\n            filename: string,\n            exif_options: ISetEXIFDataToCaptureOptions,\n        ): Promise<Blob | false> => {\n\n            // Canvas を Blob にエクスポート\n            const time = Utils.time();\n            let blob: Blob;\n            try {\n                blob = await this.exportToBlob(canvas);\n            } catch (error) {\n                console.log(error);\n                this.player.notice('キャプチャの保存に失敗しました…');\n                return false;\n            }\n            console.log('[CaptureHandler] Export to Blob:', Utils.mathFloor(Utils.time() - time, 3), 'sec');\n\n            // キャプチャに番組情報などのメタデータ (EXIF) をセット\n            blob = await this.setEXIFDataToCapture(blob, exif_options);\n\n            // キャプチャの保存先: ブラウザでダウンロード or 両方\n            if (['Browser', 'Both'].includes(this.settings_store.settings.capture_save_mode)) {\n                Utils.downloadBlobData(blob, filename);\n            }\n\n            // キャプチャの保存先: KonomiTV サーバーにアップロード or 両方\n            // 時間がかかるし完了を待つ必要がないので非同期\n            if (['UploadServer', 'Both'].includes(this.settings_store.settings.capture_save_mode)) {\n                Captures.uploadCapture(blob, filename);\n            }\n\n            return blob;\n        };\n\n        // ***** 映像のキャプチャ *****\n\n        // null はまだキャプチャしていないことを、false はキャプチャに失敗したことを表す\n        let capture_normal: {blob: Blob, filename: string} | null | false = null;\n        let capture_caption: {blob: Blob, filename: string} | null | false = null;\n\n        // 映像の ImageBitmap を取得\n        const image_bitmap = await createImageBitmap(this.player.video);\n\n        // もし映像以外に追加で合成するものがないなら、処理の高速化のために ImageBitmap をそのまま Canvas に転送して Blob 化する\n        // コメントキャプチャではない & 文字スーパーが表示されていない (=合成処理を行う必要がない) &\n        // (字幕が表示されていない or 字幕が表示されているが合成しないように設定されている) 場合\n        // コメント付きキャプチャではなく、かつ字幕のない番組では大半がここの処理を通ることになる\n        if (with_comments === false && is_superimpose_showing === false &&\n            (is_caption_showing === false || this.settings_store.settings.capture_caption_mode === 'VideoOnly')) {\n\n            // OffscreenCanvas が使えるなら使う (OffscreenCanvas の方がパフォーマンスが良い)\n            const bitmap_canvas = ('OffscreenCanvas' in window) ?\n                new OffscreenCanvas(image_bitmap.width, image_bitmap.height) : document.createElement('canvas');\n            bitmap_canvas.width = image_bitmap.width;\n            bitmap_canvas.height = image_bitmap.height;\n            const canvas_context = bitmap_canvas.getContext('bitmaprenderer', {alpha: false}) as ImageBitmapRenderingContext;\n\n            // Canvas に映像がキャプチャされた ImageBitmap を転送\n            // 描画ではなくゼロコピーで転送しているらしい…？\n            canvas_context.transferFromImageBitmap(image_bitmap);\n            image_bitmap.close();  // 今後使うことはないので明示的に閉じる\n\n            // ファイル名\n            // 保存モードが「字幕キャプチャのみ」のとき (=字幕キャプチャのみをキャプチャする設定にしていたが、字幕がそもそもないとき) は、\n            // 便宜上字幕ありキャプチャと同じファイル名で保存する\n            const filename_real =\n                (this.settings_store.settings.capture_caption_mode === 'CompositingCaption') ? filename_caption : filename;\n\n            // Blob にエクスポートして保存\n            // false が返ってきた場合は失敗を意味する\n            const blob = await export_and_save(bitmap_canvas, filename_real, {\n                ...exif_options,\n                is_caption_composited: false,\n                is_comment_composited: false,\n            });\n            if (blob !== false) {\n                capture_normal = {blob: blob, filename: filename_real};\n            } else {\n                capture_normal = false;  // キャプチャのエクスポートに失敗\n            }\n\n            // キャプチャの Blob をコールバック関数に渡す\n            // ここでコールバック関数に渡した Blob が Twitter タブのキャプチャリストに送られる\n            if (capture_normal !== false) {\n                this.captured_callback(capture_normal.blob, capture_normal.filename);\n            }\n\n        // ***** 通常実行 (Canvas にキャプチャ以外のデータを重ねて描画する必要があるケース) *****\n        } else {\n\n            const promises: Promise<void>[] = [];\n\n            // Canvas に映像がキャプチャされた ImageBitmap を描画\n            this.canvas_context.drawImage(image_bitmap, 0, 0, this.canvas.width, this.canvas.height);\n\n            // 文字スーパーを描画 (表示されている場合)\n            // 文字スーパー自体が稀だし、文字スーパーなしでキャプチャ撮りたいユースケースはない…はず\n            if (is_superimpose_showing === true) {\n                this.canvas_context.drawImage(superimpose_canvas, 0, 0, this.canvas.width, this.canvas.height);\n            }\n\n            // コメント付きキャプチャ: 追加でニコニコ実況のコメントを描画\n            let comments_image: HTMLImageElement | null = null;\n            if (with_comments === true) {\n                comments_image = await this.createCommentsImage();\n                await this.drawComments(comments_image);\n            }\n\n            // ***** 映像のみのキャプチャを保存 *****\n\n            // 字幕表示時のキャプチャの保存モード: 映像のみ or 両方\n            // 保存モードが「字幕キャプチャのみ」になっているが字幕が表示されていない場合も実行する\n            if (['VideoOnly', 'Both'].includes(this.settings_store.settings.capture_caption_mode) || is_caption_showing === false) {\n\n                promises.push((async () => {\n\n                    // ファイル名\n                    // 保存モードが「字幕キャプチャのみ」のとき (=字幕キャプチャのみをキャプチャする設定にしていたが、字幕がそもそもないとき) は、\n                    // 便宜上字幕ありキャプチャと同じファイル名で保存する\n                    const filename_real =\n                        (this.settings_store.settings.capture_caption_mode === 'CompositingCaption') ? filename_caption : filename;\n\n                    // Blob にエクスポートして保存\n                    const blob = await export_and_save(this.canvas, filename_real, {\n                        ...exif_options,\n                        is_caption_composited: false,\n                        is_comment_composited: with_comments,\n                    });\n                    if (blob !== false) {\n                        capture_normal = {blob: blob, filename: filename_real};\n                    } else {\n                        capture_normal = false;  // キャプチャのエクスポートに失敗\n                    }\n\n                    // キャプチャの Blob をコールバック関数に渡す\n                    // ここでコールバック関数に渡した Blob が Twitter タブのキャプチャリストに送られる\n                    if (capture_normal !== false) {\n                        this.captured_callback(capture_normal.blob, capture_normal.filename);\n                    }\n\n                })());\n            }\n\n            // ***** 字幕付きのキャプチャを保存 *****\n\n            // 字幕表示時のキャプチャの保存モード: 字幕キャプチャのみ or 両方\n            // 字幕が表示されているときのみ実行（字幕が表示されていないのにやっても意味がない）\n            if (['CompositingCaption', 'Both'].includes(this.settings_store.settings.capture_caption_mode) && is_caption_showing === true) {\n\n                promises.push((async () => {\n\n                    // コメント付きキャプチャ: 映像と文字スーパーの描画をやり直す\n                    // すでに字幕なしキャプチャを生成する過程でコメントを描画してしまっているため、映像描画からやり直す必要がある\n                    if (with_comments === true) {\n                        this.canvas_context.drawImage(image_bitmap, 0, 0, this.canvas.width, this.canvas.height);\n                        if (is_superimpose_showing === true) {\n                            this.canvas_context.drawImage(superimpose_canvas, 0, 0, this.canvas.width, this.canvas.height);\n                        }\n                    }\n                    image_bitmap.close();  // 今後使うことはないので明示的に閉じる\n\n                    // 字幕を重ねて描画\n                    this.canvas_context.drawImage(caption_canvas, 0, 0, this.canvas.width, this.canvas.height);\n\n                    // コメント付きキャプチャ: 追加でニコニコ実況のコメントを描画\n                    if (with_comments === true) {\n                        await this.drawComments(comments_image);\n                    }\n\n                    // Blob にエクスポートして保存\n                    const blob = await export_and_save(this.canvas, filename_caption, {\n                        ...exif_options,\n                        is_caption_composited: true,\n                        is_comment_composited: with_comments,\n                    });\n                    if (blob !== false) {\n                        capture_caption = {blob: blob, filename: filename_caption};\n                    } else {\n                        capture_caption = false;  // キャプチャのエクスポートに失敗\n                    }\n\n                    // キャプチャの Blob をコールバック関数に渡す\n                    // ここでコールバック関数に渡した Blob が Twitter タブのキャプチャリストに送られる\n                    if (capture_caption !== false) {\n                        // 字幕表示時のキャプチャの保存モードが「両方 (Both)」のときのみ、映像のみのキャプチャの生成が終わるまで待ってから実行\n                        // 必ずキャプチャリストへの追加が [映像のみ] → [字幕付き] の順序で行われるようにする\n                        if (this.settings_store.settings.capture_caption_mode === 'Both') {\n                            while (capture_normal === null) {\n                                // Blob (成功) か false (失敗) が capture_normal に入るまでループ\n                                await Utils.sleep(0.01);\n                            }\n                        }\n                        this.captured_callback(capture_caption.blob, capture_caption.filename);\n                    }\n\n                })());\n            }\n\n            // すべてのキャプチャ処理が終わるまで待つ\n            await Promise.all(promises);\n        }\n\n        console.log('[CaptureHandler] Total:', Utils.mathFloor(Utils.time() - total_time, 3), 'sec');\n\n        // キャプチャボタンのハイライトを削除する\n        this.removeHighlight(with_comments);\n\n        // Twitter タブのキャプチャリストに送る処理が最優先なので、コールバックを実行しきった後に時間のかかるクリップボードへのコピーを行う\n        for (const capture of [capture_normal, capture_caption]) {\n\n            // クリップボードへのコピーが有効なら、キャプチャの Blob をクリップボードにコピー\n            // PNG 以外は受け付けないそうなので、JPEG を PNG に変換してからコピーしている\n            if (this.settings_store.settings.capture_copy_to_clipboard && capture !== null && capture !== false) {\n                try {\n                    await copyBlobToClipboard(await convertBlobToPng(capture.blob));\n                } catch (error) {\n                    this.player.notice('クリップボードへのキャプチャのコピーに失敗しました…');\n                    console.error(error);\n                }\n            }\n        }\n    }\n\n\n    /**\n     * キャプチャボタンをハイライトする\n     * @param with_comments コメント付きキャプチャボタンをハイライトするか\n     */\n    private addHighlight(with_comments: boolean = false): void {\n        if (with_comments) {\n            this.comment_capture_button.classList.add('dplayer-capturing');\n        } else {\n            this.capture_button.classList.add('dplayer-capturing');\n        }\n    }\n\n\n    /**\n     * キャプチャボタンのハイライトを外す\n     * @param with_comments コメント付きキャプチャボタンのハイライトを外すか\n     */\n    private removeHighlight(with_comments: boolean = false): void {\n        if (with_comments) {\n            this.comment_capture_button.classList.remove('dplayer-capturing');\n        } else {\n            this.capture_button.classList.remove('dplayer-capturing');\n        }\n    }\n\n\n    /**\n     * DPlayer から取得したコメント HTML を SVG 画像の HTMLImageElement に変換する\n     * ZenzaWatch のコードを参考にしている\n     * ref: https://github.com/segabito/ZenzaWatch/blob/master/packages/lib/src/dom/VideoCaptureUtil.js\n     * ref: https://web.archive.org/web/2/https://developer.mozilla.org/ja/docs/Web/HTML/Canvas/Drawing_DOM_objects_into_a_canvas\n     * @param html DPlayer から取得したコメント HTML\n     * @param width SVG 画像の幅\n     * @param height SVG 画像の高さ\n     * @returns SVG 画像の HTMLImageElement\n     */\n    private async commentsHTMLtoSVGImage(html: string, width: number, height: number): Promise<HTMLImageElement> {\n\n        // SVG の foreignObject を使い、HTML をそのまま SVG に埋め込む\n        // SVG なので、CSS はインラインでないと適用されない…\n        // DPlayer の danmaku.scss の内容のうち、描画に必要なプロパティのみを列挙 (追加変更したものもある)\n        // ref: https://github.com/tsukumijima/DPlayer/blob/master/src/css/danmaku.scss\n        const svg = (`\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\">\n                <foreignObject width=\"100%\" height=\"100%\">\n                    <div xmlns=\"http://www.w3.org/1999/xhtml\">\n                        <style>\n                        .dplayer-danmaku {\n                            position: absolute;\n                            top: 0;\n                            left: 0;\n                            right: 0;\n                            bottom: 0;\n                            color: #fff;\n                            font-size: 29px;\n                            font-family: 'YakuHanJPs', 'Open Sans', 'Hiragino Sans', 'Noto Sans JP', sans-serif;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item {\n                            display: inline-block;\n                            line-height: 1;\n                            font-weight: bold;\n                            font-size: var(--dplayer-danmaku-font-size);\n                            opacity: var(--dplayer-danmaku-opacity);\n                            text-shadow: 1.2px 1.2px 4px rgba(0, 0, 0, 0.9);\n                            white-space: nowrap;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item--demo {\n                            position: absolute;\n                            visibility: hidden;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item span {\n                            box-decoration-break: clone;\n                            -webkit-box-decoration-break: clone;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item.dplayer-danmaku-size-big {\n                            font-size: calc(var(--dplayer-danmaku-font-size) * 1.25);\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-item.dplayer-danmaku-size-small {\n                            font-size: calc(var(--dplayer-danmaku-font-size) * 0.8);\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-right {\n                            position: absolute;\n                            right: 0;\n                        }\n                        .dplayer-danmaku .dplayer-danmaku-top, .dplayer-danmaku .dplayer-danmaku-bottom {\n                            position: absolute;\n                            left: 50%;\n                            transform: translateX(-50%);\n                        }\n                        </style>\n                        ${html}\n                    </div>\n                </foreignObject>\n            </svg>\n        `).trim();\n\n        // Data URL 化して Image オブジェクトにする\n        // わざわざ Blob にするよりこっちのほうが楽\n        const image = new Image();\n        image.src = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(svg)}`;\n\n        // Image は onload を使わなくても await Image.decode() でロードできる\n        await image.decode();\n        return image;\n    }\n\n\n    /**\n     * DPlayer から表示中のコメントを取得し、SVG 画像の HTMLImageElement を作成する\n     * @returns 表示されているコメントが描画された HTMLImageElement\n     */\n    private async createCommentsImage(): Promise<HTMLImageElement> {\n\n        // コメントが表示されている要素の HTML を取得する\n        let comments_html = this.player.template.danmaku.outerHTML;\n\n        // HTML を取得するだけではスクロール中コメントの表示位置が特定できないため、HTML を修正する\n        for (const comment of this.player_container.querySelectorAll('.dplayer-danmaku-move')) { // コメントの数だけ置換\n            // スクロール中のコメントの表示座標を計算\n            const position = comment.getBoundingClientRect().left - this.player.video.getBoundingClientRect().left;\n            comments_html = comments_html.replace(/transform: translateX\\(.*?\\);/, `left: ${position}px;`)\n                .replaceAll('border: 2px solid #E64F97;', '');\n        }\n\n        // HTML を画像として取得\n        // SVG のサイズはコメントが表示されている要素に合わせる (そうしないとプレイヤー側と一致しない)\n        // SVG はベクター画像なので、リサイズしても画質が変わらないはず\n        return await this.commentsHTMLtoSVGImage(\n            comments_html,\n            this.player.template.danmaku.offsetWidth,\n            this.player.template.danmaku.offsetHeight,\n        );\n    }\n\n\n    /**\n     * 現在表示されているニコニコ実況のコメントを Canvas に描画する\n     */\n    private async drawComments(comments_image: HTMLImageElement): Promise<void> {\n\n        // コメント描画領域がコントロールの表示によりリサイズされている (=16:9でない) 場合も考慮して、コメント要素の offsetWidth から高さを求める\n        // 映像の横解像度 (ex: 1920) がコメント描画領域の幅 (ex: 1280) の何倍かの割合 (ex: 1.5 (150%))\n        const draw_scale_ratio = this.canvas.width / this.player.template.danmaku.offsetWidth;\n\n        // コメント描画領域の高さを映像の横解像度に合わせて（コメント描画領域のアスペクト比を維持したまま）拡大した値\n        // 映像の縦解像度が 1080 のとき、コントロールがコメント領域と被っていない or 表示されていないなら、この値は 1080 に近くなる\n        const draw_height = this.player.template.danmaku.offsetHeight * draw_scale_ratio;\n\n        this.canvas_context.drawImage(comments_image, 0, 0, this.canvas.width, draw_height);\n    }\n\n\n    /**\n     * Canvas もしくは OffscreenCanvas に描画されている画像を Blob に変換する\n     * JPEG 画像の品質は 99% にした方が若干 Blob 変換までの速度が速い (？)\n     * @param canvas Canvas もしくは OffscreenCanvas\n     * @returns Blob 化した画像\n     */\n    private async exportToBlob(canvas: HTMLCanvasElement | OffscreenCanvas): Promise<Blob> {\n        if ('OffscreenCanvas' in window && canvas instanceof OffscreenCanvas) {\n            return await canvas.convertToBlob({type: 'image/jpeg', quality: 0.99});\n        } else if (canvas instanceof HTMLCanvasElement) {\n            return new Promise((resolve, reject) => {\n                canvas.toBlob((blob) => {\n                    if (blob !== null) {\n                        resolve(blob);\n                    } else {\n                        reject(new Error('Failed to convert canvas to blob'));\n                    }\n                }, 'image/jpeg', 0.99);\n            });\n        }\n    }\n\n\n    /**\n     * キャプチャ画像に番組情報と撮影時刻、字幕やコメントが合成されているかどうかのメタデータ (EXIF) をセットする\n     * @param blob キャプチャ画像の Blob オブジェクト\n     * @param options EXIF にセットする番組情報データ・字幕テキスト・字幕が合成されているかどうか・コメントが合成されているかどうか\n     * @returns EXIF が追加されたキャプチャ画像の Blob オブジェクト\n     */\n    private async setEXIFDataToCapture(blob: Blob, options: ISetEXIFDataToCaptureOptions): Promise<Blob> {\n\n        // 番組開始時刻換算のキャプチャ時刻 (秒)\n        const captured_playback_position = dayjs().diff(dayjs(options.start_time), 'second', true);\n\n        // EXIF の XPComment 領域に入れるメタデータの JSON オブジェクト\n        // 撮影時刻とチャンネル・番組を一意に特定できる情報を入れる\n        const json: ICaptureExifData = {\n            captured_at: dayjs().format('YYYY-MM-DDTHH:mm:ss+09:00'),  // ISO8601 フォーマットのキャプチャ時刻\n            captured_playback_position: captured_playback_position,  // 番組開始時刻換算のキャプチャ時刻 (秒)\n            network_id: options.network_id,    // 番組が放送されたチャンネルのネットワーク ID\n            service_id: options.service_id,    // 番組が放送されたチャンネルのサービス ID\n            event_id: options.event_id,        // 番組のイベント ID\n            title: options.title,              // 番組タイトル\n            description: options.description,  // 番組概要\n            start_time: options.start_time,    // 番組開始時刻 (ISO8601 フォーマット)\n            end_time: options.end_time,        // 番組終了時刻 (ISO8601 フォーマット)\n            duration: options.duration,        // 番組長 (秒)\n            caption_text: options.caption_text,        // 字幕のテキスト (キャプチャした瞬間に字幕が表示されていなかったときは null)\n            is_caption_composited: options.is_caption_composited,  // 字幕が合成されているか\n            is_comment_composited: options.is_comment_composited,  // コメントが合成されているか\n        };\n\n        // 保存する EXIF メタデータを構築\n        // ref: 「カメラアプリで体感するWeb App」4.2\n        const datetime = dayjs().format('YYYY:MM:DD HH:mm:ss');  // すべてコロンで区切るのがポイント\n        const exif: piexif.IExif = {\n            '0th': {\n                // 必須らしいプロパティ\n                // とりあえずデフォルト値 (?) を設定しておく\n                [piexif.TagValues.ImageIFD.XResolution]: [72, 1],\n                [piexif.TagValues.ImageIFD.YResolution]: [72, 1],\n                [piexif.TagValues.ImageIFD.ResolutionUnit]: 2,\n                [piexif.TagValues.ImageIFD.YCbCrPositioning]: 1,\n                // 撮影時刻\n                [piexif.TagValues.ImageIFD.DateTime]: datetime,\n                // ソフトウェア名\n                [piexif.TagValues.ImageIFD.Software]: `KonomiTV version ${Utils.version}`,\n                // Microsoft 拡張のコメント領域（エクスプローラーで出てくるコメント欄と同じもの）\n                // ref: https://stackoverflow.com/a/66186660/17124142\n                [piexif.TagValues.ImageIFD.XPComment]: [...Buffer.from(JSON.stringify(json), 'ucs2')],\n            },\n            'Exif': {\n                // 必須らしいプロパティ\n                // とりあえずデフォルト値 (?) を設定しておく\n                [piexif.TagValues.ExifIFD.ExifVersion]: '0230',\n                [piexif.TagValues.ExifIFD.ComponentsConfiguration]: '\\x01\\x02\\x03\\x00',\n                [piexif.TagValues.ExifIFD.FlashpixVersion]: '0100',\n                [piexif.TagValues.ExifIFD.ColorSpace]: 1,\n                // 撮影時刻\n                [piexif.TagValues.ExifIFD.DateTimeOriginal]: datetime,\n                [piexif.TagValues.ExifIFD.DateTimeDigitized]: datetime,\n            },\n        };\n        const exif_string = piexif.dump(exif);  // バイナリ文字列に変換した EXIF データ\n\n        // piexifjs はバイナリ文字列か DataURL しか受け付けないので、Blob をバイナリ文字列に変換\n        const blob_string: string = await new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result as string);\n            reader.onerror = reject;\n            reader.readAsBinaryString(blob);  // バイナリ文字列で読み込む\n        });\n\n        // 画像に EXIF を挿入\n        // 戻り値は EXIF が追加された画像のバイナリ文字列 (なぜ未だにバイナリ文字列で実装してるんだ…)\n        const blob_string_new = piexif.insert(exif_string, blob_string);\n\n        // 画像のバイナリ文字列を ArrayBuffer に変換\n        // ref: 「カメラアプリで体感するWeb App」4.2\n        const buffer = new Uint8Array(blob_string_new.length);\n        for (let index = 0; index < buffer.length; index++) {\n            buffer[index] = blob_string_new.charCodeAt(index) & 0xff;\n        }\n\n        // 新しい Blob を返す\n        return new Blob([buffer], {type: blob.type});\n    }\n}\n\nexport default CaptureHandler;\n","\n\nimport dayjs from 'dayjs';\nimport DPlayer from 'dplayer';\nimport * as DPlayerType from 'dplayer/dist/d.ts/types/DPlayer';\nimport mpegts from 'mpegts.js';\nimport { mapStores } from 'pinia';\nimport Vue from 'vue';\n\nimport BottomNavigation from '@/components/BottomNavigation.vue';\nimport Channel from '@/components/Panel/Channel.vue';\nimport Comment from '@/components/Panel/Comment.vue';\nimport Program from '@/components/Panel/Program.vue';\nimport Twitter from '@/components/Panel/Twitter.vue';\nimport { IChannel } from '@/services/Channels';\nimport CaptureHandler from '@/services/player/CaptureHandler';\nimport useChannelsStore from '@/store/ChannelsStore';\nimport useSettingsStore from '@/store/SettingsStore';\nimport Utils, { PlayerUtils, ProgramUtils } from '@/utils';\n\n// 低遅延モードオン時の再生バッファ (秒単位)\n// 0.7 秒程度余裕を持たせる\nconst PLAYBACK_BUFFER_SEC_LOW_LATENCY = 0.7;\n\n// 低遅延モードオフ時の再生バッファ (秒単位)\n// 5秒程度の遅延を許容する\nconst PLAYBACK_BUFFER_SEC = 5.0;\n\nexport default Vue.extend({\n    name: 'TV-Watch',\n    components: {\n        BottomNavigation,\n        Channel,\n        Comment,\n        Program,\n        Twitter,\n    },\n    data() {\n        return {\n\n            // ユーティリティをテンプレートで使えるように\n            Utils: Utils,\n            ProgramUtils: ProgramUtils,\n\n            // 現在時刻\n            time: dayjs().format('YYYY/MM/DD HH:mm:ss'),\n\n            // 表示されるパネルのタブ\n            tv_panel_active_tab: useSettingsStore().settings.tv_panel_active_tab,\n\n            // 背景の URL\n            background_url: '',\n\n            // プレイヤーのローディング状態\n            // 既定でローディングとする\n            is_loading: true,\n\n            // プレイヤーが映像の再生をバッファリングしているか\n            // 視聴開始時以外にも、ネットワークが遅くて再生が一時的に途切れたときなどで表示される\n            // 既定でバッファリング中とする\n            is_video_buffering: true,\n\n            // プレイヤーの背景を表示するか\n            // 既定で表示しない\n            is_background_display: false,\n\n            // コントロールを表示するか\n            // 既定で表示する\n            is_control_display: true,\n\n            // パネルを表示するか\n            // panel_display_state が 'AlwaysDisplay' なら常に表示し、'AlwaysFold' なら常に折りたたむ\n            // 'RestorePreviousState' なら showed_panel_last_time の値を使い､前回の状態を復元する\n            is_panel_display: (() => {\n                const settings_store = useSettingsStore();\n                switch (settings_store.settings.panel_display_state) {\n                    case 'AlwaysDisplay':\n                        return true;\n                    case 'AlwaysFold':\n                        return false;\n                    case 'RestorePreviousState':\n                        return settings_store.settings.showed_panel_last_time;\n                }\n            })() as boolean,\n\n            // フルスクリーン状態かどうか\n            is_fullscreen: false,\n\n            // IME 変換中かどうか\n            is_ime_composing: false,\n\n            // 仮想キーボードが表示されているか\n            is_virtual_keyboard_display: false,\n\n            // プレイヤーからのコメント送信から間もないかどうか\n            is_comment_send_just_did: false,\n\n            // インターバル ID\n            // ページ遷移時に setInterval(), setTimeout() の実行を止めるのに使う\n            // setInterval(), setTimeout() の返り値を登録する\n            interval_ids: [] as number[],\n\n            // コントロール表示切り替え用のインターバル ID\n            // 混ぜるとダメなので独立させる\n            control_interval_id: 0,\n\n            // ***** チャンネル *****\n\n            // ザッピング（「前/次のチャンネル」ボタン or 上下キーショートカット）によるチャンネル移動かどうか\n            is_zapping: false,\n\n            // ザッピングで連続してチャンネルを切り替えている最中かどうか\n            // 「連続して」とは、切り替える間隔が 0.5 秒以下で、再生セッションが初期化される前に次のチャンネルに切り替えたときのこと\n            is_zapping_continuously: false,\n\n            // ***** プレイヤー *****\n\n            // プレイヤー (DPlayer) のインスタンス\n            player: null as DPlayer | null,\n\n            // プレイヤーの破棄を許可するかどうか\n            player_can_be_destroyed: false,\n\n            // mpegts.js がサポートされているかどうか\n            // mpegts.js がサポートされていない場合は LL-HLS にフォールバックする (基本 iPhone Safari 向け)\n            is_mpegts_supported: mpegts.isSupported() === true,\n\n            // RomSound の AudioContext\n            romsounds_context: null as AudioContext | null,\n\n            // RomSound の AudioBuffer（音声データ）が入るリスト\n            romsounds_buffers: [] as AudioBuffer[],\n\n            // イベントソースのインスタンス\n            eventsource: null as EventSource | null,\n\n            // フルスクリーン状態が切り替わったときのハンドラー\n            fullscreen_handler: null as () => void | null,\n\n            // キャプチャハンドラーのインスタンス\n            capture_handler: null as CaptureHandler | null,\n\n            // ***** キーボードショートカット *****\n\n            // ショートカットキーのハンドラー\n            shortcut_key_handler: null as (event: KeyboardEvent) => void | null,\n\n            // ショートカットキーの最終押下時刻のタイムスタンプ\n            shortcut_key_pressed_at: Utils.time(),\n\n            // キーボードショートカットの一覧のモーダルを表示するか\n            shortcut_key_modal: false,\n\n            // キーボードショートカットの一覧に表示するショートカットキーのリスト\n            shortcut_key_list: {\n                left_column: [\n                    {\n                        name: '全般',\n                        icon: 'fluent:home-20-filled',\n                        icon_height: '22px',\n                        shortcuts: [\n                            { name: '数字キー・テンキーに対応するリモコン番号 (1~12) の地デジチャンネルに切り替える', keys: [{name: '1~9, 0, -(=), ^(~)', icon: false}] },\n                            { name: '数字キー・テンキーに対応するリモコン番号 (1~12) の BS チャンネルに切り替える', keys: [{name: 'Shift', icon: false}, {name: '1~9, 0, -(=), ^(~)', icon: false}] },\n                            { name: '前のチャンネルに切り替える', keys: [{name: 'fluent:arrow-up-12-filled', icon: true}] },\n                            { name: '次のチャンネルに切り替える', keys: [{name: 'fluent:arrow-down-12-filled', icon: true}] },\n                            { name: 'キーボードショートカットの一覧を表示する', keys: [{name: '／(？)', icon: false}] },\n                        ]\n                    },\n                    {\n                        name: 'プレイヤー',\n                        icon: 'fluent:play-20-filled',\n                        icon_height: '20px',\n                        shortcuts: [\n                            { name: '再生 / 一時停止の切り替え', keys: [{name: 'Space', icon: false}] },\n                            { name: '再生 / 一時停止の切り替え (キャプチャタブ表示時)', keys: [{name: 'Shift', icon: false}, {name: 'Space', icon: false}] },\n                            { name: 'プレイヤーの音量を上げる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-up-12-filled', icon: true}] },\n                            { name: 'プレイヤーの音量を下げる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-down-12-filled', icon: true}] },\n                            { name: '停止して0.5秒早戻し', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-left-12-filled', icon: true}] },\n                            { name: '停止して0.5秒早送り', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'fluent:arrow-right-12-filled', icon: true}] },\n                            { name: 'フルスクリーンの切り替え', keys: [{name: 'F', icon: false}] },\n                            { name: 'ライブストリームの同期', keys: [{name: 'W', icon: false}] },\n                            { name: 'Picture-in-Picture の表示切り替え', keys: [{name: 'E', icon: false}] },\n                            { name: '字幕の表示切り替え', keys: [{name: 'S', icon: false}] },\n                            { name: 'コメントの表示切り替え', keys: [{name: 'D', icon: false}] },\n                            { name: '映像をキャプチャする', keys: [{name: 'C', icon: false}] },\n                            { name: '映像をコメントを付けてキャプチャする', keys: [{name: 'V', icon: false}] },\n                            { name: 'コメント入力フォームにフォーカスする', keys: [{name: 'M', icon: false}] },\n                            { name: 'コメント入力フォームを閉じる', keys: [{name: Utils.CtrlOrCmd(), icon: false}, {name: 'M', icon: false}] },\n                        ]\n                    },\n                ],\n                right_column: [\n                    {\n                        name: 'パネル',\n                        icon: 'fluent:panel-right-20-filled',\n                        icon_height: '24px',\n                        shortcuts: [\n                            { name: 'パネルの表示切り替え', keys: [{name: 'P', icon: false}] },\n                            { name: '番組情報タブを表示する', keys: [{name: 'K', icon: false}] },\n                            { name: 'チャンネルタブを表示する', keys: [{name: 'L', icon: false}] },\n                            { name: 'コメントタブを表示する', keys: [{name: '；(＋)', icon: false}] },\n                            { name: 'Twitter タブを表示する', keys: [{name: '：(＊)', icon: false}] },\n                        ]\n                    },\n                    {\n                        name: 'Twitter',\n                        icon: 'fa-brands:twitter',\n                        icon_height: '22px',\n                        shortcuts: [\n                            { name: 'ツイート検索タブを表示する', keys: [{name: '［ (「)', icon: false}] },\n                            { name: 'タイムラインタブを表示する', keys: [{name: '］ (」)', icon: false}] },\n                            { name: 'キャプチャタブを表示する', keys: [{name: '＼(￥)', icon: false}] },\n                            { name: 'ツイート入力フォームにフォーカスを当てる/フォーカスを外す', keys: [{name: 'Tab', icon: false}] },\n                            { name: 'キャプチャにフォーカスする', keys: [{name: 'キャプチャタブを表示', icon: false}, {name: 'fluent:arrow-up-12-filled;fluent:arrow-down-12-filled;fluent:arrow-left-12-filled;fluent:arrow-right-12-filled', icon: true}] },\n                            { name: 'キャプチャを拡大表示する/<br>キャプチャの拡大表示を閉じる', keys: [{name: 'キャプチャにフォーカス', icon: false}, {name: 'Enter', icon: false}] },\n                            { name: 'キャプチャを選択する/<br>キャプチャの選択を解除する', keys: [{name: 'キャプチャにフォーカス', icon: false}, {name: 'Space', icon: false}] },\n                            { name: 'クリップボード内の画像を<br>キャプチャとして取り込む', keys: [{name: 'ツイート入力<br>フォームにフォーカス', icon: false}, {name: Utils.CtrlOrCmd(), icon: false}, {name: 'V', icon: false}] },\n                            { name: 'ツイートを送信する', keys: [{name: 'Twitter タブを表示', icon: false}, {name: Utils.CtrlOrCmd(), icon: false}, {name: 'Enter', icon: false}] },\n                        ]\n                    },\n                ]\n            }\n        };\n    },\n    computed: {\n        // ChannelsStore / SettingsStore に this.channelsStore / this.settingsStore でアクセスできるようにする\n        // ref: https://pinia.vuejs.org/cookbook/options-api.html\n        ...mapStores(useChannelsStore, useSettingsStore),\n    },\n    // 開始時に実行\n    async created() {\n\n        // チャンネル ID をセット\n        this.channelsStore.channel_id = this.$route.params.channel_id;\n\n        // Virtual Keyboard API に対応している場合は、仮想キーボード周りの操作を自力で行うことをブラウザに伝える\n        // この視聴画面のみ\n        if ('virtualKeyboard' in navigator) {\n            navigator.virtualKeyboard.overlaysContent = true;\n            // 仮想キーボードが表示されたり閉じられたときのイベント\n            navigator.virtualKeyboard.ongeometrychange = (event) => {\n                if (event.target.boundingRect.width === 0 && event.target.boundingRect.height === 0) {\n                    this.is_virtual_keyboard_display = false;\n                } else {\n                    this.is_virtual_keyboard_display = true;\n                }\n            };\n        }\n\n        // 再生セッションを初期化\n        this.init();\n\n        // RomSound を鳴らすための AudioContext を生成\n        this.romsounds_context = new AudioContext();\n\n        // 01 ~ 14 まですべての RomSound を読み込む\n        for (let index = 1; index <= 14; index++) {\n\n            // ArrayBuffer として RomSound を取得\n            const url = `/assets/romsounds/${index.toString().padStart(2, '0')}.wav`;\n            const audio_data = await Vue.axios.get(url, {\n                baseURL: '',  // BaseURL を明示的にクライアントのルートに設定\n                responseType: 'arraybuffer',\n            });\n\n            // ArrayBuffer をデコードして AudioBuffer にし、すぐ呼び出せるように貯めておく\n            // ref: https://ics.media/entry/200427/\n            this.romsounds_buffers.push(await this.romsounds_context.decodeAudioData(audio_data.data));\n        }\n    },\n    // 終了前に実行\n    beforeDestroy() {\n\n        // 仮想キーボード周りの操作をブラウザに戻す\n        if ('virtualKeyboard' in navigator) {\n            navigator.virtualKeyboard.overlaysContent = false;\n        }\n\n        // destroy() を実行\n        // 別のページへ遷移するため、DPlayer のインスタンスを確実に破棄する\n        // さもなければ、ブラウザがリロードされるまでバックグラウンドで永遠に再生され続けてしまう\n        // 不正な ID のため 404 ページに遷移されるときは実行しない\n        if (this.channelsStore.channel.current.channel_id !== 'gr999') {\n            this.destroy(true);\n        }\n\n        // AudioContext のリソースを解放\n        if (this.romsounds_context !== null) {\n            this.romsounds_context.close();\n        }\n\n        // このページから離れるので、チャンネル ID を gr000 (ダミー値) に戻す\n        this.channelsStore.channel_id = 'gr000';\n    },\n    // チャンネル切り替え時に実行\n    // コンポーネント（インスタンス）は再利用される\n    // ref: https://v3.router.vuejs.org/ja/guide/advanced/navigation-guards.html#%E3%83%AB%E3%83%BC%E3%83%88%E5%8D%98%E4%BD%8D%E3%82%AB%E3%82%99%E3%83%BC%E3%83%88%E3%82%99\n    beforeRouteUpdate(to, from, next) {\n\n        // 前の再生セッションを破棄して終了する\n        const destroy_promise = this.destroy(false, this.is_zapping_continuously);\n\n        // 連続してチャンネルを切り替えていることを示すフラグを立てる\n        // このフラグは再生セッションが初期化されるタイミングで必ず降ろされる\n        this.is_zapping_continuously = true;\n\n        // チャンネル ID を次のチャンネルのものに切り替える\n        this.channelsStore.channel_id = to.params.channel_id;\n\n        // ハッシュタグフォームのリセットがオンなら、ハッシュタグフォームを空にする\n        if (this.settingsStore.settings.reset_hashtag_when_program_switches === true) {\n            (this.$refs.Twitter as InstanceType<typeof Twitter>).tweet_hashtag = '';\n        }\n\n        (async () => {\n\n            // ザッピング（「前/次のチャンネル」ボタン or 上下キーショートカット）によるチャンネル移動時のみ、\n            // 0.5秒だけ待ってから新しい再生セッションを初期化する\n            // 連続してチャンネルを切り替えた際に毎回再生処理を開始しないように猶予を設ける\n            if (this.is_zapping === true) {\n                this.is_zapping = false;\n                this.interval_ids.push(window.setTimeout(() => {\n                    this.is_zapping_continuously = false;  // 新しいセッションを初期化するので、フラグを下ろす\n                    destroy_promise.then(() => this.init());  // destroy() の実行完了を待ってから初期化する\n                }, 0.5 * 1000));\n\n            // 通常のチャンネル移動時は、すぐに再生セッションを初期化する\n            } else {\n                this.is_zapping_continuously = false;  // 新しいセッションを初期化するので、フラグを下ろす\n                destroy_promise.then(() => this.init());  // destroy() の実行完了を待ってから初期化する\n            }\n        })();\n\n        // 次のルートに置き換え\n        next();\n    },\n    watch: {\n\n        // 視聴中のチャンネルが変更されたときのイベント\n        'channelsStore.channel': {\n            immediate: true,\n            handler(\n                new_channel: {previous: IChannel; current: IChannel; next: IChannel;},\n                old_channel: {previous: IChannel; current: IChannel; next: IChannel;} | undefined,\n            ) {\n\n                // old_channel が undefined の場合は、初回のイベント発火なので何もしない\n                if (old_channel === undefined) {\n                    return;\n                }\n\n                // Twitter コンポーネントのインスタンスを取得\n                const twitter_component = this.$refs.Twitter as InstanceType<typeof Twitter>;\n\n                // 前のチャンネル情報と次のチャンネル情報で channel_id が変わってたら局タグ追加処理を走らせる\n                if (new_channel.current.channel_id !== old_channel.current.channel_id) {\n                    const old_channel_hashtag = twitter_component.getChannelHashtag(old_channel.current.channel_name) ?? '';\n                    twitter_component.tweet_hashtag =\n                        twitter_component.formatHashtag(twitter_component.tweet_hashtag.replaceAll(old_channel_hashtag, ''));\n                }\n\n                // 取得したチャンネル情報と現在のチャンネル情報の NID-SID-EID の組み合わせが異なる場合\n                if ((new_channel.current.id !== old_channel.current.id) ||  // チャンネルが異なる\n                    (new_channel.current.program_present !== null && old_channel.current.program_present === null) ||  // 番組情報あり→番組情報なし\n                    (new_channel.current.program_present === null && old_channel.current.program_present !== null) ||  // 番組情報なし→番組情報あり\n                    ((new_channel.current.program_present !== null && old_channel.current.program_present !== null) &&\n                    (new_channel.current.program_present.id !== old_channel.current.program_present.id))) {  // 番組情報あり→番組情報あり & 番組が異なる\n\n                    // ハッシュタグフォームのリセットがオンなら、ハッシュタグフォームを空にする\n                    if (this.settingsStore.settings.reset_hashtag_when_program_switches === true) {\n                        twitter_component.tweet_hashtag = twitter_component.formatHashtag('');\n                    }\n                }\n            },\n        },\n\n        // 前回視聴画面を開いた際にパネルが表示されていたかどうかを保存\n        is_panel_display() {\n            this.settingsStore.settings.showed_panel_last_time = this.is_panel_display;\n        }\n    },\n    methods: {\n\n        // 再生セッションを初期化する\n        async init() {\n\n            // ローディング中の背景画像をランダムで設定\n            this.background_url = PlayerUtils.generatePlayerBackgroundURL();\n\n            // コントロール表示タイマーを実行\n            this.controlDisplayTimer();\n\n            // 現在時刻を1秒おきに更新\n            this.interval_ids.push(window.setInterval(() => this.time = dayjs().format('YYYY/MM/DD HH:mm:ss'), 1 * 1000));\n\n            // 00秒までの残り秒数を取得\n            // 現在 16:01:34 なら 26 (秒) になる\n            const residue_second = 60 - new Date().getSeconds();\n\n            // 00秒になるまで待ってから実行するタイマー\n            // 番組は基本1分単位で組まれているため、20秒や45秒など中途半端な秒数で更新してしまうと番組情報の反映が遅れてしまう\n            this.interval_ids.push(window.setTimeout(() => {\n\n                // この時点で00秒なので、チャンネル情報を更新\n                this.channelsStore.update(true);\n                this.update();\n\n                // 以降、30秒おきにチャンネル情報を更新\n                this.interval_ids.push(window.setInterval(() => {\n                    this.channelsStore.update(true);\n                    this.update();\n                }, 30 * 1000));\n\n            }, residue_second * 1000));\n\n            // チャンネル情報を更新 (初回)\n            await this.channelsStore.update();\n            this.update();\n        },\n\n        // 画面を更新する\n        async update() {\n\n            // チャンネル ID が未定義なら実行しない（フェイルセーフ）\n            if (this.$route.params.channel_id === undefined) {\n                return;\n            }\n\n            // もし現時点でチャンネル ID が gr999 だった場合、チャンネル情報に存在しない不正な ID なので、404 ページにリダイレクト\n            if (this.channelsStore.channel.current.channel_id === 'gr999') {\n                this.$router.push({path: '/not-found/'});\n                return;\n            }\n\n            // プレイヤーがまだ初期化されていない or 他のチャンネルからの切り替えですでにプレイヤーが初期化されているけど破棄が可能\n            // update() 自体は初期化時以外にも1分ごとに定期実行されるため、その際に毎回プレイヤーを再初期化しないようにする\n            if (this.player === null || this.player_can_be_destroyed === true) {\n\n                // プレイヤー (DPlayer) 周りのセットアップ\n                this.initPlayer();\n\n                // サーバーから送られてくるメッセージのイベントハンドラーを初期化\n                this.initEventHandler();\n\n                // キャプチャのイベントハンドラーを初期化\n                this.initCaptureHandler();\n\n                // ショートカットキーのイベントハンドラーを初期化\n                // 事前に前のイベントハンドラーを削除しておかないと、重複してキー操作が実行されてしまう\n                // 直前で実行しないと上下キーでのチャンネル操作が動かなくなる\n                document.removeEventListener('keydown', this.shortcut_key_handler);\n                this.initShortcutKeyHandler();\n            }\n\n            if (this.player === null) {\n                return;  // 復旧不可能 (発生しないはずだが、書いとかないと TypeScript に怒られる)\n            }\n\n            // 副音声がない番組でプレイヤー上で副音声に切り替えられないように\n            // 音声多重放送でもデュアルモノでもない番組のみ\n            if ((this.channelsStore.channel.current.program_present === null) ||\n               ((this.channelsStore.channel.current.program_present.primary_audio_type !== '1/0+1/0モード(デュアルモノ)') &&\n                (this.channelsStore.channel.current.program_present.secondary_audio_type === null))) {\n\n                // クラスを付与\n                this.player.template.audioItem[1].classList.add('dplayer-setting-audio-item--disabled');\n\n                // 現在副音声が選択されている可能性を考慮し、明示的に主音声に切り替える\n                if (this.player.plugins.mpegts !== undefined || this.player.plugins.liveLLHLSForKonomiTV !== undefined) {\n                    // プレイヤーの初期化が完了するまで少し待つ\n                    while (this.player === null) {\n                        await Utils.sleep(0.1);\n                    }\n                    this.player.template.audioItem[0].classList.add('dplayer-setting-audio-current');\n                    this.player.template.audioItem[1].classList.remove('dplayer-setting-audio-current');\n                    this.player.template.audioValue.textContent = this.player.tran('Primary audio');\n                    try {\n                        if (this.player.plugins.mpegts !== undefined && this.player.plugins.mpegts instanceof mpegts.MSEPlayer) {\n                            this.player.plugins.mpegts.switchPrimaryAudio();\n                        }\n                        if (this.player.plugins.liveLLHLSForKonomiTV !== undefined) {\n                            this.player.plugins.liveLLHLSForKonomiTV.switchPrimaryAudio();\n                        }\n                    } catch (error) {\n                        // pass\n                    }\n                }\n\n            // 音声多重放送かデュアルモノなので、副音声への切り替えを有効化\n            } else {\n                this.player.template.audioItem[1].classList.remove('dplayer-setting-audio-item--disabled');\n            }\n\n            // MediaSession API を使い、メディア通知の表示をカスタマイズ\n            if ('mediaSession' in navigator) {\n\n                // アートワークとして表示するアイコン\n                const artwork = [\n                    {src: '/assets/images/icons/icon-maskable-192px.png', sizes: '192x192', type: 'image/png'},\n                    {src: '/assets/images/icons/icon-maskable-512px.png', sizes: '512x512', type: 'image/png'},\n                ];\n\n                // メディア通知の表示をカスタマイズ\n                navigator.mediaSession.metadata = new MediaMetadata({\n                    title: this.channelsStore.channel.current.program_present ?\n                        this.channelsStore.channel.current.program_present.title : '放送休止',\n                    artist: this.channelsStore.channel.current.channel_name,\n                    artwork: artwork,\n                });\n\n                // 再生状況のステータスを設定\n                if ('setPositionState' in navigator.mediaSession) {\n                    navigator.mediaSession.setPositionState({\n                        duration: 0,  // ライブなので0（長さなしを表すらしい）に設定\n                        playbackRate: 1,  // ライブなので再生速度は常に1になる\n                    });\n                }\n\n                // 一旦既存のイベントハンドラーを削除\n                navigator.mediaSession.setActionHandler('play', null);\n                navigator.mediaSession.setActionHandler('pause', null);\n                navigator.mediaSession.setActionHandler('previoustrack', null);\n                navigator.mediaSession.setActionHandler('nexttrack', null);\n\n                // メディア通知上のボタンが押されたときのイベント\n                navigator.mediaSession.setActionHandler('play', () => this.player?.play());  // 再生\n                navigator.mediaSession.setActionHandler('pause', () => this.player?.pause());  // 停止\n                navigator.mediaSession.setActionHandler('previoustrack', async () => {  // 前のチャンネルに切り替え\n                    navigator.mediaSession.metadata = new MediaMetadata({\n                        title: this.channelsStore.channel.previous.program_present ?\n                            this.channelsStore.channel.previous.program_present.title : '放送休止',\n                        artist: this.channelsStore.channel.previous.channel_name,\n                        artwork: artwork,\n                    });\n                    // ルーティングを前のチャンネルに置き換える\n                    await this.$router.push({path: `/tv/watch/${this.channelsStore.channel.previous.channel_id}`});\n                });\n                navigator.mediaSession.setActionHandler('nexttrack', async () => {  // 次のチャンネルに切り替え\n                    navigator.mediaSession.metadata = new MediaMetadata({\n                        title: this.channelsStore.channel.next.program_present ?\n                            this.channelsStore.channel.next.program_present.title : '放送休止',\n                        artist: this.channelsStore.channel.next.channel_name,\n                        artwork: artwork,\n                    });\n                    // ルーティングを次のチャンネルに置き換える\n                    await this.$router.push({path: `/tv/watch/${this.channelsStore.channel.next.channel_id}`});\n                });\n            }\n        },\n\n        // マウスが動いたりタップされた時のイベント\n        // 3秒間何も操作がなければコントロールを非表示にする\n        controlDisplayTimer(event: Event | null = null, is_player_event: boolean = false) {\n\n            // タッチデバイスかどうか\n            // DPlayer の UA 判定コードと同一\n            const is_touch_device = /iPhone|iPad|iPod|Windows|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\n\n            // タッチデバイスで mousemove 、あるいはタッチデバイス以外で touchmove か click が発火した時は実行じない\n            if (is_touch_device == true  && event !== null && event.type === 'mousemove') return;\n            if (is_touch_device == false && event !== null && (event.type === 'touchmove' || event.type === 'click')) return;\n\n            // 以前セットされたタイマーを止める\n            window.clearTimeout(this.control_interval_id);\n\n            // setTimeout に渡すタイマー関数\n            const timeout = () => {\n\n                // コメント入力フォームが表示されているときは実行しない\n                // タイマーを掛け直してから抜ける\n                if (this.player !== null && this.player.template.controller.classList.contains('dplayer-controller-comment')) {\n                    this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\n                    return;\n                }\n\n                // コントロールを非表示にする\n                this.is_control_display = false;\n\n                // プレイヤーのコントロールと設定パネルを非表示にする\n                if (this.player !== null) {\n                    this.player.controller.hide();\n                    this.player.setting.hide();\n                }\n            };\n\n            // タッチデバイスでプレイヤー画面がクリックされたとき\n            if (is_touch_device === true && is_player_event === true) {\n\n                // プレイヤーのコントロールの表示状態に合わせる\n                if (this.player?.controller.isShow()) {\n\n                    // コントロールを表示する\n                    this.is_control_display = true;\n\n                    // プレイヤーのコントロールを表示する\n                    this.player.controller.show();\n\n                    // 3秒間何も操作がなければコントロールを非表示にする\n                    // 3秒間の間一度でもマウスが動けばタイマーが解除されてやり直しになる\n                    this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\n\n                } else {\n\n                    // コントロールを非表示にする\n                    this.is_control_display = false;\n\n                    // プレイヤーのコントロールと設定パネルを非表示にする\n                    this.player?.controller.hide();\n                    this.player?.setting.hide();\n                }\n\n            // それ以外の画面がクリックされたとき\n            } else {\n\n                // コントロールを表示する\n                this.is_control_display = true;\n\n                // プレイヤーのコントロールを表示する\n                if (this.player !== null) {\n                    this.player.controller.show();\n                }\n\n                // 3秒間何も操作がなければコントロールを非表示にする\n                // 3秒間の間一度でもマウスが動けばタイマーが解除されてやり直しになる\n                this.control_interval_id = window.setTimeout(timeout, 3 * 1000);\n            }\n        },\n\n        // プレイヤーを初期化する\n        initPlayer() {\n\n            // mpegts.js を window 直下に入れる\n            // こうしないと DPlayer が mpegts.js を認識できない\n            (window as any).mpegts = mpegts;\n\n            // すでに DPlayer が初期化されている場合は破棄する\n            // チャンネル切り替え時などが該当する\n            if (this.player !== null && this.player_can_be_destroyed === true) {\n                try {\n                    this.player.destroy();\n                } catch (error) {\n                    // mpegts.js をうまく破棄できない場合\n                    if (this.player.plugins.mpegts !== undefined) {\n                        this.player.plugins.mpegts.destroy();\n                    }\n                }\n                this.player_can_be_destroyed = false;\n                this.player = null;\n            }\n\n            // 低遅延モードであれば低遅延向けの再生バッファを、そうでなければ通常の再生バッファをセット (秒単位)\n            const playback_buffer_sec = this.settingsStore.settings.tv_low_latency_mode ?\n                PLAYBACK_BUFFER_SEC_LOW_LATENCY : PLAYBACK_BUFFER_SEC;\n\n            // DPlayer を初期化\n            this.player = new DPlayer({\n                container: this.$el.querySelector<HTMLElement>('.watch-player__dplayer')!,\n                theme: '#E64F97',  // テーマカラー\n                lang: 'ja-jp',  // 言語\n                live: true,  // ライブモード\n                liveSyncMinBufferSize: this.is_mpegts_supported ? playback_buffer_sec - 0.1 : 0,  // ライブモードで同期する際の最小バッファサイズ\n                loop: false,  // ループ再生 (ライブのため無効化)\n                airplay: false,  // AirPlay 機能 (うまく動かないため無効化)\n                autoplay: true,  // 自動再生\n                hotkey: false,  // ショートカットキー（こちらで制御するため無効化）\n                screenshot: false,  // スクリーンショット (こちらで制御するため無効化)\n                volume: 1.0,  // 音量の初期値\n                // 映像\n                video: {\n                    // デフォルトの品質\n                    // ラジオチャンネルでは常に 48KHz/192kbps に固定する\n                    defaultQuality: (this.channelsStore.channel.current.is_radiochannel) ?\n                        '48kHz/192kbps' : this.settingsStore.settings.tv_streaming_quality,\n                    // 品質リスト\n                    quality: (() => {\n                        const qualities: DPlayerType.VideoQuality[] = [];\n\n                        // ラジオチャンネル\n                        // API が受け付ける品質の値は通常のチャンネルと同じだが (手抜き…)、実際の品質は 48KHz/192kbps で固定される\n                        // ラジオチャンネルの場合は、1080p と渡しても 48kHz/192kbps 固定の音声だけの MPEG-TS が配信される\n                        if (this.channelsStore.channel.current.is_radiochannel) {\n                            // mpegts.js\n                            if (this.is_mpegts_supported === true) {\n                                qualities.push({\n                                    name: '48kHz/192kbps',\n                                    type: 'mpegts',\n                                    url: `${Utils.api_base_url}/streams/live/${this.channelsStore.channel_id}/1080p/mpegts`,\n                                });\n                            // LL-HLS (mpegts.js がサポートされていない場合)\n                            } else {\n                                qualities.push({\n                                    name: '48kHz/192kbps',\n                                    type: 'live-llhls-for-KonomiTV',\n                                    url: `${Utils.api_base_url}/streams/live/${this.channelsStore.channel_id}/1080p/ll-hls`,\n                                });\n                            }\n\n                        // 通常のチャンネル\n                        } else {\n\n                            // ブラウザが H.265 / HEVC の再生に対応していて、かつ通信節約モードが有効なとき\n                            // API に渡す画質に -hevc のプレフィックスをつける\n                            let hevc_prefix = '';\n                            if (PlayerUtils.isHEVCVideoSupported() && this.settingsStore.settings.tv_data_saver_mode === true) {\n                                hevc_prefix = '-hevc';\n                            }\n\n                            // 品質リストを作成\n                            for (const quality of ['1080p-60fps', '1080p', '810p', '720p', '540p', '480p', '360p', '240p']) {\n                                // mpegts.js\n                                if (this.is_mpegts_supported === true) {\n                                    qualities.push({\n                                        name: quality === '1080p-60fps' ? '1080p (60fps)' : quality,\n                                        type: 'mpegts',\n                                        url: `${Utils.api_base_url}/streams/live/${this.channelsStore.channel_id}/${quality}${hevc_prefix}/mpegts`,\n                                    });\n                                // LL-HLS (mpegts.js がサポートされていない場合)\n                                } else {\n                                    qualities.push({\n                                        name: quality === '1080p-60fps' ? '1080p (60fps)' : quality,\n                                        type: 'live-llhls-for-KonomiTV',\n                                        url: `${Utils.api_base_url}/streams/live/${this.channelsStore.channel_id}/${quality}${hevc_prefix}/ll-hls`,\n                                    });\n                                }\n                            }\n                        }\n                        return qualities;\n                    })(),\n                },\n                // コメント\n                danmaku: {\n                    user: 'KonomiTV',  // 便宜上 KonomiTV に固定\n                    speedRate: this.settingsStore.settings.comment_speed_rate,  // コメントの流れる速度\n                    fontSize: this.settingsStore.settings.comment_font_size,  // コメントのフォントサイズ\n                },\n                // コメント API バックエンド\n                apiBackend: {\n                    // コメント取得時\n                    read: (options) => {\n                        // 空の配列を返す (こうするとコメント0件と認識される)\n                        options.success([]);\n                    },\n                    // コメント送信時\n                    send: async (options) => {\n                        // Comment コンポーネント内のコメント送信メソッドを呼び出す\n                        // ref: https://stackoverflow.com/a/65729556/17124142 ($refs への型設定)\n                        (this.$refs.Comment as InstanceType<typeof Comment>).sendComment(options);\n                    },\n                },\n                // プラグイン\n                pluginOptions: {\n                    // mpegts.js\n                    mpegts: {\n                        config: {\n                            // Web Worker を有効にする\n                            enableWorker: true,\n                            // IO 層のバッファを禁止する\n                            enableStashBuffer: false,\n                            // HTMLMediaElement の内部バッファによるライブストリームの遅延を追跡する\n                            // liveBufferLatencyChasing と異なり、いきなり再生時間をスキップするのではなく、\n                            // 再生速度を少しだけ上げることで再生を途切れさせることなく遅延を追跡する\n                            liveSync: this.settingsStore.settings.tv_low_latency_mode,\n                            // 許容する HTMLMediaElement の内部バッファの最大値 (秒単位, 3秒)\n                            liveSyncMaxLatency: 3,\n                            // HTMLMediaElement の内部バッファ (遅延) が liveSyncMaxLatency を超えたとき、ターゲットとする遅延時間 (秒単位)\n                            liveSyncTargetLatency: playback_buffer_sec,\n                            // ライブストリームの遅延の追跡に利用する再生速度 (x1.1)\n                            // 遅延が 3 秒を超えたとき、遅延が playback_buffer_sec を下回るまで再生速度が x1.1 に設定される\n                            liveSyncPlaybackRate: 1.1,\n                        }\n                    },\n                    // aribb24.js\n                    aribb24: {\n                        // 描画フォント\n                        normalFont: `\"${this.settingsStore.settings.caption_font}\", sans-serif`,\n                        // 縁取りする色\n                        forceStrokeColor: this.settingsStore.settings.always_border_caption_text ? true : false,\n                        // 背景色\n                        forceBackgroundColor: this.settingsStore.settings.specify_caption_background_color ?\n                            this.settingsStore.settings.caption_background_color : null,\n                        // DRCS 文字を対応する Unicode 文字に置換\n                        drcsReplacement: true,\n                        // 高解像度の字幕 Canvas を取得できるように\n                        enableRawCanvas: true,\n                        // 縁取りに strokeText API を利用\n                        useStroke: true,\n                        // Unicode 領域の代わりに私用面の領域を利用 (Windows TV 系フォントのみ)\n                        usePUA: (() => {\n                            const font = this.settingsStore.settings.caption_font;\n                            const context = document.createElement('canvas').getContext('2d')!;\n                            context.font = `10px ${font}`;\n                            context.fillText('Test', 0, 0);\n                            if (font.startsWith('Windows TV')) {\n                                return true;\n                            } else {\n                                return false;\n                            }\n                        })(),\n                        // 文字スーパーの PRA (内蔵音再生コマンド) のコールバックを指定\n                        PRACallback: async (index: number) => {\n\n                            // 設定で文字スーパーが無効なら実行しない\n                            if (this.settingsStore.settings.tv_show_superimpose === false) return;\n\n                            // index に応じた内蔵音を鳴らす\n                            // ref: https://ics.media/entry/200427/\n                            // ref: https://www.ipentec.com/document/javascript-web-audio-api-change-volume\n\n                            // 自動再生ポリシーに引っかかったなどで AudioContext が一時停止されている場合、一度 resume() する必要がある\n                            // resume() するまでに何らかのユーザーのジェスチャーが行われているはず…\n                            // なくても動くこともあるみたいだけど、念のため\n                            if (this.romsounds_context.state === 'suspended') {\n                                await this.romsounds_context.resume();\n                            }\n\n                            // index で指定された音声データを読み込み\n                            const buffer_source_node = this.romsounds_context.createBufferSource();\n                            buffer_source_node.buffer = this.romsounds_buffers[index];\n\n                            // GainNode につなげる\n                            const gain_node = this.romsounds_context.createGain();\n                            buffer_source_node.connect(gain_node);\n\n                            // 出力につなげる\n                            gain_node.connect(this.romsounds_context.destination);\n\n                            // 音量を元の wav の3倍にする (1倍だと結構小さめ)\n                            gain_node.gain.value = 3;\n\n                            // 再生開始\n                            buffer_source_node.start(0);\n                        },\n                    }\n                },\n                // 字幕\n                subtitle: {\n                    type: 'aribb24',  // aribb24.js を有効化\n                }\n            });\n\n            // デバッグ用にプレイヤーインスタンスも window 直下に入れる\n            (window as any).player = this.player;\n\n            // プレイヤー側のコントロール非表示タイマーを無効化（上書き）\n            // 無効化しておかないと、controlDisplayTimer() と競合してしまう\n            // 上書き元のコードは https://github.com/tsukumijima/DPlayer/blob/master/src/js/controller.js#L387-L395 にある\n            this.player.controller.setAutoHide = (time: number) => {};\n\n            // ニコニコ実況セッションを初期化し、随時コメントを受信できるようにする\n            // 初期化以降の処理はすべて LiveCommentManager に任せる\n            (this.$refs.Comment as InstanceType<typeof Comment>).initSession(this.player, this.channelsStore.channel_id);\n\n            // ***** コメント送信時のイベントハンドラー *****\n\n            // コメントが送信されたときに、プレイヤーからのコメント送信から間もないかどうかのフラグを立てる (0.1秒後に解除する)\n            // コメントを送信するとコメント入力フォームへのフォーカスが外れるため、ページ全体の keydown イベントでは\n            // Enter キーの押下がコメント送信由来のイベントかキャプチャ拡大表示由来のイベントかを判断できない\n            // そこで、コメント入力フォームフォーカス中に Enter キーが押された場合（=コメント送信時）に 0.1 秒間フラグを立てることで、\n            // ショートカットキーハンドラーがコメント送信由来のイベントであることを判定できるようにしている\n            this.player.template.commentInput.addEventListener('keydown', (event) => {\n                if (event.code === 'Enter') {\n                    this.is_comment_send_just_did = true;\n                    setTimeout(() => this.is_comment_send_just_did = false, 100);\n                }\n            });\n\n            // 「コメント送信後にコメント入力フォームを閉じる」がオフになっている時のために、プレイヤー側のコメント送信関数を上書き\n            // 上書き部分以外の処理内容は概ね https://github.com/tsukumijima/DPlayer/blob/master/src/js/comment.js に準じる\n            this.player.comment!.send = () => {\n\n                if (this.player === null) {\n                    return;  // 復旧不可能 (発生しないはずだが、書いとかないと TypeScript に怒られる)\n                }\n\n                // コメント入力フォームへのフォーカスを外す (「コメント送信後にコメント入力フォームを閉じる」がオンのときだけ)\n                if (this.settingsStore.settings.close_comment_form_after_sending === true) {\n                    this.player.template.commentInput.blur();\n                }\n\n                // 空コメントを弾く\n                if (!this.player.template.commentInput.value.replace(/^\\s+|\\s+$/g, '')) {\n                    this.player.notice(this.player.tran('Please input danmaku content!'));\n                    return;\n                }\n\n                // コメントを送信\n                this.player.danmaku!.send(\n                    {\n                        text: this.player.template.commentInput.value,\n                        color: this.player.container.\n                            querySelector<HTMLInputElement>('.dplayer-comment-setting-color input:checked')!.value,\n                        type: this.player.container.\n                            querySelector<HTMLInputElement>('.dplayer-comment-setting-type input:checked')!.value as DPlayerType.DanmakuType,\n                        size: this.player.container.\n                            querySelector<HTMLInputElement>('.dplayer-comment-setting-size input:checked')!.value as DPlayerType.DanmakuSize,\n                    },\n                    // 送信完了後にコメント入力フォームを閉じる ([コメント送信後にコメント入力フォームを閉じる] がオンのときだけ)\n                    () => {\n                        if (this.settingsStore.settings.close_comment_form_after_sending === true) {\n                            this.player !== null && this.player.comment!.hide();\n                        }\n                    },\n                    true,\n                );\n\n                // 重複送信を防ぐ\n                this.player.template.commentInput.value = '';\n            };\n\n            // ***** 設定パネルのショートカット一覧へのリンクのイベントハンドラー *****\n\n            // 設定パネルにショートカット一覧を表示するリンクを動的に追加する\n            // タッチデバイスでは実行しない\n            const is_touch_device = /iPhone|iPad|iPod|Macintosh|Android|Mobile/i.test(navigator.userAgent) && 'ontouchend' in document;\n            if (is_touch_device === false) {\n                this.player.template.settingOriginPanel.insertAdjacentHTML('beforeend', `\n                <div class=\"dplayer-setting-item dplayer-setting-keyboard-shortcut\">\n                    <span class=\"dplayer-label\">キーボードショートカット</span>\n                    <div class=\"dplayer-toggle\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 32 32\">\n                            <path d=\"M22 16l-10.105-10.6-1.895 1.987 8.211 8.613-8.211 8.612 1.895 1.988 8.211-8.613z\"></path>\n                        </svg>\n                    </div>\n                </div>`);\n\n                // 設定パネルの高さを再設定\n                const settingOriginPanelHeight = this.player.template.settingOriginPanel.scrollHeight;\n                this.player.template.settingBox.style.clipPath = `inset(calc(100% - ${settingOriginPanelHeight}px) 0 0 round 7px)`;\n\n                // 設定パネルのショートカット一覧を表示するリンクがクリックされたときのイベント\n                // リアクティブではないので、手動でやらないといけない…\n                this.$el.querySelector('.dplayer-setting-keyboard-shortcut')!.addEventListener('click', () => {\n                    this.player?.setting.hide();  // 設定パネルを閉じる\n                    this.shortcut_key_modal = true;\n                });\n            }\n\n            // ***** フルスクリーンのイベントハンドラー *****\n\n            // フルスクリーンにするコンテナ要素（ページ全体）\n            const fullscreen_container = document.querySelector('.v-application')!;\n            this.fullscreen_handler = () => {\n                this.is_fullscreen = this.player?.fullScreen.isFullScreen() === true;\n            };\n            if (fullscreen_container.onfullscreenchange !== undefined) {\n                fullscreen_container.addEventListener('fullscreenchange', this.fullscreen_handler);\n            } else {\n                fullscreen_container.addEventListener('webkitfullscreenchange', this.fullscreen_handler);\n            }\n\n            // DPlayer のフルスクリーン関係のメソッドを無理やり上書きし、KonomiTV の UI と統合する\n            // 上書き元のコードは https://github.com/tsukumijima/DPlayer/blob/master/src/js/fullscreen.js にある\n            // フルスクリーンかどうか\n            this.player.fullScreen.isFullScreen = (type?: DPlayerType.FullscreenType) => {\n                return !!(document.fullscreenElement || document.webkitFullscreenElement);\n            };\n            // フルスクリーンをリクエスト\n            this.player.fullScreen.request = (type?: DPlayerType.FullscreenType) => {\n                if (this.player === null) return;\n\n                // すでにフルスクリーンだったらキャンセルする\n                if (this.player.fullScreen.isFullScreen()) {\n                    this.player.fullScreen.cancel();\n                    return;\n                }\n\n                // フルスクリーンをリクエスト\n                // Safari は webkit のベンダープレフィックスが必要\n                fullscreen_container.requestFullscreen = fullscreen_container.requestFullscreen || fullscreen_container.webkitRequestFullscreen;\n                if (fullscreen_container.requestFullscreen) {\n                    fullscreen_container.requestFullscreen();\n                } else {\n                    // フルスクリーンがサポートされていない場合はエラーを表示\n                    this.player.notice('iPhone Safari は動画のフルスクリーン表示に対応していません。');\n                    return;\n                }\n\n                // 画面の向きを横に固定 (Screen Orientation API がサポートされている場合)\n                if (screen.orientation) {\n                    screen.orientation.lock('landscape').catch(() => {});\n                }\n            };\n            // フルスクリーンをキャンセル\n            this.player.fullScreen.cancel = (type?: DPlayerType.FullscreenType) => {\n\n                // フルスクリーンを終了\n                // Safari は webkit のベンダープレフィックスが必要\n                document.exitFullscreen = document.exitFullscreen || document.webkitExitFullscreen;\n                if (document.exitFullscreen) {\n                    document.exitFullscreen();\n                }\n\n                // 画面の向きの固定を解除\n                if (screen.orientation) {\n                    screen.orientation.unlock();\n                }\n            };\n\n            // ***** 再生/停止/画質切り替え時のイベントハンドラー *****\n\n            // 再生/停止されたとき\n            // 通知バーからの制御など、画面から以外の外的要因で再生/停止が行われる事もある\n            const on_play_or_pause = () => {\n\n                // まだ設定パネルが表示されていたら非表示にする\n                this.player?.setting.hide();\n\n                // コントロールを表示する\n                this.controlDisplayTimer();\n            };\n            this.player.on('play', on_play_or_pause);\n            this.player.on('pause', on_play_or_pause);\n\n            // 画質の切り替えが開始されたときのイベント\n            this.player.on('quality_start', () => {\n\n                // ローディング中の背景画像をランダムで設定\n                this.background_url = PlayerUtils.generatePlayerBackgroundURL();\n\n                // イベントソースを閉じる\n                if (this.eventsource !== null) {\n                    this.eventsource.close();\n                    this.eventsource = null;\n                }\n\n                // 新しい EventSource を作成\n                // 画質ごとにイベント API は異なるため、一度破棄してから作り直す\n                this.initEventHandler();\n            });\n\n            // 停止状態でかつ再生時間からバッファが 30 秒以上離れていないかを監視し、そうなっていたら強制的にシークする\n            // mpegts.js の仕様上、MSE に未再生のバッファがたまり過ぎると SourceBuffer が追加できなくなるため、強制的に接続が切断されてしまう\n            // LL-HLS 再生時も、ずっと停止したままだとプレイリストやセグメントに HTTP リクエストされなくなり、サーバー側でタイムアウトさせられてしまう\n            // mpegts.js 再生時は 60 秒、LL-HLS 再生時は 30 秒おきに監視する (LL-HLS 再生時はバッファの状態に関わらずシークする)\n            if (this.is_mpegts_supported === true) {\n                this.interval_ids.push(window.setInterval(() => {\n                    if (this.player === null) return;\n                    if ((this.player.video.paused && this.player.video.buffered.length >= 1) &&\n                        (this.player.video.buffered.end(0) - this.player.video.currentTime > 30)) {\n                        this.player.sync();\n                    }\n                }, 60 * 1000));\n            } else {\n                this.interval_ids.push(window.setInterval(() => {\n                    if (this.player === null) return;\n                    if (this.player.video.paused) {\n                        this.player.sync();\n                    }\n                }, 30 * 1000));\n            }\n\n            // ***** 文字スーパーのイベントハンドラー *****\n\n            (async () => {\n\n                // 文字スーパーが初期化されるまで待つ\n                if (this.player === null) return;\n                while (this.player.plugins.aribb24Superimpose === undefined) {\n                    await Utils.sleep(0.1);  // 0.1 秒待つ\n                }\n\n                // 設定で文字スーパーが有効\n                // 字幕が非表示の場合でも、文字スーパーは表示する\n                if (this.settingsStore.settings.tv_show_superimpose === true) {\n                    this.player.plugins.aribb24Superimpose.show();\n                    this.player.on('subtitle_hide', () => {\n                        this.player?.plugins.aribb24Superimpose!.show();\n                    });\n                // 設定で文字スーパーが無効\n                } else {\n                    this.player.plugins.aribb24Superimpose.hide();\n                    this.player.on('subtitle_show', () => {\n                        this.player?.plugins.aribb24Superimpose!.hide();\n                    });\n                }\n\n            })();\n        },\n\n        // イベントハンドラーを初期化する\n        initEventHandler() {\n\n            // ***** プレイヤー再生開始時のイベントハンドラー *****\n\n            if (this.player === null) return;\n\n            // 必ず最初はローディング状態とする\n            this.is_loading = true;\n\n            // 音量を 0 に設定\n            this.player.video.volume = 0;\n\n            // video 要素の crossOrigin 属性を 'anonymous' に設定\n            // これを設定しないと、クロスオリジンの場合にキャプチャができない\n            this.player.video.crossOrigin = 'anonymous';\n\n            // LL-HLS 再生時のみ、ローディングが終わるまでは表示上再生状態を維持する\n            // play() が正常に実行できればいいのだが、Safari の自動再生制限により失敗することがあるので、\n            // その際はアイコンの HTML を書き換えたりして強制的に再生状態にする (苦肉の策)\n            if (this.is_mpegts_supported === false) {\n                const force_play = () => {\n                    this.player?.video.play().catch(() => {\n                        console.warn('HTMLVideoElement.play() rejected. run fallback.');\n                        const pause_icon = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 17 32\"><path d=\"M14.080 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048zM2.88 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112v-18.24q0-2.048 2.88-2.048z\"></path></svg>';\n                        this.player!.template.playButton.innerHTML = pause_icon;\n                        this.player!.template.mobilePlayButton.innerHTML = pause_icon;\n                        this.player!.container.classList.remove('dplayer-paused');\n                        this.player!.container.classList.add('dplayer-playing');\n                        this.player!.danmaku!.play();\n                    });\n                    // ローディング表示が消えたタイミングでイベントを登録解除\n                    if (this.is_loading === false) {\n                        this.player?.video.removeEventListener('pause', force_play);\n                        return;\n                    }\n                };\n                this.player.video.addEventListener('pause', force_play);\n            }\n\n            // 再生バッファを調整し、再生準備ができた段階でプレイヤーの背景を非表示にするイベントを登録\n            // 実際に再生可能になるのを待ってから実行する\n            // 画質切り替え時にも実行する必要があるので、あえてこの位置に記述している\n            const on_canplay = async () => {\n\n                // 自分自身のイベントを登録解除 (重複実行を避ける)\n                if (this.player === null) return;\n                this.player.video.oncanplay = null;\n                this.player.video.oncanplaythrough = null;\n\n                // mpegts.js 利用時のみ実行\n                if (this.is_mpegts_supported === true) {\n\n                    // 再生バッファ調整のため、一旦停止させる\n                    // this.player.video.pause() を使うとプレイヤーの UI アイコンが停止してしまうので、代わりに playbackRate を使う\n                    this.player.video.playbackRate = 0;\n\n                    // 再生バッファを取得する (取得に失敗した場合は 0 を返す)\n                    const get_playback_buffer_sec = (): number => {\n                        let buffered_end = 0;\n                        if (this.player.video.buffered.length >= 1) {\n                            buffered_end = this.player.video.buffered.end(0);\n                        }\n                        return (Math.round((buffered_end - this.player.video.currentTime) * 1000) / 1000);\n                    };\n\n                    // 低遅延モードであれば低遅延向けの再生バッファを、そうでなければ通常の再生バッファをセット (秒単位)\n                    const playback_buffer_sec = this.settingsStore.settings.tv_low_latency_mode ?\n                        PLAYBACK_BUFFER_SEC_LOW_LATENCY : PLAYBACK_BUFFER_SEC;\n\n                    // 再生バッファが playback_buffer_sec を超えるまで 0.1 秒おきに再生バッファをチェックする\n                    // 再生バッファが playback_buffer_sec を切ると再生が途切れやすくなるので (特に動きの激しい映像)、\n                    // 再生開始までの時間を若干犠牲にして、再生バッファの調整と同期に時間を割く\n                    // playback_buffer_sec の値は mpegts.js に渡す liveSyncTargetLatency プロパティに渡す値と共通\n                    let current_playback_buffer_sec = get_playback_buffer_sec();\n                    while (current_playback_buffer_sec < playback_buffer_sec) {\n                        await Utils.sleep(0.1);\n                        current_playback_buffer_sec = get_playback_buffer_sec();\n                    }\n\n                    // 再生開始\n                    this.player.video.playbackRate = 1;\n                }\n\n                // 再生が一時的に止まってバッファリングしているとき/再び再生されはじめたときのイベント\n                // バッファリングの Progress Circular の表示を制御する\n                // 同期が終わってからの方が都合が良い\n                this.player.video.addEventListener('waiting', () => this.is_video_buffering = true);\n                this.player.video.addEventListener('playing', () => this.is_video_buffering = false);\n\n                // ローディング状態を解除し、映像を表示する\n                this.is_loading = false;\n\n                // バッファリング中の Progress Circular を非表示にする\n                this.is_video_buffering = false;\n\n                if (this.channelsStore.channel.current.is_radiochannel) {\n                    // ラジオチャンネルでは引き続き映像の代わりとして背景画像を表示し続ける\n                    this.is_background_display = true;\n                } else {\n                    // 背景画像をフェードアウト\n                    this.is_background_display = false;\n                }\n\n                // 再生開始時に音量を徐々に上げる\n                // いきなり再生されるよりも体験が良い\n                const current_volume = this.player.user.get('volume');\n                while ((this.player.video.volume + 0.05) < current_volume) {\n                    // 小数第2位以下を切り捨てて、浮動小数の誤差で 1 (100%) を微妙に超えてしまいエラーになるのを避ける\n                    this.player.video.volume = Utils.mathFloor(this.player.video.volume + 0.05, 2);\n                    await Utils.sleep(0.02);\n                }\n                this.player.video.volume = current_volume;\n            };\n            this.player.video.oncanplay = on_canplay;\n            this.player.video.oncanplaythrough = on_canplay;\n\n            // ***** KonomiTV サーバーのイベント API のイベントハンドラー *****\n\n            // EventSource を作成\n            const eventsource_url = (this.player!.quality!.url as string).replace('/mpegts', '/events').replace(/\\/ll-hls.*/, '/events');\n            this.eventsource = new EventSource(eventsource_url);\n\n            // 初回接続時のイベント\n            this.eventsource.addEventListener('initial_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n                console.log(`[initial_update] Status: ${event.status} / Detail: ${event.detail}`);\n\n                // ステータスごとに処理を振り分け\n                switch (event.status) {\n\n                    // Status: Standby\n                    case 'Standby': {\n\n                        // バッファリング中の Progress Circular を表示\n                        this.is_video_buffering = true;\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n                        break;\n                    }\n                }\n            });\n\n            // ステータスが更新されたときのイベント\n            this.eventsource.addEventListener('status_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                if (this.player === null) return;\n                const event = JSON.parse(event_raw.data);\n                console.log(`[status_update] Status: ${event.status} / Detail: ${event.detail}`);\n\n                // 視聴者数を更新\n                this.channelsStore.updateChannel(this.channelsStore.channel_id, {\n                    ...this.channelsStore.channel.current,\n                    viewers: event.clients_count,\n                });\n\n                // ステータスごとに処理を振り分け\n                switch (event.status) {\n\n                    // Status: Standby\n                    case 'Standby': {\n\n                        // ステータス詳細をプレイヤーに表示\n                        if (!this.player.template.notice.textContent!.includes('画質を')) {  // 画質切り替えの表示を上書きしない\n                            this.player.notice(event.detail, -1);\n                        }\n\n                        // バッファリング中の Progress Circular を表示\n                        this.is_video_buffering = true;\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n                        break;\n                    }\n\n                    // Status: ONAir\n                    case 'ONAir': {\n\n                        // ステータス詳細をプレイヤーから削除\n                        if (!this.player.template.notice.textContent!.includes('画質を')) {  // 画質切り替えの表示を上書きしない\n                            this.player.notice(this.player.template.notice.textContent!, 0.000001);\n                        }\n\n                        // LL-HLS ストリーミング時のみ、このタイミングで映像をロードして再生を開始する\n                        if (this.is_mpegts_supported === false) {\n                            this.player.video.load();\n                            this.player.video.play();\n                            on_canplay();\n                        }\n\n                        // 再生が開始される前にチャンネルを切り替えた際にコメントが流れない不具合のワークアラウンド\n                        if (this.player.container.classList.contains('dplayer-paused')) {\n                            this.player.container.classList.remove('dplayer-paused');\n                            this.player.container.classList.add('dplayer-playing');\n                        }\n\n                        // 前のプレイヤーインスタンスの Picture-in-Picture ウインドウが残っている場合、終了させてからもう一度切り替える\n                        // チャンネル切り替えが完了しても前の Picture-in-Picture ウインドウは再利用されないため、一旦終了させるしかない\n                        if (document.pictureInPictureElement) {\n                            document.exitPictureInPicture();\n                            this.player.video.requestPictureInPicture();\n                        }\n                        break;\n                    }\n\n                    // Status: Restart\n                    case 'Restart': {\n\n                        // ステータス詳細をプレイヤーに表示\n                        this.player.notice(event.detail, -1);\n\n                        // プレイヤーを再起動する\n                        this.player.switchVideo({\n                            url: this.player.quality!.url,\n                            type: this.player.quality!.type,\n                        });\n\n                        // 再起動しただけでは自動再生されないので、明示的に\n                        this.player.play();\n\n                        // バッファリング中の Progress Circular を表示\n                        this.is_video_buffering = true;\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n                        break;\n                    }\n\n                    // Status: Offline\n                    // 基本的に Offline は放送休止中やエラーなどで復帰の見込みがない状態\n                    case 'Offline': {\n\n                        if (this.player !== null) {\n\n                            // ステータス詳細をプレイヤーに表示\n                            // 動画の読み込みエラーが送出された時にメッセージを上書きする\n                            this.player.notice(event.detail, -1);\n                            this.player.video.onerror = () => {\n                                this.player!.notice(event.detail, -1);\n                                this.player!.video.onerror = null;\n                            };\n\n                            // 描画されたコメントをクリア\n                            this.player?.danmaku?.clear();\n\n                            // 動画を停止する\n                            this.player.video.pause();\n                        }\n\n                        // イベントソースを閉じる（復帰の見込みがないため）\n                        if (this.eventsource !== null) {\n                            this.eventsource.close();\n                            this.eventsource = null;\n                        }\n\n                        // プレイヤーの背景を表示する\n                        this.is_background_display = true;\n\n                        // バッファリング中の Progress Circular を非表示にする\n                        this.is_loading = false;\n                        this.is_video_buffering = false;\n                        break;\n                    }\n                }\n            });\n\n            // ステータス詳細が更新されたときのイベント\n            this.eventsource.addEventListener('detail_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                if (this.player === null) return;\n                const event = JSON.parse(event_raw.data);\n                console.log(`[detail_update] Status: ${event.status} Detail:${event.detail}`);\n\n                // 視聴者数を更新\n                this.channelsStore.updateChannel(this.channelsStore.channel_id, {\n                    ...this.channelsStore.channel.current,\n                    viewers: event.clients_count,\n                });\n\n                // ステータスごとに処理を振り分け\n                switch (event.status) {\n\n                    // Status: Standby\n                    case 'Standby': {\n\n                        // ステータス詳細をプレイヤーに表示\n                        this.player.notice(event.detail, -1);\n\n                        // プレイヤーの背景を表示する\n                        if (!this.is_background_display) {\n                            this.is_background_display = true;\n                        }\n                        break;\n                    }\n                }\n            });\n\n            // クライアント数（だけ）が更新されたときのイベント\n            this.eventsource.addEventListener('clients_update', (event_raw: MessageEvent) => {\n\n                // イベントを取得\n                const event = JSON.parse(event_raw.data);\n\n                // 視聴者数を更新\n                this.channelsStore.updateChannel(this.channelsStore.channel_id, {\n                    ...this.channelsStore.channel.current,\n                    viewers: event.clients_count,\n                });\n            });\n        },\n\n        // ショートカットキーを初期化する\n        initShortcutKeyHandler() {\n\n            const twitter_component = (this.$refs.Twitter as InstanceType<typeof Twitter>);\n            const tweet_form_element = twitter_component.$el.querySelector<HTMLDivElement>('.tweet-form__textarea');\n\n            // IME 変換中の状態を保存する\n            for (const element of document.querySelectorAll('input[type=text],input[type=search],textarea')) {\n                element.addEventListener('compositionstart', () => this.is_ime_composing = true);\n                element.addEventListener('compositionend', () => this.is_ime_composing = false);\n            }\n\n            // ショートカットキーハンドラー\n            this.shortcut_key_handler = async (event: KeyboardEvent) => {\n\n                const tag = document.activeElement.tagName.toUpperCase();\n                const editable = document.activeElement.getAttribute('contenteditable');\n\n                // 矢印キーのデフォルトの挙動（スクロール）を抑制\n                // キーリピート周りで間引かれるイベントでも event.preventDefault() しないとスクロールしてしまうため、\n                // 一番最初のタイミングでやっておく\n                // input・textarea・contenteditable 状態の要素では実行しない\n                if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.code) &&\n                    (tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true')) {\n                    event.preventDefault();\n                }\n\n                // キーリピート（押しっぱなし）状態の場合は基本実行しない\n                // 押し続けると何度も同じ動作が実行されて大変な事になる…\n                // ただ、キーリピートを使いたい場合もあるので、リピート状態をフラグとして保存する\n                let is_repeat = false;\n                if (event.repeat) is_repeat = true;\n\n                // キーリピート状態は event.repeat を見る事でだいたい検知できるが、最初の何回かは検知できないこともある\n                // そこで、0.05 秒以内に連続して発火したキーイベントは間引きも兼ねて実行しない\n                const now = Utils.time();\n                if (now - this.shortcut_key_pressed_at < 0.05) return;\n                this.shortcut_key_pressed_at = now;  // 最終押下時刻を更新\n\n                // 無名関数の中で実行する\n                const result = await (async (): Promise<boolean> => {\n\n                    // ***** ツイート入力フォームにフォーカスを当てる/フォーカスを外す *****\n\n                    // ツイート入力フォームにフォーカスしているときもこのショートカットが動くようにする\n                    // 以降の if 文で textarea フォーカス時のイベントをすべて弾いてしまっているため、前に持ってきている\n                    // Tab キーに割り当てている関係で、IME 変換中は実行しない（IME 変換中に実行すると文字変換ができなくなる）\n                    if (((tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') ||\n                        (document.activeElement === tweet_form_element)) && this.is_ime_composing === false) {\n                        if (event.code === 'Tab') {\n\n                            // ツイート入力フォームにフォーカスがすでに当たっていたら、フォーカスを外して終了\n                            if (document.activeElement === tweet_form_element) {\n                                tweet_form_element.blur();\n                                return true;\n                            }\n\n                            // パネルを開く\n                            this.is_panel_display = true;\n\n                            // どのタブを開いていたかに関係なく Twitter タブに切り替える\n                            this.tv_panel_active_tab = 'Twitter';\n\n                            // ツイート入力フォームの textarea 要素にフォーカスを当てる\n                            tweet_form_element.focus();\n\n                            // フォーカスを当てると勝手に横方向にスクロールされてしまうので、元に戻す\n                            this.$el.scrollLeft = 0;\n\n                            window.setTimeout(() => {\n\n                                // 他のタブから切り替えると一発でフォーカスが当たらないことがあるので、ちょっとだけ待ってから念押し\n                                // $nextTick() だと上手くいかなかった…\n                                tweet_form_element.focus();\n\n                                // フォーカスを当てると勝手に横方向にスクロールされてしまうので、元に戻す\n                                this.$el.scrollLeft = 0;\n\n                            }, 100);  // 0.1秒\n\n                            return true;\n                        }\n                    }\n\n                    // ***** ツイートを送信する *****\n\n                    // ツイート入力フォームにフォーカスしているときもこのショートカットが動くようにする\n                    // Twitter タブ以外を開いているときは実行しない\n                    // 以降の if 文で textarea フォーカス時のイベントをすべて弾いてしまっているため、前に持ってきている\n                    if (((tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') ||\n                        (document.activeElement === tweet_form_element)) &&\n                        this.tv_panel_active_tab === 'Twitter' &&\n                        this.is_ime_composing === false) {\n                        // (Ctrl or Cmd or Shift) + Enter\n                        // Shift + Enter は隠し機能（間違えたとき用）\n                        if ((event.ctrlKey || event.metaKey || event.shiftKey) && event.code === 'Enter') {\n                            twitter_component.$el.querySelector<HTMLDivElement>('.tweet-button')!.click();\n                            return true;\n                        }\n                    }\n\n                    // ***** コメント入力フォームを閉じる *****\n\n                    // プレイヤーが初期化されていない時・Shift / Alt キーが一緒に押された時に作動しないように\n                    if (this.player !== null && !event.shiftKey && !event.altKey) {\n\n                        // コメント入力フォームが表示されているときのみ\n                        if (this.player.template.controller.classList.contains('dplayer-controller-comment')) {\n                            // Ctrl or Cmd + M\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'KeyM') {\n                                this.player.comment!.hide();\n                                return true;\n                            }\n                        }\n                    }\n\n                    // input・textarea・contenteditable 状態の要素でなければ\n                    // 文字入力中にショートカットキーが作動してしまわないように\n                    if (tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') {\n\n                        // キーリピートでない時・Ctrl / Cmd / Alt キーが一緒に押された時に作動しないように\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.altKey) {\n\n                            // ***** 数字キーでチャンネルを切り替える *****\n\n                            // Ctrl / Cmd キーが同時押しされていたら BS チャンネルの方を選局する\n                            const switch_channel_type = (event.shiftKey) ? 'BS' : 'GR';\n\n                            // 1～9キー\n                            let switch_remocon_id: number | null = null;\n                            if (event.code === 'Digit1' || event.code === 'Digit2' || event.code === 'Digit3' ||\n                                event.code === 'Digit4' || event.code === 'Digit5' || event.code === 'Digit6' ||\n                                event.code === 'Digit7' || event.code === 'Digit8' || event.code === 'Digit9') {\n                                switch_remocon_id = Number(event.code.replace('Digit', ''));\n                            }\n                            // 0キー: 10に割り当て\n                            if (event.code === 'Digit0') switch_remocon_id = 10;\n                            // -キー: 11に割り当て\n                            if (event.code === 'Minus') switch_remocon_id = 11;\n                            // ^キー: 12に割り当て\n                            if (event.code === 'Equal') switch_remocon_id = 12;\n                            // 1～9キー (テンキー)\n                            if (event.code === 'Numpad1' || event.code === 'Numpad2' || event.code === 'Numpad3' ||\n                                event.code === 'Numpad4' || event.code === 'Numpad5' || event.code === 'Numpad6' ||\n                                event.code === 'Numpad7' || event.code === 'Numpad8' || event.code === 'Numpad9') {\n                                switch_remocon_id = Number(event.code.replace('Numpad', ''));\n                            }\n                            // 0キー (テンキー): 10に割り当て\n                            if (event.code === 'Numpad0') switch_remocon_id = 10;\n\n                            // この時点でリモコン番号が取得できていたら実行\n                            if (switch_remocon_id !== null) {\n\n                                // 切り替え先のチャンネルを取得する\n                                const switch_channel = this.channelsStore.getChannelByRemoconID(switch_channel_type, switch_remocon_id);\n\n                                // チャンネルが取得できていれば、ルーティングをそのチャンネルに置き換える\n                                // 押されたキーに対応するリモコン番号のチャンネルがない場合や、現在と同じチャンネル ID の場合は何も起こらない\n                                if (switch_channel !== null && switch_channel.channel_id !== this.channelsStore.channel_id) {\n                                    await this.$router.push({path: `/tv/watch/${switch_channel.channel_id}`});\n                                    return true;\n                                }\n                            }\n                        }\n\n                        // キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\n\n                            // ***** キーボードショートカットの一覧を表示する *****\n\n                            // /(?)キー: キーボードショートカットの一覧を表示する\n                            if (event.code === 'Slash') {\n                                this.shortcut_key_modal = !this.shortcut_key_modal;\n                                return true;\n                            }\n\n                            // ***** パネルのタブを切り替える *****\n\n                            // Pキー: パネルの表示切り替え\n                            if (event.code === 'KeyP') {\n                                this.is_panel_display = !this.is_panel_display;\n                                return true;\n                            }\n                            // Kキー: 番組情報タブ\n                            if (event.code === 'KeyK') {\n                                this.tv_panel_active_tab = 'Program';\n                                return true;\n                            }\n                            // Lキー: チャンネルタブ\n                            if (event.code === 'KeyL') {\n                                this.tv_panel_active_tab = 'Channel';\n                                return true;\n                            }\n                            // ;(+)キー: コメントタブ\n                            if (event.code === 'Semicolon') {\n                                this.tv_panel_active_tab = 'Comment';\n                                return true;\n                            }\n                            // :(*)キー: Twitterタブ\n                            if (event.code === 'Quote') {\n                                this.tv_panel_active_tab = 'Twitter';\n                                return true;\n                            }\n\n                            // ***** Twitter タブ内のタブを切り替える *****\n\n                            // [(「): ツイート検索タブ\n                            if (event.code === 'BracketRight') {\n                                twitter_component.twitter_active_tab = 'Search';\n                                return true;\n                            }\n                            // ](」): タイムラインタブ\n                            if (event.code === 'Backslash') {\n                                twitter_component.twitter_active_tab = 'Timeline';\n                                return true;\n                            }\n                            // \\(￥)キー: キャプチャタブ\n                            if (event.code === 'IntlRo') {\n                                twitter_component.twitter_active_tab = 'Capture';\n                                return true;\n                            }\n                        }\n\n                        // Twitter タブ内のキャプチャタブが表示されている & Ctrl / Cmd / Shift / Alt のいずれも押されていないときだけ\n                        // キャプチャタブが表示されている時は、プレイヤー操作側の矢印キー/スペースキーのショートカットは動作しない（キーが重複するため）\n                        if (this.tv_panel_active_tab === 'Twitter' && twitter_component.twitter_active_tab === 'Capture' &&\n                            (!event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey)) {\n\n                            // ***** キャプチャにフォーカスする *****\n\n                            if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.code)) {\n\n                                // キャプチャリストに一枚もキャプチャがない\n                                if (twitter_component.captures.length === 0) return false;\n\n                                // まだどのキャプチャにもフォーカスされていない場合は、一番新しいキャプチャにフォーカスして終了\n                                if (twitter_component.captures.some(capture => capture.focused === true) === false) {\n                                    twitter_component.captures[twitter_component.captures.length - 1].focused = true;\n                                    return true;\n                                }\n\n                                // 現在フォーカスされているキャプチャのインデックスを取得\n                                const focused_capture_index = twitter_component.captures.findIndex(capture => capture.focused === true);\n\n                                // ↑キー: 2つ前のキャプチャにフォーカスする\n                                // キャプチャリストは2列で並んでいるので、2つ後のキャプチャが現在フォーカスされているキャプチャの直上になる\n                                if (event.code === 'ArrowUp') {\n                                    // 2つ前のキャプチャがないなら実行しない\n                                    if (focused_capture_index - 2 < 0) return false;\n                                    twitter_component.captures[focused_capture_index - 2].focused = true;\n                                }\n\n                                // ↓キー: 2つ後のキャプチャにフォーカスする\n                                // キャプチャリストは2列で並んでいるので、2つ後のキャプチャが現在フォーカスされているキャプチャの直下になる\n                                if (event.code === 'ArrowDown') {\n                                    // 2つ後のキャプチャがないなら実行しない\n                                    if (focused_capture_index + 2 > (twitter_component.captures.length - 1)) return false;\n                                    twitter_component.captures[focused_capture_index + 2].focused = true;\n                                }\n\n                                // ←キー: 1つ前のキャプチャにフォーカスする\n                                if (event.code === 'ArrowLeft') {\n                                    // 1つ前のキャプチャがないなら実行しない\n                                    if (focused_capture_index - 1 < 0) return false;\n                                    twitter_component.captures[focused_capture_index - 1].focused = true;\n                                }\n\n                                // ←キー: 1つ後のキャプチャにフォーカスする\n                                if (event.code === 'ArrowRight') {\n                                    // 1つ後のキャプチャがないなら実行しない\n                                    if (focused_capture_index + 1 > (twitter_component.captures.length - 1)) return false;\n                                    twitter_component.captures[focused_capture_index + 1].focused = true;\n                                }\n\n                                // 現在フォーカスされているキャプチャのフォーカスを外す\n                                twitter_component.captures[focused_capture_index].focused = false;\n\n                                // 拡大表示のモーダルが開かれている場合は、フォーカスしたキャプチャをモーダルにセット\n                                // こうすることで、QuickLook みたいな挙動になる\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\n                                if (twitter_component.zoom_capture_modal === true) {\n                                    twitter_component.zoom_capture = focused_capture;\n                                }\n\n                                // 現在フォーカスされているキャプチャが見える位置までスクロール\n                                // block: 'nearest' の指定で、上下どちらにスクロールしてもフォーカスされているキャプチャが常に表示されるようになる\n                                const focused_capture_element =\n                                    twitter_component.$el.querySelector(`img[src=\"${focused_capture.image_url}\"]`).parentElement;\n                                if (is_repeat) {\n                                    // キーリピート状態ではスムーズスクロールがフォーカスの移動に追いつけずスクロールの挙動がおかしくなるため、\n                                    // スムーズスクロールは無効にしてある\n                                    focused_capture_element.scrollIntoView({block: 'nearest', inline: 'nearest', behavior: 'auto'});\n                                } else {\n                                    focused_capture_element.scrollIntoView({block: 'nearest', inline: 'nearest', behavior: 'smooth'});\n                                }\n                                return true;\n                            }\n\n                            // ***** キャプチャを拡大表示する/拡大表示を閉じる *****\n\n                            if (event.code === 'Enter') {\n\n                                // Enter キーの押下がプレイヤー側のコメント送信由来のイベントの場合は実行しない\n                                if (this.is_comment_send_just_did) return false;\n\n                                // すでにモーダルが開かれている場合は、どのキャプチャが拡大表示されているかに関わらず閉じる\n                                if (twitter_component.zoom_capture_modal === true) {\n                                    twitter_component.zoom_capture_modal = false;\n                                    return true;\n                                }\n\n                                // 現在フォーカスされているキャプチャを取得\n                                // まだどのキャプチャにもフォーカスされていない場合は実行しない\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\n                                if (focused_capture === undefined) return false;\n\n                                // モーダルを開き、モーダルで拡大表示するキャプチャとしてセット\n                                twitter_component.zoom_capture = focused_capture;\n                                twitter_component.zoom_capture_modal = true;\n                                return true;\n                            }\n\n                            // ***** キャプチャを選択する/選択を解除する *****\n\n                            if (event.code === 'Space') {\n\n                                // 現在フォーカスされているキャプチャを取得\n                                // まだどのキャプチャにもフォーカスされていない場合は実行しない\n                                const focused_capture = twitter_component.captures.find(capture => capture.focused === true);\n                                if (focused_capture === undefined) return false;\n\n                                // 「キャプチャリスト内のキャプチャがクリックされたときのイベント」を呼ぶ\n                                // 選択されていなければ選択され、選択されていれば選択が解除される\n                                // キャプチャの枚数制限などはすべて clickCapture() の中で処理される\n                                twitter_component.clickCapture(focused_capture);\n                                return true;\n                            }\n                        }\n\n                        // ***** 上下キーでチャンネルを切り替える *****\n\n                        // キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\n                        // キャプチャ関連のショートカットの後に持ってこないとキャプチャ関連のショートカットが動作しなくなる\n                        if (is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\n\n                            // ↑キー: 前のチャンネルに切り替え\n                            if (event.code === 'ArrowUp') {\n                                this.is_zapping = true;\n                                await this.$router.push({path: `/tv/watch/${this.channelsStore.channel.previous.channel_id}`});\n                                return true;\n                            }\n                            // ↓キー: 次のチャンネルに切り替え\n                            if (event.code === 'ArrowDown') {\n                                this.is_zapping = true;\n                                await this.$router.push({path: `/tv/watch/${this.channelsStore.channel.next.channel_id}`});\n                                return true;\n                            }\n                        }\n\n                        // ***** プレイヤーのショートカットキー *****\n\n                        // プレイヤーが初期化されていない時・Shift / Alt キーが一緒に押された時に作動しないように\n                        if (this.player !== null && !event.shiftKey && !event.altKey) {\n\n                            // Ctrl / Cmd + ↑キー: プレイヤーの音量を上げる\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowUp') {\n                                this.player.volume(this.player.volume() + 0.05);\n                                return true;\n                            }\n                            // Ctrl / Cmd + ↓キー: プレイヤーの音量を下げる\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowDown') {\n                                this.player.volume(this.player.volume() - 0.05);\n                                return true;\n                            }\n                            // Ctrl / Cmd + ←キー: 停止して0.5秒巻き戻し\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowLeft') {\n                                if (this.player.video.paused === false) this.player.video.pause();\n                                this.player.video.currentTime = this.player.video.currentTime - 0.5;\n                                return true;\n                            }\n                            // Ctrl / Cmd + →キー: 停止して0.5秒早送り\n                            if ((event.ctrlKey || event.metaKey) && event.code === 'ArrowRight') {\n                                if (this.player.video.paused === false) this.player.video.pause();\n                                this.player.video.currentTime = this.player.video.currentTime + 0.5;\n                                return true;\n                            }\n                        }\n\n                        // プレイヤーが初期化されていない時・Ctrl / Cmd / Alt キーが一緒に押された時に作動しないように\n                        if (this.player !== null && !event.ctrlKey && !event.metaKey && !event.altKey) {\n\n                            // Shift + Spaceキー + キーリピートでない時 + Twitter タブ表示時 + キャプチャタブ表示時: 再生/停止\n                            if (event.shiftKey === true && event.code === 'Space' && is_repeat === false &&\n                                this.tv_panel_active_tab === 'Twitter' && twitter_component.twitter_active_tab === 'Capture') {\n                                this.player.toggle();\n                                return true;\n                            }\n                        }\n\n                        // プレイヤーが初期化されていない時・キーリピートでない時・Ctrl / Cmd / Shift / Alt キーが一緒に押された時に作動しないように\n                        if (this.player !== null && is_repeat === false && !event.ctrlKey && !event.metaKey && !event.shiftKey && !event.altKey) {\n\n                            // Spaceキー: 再生/停止\n                            if (event.code === 'Space') {\n                                this.player.toggle();\n                                return true;\n                            }\n                            // Fキー: フルスクリーンの切り替え\n                            if (event.code === 'KeyF') {\n                                this.player.fullScreen.toggle();\n                                return true;\n                            }\n                            // Wキー: ライブストリームの同期\n                            if (event.code === 'KeyW') {\n                                this.player.sync();\n                                return true;\n                            }\n                            // Eキー: Picture-in-Picture の表示切り替え\n                            if (event.code === 'KeyE') {\n                                if (document.pictureInPictureEnabled) {\n                                    this.player.template.pipButton.click();\n                                }\n                                return true;\n                            }\n                            // Sキー: 字幕の表示切り替え\n                            if (event.code === 'KeyS') {\n                                this.player.subtitle.toggle();\n                                if (!this.player.subtitle.container.classList.contains('dplayer-subtitle-hide')) {\n                                    this.player.notice(`${this.player.tran('Show subtitle')}`);\n                                } else {\n                                    this.player.notice(`${this.player.tran('Hide subtitle')}`);\n                                }\n                                return true;\n                            }\n                            // Dキー: コメントの表示切り替え\n                            if (event.code === 'KeyD') {\n                                this.player.template.showDanmaku.click();\n                                if (this.player.template.showDanmakuToggle.checked) {\n                                    this.player.notice(`${this.player.tran('Show comment')}`);\n                                } else {\n                                    this.player.notice(`${this.player.tran('Hide comment')}`);\n                                }\n                                return true;\n                            }\n                            // Cキー: 映像をキャプチャ\n                            if (event.code === 'KeyC') {\n                                await this.capture_handler.captureAndSave(false);\n                                return true;\n                            }\n                            // Vキー: 映像を実況コメントを付けてキャプチャ\n                            if (event.code === 'KeyV') {\n                                await this.capture_handler.captureAndSave(true);\n                                return true;\n                            }\n                            // Mキー: コメント入力フォームにフォーカス\n                            if (event.code === 'KeyM') {\n                                this.player.controller.show();\n                                this.player.comment.show();\n                                this.controlDisplayTimer();\n                                window.setTimeout(() => this.player.template.commentInput.focus(), 100);\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                })();\n\n                // 無名関数を実行した後の戻り値が true ならショートカットキーの操作を実行したことになるので、デフォルトのキー操作を封じる\n                if (result === true) {\n                    event.preventDefault();\n                }\n            };\n\n            // ページ上でキーが押されたときのイベントを登録\n            document.addEventListener('keydown', this.shortcut_key_handler);\n        },\n\n        // キャプチャ関連のイベントを初期化する\n        initCaptureHandler() {\n\n            // キャプチャハンドラーを初期化\n            this.capture_handler = new CaptureHandler(this.player, (blob: Blob, filename: string) => {\n                // キャプチャが撮られたら、随時 Twitter タブのキャプチャリストに追加する\n                (this.$refs.Twitter as InstanceType<typeof Twitter>).addCaptureList(blob, filename);\n            });\n\n            // キャプチャボタンがクリックされたときのイベント\n            // ショートカットからのキャプチャでも同じイベントがトリガーされる\n            const capture_button = this.$el.querySelector('.dplayer-icon.dplayer-capture-icon');\n            capture_button.addEventListener('click', async () => {\n                await this.capture_handler.captureAndSave(false);\n            });\n\n            // コメント付きキャプチャボタンがクリックされたときのイベント\n            // ショートカットからのキャプチャでも同じイベントがトリガーされる\n            const comment_capture_button = this.$el.querySelector('.dplayer-icon.dplayer-comment-capture-icon');\n            comment_capture_button.addEventListener('click', async () => {\n                await this.capture_handler.captureAndSave(true);\n            });\n        },\n\n\n        // 再生セッションを破棄する\n        // チャンネルを切り替える際に実行される\n        async destroy(is_destroy_player = false, is_zapping_continuously = false) {\n\n            // ニコニコ実況セッションを破棄し、コメント受信を終了する\n            (this.$refs.Comment as InstanceType<typeof Comment>).destroy();\n\n            // clearInterval() ですべての setInterval(), setTimeout() の実行を止める\n            // clearInterval() と clearTimeout() は中身共通なので問題ない\n            for (const interval_id of this.interval_ids) {\n                window.clearInterval(interval_id);\n            }\n\n            // コントロール表示制御用タイマーを止める\n            window.clearTimeout(this.control_interval_id);\n\n            // interval_ids をクリア\n            this.interval_ids = [];\n\n            // 再びローディング状態にする\n            this.is_loading = true;\n\n            // プレイヤーの背景を隠す\n            this.is_background_display = false;\n\n            // プレイヤーの破棄を許可する\n            if (this.player !== null) {\n                this.player_can_be_destroyed = true;\n            }\n\n            // イベントソースを閉じる\n            if (this.eventsource !== null) {\n                this.eventsource.close();\n                this.eventsource = null;\n            }\n\n            // 映像がフェードアウトするアニメーション (0.2秒) 分待ってから実行\n            // この 0.2 秒の間に音量をフェードアウトさせる\n            // なお、ザッピングでチャンネルを連続で切り替えている場合は実行しない (実行しても意味がないため)\n            if (is_zapping_continuously === false) {\n                const current_volume = this.player.user.get('volume');\n                // 20回 (0.01秒おき) に分けて音量を下げる\n                for (let i = 0; i < 20; i++) {\n                    await Utils.sleep(0.01);\n                    this.player.video.volume = current_volume * (1 - (i + 1) / 20);\n                }\n            }\n\n            // is_destroy_player が true の時は、ここで DPlayer 自体を破棄する\n            // false の時は次の initPlayer() が実行されるまで破棄されない\n            // 次のプレイヤーの初期化の直前に前のプレイヤーを破棄することで、プレイヤーの HTML が消えることによるちらつきを防ぐ\n            if (is_destroy_player === true && this.player !== null) {\n                try {\n                    this.player.destroy();\n                } catch (error) {\n                    // mpegts.js をうまく破棄できない場合\n                    if (this.player.plugins.mpegts !== undefined) {\n                        this.player.plugins.mpegts.destroy();\n                    }\n                }\n                this.player_can_be_destroyed = false;\n                this.player = null;\n            }\n        }\n    }\n});\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Watch.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??clonedRuleSet-41.use[0]!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[3]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Watch.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Watch.vue?vue&type=template&id=341dbcdc&scoped=true&\"\nimport script from \"./Watch.vue?vue&type=script&lang=ts&\"\nexport * from \"./Watch.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Watch.vue?vue&type=style&index=0&id=341dbcdc&prod&lang=scss&\"\nimport style1 from \"./Watch.vue?vue&type=style&index=1&id=341dbcdc&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"341dbcdc\",\n  null\n  \n)\n\nexport default component.exports","\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\n\nimport Utils from '@/utils';\nimport Login from '@/views/Login.vue';\nimport NotFound from '@/views/NotFound.vue';\nimport Register from '@/views/Register.vue';\nimport SettingsAccount from '@/views/Settings/Account.vue';\nimport SettingsCaption from '@/views/Settings/Caption.vue';\nimport SettingsCapture from '@/views/Settings/Capture.vue';\nimport SettingsEnvironment from '@/views/Settings/Environment.vue';\nimport SettingsGeneral from '@/views/Settings/General.vue';\nimport SettingsIndex from '@/views/Settings/Index.vue';\nimport SettingsJikkyo from '@/views/Settings/Jikkyo.vue';\nimport SettingsTwitter from '@/views/Settings/Twitter.vue';\nimport TVHome from '@/views/TV/Home.vue';\nimport TVWatch from '@/views/TV/Watch.vue';\n\nVue.use(VueRouter);\n\nconst router = new VueRouter({\n\n    // History API モード\n    mode: 'history',\n\n    // ルーティングのベース URL\n    base: process.env.BASE_URL,\n\n    // ルーティング設定\n    routes: [\n        {\n            path: '/',\n            redirect: '/tv/',\n        },\n        {\n            path: '/tv/',\n            name: 'TV Home',\n            component: TVHome,\n        },\n        {\n            path: '/tv/watch/:channel_id',\n            name: 'TV Watch',\n            component: TVWatch,\n        },\n        {\n            path: '/settings/',\n            name: 'Settings Index',\n            component: SettingsIndex,\n            beforeEnter: (to, from, next) => {\n\n                // スマホ縦画面・スマホ横画面・タブレット縦画面では設定一覧画面を表示する（画面サイズの関係）\n                if (Utils.isSmartphoneVertical() || Utils.isSmartphoneHorizontal() || Utils.isTabletVertical()) {\n                    next();  // 通常通り遷移\n                    return;\n                }\n\n                // それ以外の画面サイズでは全般設定にリダイレクト\n                next({path: '/settings/general/'});\n            }\n        },\n        {\n            path: '/settings/general',\n            name: 'Settings General',\n            component: SettingsGeneral,\n        },\n        {\n            path: '/settings/caption',\n            name: 'Settings Caption',\n            component: SettingsCaption,\n        },\n        {\n            path: '/settings/capture',\n            name: 'Settings Capture',\n            component: SettingsCapture,\n        },\n        {\n            path: '/settings/account',\n            name: 'Settings Account',\n            component: SettingsAccount,\n        },\n        {\n            path: '/settings/jikkyo',\n            name: 'Settings Jikkyo',\n            component: SettingsJikkyo,\n        },\n        {\n            path: '/settings/twitter',\n            name: 'Settings Twitter',\n            component: SettingsTwitter,\n        },\n        {\n            path: '/settings/environment',\n            name: 'Settings Environment',\n            component: SettingsEnvironment,\n        },\n        {\n            path: '/login/',\n            name: 'Login',\n            component: Login,\n        },\n        {\n            path: '/register/',\n            name: 'Register',\n            component: Register,\n        },\n        {\n            path: '*',\n            name: 'NotFound',\n            component: NotFound,\n        },\n    ],\n\n    // ページ遷移時のスクロールの挙動の設定\n    // ref: https://v3.router.vuejs.org/ja/guide/advanced/scroll-behavior.html\n    scrollBehavior (to, from, savedPosition) {\n        if (savedPosition) {\n            // 戻る/進むボタンが押されたときは保存されたスクロール位置を使う\n            return savedPosition;\n        } else {\n            // それ以外は常に先頭にスクロールする\n            return {x: 0, y: 0};\n        }\n    }\n});\n\nexport default router;\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n    register(`${process.env.BASE_URL}service-worker.js`, {\n        ready() {\n            console.log(\n                'App is being served from cache by a service worker.\\n' +\n                'For more details, visit https://goo.gl/AFskqB'\n            );\n        },\n        registered() {\n            console.log('Service worker has been registered.');\n        },\n        cached() {\n            console.log('Content has been cached for offline use.');\n        },\n        updatefound() {\n            console.log('New content is downloading.');\n        },\n        updated() {\n            console.log('New content is available; please refresh.');\n        },\n        offline() {\n            console.log('No internet connection found. App is running in offline mode.');\n        },\n        error(error) {\n            console.error('Error during service worker registration:', error);\n        }\n    });\n}\n","\nimport { Icon } from '@iconify/vue2';\nimport { createPinia, PiniaVuePlugin } from 'pinia';\nimport { polyfill as SeamlessScrollPolyfill } from 'seamless-scroll-polyfill';\nimport VTooltip from 'v-tooltip';\nimport Vue from 'vue';\nimport VueAxios from 'vue-axios';\nimport VueVirtualScroller from 'vue-virtual-scroller';\nimport 'vue-virtual-scroller/dist/vue-virtual-scroller.css';\nimport VuetifyMessageSnackbar from 'vuetify-message-snackbar';\nimport 'v-tooltip/dist/v-tooltip.css';\n\nimport App from '@/App.vue';\nimport VTabItem from '@/components/Vuetify/VTabItem';\nimport VTabs from '@/components/Vuetify/VTabs';\nimport VTabsItems from '@/components/Vuetify/VTabsItems';\nimport axios from '@/plugins/axios';\nimport vuetify from '@/plugins/vuetify';\nimport router from '@/router';\nimport useSettingsStore, { setLocalStorageSettings } from '@/store/SettingsStore';\nimport '@/service-worker';\nimport Utils from '@/utils';\n\n// スムーズスクロール周りの API の polyfill を適用\n// Element.scrollInfoView() のオプション指定を使うために必要\nSeamlessScrollPolyfill();\n\n// Production Tip を非表示にする\nVue.config.productionTip = false;\n\n// 常に Vue.js devtools を有効にする\nVue.config.devtools = true;\n\n// Axios を使う\nVue.use(VueAxios, axios);\n\n// Pinia を使う\n// ref: https://pinia.vuejs.org/cookbook/options-api.html\nVue.use(PiniaVuePlugin);\nconst pinia = createPinia();\n\n// vue-virtual-scroller を使う\nVue.use(VueVirtualScroller);\n\n// vuetify-message-snackbar を使う\n// マイナーな OSS（しかも中国語…）だけど、Snackbar を関数で呼びたかったのでちょうどよかった\n// ref: https://github.com/thinkupp/vuetify-message-snackbar\nVue.use(VuetifyMessageSnackbar, {\n    // 画面上に配置しない\n    top: false,\n    // 画面下に配置する\n    bottom: true,\n    // デフォルトの背景色\n    color: '#433532',\n    // ダークテーマを適用する\n    dark: true,\n    // 影 (Elevation) の設定\n    elevation: 8,\n    // 2.5秒でタイムアウト\n    timeout: 2500,\n    // 要素が非表示になった後に DOM から要素を削除する\n    autoRemove: true,\n    // 閉じるボタンのテキスト\n    closeButtonContent: '閉じる',\n    // Vuetify のインスタンス\n    vuetifyInstance: vuetify,\n});\n\n// VTooltip を使う\n// タッチデバイスでは無効化する\n// ref: https://v-tooltip.netlify.app/guide/config.html#default-values\nconst trigger = Utils.isTouchDevice() ? [] : ['hover', 'focus', 'touch'];\nVTooltip.options.themes.tooltip.showTriggers = trigger;\nVTooltip.options.themes.tooltip.hideTriggers = trigger;\nVTooltip.options.themes.tooltip.delay.show = 0;\nVTooltip.options.offset = [0, 7];\nVue.use(VTooltip);\n\n// Iconify（アイコン）のグローバルコンポーネント\nVue.component('Icon', Icon);\n\n// VTabItem / VTabs / VTabsItems の挙動を改善するグローバルコンポーネント\nVue.component('v-tab-item-fix', VTabItem);\nVue.component('v-tabs-fix', VTabs);\nVue.component('v-tabs-items-fix', VTabsItems);\n\n// Vue を初期化\n(window as any).KonomiTVVueInstance = new Vue({\n    pinia,\n    router,\n    vuetify,\n    render: h => h(App),\n}).$mount('#app');\n\n// 設定データをサーバーにアップロード中かどうか\nlet is_uploading_settings = false;\n\n// 設定データの変更を監視する\nconst settings_store = useSettingsStore();\nsettings_store.$subscribe(async () => {\n\n    // 設定データをアップロード中の場合は何もしない\n    if (is_uploading_settings === true) {\n        return;\n    }\n\n    // 設定データを LocalStorage に保存\n    console.log('Client Settings Changed:', settings_store.settings);\n    setLocalStorageSettings(settings_store.settings);\n\n    // 設定データをサーバーに同期する (ログイン時かつ同期が有効な場合のみ)\n    await settings_store.syncClientSettingsToServer();\n\n}, {detached: true});\n\n// ログイン時かつ設定の同期が有効な場合、ページ遷移に関わらず、常に3秒おきにサーバーから設定を取得する\n// 初回のページレンダリングに間に合わないのは想定内（同期の完了を待つこともできるが、それだと表示速度が遅くなるのでしょうがない）\nwindow.setInterval(async () => {\n    if (Utils.getAccessToken() !== null && settings_store.settings.sync_settings === true) {\n\n        // 設定データをサーバーにアップロード\n        is_uploading_settings = true;\n        await settings_store.syncClientSettingsFromServer();\n        is_uploading_settings = false;\n\n        // 設定データを LocalStorage に保存\n        setLocalStorageSettings(settings_store.settings);\n    }\n}, 3 * 1000);  // 3秒おき\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = function(module) {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: function() {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkKonomiTV\"] = self[\"webpackChunkKonomiTV\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(8341); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_vm","_c","script","component","render","staticRenderFns","VTabItem","h","props","name","this","computedTransition","on","beforeEnter","onBeforeTransition","afterEnter","onAfterTransition","enterCancelled","onTransitionCancelled","beforeLeave","afterLeave","leaveCancelled","enter","onEnter","genWindowItem","VTabsBar","data","items","methods","register","item","activeItem","internalIndex","push","sort","a","b","index_a","$slots","default","findIndex","element","$vnode","key","index_b","$on","onClick","mandatory","selectedValues","length","updateMandatory","updateItem","indexOf","undefined","updateInternalValue","unregister","constructor","super","options","call","VTabs","genBar","slider","style","height","convertToUnit","activeClass","centerActive","dark","light","optional","mobileBreakpoint","nextIcon","prevIcon","showArrows","value","internalValue","callSlider","change","val","ref","setTextColor","computedColor","setBackgroundColor","backgroundColor","$createElement","genSlider","VTabsItems","updateReverse","oldVal","itemsLength","lastIndex","continuous","success","message","window","KonomiTVVueInstance","$message","info","warning","error","show","APIClient","request","result","axios","catch","AxiosError","console","response","status","Error","detail","is_error","NaN","is_success","url","config","method","template","Message","Number","isNaN","Users","user_create_request","username","password","URLSearchParams","responseType","URL","createObjectURL","user_update_request","icon","form_data","FormData","append","headers","Settings","settings","Utils","localStorage","getItem","access_token","setItem","removeItem","test","navigator","userAgent","blob","filename","blob_url","link","document","createElement","download","href","click","revokeObjectURL","content","html_escape_table","replace","match","popupSizeWidth","popupSizeHeight","screen","posTop","posLeft","width","class_name","activeElement","classList","contains","matchMedia","matches","base","Math","floor","seconds","Promise","resolve","setTimeout","Date","now","Object","prototype","toString","slice","toLowerCase","text","escapeHTML","pattern","process","location","protocol","host","ChannelUtils","channel_id","groups","channel_type","toUpperCase","e","channel_force","CommentUtils","color","color_table","position","size","comment_mail","commands","split","command","parsed_color","getCommentColor","parsed_position","getCommentPosition","parsed_size","getCommentSize","comment","user_id","settings_store","useSettingsStore","muted_niconico_user_ids","includes","special_command_comments_pattern","mute_fixed_comments","mute_colored_comments","mute_big_size_comments","mute_vulgar_comments","mute_vulgar_comments_pattern","log","mute_abusive_discriminatory_prejudiced_comments","mute_abusive_discriminatory_prejudiced_comments_pattern","mute_consecutive_same_characters_comments","mute_consecutive_same_characters_comments_pattern","muted_comment_keyword","muted_comment_keywords","startsWith","endsWith","RegExp","annoying_statistical_comments_pattern","Buffer","PlayerUtils","background_count","random","padStart","canPlayType","ProgramUtils","program","mark","pattern1","pattern2","dayjs","isSameOrAfter","isSameOrBefore","isBetween","pause_time_start","hour","minute","second","pause_time_end","pause_time_start_23","pause_time_end_23","default_value","progress","diff","start_time","duration","is_short","end_time","format","sync_settings_keys","default_settings","pinned_channel_ids","showed_panel_last_time","selected_twitter_account_id","saved_twitter_hashtags","tv_streaming_quality","tv_data_saver_mode","tv_low_latency_mode","panel_display_state","tv_panel_active_tab","caption_font","always_border_caption_text","specify_caption_background_color","caption_background_color","tv_show_superimpose","capture_copy_to_clipboard","capture_save_mode","capture_caption_mode","sync_settings","comment_speed_rate","comment_font_size","close_comment_form_after_sending","fold_panel_after_sending_tweet","reset_hashtag_when_program_switches","auto_add_watching_channel_hashtag","twitter_active_tab","tweet_hashtag_position","tweet_capture_watermark_position","getLocalStorageSettings","JSON","parse","setLocalStorageSettings","stringify","getNormalizedSettings","new_settings","default_settings_key","keys","defineStore","state","actions","async","file","settings_json","syncClientSettingsToServer","getSyncableClientSettings","sync_settings_key","force","settings_server","settings_server_key","settings_server_value","entries","useUserStore","is_logged_in","user","user_icon_url","getters","user_niconico_icon_url","niconico_user_id","user_id_slice","login","silent","fetchUser","logout","axios_instance","interceptors","use","baseURL","timeout","user_store","reject","Vue","Vuetify","VSnackbar","VBtn","VIcon","theme","themes","primary","secondary","twitter","lighten1","lighten2","gray","black","background","lighten3","darken1","darken2","darken3","customProperties","staticClass","attrs","$event","model","callback","expression","password_showing","directives","rawName","_v","class","Version","components","BottomNavigation","latest_version","is_update_available","version_info","version","Header","Navigation","is_form_dense","computed","mapStores","userStore","$router","path","_self","_setupProxy","_m","staticStyle","password_validation","username_validation","$refs","validate","is_admin","overrideServerSettingsFromClient","sync_settings_dialog","preventDefault","settings_username","settings_icon","$$v","settings_password_showing","settings_password","scopedSlots","account_delete_confirm_dialog","Base","is_loading","settings_username_validation","settings_password_validation","watch","settingsStore","sync_settings_json","server_sync_settings","server_sync_settings_json","syncClientSettingsFromServer","update_type","updateUser","updateUserIcon","deleteUser","$set","_setup","import_settings_file","exportSettings","settings_json_blob","Blob","type","importClientSettings","go","resetClientSettings","comment_mute_settings_modal","muted_comment_keyword_match_type","prop","event","showing","Boolean","required","interval_timer_id","$emit","Niconico","authorization_url","CommentMuteSettings","hash","params","get","authorization_status","parseInt","authorization_detail","onOAuthCallbackReceived","history","replaceState","popup_window","open","onMessage","closed","close","removeEventListener","addEventListener","twitter_account","loginTwitterAccount","screen_name","captures","tweet_capture","Twitter","fetchAuthorizationURL","current_twitter_account","twitter_accounts","updated_at","logoutAccount","Array","from","channels_type","channels","id","removePinnedChannel","stopPropagation","domProps","_s","IProgramDefault","network_id","service_id","event_id","title","description","is_free","genre","video_type","video_codec","video_resolution","primary_audio_type","primary_audio_language","primary_audio_sampling_rate","secondary_audio_type","secondary_audio_language","secondary_audio_sampling_rate","IChannelDefault","transport_stream_id","remocon_id","channel_number","channel_name","channel_comment","is_subchannel","is_radiochannel","is_display","viewers","program_present","program_following","Channels","useChannelsStore","channels_list","GR","BS","CS","CATV","SKY","STARDIGIO","is_channels_list_initial_updated","last_updated_at","is_showing_live","channel","getChannelType","previous","current","next","current_channel_index","IProgramError","IChannelError","previous_channel_index","index","next_channel_index","channels_list_with_pinned","Map","set","_a","_b","_d","_e","_f","_g","delete","has","channels_list_with_pinned_for_watch","getChannel","find","getChannelByRemoconID","updateChannel","update","tab","interval_ids","residue_second","getSeconds","channelsStore","setInterval","beforeDestroy","interval_id","clearInterval","addPinnedChannel","splice","isPinnedChannel","controlDisplayTimer","modifiers","is_zapping","is_panel_display","shortcut_key_modal","shortcut_key_column_name","shortcut_key_column","shortcut_keys","_l","key_name","shortcut","getProgramTime","getProgramProgress","is_comment_list_dropdown_display","fn","active","time","isTouchDevice","initialize_failed_message","is_manual_scroll","scrollCommentList","LiveCommentManager","player","on_initial_comments_received","on_comment_received","watch_session","comment_session","vpos_base_timestamp","keep_seat_interval_id","abort_controller","AbortController","watch_session_result","initWatchSession","initCommentSession","is_disconnect_message_received","watch_session_info","notice","WebSocket","audience_token","send","signal","code","reconnect","readyState","OPEN","keepIntervalSec","disconnect_reason","reason","vposBaseTime","valueOf","threadId","message_server_url","messageServer","uri","thread_id","your_post_key","yourPostKey","comment_session_info","initial_comments_buffer","initial_comments_received","ping","thread","threadkey","res_from","resultcode","chat","yourpost","parseCommentCommand","mail","isMutedComment","comment_data","no","date","my_post","buffered_end","video","buffered","end","comment_delay_time","currentTime","paused","danmaku","draw","sendComment","position_table","vpos","round","abort","warn","destroy","initSession","is_auto_scrolling","comment_list","comment_list_element","comment_list_dropdown_top","comment_list_dropdown_comment","live_comment_manager","visibilitychange_listener","resize_observer","resize_observer_element","created","mounted","$el","querySelector","is_user_scrolling","onmousedown","x","clientX","getBoundingClientRect","left","clientWidth","onmouseup","on_user_scrolling","is_dragging","ontouchstart","ontouchend","ontouchmove","onwheel","onscroll","scrollTop","offsetHeight","scrollHeight","unobserve","showCommentListDropdown","comment_list_wrapper_rect","comment_list_wrapper","comment_list_dropdown_height","comment_button_rect","currentTarget","top","hideCommentListDropdown","filter","addMutedKeywords","addMutedNiconicoUserIds","addMutedNiconicoUserIDs","smooth","scrollTo","behavior","initReserveObserver","animation_timeout_id","on_resize","video_element","comment_area_element","clientHeight","letter_box_height","threshold","comment_area_vertical_margin","comment_area_width","comment_area_height","gcd","y","gcd_result","comment_area_height_aspect","transition","setProperty","clearTimeout","removeProperty","ResizeObserver","observe","comment_list_buffer","max_comment_count","initial_comments","visibilityState","max","comment_list_and_buffer_length","niconico_user_premium","api_base_url","decorateProgramInfo","getAttribute","genre_index","major","middle","getChannelForceType","detail_text","detail_heading","URLtoLink","zoom_capture_modal","capture","clickCapture","target","tweet_hashtag","is_tweet_hashtag_form_focused","tweet_text","is_tweet_text_form_focused","is_logged_in_twitter","tweet_letter_count","editing","hashtag","updateSelectedTwitterAccount","draggable","is_virtual_keyboard_display","selected_twitter_account","is_twitter_account_list_display","map","is_hashtag_list_display","zoom_capture","captures_element","tweet_captures","some","twitter_account_index","formatHashtag","image_url","deep","handler","updateTweetLetterCount","pasteClipboardData","clipboard_item","clipboardData","getAsFile","addCaptureList","clickHashtagListButton","clickHashtag","clickAccountButton","fullscreenElement","exitFullscreen","selected","shift","focused","$nextTick","image_bitmap","createImageBitmap","canvas","OffscreenCanvas","context","getContext","alpha","desynchronized","willReadFrequently","drawImage","font","fillStyle","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","textAlign","textBaseline","fillText","convertToBlob","quality","toBlob","getChannelHashtag","from_hashtag_list","tweet_hashtag_array","trim","replaceAll","channel_hashtag","join","new_tweet_captures","drawProgramTitleOnCapture","sendTweet","then","blur","Captures","CaptureHandler","captured_callback","player_container","container","insertAdjacentHTML","comment_capture_button","capture_button","canvas_context","videoWidth","videoHeight","with_comments","total_time","channels_store","addHighlight","filename_base","filename_caption","caption_canvas","plugins","aribb24Caption","getRawCanvas","superimpose_canvas","aribb24Superimpose","is_caption_showing","isShowing","isPresent","is_superimpose_showing","caption_text","getTextContent","exif_options","is_caption_composited","is_comment_composited","export_and_save","exportToBlob","setEXIFDataToCapture","capture_normal","capture_caption","promises","comments_image","createCommentsImage","drawComments","filename_real","all","bitmap_canvas","transferFromImageBitmap","removeHighlight","copyBlobToClipboard","convertBlobToPng","add","remove","html","svg","image","Image","src","encodeURIComponent","decode","comments_html","outerHTML","querySelectorAll","commentsHTMLtoSVGImage","offsetWidth","draw_scale_ratio","draw_height","HTMLCanvasElement","captured_playback_position","json","captured_at","datetime","exif","piexif","TagValues","ImageIFD","XResolution","YResolution","ResolutionUnit","YCbCrPositioning","DateTime","Software","XPComment","ExifIFD","ExifVersion","ComponentsConfiguration","FlashpixVersion","ColorSpace","DateTimeOriginal","DateTimeDigitized","exif_string","dump","blob_string","reader","FileReader","onload","onerror","readAsBinaryString","blob_string_new","insert","buffer","Uint8Array","charCodeAt","PLAYBACK_BUFFER_SEC_LOW_LATENCY","PLAYBACK_BUFFER_SEC","Channel","Comment","Program","background_url","is_video_buffering","is_background_display","is_control_display","is_fullscreen","is_ime_composing","is_comment_send_just_did","control_interval_id","is_zapping_continuously","player_can_be_destroyed","is_mpegts_supported","mpegts","romsounds_context","romsounds_buffers","eventsource","fullscreen_handler","capture_handler","shortcut_key_handler","shortcut_key_pressed_at","shortcut_key_list","left_column","icon_height","shortcuts","right_column","$route","virtualKeyboard","overlaysContent","ongeometrychange","boundingRect","init","AudioContext","audio_data","decodeAudioData","beforeRouteUpdate","to","destroy_promise","immediate","new_channel","old_channel","twitter_component","old_channel_hashtag","generatePlayerBackgroundURL","initPlayer","initEventHandler","initCaptureHandler","initShortcutKeyHandler","audioItem","liveLLHLSForKonomiTV","audioValue","textContent","tran","switchPrimaryAudio","artwork","sizes","mediaSession","metadata","MediaMetadata","artist","setPositionState","playbackRate","setActionHandler","play","pause","is_player_event","is_touch_device","controller","hide","setting","isShow","playback_buffer_sec","DPlayer","lang","live","liveSyncMinBufferSize","loop","airplay","autoplay","hotkey","screenshot","volume","defaultQuality","qualities","hevc_prefix","isHEVCVideoSupported","speedRate","fontSize","apiBackend","read","pluginOptions","enableWorker","enableStashBuffer","liveSync","liveSyncMaxLatency","liveSyncTargetLatency","liveSyncPlaybackRate","aribb24","normalFont","forceStrokeColor","forceBackgroundColor","drcsReplacement","enableRawCanvas","useStroke","usePUA","PRACallback","resume","buffer_source_node","createBufferSource","gain_node","createGain","connect","destination","gain","start","subtitle","setAutoHide","commentInput","settingOriginPanel","settingOriginPanelHeight","settingBox","clipPath","fullscreen_container","fullScreen","isFullScreen","onfullscreenchange","webkitFullscreenElement","cancel","requestFullscreen","webkitRequestFullscreen","orientation","lock","webkitExitFullscreen","unlock","on_play_or_pause","sync","crossOrigin","force_play","pause_icon","playButton","innerHTML","mobilePlayButton","on_canplay","oncanplay","oncanplaythrough","get_playback_buffer_sec","current_playback_buffer_sec","current_volume","eventsource_url","EventSource","event_raw","clients_count","load","pictureInPictureElement","exitPictureInPicture","requestPictureInPicture","switchVideo","clear","tweet_form_element","tag","tagName","editable","is_repeat","repeat","focus","scrollLeft","ctrlKey","metaKey","shiftKey","altKey","switch_channel_type","switch_remocon_id","switch_channel","focused_capture_index","focused_capture","focused_capture_element","parentElement","scrollIntoView","block","inline","toggle","pictureInPictureEnabled","pipButton","showDanmaku","showDanmakuToggle","checked","captureAndSave","is_destroy_player","i","VueRouter","router","mode","routes","redirect","TVHome","TVWatch","SettingsIndex","SettingsGeneral","SettingsCaption","SettingsCapture","SettingsAccount","SettingsJikkyo","SettingsTwitter","SettingsEnvironment","Login","Register","NotFound","scrollBehavior","savedPosition","ready","registered","cached","updatefound","updated","offline","SeamlessScrollPolyfill","VueAxios","PiniaVuePlugin","pinia","createPinia","VueVirtualScroller","VuetifyMessageSnackbar","bottom","elevation","autoRemove","closeButtonContent","vuetifyInstance","vuetify","trigger","VTooltip","Icon","App","$mount","is_uploading_settings","$subscribe","detached","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","hmd","create","children","obj","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}