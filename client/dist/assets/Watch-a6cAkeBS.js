import{d as a,m as n,u as p,_ as m,r as d,o as c,h as u}from"./index-QtMY6I6_.js";import{W as h,V as l,P as _,u as f}from"./PlayerController-BxZw7UWb.js";import"./ChannelsStore-2dW7ODYh.js";import"./ssrBoot-wxxiprf1.js";import"./VDialog-MkKiJ0gL.js";import"./VSwitch-oKpYcXRd.js";import"./VTextField-IwDQE_NY.js";import"./VAvatar-MwPKYrRL.js";import"./VCard-GICiqLt1.js";import"./swiper-dWhBUhbw.js";import"./CommentMuteSettings-FEaRPrUe.js";import"./VSelect-27-kDUrO.js";import"./vuedraggable.umd-8wZDUKip.js";import"./Twitter-_pq7ZuCQ.js";import"./PlayerUtils-VNZ3821B.js";let t=null;const y=a({name:"Video-Watch",components:{Watch:h},computed:{...n(f,p)},created(){this.init()},beforeRouteUpdate(o,r,e){this.destroy().then(()=>this.init()),e()},beforeUnmount(){this.destroy()},methods:{async init(){if(this.$route.params.video_id===void 0){this.$router.push({path:"/not-found/"});return}const o=await l.fetchVideo(parseFloat(this.$route.params.video_id));if(o===null){this.$router.push({path:"/not-found/"});return}this.playerStore.recorded_program=o,t=new _("Video"),await t.init()},async destroy(){t!==null&&(await t.destroy(),t=null)}}});function $(o,r,e,i,W,V){const s=d("Watch",!0);return c(),u(s,{playback_mode:"Video"})}const z=m(y,[["render",$]]);export{z as default};
