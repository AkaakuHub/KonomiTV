import{d as a,m as n,u as p,_ as m,r as d,o as c,j as u}from"./index-ovfGBpEq.js";import{W as h,V as l,P as _,u as f}from"./PlayerController-CQGl2ywz.js";import"./ChannelsStore-CqQgB-b9.js";import"./ssrBoot-BewYrz-P.js";import"./VDialog-CyEHvMjI.js";import"./VSwitch-CkdzOLqE.js";import"./VTextField-BBBeyrSu.js";import"./VAvatar-B1QLPsTD.js";import"./VCard-nzsgkSw-.js";import"./swiper-Dsm_uXIj.js";import"./CommentMuteSettings-Bce65Y9L.js";import"./VSelect-Y7-ZG8tZ.js";import"./vuedraggable.umd-CqeTQwVB.js";import"./Twitter-Ciaz8wiZ.js";import"./PlayerUtils-BMfVEgCY.js";let t=null;const y=a({name:"Video-Watch",components:{Watch:h},computed:{...n(f,p)},created(){this.init()},beforeRouteUpdate(o,r,e){this.destroy().then(()=>this.init()),e()},beforeUnmount(){this.destroy()},methods:{async init(){if(this.$route.params.video_id===void 0){this.$router.push({path:"/not-found/"});return}const o=await l.fetchVideo(parseFloat(this.$route.params.video_id));if(o===null){this.$router.push({path:"/not-found/"});return}this.playerStore.recorded_program=o,t=new _("Video"),await t.init()},async destroy(){t!==null&&(await t.destroy(),t=null)}}});function $(o,r,e,i,W,V){const s=d("Watch",!0);return c(),u(s,{playback_mode:"Video"})}const z=m(y,[["render",$]]);export{z as default};
