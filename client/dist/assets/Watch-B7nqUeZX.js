import{d as a,m as n,q as p,_ as m,b as d,e as c,h as u}from"./index-B_SnUeON.js";import{W as h,P as l}from"./PlayerController-B4MS3q5I.js";import{V as _,u as f}from"./CaptureManager-Byc2dTCj.js";import"./ChannelsStore-No7R25bL.js";import"./ssrBoot-PsKHxUng.js";import"./VDialog-BlyO6zxu.js";import"./VChip-D2euUFKU.js";import"./VTextField--pohSrLY.js";import"./VAvatar-DrucmJlQ.js";import"./VCard-CIMgoUbn.js";import"./VSlider-Citeyrzp.js";import"./swiper-Crm1Y2yY.js";import"./CommentMuteSettings-BZ7Vx66y.js";import"./VSelect-Ds3chj6P.js";import"./vuedraggable.umd-D8mNUbCx.js";import"./Twitter-he7p-uky.js";import"./PlayerUtils-DvsnJsyj.js";let t=null;const y=a({name:"Video-Watch",components:{Watch:h},computed:{...n(f,p)},created(){this.init()},beforeRouteUpdate(o,r,e){this.destroy().then(()=>this.init()),e()},beforeUnmount(){this.destroy()},methods:{async init(){if(this.$route.params.video_id===void 0){this.$router.push({path:"/not-found/"});return}const o=await _.fetchVideo(parseFloat(this.$route.params.video_id));if(o===null){this.$router.push({path:"/not-found/"});return}this.playerStore.recorded_program=o,t=new l("Video"),await t.init()},async destroy(){t!==null&&(await t.destroy(),t=null)}}});function $(o,r,e,i,W,V){const s=d("Watch",!0);return c(),u(s,{playback_mode:"Video"})}const D=m(y,[["render",$]]);export{D as default};
